[
    {
        "id": 1,
        "requirement": "根据飞机当时的飞行高度、状态等运动信息确定应该进入哪一个飞行阶段。",
        "original_safety_criterions": [
            "输出控制状态的时机是否符合场景要求？",
            "下发危险的控制指令或动作时，是否有依据设备状态进行合理性判断？"
        ],
        "safety_requirements": [
            "系统在下发危险控制指令或动作前，应验证飞机飞行高度、状态等运动信息的合理性，并基于实时数据执行二次逻辑校验。",
            "系统应根据实时飞行高度、状态等运动信息判断飞行阶段时，同步验证控制状态输出时序与当前场景的严格匹配性。",
            "系统在切换飞行阶段后，应强制对飞行高度阈值、状态参数区间进行动态合规性检查，确保控制指令输出的连续性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 2,
        "requirement": "当飞行高度大于150m，起落架压缩信号为假，并且飞行阶段不大于下降段三个条件同时满足时，根据DH值进行阶段转换。",
        "original_safety_criterions": [
            "两个或多个状态之间不存在转移关系，对这些状态的进入条件进行检查，分析进入条件“同时满足、状态执行过程中满足”等情况下状态执行的正确性",
            "对软件状态空间中两两状态之间的转移条件进行检查，分析转移条件“未设置、始终满足、无法满足”等情况下状态转移的正确性",
            "同一个状态与其他多个状态之间存在转移关系，对同一个状态向多个状态转移以及多个状态向同一个状态转移的条件进行检查，分析多个状态转移条件同时满足时状态转移的正确性",
            "对状态进入条件进行检查，分析状态执行过程中进入条件“满足、不满足、再次满足”等情况下状态执行的正确性"
        ],
        "safety_requirements": [
            "系统应在状态转移时，检查飞行高度>150m、起落架压缩信号为假、飞行阶段≤下降段三个条件是否被正确设置，确保根据DH值进行阶段转换的准确性。",
            "当飞行高度>150m、起落架压缩信号为假、飞行阶段≤下降段三个条件同时满足时，系统应对多状态转移条件的优先级进行验证，确保仅执行符合DH值的阶段转换。",
            "系统在状态执行过程中应持续监测飞行高度>150m、起落架压缩信号为假、飞行阶段≤下降段条件的变化，当条件从满足转为不满足或再次满足时，立即终止或重新触发阶段转换。",
            "系统应验证无关状态间的进入条件互斥性，当飞行高度>150m、起落架压缩信号为假、飞行阶段≤下降段条件与其它状态条件同时满足时，禁止非DH值定义的阶段转换。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 3,
        "requirement": "当DH>10m时，转入下降段，并将空速控制积分器清零，软化时限设为2s。",
        "original_safety_criterions": [
            "对软件状态空间中两两状态之间的转移条件进行检查，分析转移条件“未设置、始终满足、无法满足”等情况下状态转移的正确性",
            "余度切换时间过长，软件是否有正确处理？",
            "输出控制状态的时机是否符合场景要求？",
            "输出状态的持续时间是否满足约束要求？",
            "对于关键控制或动作，是否有超时判断，以处理硬件状态长时间达不到控制要求的情况？"
        ],
        "safety_requirements": [
            "系统在DH>10m转入下降段时，应确保余度切换时间符合要求，并正确执行空速控制积分器清零及软化时限设为2s的操作。",
            "系统在转入下降段后，应对空速控制积分器清零和软化时限设置进行超时判断，若硬件状态长时间未达要求，需触发安全处理机制。",
            "系统应检查DH>10m转入下降段时软化时限的持续时间严格满足2s要求，并在超时或未达标时告警。",
            "系统应验证DH>10m转入下降段并输出控制状态的时机是否与场景要求一致，记录异常时机事件。",
            "系统应对状态转移条件进行完备性检查，确保当DH>10m时转入下降段的条件在‘未设置、始终满足、无法满足’等异常情况下仍能正确执行状态转移。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 4,
        "requirement": "当DH<-10m时，转入爬升2段，并将空速控制积分器清零，软化时限设为2s。",
        "original_safety_criterions": [
            "对软件状态空间中两两状态之间的转移条件进行检查，分析转移条件“未设置、始终满足、无法满足”等情况下状态转移的正确性",
            "是否有基于回绕检测的故障处理，故障时状态上报策略是否合理？",
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "输出控制状态的时机是否符合场景要求？",
            "对于关键控制或动作，是否有超时判断，以处理硬件状态长时间达不到控制要求的情况？"
        ],
        "safety_requirements": [
            "系统应在状态转移时检查 DH<-10m 的触发条件，确保在‘未设置、始终满足、无法满足’情况下转入爬升2段的正确性。",
            "系统应在转入爬升2段（DH<-10m）时，实施基于回绕检测的故障处理机制，并定义空速控制积分器清零及软化时限设为2s的状态上报策略。",
            "系统应对 DH<-10m 转入爬升2段的功能输入进行检查，确保在‘未考虑工作阶段’或‘未考虑工作状态’时处理逻辑的正确性。",
            "系统应在转入爬升2段（DH<-10m）时设置空速控制积分器清零及软化时限的超时判断机制，以应对硬件状态长时间未达标的情况。",
            "系统应验证转入爬升2段（DH<-10m）并执行空速控制积分器清零及软化时限设置的时机是否符合场景要求。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 5,
        "requirement": "当-10m ≤ DH ≤ 10m时，转入定高段，将定高控制积分器清零，软化时限设为2s。",
        "original_safety_criterions": [
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "对软件状态空间中两两状态之间的转移条件进行检查，分析转移条件“未设置、始终满足、无法满足”等情况下状态转移的正确性",
            "对两个或多个存在转移关系的状态下、设置了优先级的不同功能进行检查，分析“高优先级切换低优先级、低优先级切换高优先级”等情况下状态与功能的正确性",
            "对状态进入条件进行检查，分析状态执行过程中进入条件“满足、不满足、再次满足”等情况下状态执行的正确性"
        ],
        "safety_requirements": [
            "系统在-10m ≤ DH ≤ 10m转入定高段时，应检查高优先级与低优先级状态切换逻辑，确保定高控制积分器清零和软化时限设为2s的操作正确执行。",
            "系统在定高段执行过程中，应对状态进入条件（DH满足、不满足或再次满足）进行检查，确保状态转移及积分器清零操作的时效性与准确性。",
            "系统应验证当-10m ≤ DH ≤ 10m时状态转移条件的设置完整性，防止因转移条件未设置、恒满足或不满足导致的异常状态切换。",
            "系统在定高段控制解算过程中，应检查当前工作阶段与状态的关联性，确保积分器清零和软化时限设置功能与运行阶段的严格匹配。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 6,
        "requirement": "当飞行高度不大于150m时，根据当前的阶段标志和当前的飞行高度、空速等状态信息进行阶段转换处理。",
        "original_safety_criterions": [
            "对软件状态空间中两两状态之间的转移条件进行检查，分析转移条件“未设置、始终满足、无法满足”等情况下状态转移的正确性",
            "同一个状态与其他多个状态之间存在转移关系，对同一个状态向多个状态转移以及多个状态向同一个状态转移的条件进行检查，分析多个状态转移条件同时满足时状态转移的正确性",
            "对状态进入条件进行检查，分析状态执行过程中进入条件“满足、不满足、再次满足”等情况下状态执行的正确性"
        ],
        "safety_requirements": [
            "系统在飞行高度不大于150m时，应检查同一状态与其他状态间的转移关系，确保多个状态转移条件同时满足时，阶段转换处理准确且符合当前飞行高度、空速及阶段标志。",
            "系统在飞行高度不大于150m时，应对阶段转换条件进行检查，确保在进入条件‘满足、不满足、再次满足’等变化情况下，阶段转换处理的逻辑正确性。",
            "系统应检查飞行状态空间中两两状态间的转移条件设置，确保在‘未设置、始终满足、无法满足’等异常情况下，飞行高度不大于150m时的阶段转换处理与当前状态信息严格一致。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 7,
        "requirement": "在非遥控模式阶段转换处理中，可能会出现一系列的阶段转换，直至转到和当前状态所适应的飞行阶段。",
        "original_safety_criterions": [
            "工作状态发生转移时，对功能接口数据的取值进行检查，分析“取值发生变化或者取值区间发生变化”等情况下输出的正确性",
            "对软件状态空间中两两状态之间的转移条件进行检查，分析转移条件“未设置、始终满足、无法满足”等情况下状态转移的正确性",
            "两个或多个存在转移关系的状态具有同一个功能，对状态转移前后功能的执行情况进行检查，分析功能在状态转移后“开始执行、保持执行、中断执行”等情况下功能处理的正确性",
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "分析不可相互迁移的工作模态之间是否存在潜在的异常路径，使得不可相互迁移的工作模态发生状态迁移？"
        ],
        "safety_requirements": [
            "系统在非遥控模式阶段转换处理中，应检查不可相互迁移的工作模态间是否存在异常迁移路径，并确保此类状态迁移被禁止。",
            "系统在非遥控模式阶段转换时，应对功能输入进行验证，确保控制解算过程正确覆盖当前工作阶段和状态，避免未考虑相关因素的功能处理。",
            "系统在非遥控模式阶段转换后，应检查功能的执行状态（开始、保持、中断），确保其符合状态转移后的逻辑要求。",
            "系统在非遥控模式阶段转换处理中，应对功能接口数据的取值或取值区间变化进行检查，确保输出结果的正确性。",
            "系统应对非遥控模式阶段转换中的状态转移条件进行验证，确保转移条件正确配置且无‘未设置、始终满足、无法满足’等异常情形。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 8,
        "requirement": "在飞机已经进入下滑阶段时，根据当前的飞行状态进行阶段转换处理。",
        "original_safety_criterions": [
            "是否有基于回绕检测的故障处理，故障时状态上报策略是否合理？",
            "下发危险的控制指令或动作时，是否有依据设备状态进行合理性判断？"
        ],
        "safety_requirements": [
            "系统在飞机进入下滑阶段进行状态转换时，应基于回绕检测机制实施故障处理，确保故障状态上报策略的有效性和合理性。",
            "系统在下发阶段转换相关的控制指令或动作前，应依据设备当前状态进行实时合理性判断，避免无效或冲突操作。",
            "系统在飞行阶段转换处理过程中，应对设备状态参数进行双重校验，确保控制指令与当前飞行状态的严格匹配。",
            "系统应记录阶段转换期间的所有故障事件及处理结果，并支持审计接口以验证状态上报策略的合规性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 9,
        "requirement": "若飞行高度大于决断高度（40m），则控制飞机进入复飞程序。",
        "original_safety_criterions": [
            "下发危险的控制指令或动作时，是否有依据设备状态进行合理性判断？",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统在余度工作状态不一致（两个或多个余度处于不同状态）时，应确保复飞程序控制逻辑的决策正确性，并触发余度状态异常报警机制。",
            "系统下发复飞控制指令前，必须基于实时飞行高度数据与决断高度（40m）进行阈值比对，验证判断的合理性后方可执行。",
            "系统应对飞行高度传感器数据进行多重余度校验，确保进入复飞程序的决策数据具备完整性和一致性。",
            "系统在检测到飞行高度与决断高度逻辑判断异常时，应立即冻结控制指令输出并启动故障诊断流程。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 10,
        "requirement": "若飞行高度不大于决断高度，则根据当前的阶段标志和飞行高度进行阶段转换处理。",
        "original_safety_criterions": [
            "两个或多个存在转移关系的状态具有同一个功能，对状态转移前后功能的执行情况进行检查，分析功能在状态转移后“开始执行、保持执行、中断执行”等情况下功能处理的正确性",
            "对软件状态空间中两两状态之间的转移条件进行检查，分析转移条件“未设置、始终满足、无法满足”等情况下状态转移的正确性",
            "对状态进入条件进行检查，分析状态执行过程中进入条件“满足、不满足、再次满足”等情况下状态执行的正确性"
        ],
        "safety_requirements": [
            "系统应检查飞行高度进入条件，确保在‘满足、不满足、再次满足’情况下阶段转换处理的正确性，并与当前阶段标志和飞行高度保持一致。",
            "系统应对飞行状态转移条件（未设置、始终满足、无法满足）进行检查，确保当飞行高度不大于决断高度时，阶段转换处理的逻辑正确性。",
            "系统应在状态转移后对飞行高度的执行情况进行检查，确保功能在‘开始执行、保持执行、中断执行’等情况下处理的正确性。",
            "系统应验证阶段转换处理中飞行高度与决断高度的比较逻辑，防止因数据错误导致非预期状态转移。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 11,
        "requirement": "记录切换前的给定姿态角（滚转、偏航和俯仰）旧值，作为软化起点。",
        "original_safety_criterions": [
            "工作状态发生转移时，对功能接口数据的取值进行检查，分析“取值发生变化或者取值区间发生变化”等情况下输出的正确性",
            "余度切换时间过长，软件是否有正确处理？",
            "对接口数据的等价类进行检查，分析数据取值在不同输出等价类之间切换时输出的正确性",
            "对接口数据的等价类进行检查，分析接口数据取值在不同等价类之间切换时输出的正确性",
            "工作状态发生转移时，对功能接口数据的取值进行检查，分析“取值未发生变化”等情况下输出的正确性"
        ],
        "safety_requirements": [
            "系统在姿态角（滚转、偏航和俯仰）取值切换不同等价类时，应检查接口数据输出的正确性。",
            "系统在工作状态发生转移时，应检查给定姿态角（滚转、偏航和俯仰）的取值变化或区间变化，确保输出正确。",
            "系统在余度切换时间过长时，应验证是否准确记录并处理切换前的姿态角旧值作为软化起点。",
            "系统应在工作状态转移时对给定姿态角（滚转、偏航和俯仰）进行取值未变化场景的输出正确性检查。",
            "系统应对切换前的姿态角旧值进行完整性保护，确保软化起点数据未被篡改或丢失。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 12,
        "requirement": "与不带内回路遥控模式之间切换时，记录切换前的舵偏指令旧值，作为软化起点。",
        "original_safety_criterions": [
            "对接口数据的等价类进行检查，分析接口数据取值在不同等价类之间切换时输出的正确性",
            "输出回路是否有检测机制，在不影响正常输出时进行回路状态检测？",
            "对接口数据的等价类进行检查，分析数据取值在不同输出等价类之间切换时输出的正确性"
        ],
        "safety_requirements": [
            "系统在与不带内回路遥控模式切换时，应启用输出回路检测机制，确保切换前记录的舵偏指令旧值作为软化起点的准确性，且不影响正常输出。",
            "系统在与不带内回路遥控模式切换时，应对接口数据的等价类进行实时检查，确保数据取值在等价类切换时输出的正确性，并验证记录的舵偏指令旧值有效性。",
            "系统在与不带内回路遥控模式切换时，应对输出等价类之间的数据取值变化进行动态分析，确保舵偏指令旧值记录的完整性及切换后指令的平滑过渡。",
            "系统应确保记录的舵偏指令旧值在模式切换过程中保持不可篡改，并具备数据完整性校验机制。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 13,
        "requirement": "与带内回路的遥控模式之间切换时，记录切换前的给定姿态角（滚转、偏航和俯仰）旧值，作为软化起点。",
        "original_safety_criterions": [
            "对软件状态空间中两两状态之间的转移条件进行检查，分析转移条件“未设置、始终满足、无法满足”等情况下状态转移的正确性",
            "两个或多个存在转移关系的状态具有同一个功能，对状态转移前后功能的执行情况进行检查，分析功能在状态转移后“开始执行、保持执行、中断执行”等情况下功能处理的正确性",
            "对接口数据的等价类进行检查，分析数据取值在不同输出等价类之间切换时输出的正确性",
            "对接口数据的等价类进行检查，分析接口数据取值在不同等价类之间切换时输出的正确性",
            "工作状态发生转移时，对功能接口数据的取值进行检查，分析“取值未发生变化”等情况下输出的正确性"
        ],
        "safety_requirements": [
            "在与带内回路的遥控模式切换时，系统应检查接口数据的等价类切换，确保记录切换前姿态角（滚转、偏航、俯仰）旧值的正确性，并验证软化起点数据输出的准确性。",
            "系统在与带内回路的遥控模式切换时，应对状态转移条件（未设置、始终满足、无法满足）进行检查，确保状态转移逻辑正确且姿态角旧值记录的完整性。",
            "系统在与带内回路的遥控模式切换时，需检查功能在状态转移后（开始执行、保持执行、中断执行）的处理逻辑，确保姿态角旧值作为软化起点的有效性。",
            "系统应在与带内回路的遥控模式切换过程中，对接口数据输出等价类切换进行实时校验，确保姿态角旧值记录与软化起点的一致性。",
            "系统在与带内回路的遥控模式切换时，应对功能接口数据取值（未发生变化）进行检查，确保姿态角旧值记录的准确性和切换后输出的正确性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 14,
        "requirement": "带内回路遥控与不带内回路遥控模式之间切换时，记录切换前的舵偏指令旧值，作为软化起点。",
        "original_safety_criterions": [
            "对接口数据的等价类进行检查，分析接口数据取值在不同等价类之间切换时输出的正确性",
            "余度切换时间过长，软件是否有正确处理？",
            "输出回路是否有检测机制，在不影响正常输出时进行回路状态检测？"
        ],
        "safety_requirements": [
            "系统在带内回路遥控与不带内回路遥控模式切换时，应具备实时检测机制，确保回路状态检测不影响正常输出，并记录切换前的舵偏指令旧值作为软化起点。",
            "系统应确保带内回路遥控与不带内回路遥控模式的余度切换时间符合要求，在超时情况下维持舵偏指令旧值，并触发异常处理机制。",
            "系统在模式切换时应对舵偏指令的接口数据进行等价类检查，验证不同取值区间的切换逻辑，确保输出的正确性和连续性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 15,
        "requirement": "有阶段转换或发生与遥控模式有关的控制模式切换时，记录转换前的节风门偏度指令旧值，作为软化起点。",
        "original_safety_criterions": [
            "工作状态发生转移时，对功能接口数据的取值进行检查，分析“取值未发生变化”等情况下输出的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性",
            "工作状态发生转移时，对功能接口数据的取值进行检查，分析“取值发生变化或者取值区间发生变化”等情况下输出的正确性",
            "对接口数据的等价类进行检查，分析数据取值在不同输出等价类之间切换时输出的正确性"
        ],
        "safety_requirements": [
            "系统在阶段转换或遥控模式相关的控制模式切换时，应检查不同余度的工作状态，确保在‘两个或多个余度处于不同状态’的情况下仍能正确记录转换前的节风门偏度指令旧值作为软化起点。",
            "系统在工作状态转移时，应对功能接口数据的取值进行检查，确保在阶段转换或控制模式切换时，若‘取值未发生变化’，记录的节风门偏度指令旧值的准确性和有效性。",
            "系统在阶段转换或控制模式切换时，应对功能接口数据的取值变化或取值区间变化进行验证，确保节风门偏度指令旧值的记录逻辑与当前状态一致。",
            "系统在接口数据等价类切换时，应验证节风门偏度指令旧值的记录过程，确保数据跨越不同输出等价类时的正确性，并在异常情况下进行错误隔离。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 16,
        "requirement": "FCC 采集必要的飞机运动信息，与要求的运动相比较，得到飞机实际运动与理想运动的偏差，然后根据该偏差，通过解算控制律，得到控制信号，并将该控制信号输入到相关舵机，使操纵面按一定的规律偏转，从而实现对飞机姿态和运动的控制。",
        "original_safety_criterions": [
            "对不同余度的离散型输出数据取值进行检查，分析两个或多个余度输出数据‘取值不一致’等情况下，功能实现的正确性",
            "对不同余度所处的工作状态进行检查，分析‘两个或多个余度处于不同状态’等情况下，功能实现的正确性",
            "对功能的逻辑判断条件和逻辑分支进行检查，分析‘逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏’等情况下功能处理的正确性"
        ],
        "safety_requirements": [
            "系统应在 FCC 处理飞机运动信息采集、偏差比较、控制律解算及控制信号生成时，检查逻辑判断条件和分支，确保‘逻辑恒假、恒真、条件错误或分支遗漏’等情况下的功能处理正确性。",
            "系统应对不同余度的离散型输出数据进行一致性校验，确保在‘取值不一致’情况下，FCC 采集的运动信息和解算的控制信号功能仍保持正确。",
            "系统应监控不同余度的工作状态，确保在‘两个或多个余度处于不同状态’情况下，FCC 采集运动信息、解算控制律及生成控制信号的功能正确执行。",
            "系统应在控制信号输入舵机前，对控制律解算结果进行冗余验证，确保操纵面偏转逻辑与当前飞行姿态和运动控制目标一致。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 17,
        "requirement": "当飞机在地面等待阶段时，升降舵偏角指令、副翼偏角指令和方向舵偏角指令均置为 0°。",
        "original_safety_criterions": [
            "对软件状态空间中两两状态之间的转移条件进行检查，分析转移条件“未设置、始终满足、无法满足”等情况下状态转移的正确性",
            "两个或多个状态之间不存在转移关系，对这些状态的进入条件进行检查，分析进入条件“同时满足、状态执行过程中满足”等情况下状态执行的正确性",
            "对状态进入条件进行检查，分析状态执行过程中进入条件“满足、不满足、再次满足”等情况下状态执行的正确性"
        ],
        "safety_requirements": [
            "系统应在软件状态转移时检查转移条件设置的有效性，确保当地面等待阶段激活时，升降舵、副翼和方向舵偏角指令正确置为0°，且在‘未设置、始终满足、无法满足’等条件下状态转移逻辑无异常。",
            "系统应在地面等待阶段的状态进入条件发生变化（满足、不满足或再次满足）时，验证状态执行逻辑的正确性，确保所有舵面偏角指令持续保持为0°。",
            "系统应检查与其他无转移关系状态的进入条件（同时满足或在执行中满足），确保地面等待阶段激活期间升降舵、副翼和方向舵偏角指令强制置0°的稳定性。",
            "系统应实时监控地面等待阶段的激活状态，当检测到状态退出条件时，立即终止舵面偏角置零指令并触发状态转移验证机制。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 18,
        "requirement": "系统应能够实时采集和处理飞机的运动信息，包括但不限于位置、速度、姿态等数据。",
        "original_safety_criterions": [
            "出现异常外部因素情况（例如高海况、恶劣气象条件等）时，软件是否进行了相应的判断和处理？",
            "对不同余度所处的工作状态进行检查，分析‘两个或多个余度处于不同状态’等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统应检查不同余度的工作状态，确保在'两个或多个余度处于不同状态'时，实时采集和处理飞机运动信息（位置、速度、姿态等）的功能正确执行。",
            "系统在异常外部因素（如高海况、恶劣气象条件）下，应保持实时采集并处理飞机运动信息（位置、速度、姿态等），同时触发对应的异常判断与处理机制。",
            "系统应对实时采集的飞机运动信息（位置、速度、姿态等）进行数据完整性校验，确保处理结果的准确性。",
            "系统应在余度工作状态异常或外部环境异常时，启用冗余机制或容错策略，维持运动信息处理功能的连续性和可靠性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 19,
        "requirement": "系统应能够根据飞行阶段的不同，调整控制策略和参数，确保飞机在各个阶段的稳定性和安全性。",
        "original_safety_criterions": [
            "系统进行控制的顺序和时序是否与硬件协调，控制条件是否完备且前后一致？",
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性",
            "输出控制状态的时机是否符合场景要求？",
            "下发危险的控制指令或动作时，是否有依据设备状态进行合理性判断？"
        ],
        "safety_requirements": [
            "系统应确保控制策略的顺序和时序与飞行阶段严格协调，控制条件应完备且前后一致，以保障飞机各阶段的稳定性和安全性。",
            "系统在下发危险控制指令或动作前，必须依据当前飞行阶段状态进行合理性判断，防止非预期操作。",
            "当两个或多个余度处于不同工作状态时，系统应检查并确保控制参数和策略调整的正确性，以适配各飞行阶段的安全需求。",
            "系统应验证输出控制状态的触发时机是否符合对应飞行阶段的时序与逻辑要求。",
            "系统在控制解算过程中应对功能输入进行严格检查，确保在‘未考虑飞行阶段’或‘未考虑飞行状态’的情况下仍能正确处理并维持安全性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 20,
        "requirement": "纵向控制规律：δz = KJ (J-Jg) + Kwz . wz",
        "original_safety_criterions": [
            "对功能的控制解算结果进行检查，分析控制解算结果为“正常值、异常值、边界值、极大极小值”等情况下功能处理的正确性"
        ],
        "safety_requirements": [
            "系统应对纵向控制规律 δz = KJ (J-Jg) + Kwz . wz 的解算结果进行实时检查，覆盖正常值、异常值、边界值及极大极小值场景，确保计算逻辑的正确性。",
            "系统应在纵向控制规律解算结果超出预设范围或出现异常值时，触发实时预警机制，并执行预设的故障保护策略。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 21,
        "requirement": "横侧向控制规律：δx = KY . (Y - Yg)",
        "original_safety_criterions": [
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "对功能的控制解算结果进行检查，分析控制解算结果为“正常值、异常值、边界值、极大极小值”等情况下功能处理的正确性",
            "各功能点控制逻辑之间的时序关系、约束关系、并发关系和组合关系是否正确",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统应验证横侧向控制规律（δx = KY . (Y - Yg)）与各功能点控制逻辑的时序关系、约束关系、并发关系和组合关系，确保其正确性。",
            "系统在不同工作阶段和状态时，应对功能输入进行检查，确保横侧向控制规律的处理正确考虑当前工作阶段和状态参数（Y, Yg等）。",
            "系统在多个余度处于不同状态时，应检查横侧向控制规律（δx = KY . (Y - Yg)）的解算逻辑，确保功能实现正确性。",
            "系统应对横侧向控制规律（δx = KY . (Y - Yg)）的解算结果进行实时检查，确保正常值、异常值、边界值及极大极小值等情况下的处理正确性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 22,
        "requirement": "横侧向控制规律：δy = KyY . (Y - Yg) + Kywy . wy",
        "original_safety_criterions": [
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性",
            "对功能的控制解算结果进行检查，分析控制解算结果为“正常值、异常值、边界值、极大极小值”等情况下功能处理的正确性",
            "各功能点控制逻辑之间的时序关系、约束关系、并发关系和组合关系是否正确"
        ],
        "safety_requirements": [
            "系统应验证横侧向控制规律（δy = KyY*(Y - Yg) + Kywy*wy）的时序关系、约束关系、并发关系和组合关系的正确性。",
            "系统在不同工作阶段和状态时，应对功能输入进行检查，确保横侧向控制规律处理已考虑工作阶段和工作状态，避免‘未考虑’导致的错误。",
            "系统应对横侧向控制规律解算结果（正常值、异常值、边界值、极大/极小值）进行校验，并确保功能处理的正确性。",
            "系统在余度处于不同状态时，应检查横侧向控制规律（δy = KyY*(Y - Yg) + Kywy*wy）的实现正确性，确保冗余机制有效性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 23,
        "requirement": "系统应能够根据当前飞行状态和目标状态计算出舵偏角δz、δx和δy。",
        "original_safety_criterions": [
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "对功能的循环判断条件进行检查，分析“循环判断条件恒假、恒真”等情况下功能处理的正确性",
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统应对计算舵偏角δz、δx和δy的循环判断条件进行检查，确保在‘条件恒假’或‘恒真’情况下功能处理的正确性。",
            "系统在多个余度处于不同工作状态时，应确保舵偏角δz、δx和δy的计算结果正确，并进行状态一致性校验。",
            "系统应根据不同飞行状态和工作阶段调整控制解算过程，检查输入是否包含工作阶段及状态信息，防止未考虑相关因素导致的错误。",
            "系统应对舵偏角计算中的逻辑判断条件及分支进行完整性检查，确保无恒假、恒真、条件错误或分支遗漏等情况。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 24,
        "requirement": "系统需要根据给定的俯仰角 Jg 和滚转角 Yg 以及方向舵控制量 yg，通过双线性变换法进行离散化，计算出 δz (k)、δx (k) 和 δy (k) 的值。",
        "original_safety_criterions": [
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性",
            "对不同余度的离散型接口数据取值进行检查，分析两个或多个余度接口数据“取值不一致”等情况下，功能实现的正确性",
            "对不同余度的离散型输出数据取值进行检查，分析两个或多个余度输出数据“取值不一致”等情况下，功能实现的正确性",
            "对功能的控制解算结果进行检查，分析控制解算结果为“正常值、异常值、边界值、极大极小值”等情况下功能处理的正确性"
        ],
        "safety_requirements": [
            "系统应对双线性变换法的逻辑判断条件和分支进行检查，确保在逻辑恒假、恒真、条件错误或分支遗漏时，δz(k)、δx(k) 和 δy(k) 的计算结果正确。",
            "系统在不同余度工作状态不一致时，应确保俯仰角 Jg、滚转角 Yg 和方向舵控制量 yg 的离散化计算结果与各余度状态逻辑匹配。",
            "系统应对不同余度的离散型输出数据取值进行一致性检查，在多个余度输出数据不一致时，确保 δz(k)、δx(k) 和 δy(k) 的计算结果正确。",
            "系统应对不同余度的离散型接口数据取值进行校验，在接口数据取值不一致时，仍能通过双线性变换法准确计算 δz(k)、δx(k) 和 δy(k)。",
            "系统应对 δz(k)、δx(k) 和 δy(k) 的解算结果进行异常检测，确保在正常值、异常值、边界值或极大极小值时处理逻辑正确。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 25,
        "requirement": "系统需要在起飞离地段，根据不同的飞行阶段设置不同的给定姿态角，具体如下：纵向 Jg = 4.5°，横侧向 yg = 0°。",
        "original_safety_criterions": [
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "各功能点控制逻辑之间的时序关系、约束关系、并发关系和组合关系是否正确",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统应检查给定姿态角（纵向 Jg = 4.5°，横侧向 yg = 0°）的逻辑判断条件和逻辑分支，确保在‘逻辑恒假、逻辑恒真、判断条件错误或分支遗漏’情况下功能处理的正确性。",
            "系统应确保起飞离地段不同飞行阶段设置给定姿态角时，各功能点控制逻辑的时序关系、约束关系、并发关系和组合关系的正确性。",
            "系统在检测到两个或多个余度处于不同工作状态时，应仍能根据飞行阶段正确设置给定姿态角（纵向 Jg = 4.5°，横侧向 yg = 0°）。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 26,
        "requirement": "系统需要根据侧偏距 Dz 和侧偏移速度 Dz 以及 Δy，通过公式计算出 yg 的值。",
        "original_safety_criterions": [
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "对功能的多个输入数据进行检查，分析多个输入数据取值为“正常值等价类组合、异常值等价类组合、边界值组合、初始值组合、安全值组合、缺省值组合”等情况下功能处理的正确性",
            "对不同余度的离散型输出数据取值进行检查，分析两个或多个余度输出数据“取值不一致”等情况下，功能实现的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统应对侧偏距 Dz、侧偏移速度 Dz 以及 Δy 的输入数据进行检查，确保在正常值、异常值、边界值、初始值、安全值及缺省值组合情况下，通过公式计算 yg 值的正确性。",
            "系统应在不同余度的离散型输出数据取值不一致时，检查侧偏距 Dz、侧偏移速度 Dz 以及 Δy 的计算过程，确保 yg 值的功能实现正确。",
            "系统应对计算 yg 值的逻辑判断条件和分支进行检查，分析逻辑恒假、恒真、条件错误或分支遗漏等情况，确保公式计算的正确性。",
            "系统应检查不同余度的工作状态，当两个或多个余度处于不同状态时，确保侧偏距 Dz、侧偏移速度 Dz 以及 Δy 的计算结果正确。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 27,
        "requirement": "系统应支持在起飞离地段通过节风门微调量更改节风门量，更改限幅值为[-15%，0%]",
        "original_safety_criterions": [
            "针对各项任务的持续时间进行检查，分析任务持续时间大于规定时间等情况下，功能处理的正确性",
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性",
            "对功能的控制解算结果进行检查，分析控制解算结果为“正常值、异常值、边界值、极大极小值”等情况下功能处理的正确性",
            "各功能点控制逻辑之间的时序关系、约束关系、并发关系和组合关系是否正确"
        ],
        "safety_requirements": [
            "系统应检查节风门微调量的控制解算结果（正常值、异常值、边界值等），确保在起飞离地段更改节风门量时处理正确，且限幅值符合[-15%，0%]要求。",
            "系统应验证节风门微调量更改的逻辑判断条件与分支，确保在逻辑恒假、恒真、条件错误或分支遗漏时处理正确。",
            "系统应监控节风门微调量更改任务的持续时间，当超过规定时间时，保证功能处理的正确性和节风门量限幅的有效性。",
            "系统应检查不同余度的工作状态差异，确保在多个余度处于不同状态时，节风门微调量更改功能正确执行。",
            "系统应确保节风门微调量更改的控制逻辑（时序、约束、并发关系）在起飞离地段的正确性，并严格限定更改范围为[-15%，0%]。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 28,
        "requirement": "系统应支持爬升1段的自主节风门控制",
        "original_safety_criterions": [
            "系统进行控制的顺序和时序是否与硬件协调，控制条件是否完备且前后一致？",
            "对不同余度的执行时序进行检查，分析“两个或多个余度执行时序未同步”等情况下，功能实现的正确性",
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "输出控制状态的时机是否符合场景要求？",
            "针对各项任务的持续时间进行检查，分析任务持续时间大于规定时间等情况下，功能处理的正确性"
        ],
        "safety_requirements": [
            "系统应检查自主节风门控制的不同余度执行时序，确保在‘两个或多个余度执行时序未同步’情况下，控制功能输出的正确性。",
            "系统应验证自主节风门控制的输出时机严格符合爬升1段的场景要求，避免时序偏差。",
            "系统应确保爬升1段的自主节风门控制顺序、时序与硬件协调一致，控制条件完备且前后逻辑无冲突。",
            "系统在不同工作阶段或状态下进行自主节风门控制时，应对功能输入进行校验，避免因‘未考虑工作阶段’或‘未考虑工作状态’导致处理错误。",
            "系统应监控自主节风门控制任务的持续时间，在任务超时情况下启用预设纠错机制，并触发告警。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 29,
        "requirement": "系统应支持在爬升1段通过节风门微调量更改节风门量，更改限幅值为[-15%，0%]",
        "original_safety_criterions": [
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性",
            "各功能点控制逻辑之间的时序关系、约束关系、并发关系和组合关系是否正确",
            "对功能的控制解算结果进行检查，分析控制解算结果为“正常值、异常值、边界值、极大极小值”等情况下功能处理的正确性"
        ],
        "safety_requirements": [
            "系统应对节风门微调量的控制解算结果进行检查，确保在‘正常值、异常值、边界值、极大极小值’等情况下，节风门量更改功能处理正确，且限幅值严格限定为[-15%，0%]。",
            "系统应对节风门微调量更改逻辑的判断条件和逻辑分支进行检查，确保在‘逻辑恒假、逻辑恒真、逻辑条件错误、逻辑分支遗漏’等场景下，功能处理符合爬升1段的控制要求。",
            "系统在多个余度处于不同工作状态时，应验证节风门微调量更改功能的正确性，确保限幅值[-15%，0%]的约束有效执行。",
            "系统应确保爬升1段节风门微调量更改逻辑的时序、约束及并发关系正确，并在更改过程中强制应用限幅值[-15%，0%]的边界条件。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 30,
        "requirement": "系统应支持纵向和横侧向的离散化计算",
        "original_safety_criterions": [
            "对接口数据中具有离散型值域的数据位进行检查，分析数据位取值为“有效值域外未定义的异常值”等情况下输出的正确性",
            "对不同余度的离散型接口数据取值进行检查，分析两个或多个余度接口数据“取值不一致”等情况下，功能实现的正确性",
            "对不同余度的离散型输出数据取值进行检查，分析两个或多个余度输出数据“取值不一致”等情况下，功能实现的正确性",
            "对接口数据中具有离散型值域的数据位进行检查，分析数据位取值为“有效值域的每项枚举值”等情况下输出的正确性",
            "针对各项任务的持续时间进行检查，分析任务持续时间大于规定时间等情况下，功能处理的正确性"
        ],
        "safety_requirements": [
            "系统应检查纵向和横侧向离散型接口数据的多余度取值，在两个及以上余度接口数据“取值不一致”时，确保离散化计算功能的正确实现。",
            "系统应对纵向和横侧向离散型接口数据位的取值进行有效性核查，在数据位取值为有效值域外未定义的异常值时，确保离散化计算输出的正确性。",
            "系统应监控纵向和横侧向离散化计算任务的持续时间，在任务执行时间超过规定阈值时，保障功能处理逻辑的正确性。",
            "系统应对纵向和横侧向离散型接口数据位的所有有效枚举值进行完整性验证，确保离散化计算结果在每项有效值域下的准确性。",
            "系统应检查纵向和横侧向离散型输出数据的一致性，在两个及以上输出数据“取值不一致”时，确保功能实现的正确性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 31,
        "requirement": "系统应支持计算爬升时的给定空速",
        "original_safety_criterions": [
            "对不同余度所处的工作状态进行检查，分析‘两个或多个余度处于不同状态’等情况下，功能实现的正确性",
            "对功能的逻辑判断条件和逻辑分支进行检查，分析‘逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏’等情况下功能处理的正确性"
        ],
        "safety_requirements": [
            "系统在计算爬升时的给定空速时，应对逻辑判断条件和逻辑分支进行验证，确保在‘逻辑恒假、恒真、条件错误或分支遗漏’等情况下功能的处理正确性。",
            "系统应检查不同余度的工作状态，确保在‘两个或多个余度处于不同状态’时，计算爬升给定空速的功能输出正确。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 32,
        "requirement": "系统应支持航向偏差的计算和处理",
        "original_safety_criterions": [
            "出现异常外部因素情况（例如高海况、恶劣气象条件等）时，软件是否进行了相应的判断和处理？"
        ],
        "safety_requirements": [
            "系统在出现高海况、恶劣气象条件等异常外部因素时，应确保航向偏差的计算和处理功能正常执行，并对计算结果进行有效性验证。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 33,
        "requirement": "Md2(k) = KvI  . Md1(k)",
        "original_safety_criterions": [
            "对功能的循环判断条件进行检查，分析“循环判断条件恒假、恒真”等情况下功能处理的正确性",
            "对不同余度的接口数据进行检查，分析“单个余度故障、全部余度均故障（如数据异常、时序故障、通信故障、目的设备故障等）”情况下，功能实现的正确性",
            "针对各项任务的先后执行时序进行检查，分析任务执行时序与规定时序不一致时，功能处理的正确性",
            "针对各项任务的持续时间进行检查，分析任务持续时间大于规定时间等情况下，功能处理的正确性",
            "针对各项任务的执行条件中的输入数据取值进行检查，分析输入数据取值使得任务执行条件提前满足时，功能处理的正确性"
        ],
        "safety_requirements": [
            "系统应检查输入数据取值的异常情况，确保当任务执行条件提前满足时，Md2(k) = KvI . Md1(k) 功能处理的正确性。",
            "系统应对不同余度的接口数据进行校验，在单个或全部余度故障（如数据异常、时序故障、通信故障）时，保证 Md2(k) = KvI . Md1(k) 功能的正确实现。",
            "系统应验证任务持续时间超过规定时间的情况，确保 Md2(k) = KvI . Md1(k) 功能在超时场景下处理的正确性。",
            "系统应监控任务执行时序的一致性，当时序与规定不一致时，保持 Md2(k) = KvI . Md1(k) 功能的正确性。",
            "系统应检测循环判断条件（恒假、恒真）的异常状态，确保 Md2(k) = KvI . Md1(k) 功能在此类条件下的正确处理。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 34,
        "requirement": "Md 2(k )限幅[- XfSita, XfSita]",
        "original_safety_criterions": [
            "对不同余度的连续型接口数据取值进行检查，分析两个或多个余度接口数据“取值不一致，即取值之差超出规定阈值”等情况下，功能实现的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性",
            "各功能点控制逻辑之间的时序关系、约束关系、并发关系和组合关系是否正确",
            "对功能的控制解算结果进行检查，分析控制解算结果为“正常值、异常值、边界值、极大极小值”等情况下功能处理的正确性"
        ],
        "safety_requirements": [
            "系统应对 Md 2(k) 的限幅结果进行实时检查，确保在‘正常值、异常值、边界值、极大极小值’等情况下功能处理的正确性。",
            "系统应检查不同余度的工作状态，在‘两个或多个余度处于不同状态’时，确保 Md 2(k) 限幅[-XfSita, XfSita]功能的正确执行。",
            "系统应对不同余度的连续型接口数据取值进行检查，在‘取值之差超出规定阈值’时，确保 Md 2(k) 限幅[-XfSita, XfSita]功能实现的正确性。",
            "系统应验证 Md 2(k) 限幅逻辑与其他功能点控制逻辑的时序、约束、并发及组合关系，确保整体逻辑正确且无冲突。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 35,
        "requirement": "Md 3(k ) = Kv  . [vk (k ) -vg (k )]+ Md 2(k )",
        "original_safety_criterions": [
            "多个功能同时执行时，对多个功能的输入数据和输出数据进行检查，分析输入数据取值/输出数据取值为“正常值等价类组合、异常值等价类组合”等情况下多功能处理的正确性",
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "多个功能同时对相同数据进行读写操作，分析当出现数据读写冲突等情况下，多功能处理的正确性",
            "对不同余度的接口数据进行检查，分析“单个余度故障、全部余度均故障（如数据异常、时序故障、通信故障、目的设备故障等）”情况下，功能实现的正确性",
            "对不同余度的离散型输出数据取值进行检查，分析两个或多个余度输出数据“取值不一致”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统应对不同余度的接口数据进行检查，确保在‘单个余度故障’或‘全部余度故障（数据异常、时序故障、通信故障等）’情况下，Md 3(k) = Kv · [vk(k) - vg(k)] + Md 2(k) 功能计算正确。",
            "系统在多个功能同时执行时，应验证输入/输出数据为‘正常值等价类组合’或‘异常值等价类组合’的情况下，Md 3(k) = Kv · [vk(k) - vg(k)] + Md 2(k) 计算结果的正确性。",
            "系统在不同工作状态或阶段下，应检查功能输入的完整性，确保‘未考虑工作阶段’或‘未考虑工作状态’时，Md 3(k) = Kv · [vk(k) - vg(k)] + Md 2(k) 处理的正确性。",
            "系统在多个功能读写相同数据出现冲突时，应确保 Md 3(k) = Kv · [vk(k) - vg(k)] + Md 2(k) 的计算结果不受影响且保持正确性。",
            "系统应对不同余度的离散型输出数据进行检查，当余度数据‘取值不一致’时，确保 Md 3(k) = Kv · [vk(k) - vg(k)] + Md 2(k) 功能的正确性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 36,
        "requirement": "Md 3(k )限幅[- XfSita, XfSita]",
        "original_safety_criterions": [
            "对两个或多个存在转移关系的状态下、设置了优先级的不同功能进行检查，分析“高优先级切换低优先级、低优先级切换高优先级”等情况下状态与功能的正确性",
            "对功能的多个输入数据进行检查，分析多个输入数据取值为“正常值等价类组合、异常值等价类组合、边界值组合、初始值组合、安全值组合、缺省值组合”等情况下功能处理的正确性",
            "两个或多个存在转移关系的状态对同一个功能的执行要求不同，部分状态允许功能执行，其他状态不允许。分析状态转移前后功能“保持执行、中断执行”等情况下状态与功能的正确性",
            "对功能的控制解算过程进行检查，分析控制解算过程出现超时（未在规定时间内返回结果）等情况下的功能处理正确性",
            "对功能的控制解算结果进行检查，分析控制解算结果为“正常值、异常值、边界值、极大极小值”等情况下功能处理的正确性"
        ],
        "safety_requirements": [
            "系统应对 Md 3(k) 限幅的控制解算过程进行超时检查，确保在未规定时间内返回结果时触发正确处理机制。",
            "系统应对 Md 3(k) 限幅结果进行验证，确保在结果为正常值、异常值、边界值或极大极小值时功能处理逻辑的正确性。",
            "系统应在状态转移时检查 Md 3(k) 限幅的执行要求，确保状态允许执行或不允许执行时功能的中断或保持符合当前状态逻辑。",
            "系统应在不同优先级状态下执行 Md 3(k) 限幅功能时，确保高优先级与低优先级切换过程中的执行正确性。",
            "系统应对 Md 3(k) 限幅功能的输入数据进行组合检查，包括正常值、异常值、边界值、初始值、安全值及缺省值组合，确保处理逻辑正确性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 37,
        "requirement": "Jg (k ) = Md 3(k )",
        "original_safety_criterions": [
            "对功能的多个输入数据进行检查，分析多个输入数据取值为“正常值等价类组合、异常值等价类组合、边界值组合、初始值组合、安全值组合、缺省值组合”等情况下功能处理的正确性",
            "针对各项任务的持续时间进行检查，分析任务持续时间小于规定时间等情况下，功能处理的正确性",
            "对功能的数据处理过程进行检查，分析数据处理过程是否存在除0的情况",
            "针对各项任务的持续时间进行检查，分析任务持续时间大于规定时间等情况下，功能处理的正确性",
            "针对各项任务的执行条件中的输入数据取值进行检查，分析输入数据取值使得任务执行条件提前满足时，功能处理的正确性"
        ],
        "safety_requirements": [
            "系统应对输入数据进行等价类组合检查（正常值、异常值、边界值、初始值、安全值、缺省值），确保 Jg(k) = Md3(k) 功能处理的正确性。",
            "系统在任务持续时间大于或小于规定时间时，应验证 Jg(k) = Md3(k) 功能处理结果的逻辑正确性。",
            "系统在输入数据导致任务执行条件提前满足时，应保持 Jg(k) = Md3(k) 功能的计算准确性。",
            "系统应对 Jg(k) = Md3(k) 的数据处理过程进行动态检查，消除可能触发除0异常的场景。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 38,
        "requirement": "δp (k) = 115%",
        "original_safety_criterions": [
            "对不同余度的输出数据进行检查，分析“单个余度故障、多个余度均故障”情况下，功能实现的正确性",
            "对功能的循环判断条件进行检查，分析“循环判断条件恒假、恒真”等情况下功能处理的正确性",
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性",
            "针对各项任务的持续时间进行检查，分析任务持续时间大于规定时间等情况下，功能处理的正确性"
        ],
        "safety_requirements": [
            "系统应在不同工作阶段和状态下对δp(k)=115%的控制解算输入进行检查，确保未遗漏工作阶段或状态时功能处理的正确性。",
            "系统应检查多余度工作状态差异场景（如两个及以上余度处于不同状态），确保δp(k)=115%功能输出的正确性。",
            "系统应在任务持续时间超过规定阈值时，验证δp(k)=115%功能处理的逻辑正确性。",
            "系统应监测余度输出数据状态，在单个或多个余度故障情况下，保证δp(k)=115%功能仍能正确实现。",
            "系统应对δp(k)=115%的循环判断条件进行实时监测，确保在条件恒假或恒真异常时功能处理的正确性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 39,
        "requirement": "Md1(k ) = Kg1 . Dz(k )",
        "original_safety_criterions": [
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "针对各项任务的执行条件中的输入数据取值进行检查，分析输入数据取值使得任务执行条件延迟满足时，功能处理的正确性",
            "针对各项任务的先后执行时序进行检查，分析任务执行时序与规定时序不一致时，功能处理的正确性",
            "针对各项任务的持续时间进行检查，分析任务持续时间大于规定时间等情况下，功能处理的正确性",
            "针对各项任务的执行条件中的输入数据取值进行检查，分析输入数据取值使得任务执行条件提前满足时，功能处理的正确性"
        ],
        "safety_requirements": [
            "系统应对 Md1(k) = Kg1 . Dz(k) 的逻辑判断条件和分支进行检查，确保在'逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏'等情况下，功能处理的正确性。",
            "系统应针对 Md1(k) = Kg1 . Dz(k) 的输入数据取值进行检查，确保任务执行条件提前满足时，功能处理的正确性。",
            "系统应检查 Md1(k) = Kg1 . Dz(k) 的任务持续时间，确保在持续时间超过规定时，功能处理的正确性。",
            "系统应检查 Md1(k) = Kg1 . Dz(k) 的输入数据取值，确保任务执行条件延迟满足时，功能处理的正确性。",
            "系统应检查 Md1(k) = Kg1 . Dz(k) 的任务执行时序，确保在时序与规定不一致时，功能处理的正确性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 40,
        "requirement": "Md1(k ) 限幅[- XfCs,+XfCs]",
        "original_safety_criterions": [
            "对不同余度的连续型接口数据取值进行检查，分析两个或多个余度接口数据“取值不一致，即取值之差超出规定阈值”等情况下，功能实现的正确性",
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "对不同余度的连续型输出数据取值进行检查，分析两个或多个余度输出数据“取值不一致，即取值之差超出规定阈值”等情况下，功能实现的正确性",
            "对功能的控制解算结果进行检查，分析控制解算结果为“正常值、异常值、边界值、极大极小值”等情况下功能处理的正确性",
            "各功能点控制逻辑之间的时序关系、约束关系、并发关系和组合关系是否正确"
        ],
        "safety_requirements": [
            "系统应检查不同余度的连续型接口数据取值，在差值超出规定阈值时，确保 Md1(k) 限幅[-XfCs, +XfCs]功能的正确性。",
            "系统应检查不同余度的连续型输出数据取值，在差值超出规定阈值时，确保 Md1(k) 限幅[-XfCs, +XfCs]功能的正确性。",
            "系统应对 Md1(k) 控制解算结果进行验证，确保在正常值、异常值、边界值及极大极小值时，限幅逻辑处理的正确性。",
            "系统应检查 Md1(k) 限幅的逻辑判断条件与分支，确保不存在逻辑恒假、恒真、条件错误或分支遗漏的情况。",
            "系统应验证 Md1(k) 限幅功能与其他功能点的时序关系、约束关系、并发关系和组合关系的正确性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 41,
        "requirement": "Md 2(k ) = D&Z  (k ) + Md1(k )  . Kg 2",
        "original_safety_criterions": [
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "对不同余度的输出数据进行检查，分析“单个余度故障、多个余度均故障”情况下，功能实现的正确性",
            "对功能的多个输入数据进行检查，分析多个输入数据取值为“正常值等价类组合、异常值等价类组合、边界值组合、初始值组合、安全值组合、缺省值组合”等情况下功能处理的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统应对不同余度的输出数据进行检查，确保在‘单个余度故障’或‘多个余度均故障’情况下，Md2(k) = D&Z(k) + Md1(k) . Kg2 功能的正确实现。",
            "系统应对输入数据进行多组合检查（正常值等价类、异常值等价类、边界值、初始值、安全值、缺省值），确保 Md2(k) = D&Z(k) + Md1(k) . Kg2 处理的正确性。",
            "系统应检查逻辑判断条件和分支，在‘逻辑恒假、逻辑恒真、判断条件错误、分支遗漏’情况下，保证 Md2(k) = D&Z(k) + Md1(k) . Kg2 处理的正确性。",
            "系统应对不同余度的工作状态进行检查，确保在‘两个或多个余度处于不同状态’时，Md2(k) = D&Z(k) + Md1(k) . Kg2 功能的正确实现。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 42,
        "requirement": "Md 2(k )限幅[-XfGama, +XfGama]",
        "original_safety_criterions": [
            "对不同余度的连续型接口数据取值进行检查，分析两个或多个余度接口数据“取值不一致，即取值之差超出规定阈值”等情况下，功能实现的正确性",
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性",
            "对不同余度的连续型输出数据取值进行检查，分析两个或多个余度输出数据“取值不一致，即取值之差超出规定阈值”等情况下，功能实现的正确性",
            "各功能点控制逻辑之间的时序关系、约束关系、并发关系和组合关系是否正确"
        ],
        "safety_requirements": [
            "系统应对不同余度的连续型输出数据进行实时检查，当两个或多个余度输出数据差异超出规定阈值时，确保 Md 2(k) 限幅[-XfGama, +XfGama]功能的正确执行。",
            "系统应对不同余度的连续型接口数据进行实时检查，在余度接口数据差异超出阈值时，验证 Md 2(k) 限幅[-XfGama, +XfGama]功能实现的正确性。",
            "系统应检查 Md 2(k) 限幅逻辑的判断条件与分支，识别逻辑恒假、恒真、条件错误或分支遗漏等异常情况，并确保功能处理的正确性。",
            "系统在不同余度处于不一致工作状态时，应确保 Md 2(k) 限幅[-XfGama, +XfGama]功能的输出符合预期结果。",
            "系统应验证 Md 2(k) 限幅控制逻辑与其他功能点逻辑的时序、约束、并发及组合关系，确保其符合设计要求。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 43,
        "requirement": "Md3(k) = ((2 - T)Md3(k - 1) + T.Md 2(k) + T.Md 2(k - 1)) /(T + 2)",
        "original_safety_criterions": [
            "对功能的多个输入数据进行检查，分析多个输入数据取值为“正常值等价类组合、异常值等价类组合、边界值组合、初始值组合、安全值组合、缺省值组合”等情况下功能处理的正确性",
            "对不同余度的接口数据进行检查，分析“单个余度故障、全部余度均故障（如数据异常、时序故障、通信故障、目的设备故障等）”情况下，功能实现的正确性",
            "针对各项任务的执行条件中的输入数据取值进行检查，分析输入数据取值使得任务执行条件延迟满足时，功能处理的正确性",
            "针对各项任务的先后执行时序进行检查，分析任务执行时序与规定时序不一致时，功能处理的正确性",
            "针对各项任务的执行条件中的输入数据取值进行检查，分析输入数据取值使得任务执行条件提前满足时，功能处理的正确性"
        ],
        "safety_requirements": [
            "系统应在任务执行条件延迟满足时，对 Md3(k) 的输入数据进行取值检查，确保公式计算功能的正确性。",
            "系统应在任务执行条件提前满足时，对 Md3(k) 的输入数据进行取值检查，确保公式处理逻辑的正确性。",
            "系统应检查 Md3(k) 输入数据的余度状态，在单个余度故障或全部余度故障（如数据异常、时序故障等）时，保证计算结果的正确性。",
            "系统应在任务执行时序与规定时序不一致时，验证 Md3(k) = ((2-T)Md3(k-1)+T.Md2(k)+T.Md2(k-1))/(T+2) 的计算正确性。",
            "系统应对 Md3(k) 的输入数据组合（正常/异常值、边界值、初始值等）进行检查，确保不同等价类组合下计算功能的正确性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 44,
        "requirement": "航向控制：yg ＝0°",
        "original_safety_criterions": [
            "对不同余度的输出数据进行检查，分析“单个余度故障、多个余度均故障”情况下，功能实现的正确性",
            "对不同余度接收到的同一输入数据取值进行检查，分析两个或多个余度接收到的同一输入数据取值不一致时，功能实现的正确性",
            "对不同余度的离散型输出数据取值进行检查，分析两个或多个余度输出数据“取值不一致”等情况下，功能实现的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统应对不同余度所处的工作状态进行检查，在‘两个或多个余度处于不同状态’情况下确保航向控制（yg＝0°）功能正确实现。",
            "系统应对不同余度的离散型输出数据取值进行检查，在‘两个或多个余度输出数据取值不一致’情况下维持航向控制功能的正确性。",
            "系统应对不同余度接收的同一航向控制输入数据（yg＝0°）进行一致性检查，当取值不一致时触发纠错机制并确保功能正确。",
            "系统应在‘单个余度故障’或‘多个余度均故障’情况下，通过余度输出数据检查保障航向控制功能正常执行。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 45,
        "requirement": "δp  = 100%",
        "original_safety_criterions": [
            "对不同余度的输出数据进行检查，分析“单个余度故障、多个余度均故障”情况下，功能实现的正确性",
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "对功能的数据处理过程进行检查，分析数据处理过程是否存在除0的情况",
            "对不同余度的接口数据进行检查，分析“单个余度故障、全部余度均故障（如数据异常、时序故障、通信故障、目的设备故障等）”情况下，功能实现的正确性",
            "针对各项任务的先后执行时序进行检查，分析任务执行时序与规定时序不一致时，功能处理的正确性"
        ],
        "safety_requirements": [
            "系统应检查不同余度的输出数据，确保在‘单个余度故障’或‘多个余度均故障’情况下，δp=100%功能实现的正确性。",
            "系统应检查不同余度的接口数据，确保在‘全部余度均故障（如数据异常、时序故障等）’情况下，δp=100%功能实现的正确性。",
            "系统应检查舵偏角δp的逻辑判断条件和分支，确保在‘逻辑恒假、逻辑恒真、条件错误或分支遗漏’情况下，功能处理的正确性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 46,
        "requirement": "该阶段过程中，可通过节风门微调量进行调整",
        "original_safety_criterions": [
            "对两个或多个存在转移关系的状态下、设置了优先级的不同功能进行检查，分析“高优先级切换低优先级、低优先级切换高优先级”等情况下状态与功能的正确性",
            "对软件状态空间中两两状态之间的转移条件进行检查，分析转移条件“未设置、始终满足、无法满足”等情况下状态转移的正确性",
            "对状态进入条件进行检查，分析状态执行过程中进入条件“满足、不满足、再次满足”等情况下状态执行的正确性",
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "输出控制状态的时机是否符合场景要求？"
        ],
        "safety_requirements": [
            "系统在状态优先级切换（高优先级与低优先级）时，应确保节风门微调量调整功能的正确性。",
            "系统应验证节风门微调量输出控制的实际时机符合当前场景要求。",
            "系统在状态进入条件满足、不满足或再次满足时，应确保节风门微调量调整的准确性和一致性。",
            "系统应检查状态转移条件（未设置、始终满足、无法满足），确保在节风门微调量调整过程中状态转移的正确性。",
            "系统在控制解算过程中应明确区分不同工作阶段，并验证节风门微调量输入对功能处理的正确性影响。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 47,
        "requirement": "更改限幅值为[-10%，0%]",
        "original_safety_criterions": [
            "对不同余度的输出数据进行检查，分析“单个余度故障、多个余度均故障”情况下，功能实现的正确性",
            "余度切换时间过长，软件是否有正确处理？",
            "对功能的数据处理过程进行检查，分析数据处理过程是否存在除0的情况"
        ],
        "safety_requirements": [
            "系统应确保在余度切换时间过长时，正确处理限幅值为[-10%，0%]的情况，并触发超时保护机制以保证输出有效性。",
            "系统应对单个余度故障或多个余度均故障的情况进行检查，确保限幅值[-10%，0%]的功能实现正确性，并维持输出在限定范围内。",
            "系统在设置限幅值为[-10%，0%]时，应对数据处理过程进行动态检查，禁止任何可能导致除0错误的数据输入或计算操作。",
            "系统应对限幅值[-10%，0%]的配置参数进行实时校验，当检测到异常数据或越界操作时，立即恢复至安全默认值。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 48,
        "requirement": "Md1(k) = Kg1 * Dz(k)，Md1(k) 限幅[- XfCs, XfCs]",
        "original_safety_criterions": [
            "对不同余度的连续型接口数据取值进行检查，分析两个或多个余度接口数据“取值不一致，即取值之差超出规定阈值”等情况下，功能实现的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性",
            "对不同余度的离散型接口数据取值进行检查，分析两个或多个余度接口数据“取值不一致”等情况下，功能实现的正确性",
            "对不同余度的连续型输出数据取值进行检查，分析两个或多个余度输出数据“取值不一致，即取值之差超出规定阈值”等情况下，功能实现的正确性",
            "对不同余度的离散型输出数据取值进行检查，分析两个或多个余度输出数据“取值不一致”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统应对不同余度的连续型接口数据取值进行实时检查，在出现‘取值不一致超出规定阈值’时，确保 Md1(k) = Kg1 * Dz(k) 计算功能正确，且 Md1(k) 限幅在 [- XfCs, XfCs] 范围内",
            "系统应对不同余度的离散型输出数据取值进行校验，在‘取值不一致’情况下保证 Md1(k) = Kg1 * Dz(k) 功能正确执行，并强制限幅 [- XfCs, XfCs]",
            "系统应对不同余度的连续型输出数据实施阈值监测，当取值差异超出规定阈值时，确保 Md1(k) 计算结果准确且符合限幅要求",
            "系统应对不同余度的离散型接口数据进行一致性检查，在‘取值不一致’情况下强制触发 Md1(k) 计算逻辑的异常处理机制",
            "系统应对不同余度的工作状态进行实时监控，在‘余度处于不同状态’时确保 Md1(k) = Kg1 * Dz(k) 功能正常执行并维持限幅约束"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 49,
        "requirement": "Md2(k) 限幅[- XfGama, XfGama]",
        "original_safety_criterions": [
            "多个功能输出数据的取值互斥或不能同时输出，对这些功能的执行条件进行检查，分析由于多个功能的执行条件同时满足导致并发执行时，多功能输出的正确性",
            "系统的掉电恢复或跑飞复位机制启动后，是否能恢复到正常工作状态？",
            "对不同余度的接口数据进行检查，分析“单个余度故障、全部余度均故障（如数据异常、时序故障、通信故障、目的设备故障等）”情况下，功能实现的正确性",
            "对功能的控制解算结果进行检查，分析控制解算结果为“正常值、异常值、边界值、极大极小值”等情况下功能处理的正确性",
            "对功能的执行条件进行检查，分析功能执行过程中执行条件“不满足、再次满足”等情况下功能处理的正确性"
        ],
        "safety_requirements": [
            "系统应对 Md2(k) 控制解算结果进行检查，确保在‘正常值、异常值、边界值、极大极小值’等情况下，限幅[- XfGama, XfGama]功能的处理正确性。",
            "系统在掉电恢复或跑飞复位后，应能恢复至正常工作状态，并确保 Md2(k) 限幅[- XfGama, XfGama]功能的正确执行。",
            "系统在多个功能执行条件同时满足导致并发执行时，应检查并确保 Md2(k) 限幅[- XfGama, XfGama]的输出正确性，避免互斥数据冲突。",
            "系统在单个余度或全部余度（数据异常、时序故障、通信故障等）故障情况下，应保证 Md2(k) 限幅[- XfGama, XfGama]功能的正确性。",
            "系统应对 Md2(k) 限幅功能的执行条件进行检查，确保执行条件‘不满足’或‘再次满足’时，功能的处理逻辑符合预期。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 50,
        "requirement": "Yg(k) = -Md3(k)",
        "original_safety_criterions": [
            "对不同余度的输出数据进行检查，分析“单个余度故障、多个余度均故障”情况下，功能实现的正确性",
            "对功能的多个输入数据进行检查，分析多个输入数据取值为“正常值等价类组合、异常值等价类组合、边界值组合、初始值组合、安全值组合、缺省值组合”等情况下功能处理的正确性",
            "针对各项任务的先后执行时序进行检查，分析任务执行时序与规定时序不一致时，功能处理的正确性",
            "针对各项任务的持续时间进行检查，分析任务持续时间大于规定时间等情况下，功能处理的正确性",
            "针对各项任务的执行条件中的输入数据取值进行检查，分析输入数据取值使得任务执行条件提前满足时，功能处理的正确性"
        ],
        "safety_requirements": [
            "系统应在任务执行时序与规定时序不一致时，确保Yg(k) = -Md3(k)功能的处理正确性。",
            "系统应对Yg(k) = -Md3(k)功能的输入数据进行正常值、异常值、边界值、初始值、安全值及缺省值等价类组合检查，确保功能处理正确。",
            "系统应在任务持续时间超过规定时间时，确保Yg(k) = -Md3(k)功能的处理正确性。",
            "系统应对Yg(k) = -Md3(k)功能输出进行余度检查，确保在单个或全部余度故障时仍能正确实现功能。",
            "系统应在输入数据取值导致任务执行条件提前满足时，确保Yg(k) = -Md3(k)功能的处理正确性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 51,
        "requirement": "yg(k) = 0°",
        "original_safety_criterions": [
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性",
            "对不同余度的连续型输出数据取值进行检查，分析两个或多个余度输出数据“取值不一致，即取值之差超出规定阈值”等情况下，功能实现的正确性",
            "对不同余度的离散型输出数据取值进行检查，分析两个或多个余度输出数据“取值不一致”等情况下，功能实现的正确性",
            "对功能的数据处理过程进行检查，分析数据处理过程是否存在除0的情况",
            "针对各项任务的执行条件中的输入数据取值进行检查，分析输入数据取值使得任务执行条件提前满足时，功能处理的正确性"
        ],
        "safety_requirements": [
            "系统在存在两个或多个余度处于不同工作状态时，应检查目标状态参数yg(k) = 0°的功能实现正确性。",
            "系统应避免在数据处理过程中出现除以0的情况，特别是在计算yg(k) = 0°时需进行严格检查。",
            "系统应检查连续型余度输出数据，确保在取值之差超出规定阈值时，目标状态参数yg(k) = 0°的功能实现正确。",
            "系统应检查离散型余度输出数据，确保在取值不一致时，目标状态参数yg(k) = 0°的功能实现正确。",
            "系统应检查输入数据取值对任务执行条件的影响，确保当yg(k) = 0°时任务处理逻辑的正确性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 52,
        "requirement": "δp(k) = 100%",
        "original_safety_criterions": [
            "针对各项任务执行条件中的输入数据取值进行检查，分析输入数据取值始终未使得执行条件成立（即任务始终无法执行）时，功能处理的正确性",
            "对功能的循环判断条件进行检查，分析“循环判断条件恒假、恒真”等情况下功能处理的正确性",
            "对不同余度的接口数据进行检查，分析“单个余度故障、全部余度均故障（如数据异常、时序故障、通信故障、目的设备故障等）”情况下，功能实现的正确性",
            "针对各项任务的持续时间进行检查，分析任务持续时间小于规定时间等情况下，功能处理的正确性",
            "对功能的数据处理过程进行检查，分析数据处理过程是否存在除0的情况"
        ],
        "safety_requirements": [
            "系统应针对δp(k) = 100%任务的持续时间进行检查，确保任务持续时间小于规定时间时功能处理的正确性，并记录异常事件。",
            "系统应对δp(k) = 100%的循环判断条件进行实时监测，在‘条件恒假’或‘条件恒真’时触发错误处理机制并生成告警日志。",
            "系统应检查不同余度的接口数据，在单个余度故障或全部余度故障（数据异常、时序故障等）情况下仍保证δp(k) = 100%功能的正确实现。",
            "系统应对δp(k)的数据处理过程进行动态监控，检测并阻止除0运算，确保计算过程的安全性和稳定性。",
            "系统应验证舵偏角δp(k)输入数据的执行条件，在输入数据未触发执行条件时，按预设安全策略处理并记录事件信息。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 53,
        "requirement": "上下划线部分均限幅 [- XfSita, XfSita]",
        "original_safety_criterions": [
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "对功能的控制解算结果进行检查，分析控制解算结果为“正常值、异常值、边界值、极大极小值”等情况下功能处理的正确性",
            "各功能点控制逻辑之间的时序关系、约束关系、并发关系和组合关系是否正确",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统应检查不同余度的工作状态，在‘两个或多个余度处于不同状态’时，确保上下划线部分的限幅值 [- XfSita, XfSita] 功能正确执行，并通过多数表决机制进行状态同步。",
            "系统应验证所有相关功能点中限幅值 [- XfSita, XfSita] 应用的一致性，确保其时序关系、约束关系及并发逻辑符合设计要求。",
            "系统应对控制解算结果（包括正常值、异常值、边界值、极大极小值）进行实时检测，确保上下划线部分的限幅 [- XfSita, XfSita] 处理逻辑正确，并记录超限事件。",
            "系统应对限幅功能的逻辑判断条件及分支进行完整性测试，验证‘逻辑恒假、逻辑恒真、判断条件错误、分支遗漏’等异常场景下限幅处理的正确性，并触发错误恢复机制。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 54,
        "requirement": "hg 为给定高度，取自目标航路点高度",
        "original_safety_criterions": [
            "对不同余度的连续型输出数据取值进行检查，分析两个或多个余度输出数据“取值不一致，即取值之差超出规定阈值”等情况下，功能实现的正确性",
            "对不同余度的连续型接口数据取值进行检查，分析两个或多个余度接口数据“取值不一致，即取值之差超出规定阈值”等情况下，功能实现的正确性",
            "对不同余度的离散型输出数据取值进行检查，分析两个或多个余度输出数据“取值不一致”等情况下，功能实现的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统应对不同余度的连续型输出数据进行检查，当目标航路点高度hg的取值差值超出规定阈值时，确保功能实现正确性并触发告警机制。",
            "系统应对不同余度的离散型输出数据进行检查，当目标航路点高度hg的取值不一致时，自动执行纠错逻辑并记录异常状态。",
            "系统应对不同余度的连续型接口数据进行实时比对，当hg取值差值超过阈值时，锁定异常数据源并启用备用余度。",
            "系统应监测各余度工作状态，当目标航路点高度hg的余度状态不一致时，强制同步至多数一致状态并启动数据校正。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 55,
        "requirement": "ug 为定高时的给定空速，由飞机飞行性能计算得到，数据参见附录，并对边界点进行限幅",
        "original_safety_criterions": [
            "对不同余度的连续型接口数据取值进行检查，分析两个或多个余度接口数据“取值不一致，即取值之差超出规定阈值”等情况下，功能实现的正确性",
            "对不同余度的连续型输出数据取值进行检查，分析两个或多个余度输出数据“取值不一致，即取值之差超出规定阈值”等情况下，功能实现的正确性",
            "对不同余度的离散型输出数据取值进行检查，分析两个或多个余度输出数据“取值不一致”等情况下，功能实现的正确性",
            "各功能点控制逻辑之间的时序关系、约束关系、并发关系和组合关系是否正确",
            "对功能的控制解算结果进行检查，分析控制解算结果为“正常值、异常值、边界值、极大极小值”等情况下功能处理的正确性"
        ],
        "safety_requirements": [
            "系统应确保定高时的给定空速ug计算逻辑与边界点限幅处理的时序关系、约束关系、并发关系和组合关系正确。",
            "系统应对不同余度的连续型接口数据进行一致性检查，当余度数据之差超出规定阈值时，确保ug计算和限幅功能的正确性。",
            "系统应对不同余度的连续型输出数据进行一致性检查，当余度输出数据不一致超出阈值时，确保ug功能的正确实现。",
            "系统应验证ug控制解算结果在正常值、异常值、边界值、极大极小值情况下的处理逻辑正确性。",
            "系统应检查不同余度的离散型输出数据一致性，当余度数据取值不一致时，确保ug计算和限幅功能正确执行。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 56,
        "requirement": "δp 限幅处理：5000、6000、7000、8000 米高度缺省的最小节风门限幅值分别为：12.5%、27.5%、42.5%、57.5%，中间通过线性插值处理；最大节风门限幅为 100%",
        "original_safety_criterions": [
            "对接口数据的缺省值进行检查，分析“缺省值为值域范围外的异常值”等情况下输出的正确性",
            "对功能的多个输入数据进行检查，分析多个输入数据取值为“正常值等价类组合、异常值等价类组合、边界值组合、初始值组合、安全值组合、缺省值组合”等情况下功能处理的正确性",
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "对功能的控制解算结果进行检查，分析控制解算结果为“正常值、异常值、边界值、极大极小值”等情况下功能处理的正确性",
            "针对各项任务的执行条件中的输入数据取值进行检查，分析输入数据取值使得任务执行条件提前满足时，功能处理的正确性"
        ],
        "safety_requirements": [
            "系统应在任务执行条件输入数据取值提前满足时，验证δp限幅处理的正确性，确保5000、6000、7000、8000米高度对应的最小节风门限幅值（12.5%、27.5%、42.5%、57.5%）及线性插值处理逻辑的准确性，最大限幅为100%。",
            "系统应对δp限幅处理的缺省值进行异常值检查，包括值域范围外的异常缺省值，确保最小和最大节风门限幅值的输出正确性。",
            "系统应验证δp限幅处理的逻辑判断条件及分支（如逻辑恒假、恒真、条件错误、分支遗漏等），确保功能处理逻辑的完整性及正确性。",
            "系统应检查δp限幅处理结果的范围，涵盖正常值、异常值、边界值、极大极小值等情况，确保限幅输出符合预期。",
            "系统应针对δp限幅处理的多个输入数据组合（如正常/异常等价类、边界值、初始/安全/缺省值组合）进行验证，确保功能处理结果的正确性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 57,
        "requirement": "幅值可通过节风门微调量更改，5000 米以上，更改量为[0%， 40%]；5000 米以下，不能更改。",
        "original_safety_criterions": [
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "各功能点控制逻辑之间的时序关系、约束关系、并发关系和组合关系是否正确",
            "针对各项任务的持续时间进行检查，分析任务持续时间大于规定时间等情况下，功能处理的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统应在任务持续时间超过规定时间时，检查节风门微调量更改功能的处理逻辑，确保调整量保持在[0%，40%]范围内或禁止调整。",
            "系统应对不同余度的工作状态进行一致性检查，当检测到两个或多个余度处于不同状态时，应禁止幅值通过节风门微调量更改功能或触发安全容错机制。",
            "系统应严格校验高度参数，确保5000米以上时允许节风门微调量更改（[0%，40%]），5000米以下时强制禁用该功能，并验证控制逻辑的时序和约束关系。",
            "系统应对幅值调整逻辑的判断条件进行实时监控，检测逻辑恒假、恒真或条件错误等情况，并在异常时锁定节风门微调量更改功能。",
            "系统应对高度参数进行完整性校验，防止因输入数据错误导致节风门微调量在非安全高度被更改。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 58,
        "requirement": "Md2(k) = KhdI . Md1(k)，Md2(k)限幅[-XfSita, XfSita]",
        "original_safety_criterions": [
            "对不同余度的连续型输出数据取值进行检查，分析两个或多个余度输出数据“取值不一致，即取值之差超出规定阈值”等情况下，功能实现的正确性",
            "对不同余度的输出数据进行检查，分析“单个余度故障、多个余度均故障”情况下，功能实现的正确性",
            "对不同余度的离散型输出数据取值进行检查，分析两个或多个余度输出数据“取值不一致”等情况下，功能实现的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统应对不同余度的离散型输出数据进行检查，在‘取值不一致’情况下确保 Md2(k) = KhdI · Md1(k) 功能正确性，并严格限制 Md2(k) 在 [-XfSita, XfSita] 范围内。",
            "系统应对不同余度的连续型输出数据进行阈值检查，当余度数据差值超出规定阈值时，确保 Md2(k) = KhdI · Md1(k) 功能正确性，同时强制 Md2(k) 限幅 [-XfSita, XfSita]。",
            "系统在单个或多个余度故障时，应对输出数据进行冗余校验，确保 Md2(k) 计算的正确性并维持其限幅在 [-XfSita, XfSita] 范围内。",
            "系统应对不同余度的工作状态进行监测，当余度处于不同状态时，验证 Md2(k) = KhdI · Md1(k) 功能实现的正确性，并保证限幅约束有效。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 59,
        "requirement": "Md3(k) = Khd . [h(k) - hg(k)] + Md2(k)，Md3(k)限幅[-XfSita, XfSita]",
        "original_safety_criterions": [
            "对不同余度的接口数据进行检查，分析“单个余度故障、全部余度均故障（如数据异常、时序故障、通信故障、目的设备故障等）”情况下，功能实现的正确性",
            "对不同余度的输出数据进行检查，分析“单个余度故障、多个余度均故障”情况下，功能实现的正确性",
            "对不同余度接收到的同一输入数据取值进行检查，分析两个或多个余度接收到的同一输入数据取值不一致时，功能实现的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统应检查不同余度接收的同一输入数据取值一致性，当两个及以上余度取值不一致时，确保Md3(k) = Khd・[h(k)-hg(k)] + Md2(k)计算结果正确且限幅在[-XfSita, XfSita]范围内。",
            "系统应检查不同余度的工作状态一致性，当两个及以上余度处于不同状态时，确保Md3(k) = Khd・[h(k)-hg(k)] + Md2(k)功能实现正确且限幅在[-XfSita, XfSita]范围内。",
            "系统应监控余度接口数据状态，当出现单个余度故障或全部余度故障（数据异常、时序故障、通信故障、设备故障等）时，确保Md3(k)计算结果正确并严格限幅于[-XfSita, XfSita]区间。",
            "系统应验证余度输出数据完整性，当存在单个或多个余度输出故障时，强制Md3(k) = Khd・[h(k)-hg(k)] + Md2(k)计算结果符合限幅[-XfSita, XfSita]约束。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 60,
        "requirement": "Jg(k) = -Md3(k)",
        "original_safety_criterions": [
            "对功能的多个输入数据进行检查，分析多个输入数据取值为“正常值等价类组合、异常值等价类组合、边界值组合、初始值组合、安全值组合、缺省值组合”等情况下功能处理的正确性",
            "针对各项任务的持续时间进行检查，分析任务持续时间小于规定时间等情况下，功能处理的正确性",
            "针对各项任务的先后执行时序进行检查，分析任务执行时序与规定时序不一致时，功能处理的正确性",
            "针对各项任务的持续时间进行检查，分析任务持续时间大于规定时间等情况下，功能处理的正确性",
            "针对各项任务的执行条件中的输入数据取值进行检查，分析输入数据取值使得任务执行条件提前满足时，功能处理的正确性"
        ],
        "safety_requirements": [
            "系统应对输入数据进行正常值、异常值、边界值、初始值、安全值及缺省值组合的全面检查，确保 Jg(k) = -Md3(k) 功能处理的正确性。",
            "当任务持续时间超过规定时间时，系统应确保 Jg(k) = -Md3(k) 功能处理的正确性。",
            "当任务持续时间短于规定时间时，系统应确保 Jg(k) = -Md3(k) 功能处理的正确性。",
            "当输入数据取值导致任务执行条件提前满足时，系统应确保 Jg(k) = -Md3(k) 功能处理的正确性。",
            "当任务执行时序与规定时序不一致时，系统应确保 Jg(k) = -Md3(k) 功能处理的正确性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 61,
        "requirement": "当|DH|>50m时，飞行阶段由定高段向爬升2或者下降段转换",
        "original_safety_criterions": [
            "对两个或多个存在转移关系的状态下、设置了优先级的不同功能进行检查，分析“高优先级切换低优先级、低优先级切换高优先级”等情况下状态与功能的正确性",
            "对软件状态空间中两两状态之间的转移条件进行检查，分析转移条件“未设置、始终满足、无法满足”等情况下状态转移的正确性",
            "是否有基于回绕检测的故障处理，故障时状态上报策略是否合理？",
            "同一个状态与其他多个状态之间存在转移关系，对同一个状态向多个状态转移以及多个状态向同一个状态转移的条件进行检查，分析多个状态转移条件同时满足时状态转移的正确性",
            "两个或多个状态之间不存在转移关系，对这些状态的进入条件进行检查，分析进入条件“同时满足、状态执行过程中满足”等情况下状态执行的正确性"
        ],
        "safety_requirements": [
            "系统在飞行阶段由定高段向爬升2或下降段转换时，应检查状态转移条件（未设置、始终满足、无法满足等情况），确保状态转移逻辑正确且符合|DH|>50m的触发规则。",
            "当多个状态转移条件同时满足时（如|DH|>50m触发转换），系统应在定高段、爬升2和下降段之间进行优先级判定，确保状态转移的确定性。",
            "系统在|DH|>50m触发飞行阶段转换时，应依据预设的优先级逻辑（高优先级切换低优先级或反向），验证状态与功能的匹配性。",
            "系统应针对定高段向爬升2或下降段的转换过程，实现基于回绕检测的故障处理机制，并定义故障时的状态上报策略，确保|DH|>50m时的异常状态可追溯且可控。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 62,
        "requirement": "Md2(k) = Kp1I . Md1(k)，Md2(k)限幅[Xf, Xfx]",
        "original_safety_criterions": [
            "对不同余度的连续型接口数据取值进行检查，分析两个或多个余度接口数据“取值不一致，即取值之差超出规定阈值”等情况下，功能实现的正确性",
            "对不同余度的输出数据进行检查，分析“单个余度故障、多个余度均故障”情况下，功能实现的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性",
            "对不同余度的离散型接口数据取值进行检查，分析两个或多个余度接口数据“取值不一致”等情况下，功能实现的正确性",
            "对不同余度的连续型输出数据取值进行检查，分析两个或多个余度输出数据“取值不一致，即取值之差超出规定阈值”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统应在单个余度或多个余度故障时，检查输出数据并确保 Md2(k) = Kp1I · Md1(k) 功能正确实现，且 Md2(k) 限幅严格控制在 [Xf, Xfx] 范围内。",
            "系统应在两个或多个余度处于不同工作状态时，验证 Md2(k) = Kp1I · Md1(k) 功能逻辑的正确性，并确保 Md2(k) 限幅 [Xf, Xfx] 的准确性。",
            "系统应对连续型接口数据余度进行实时检查，当取值差异超过规定阈值时，确保 Md2(k) = Kp1I · Md1(k) 的正确性及限幅 [Xf, Xfx] 的有效性。",
            "系统应对离散型接口数据余度进行一致性检查，当取值不一致时，保证 Md2(k) = Kp1I · Md1(k) 的正确执行和限幅 [Xf, Xfx] 的准确应用。",
            "系统应对连续型输出数据余度进行阈值校验，当多个余度输出差异超出允许范围时，确保 Md2(k) = Kp1I · Md1(k) 功能正确且限幅 [Xf, Xfx] 不被突破。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 63,
        "requirement": "飞行在五边航线时的情况，纵向：以上下划线部分均限幅[-XfSita, XfSita]",
        "original_safety_criterions": [
            "对软件状态空间中两两状态之间的转移条件进行检查，分析转移条件“未设置、始终满足、无法满足”等情况下状态转移的正确性",
            "是否有基于回绕检测的故障处理，故障时状态上报策略是否合理？",
            "对状态进入条件进行检查，分析状态执行过程中进入条件“满足、不满足、再次满足”等情况下状态执行的正确性"
        ],
        "safety_requirements": [
            "系统在五边航线纵向状态转移时，应检查状态转移条件，确保在‘未设置、始终满足、无法满足’等条件下状态转移逻辑正确，且限幅范围[-XfSita, XfSita]被正确应用。",
            "系统应实现基于回绕检测的故障处理机制，故障时需准确上报纵向限幅[-XfSita, XfSita]等飞行状态参数，并验证上报策略的合理性。",
            "系统应对五边航线飞行状态的进入条件进行检查，确保在条件‘满足、不满足、再次满足’时状态执行逻辑正确，并维持限幅范围[-XfSita, XfSita]的有效性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 64,
        "requirement": "系统应能够计算并提供五边航线飞行高度 200m 的速度解算关系。",
        "original_safety_criterions": [
            "对功能的多个输入数据进行检查，分析多个输入数据取值为“正常值等价类组合、异常值等价类组合、边界值组合、初始值组合、安全值组合、缺省值组合”等情况下功能处理的正确性",
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "对功能的控制解算过程进行检查，分析控制解算过程出现超时（未在规定时间内返回结果）等情况下的功能处理正确性",
            "针对各项任务的先后执行时序进行检查，分析任务执行时序与规定时序不一致时，功能处理的正确性",
            "对功能的控制解算结果进行检查，分析控制解算结果为“正常值、异常值、边界值、极大极小值”等情况下功能处理的正确性"
        ],
        "safety_requirements": [
            "系统应对五边航线飞行高度200m的速度解算输入数据进行检查，确保在正常值、异常值、边界值、初始值、安全值和缺省值等组合情况下处理逻辑的正确性。",
            "系统应结合当前工作阶段和状态执行五边航线飞行高度200m的速度解算，并在未考虑工作阶段或状态时确保解算结果的正确性。",
            "系统应设定速度解算过程的时间阈值，超时未返回结果时触发异常处理机制并输出安全默认值。",
            "系统应对任务执行时序进行实时验证，当时序与规定不一致时确保速度解算关系的计算符合安全约束条件。",
            "系统应对五边航线飞行高度200m的速度解算结果进行校验，确保正常值、异常值、边界值及极大极小值的处理符合安全容错规则。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 65,
        "requirement": "系统应能够实现横侧向控制，与爬升 2 段相同。",
        "original_safety_criterions": [
            "对不同余度的执行时序进行检查，分析‘两个或多个余度执行时序未同步’等情况下，功能实现的正确性",
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析‘未考虑工作阶段、未考虑工作状态’等情况下功能处理的正确性",
            "对不同余度所处的工作状态进行检查，分析‘两个或多个余度处于不同状态’等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统应在不同工作阶段和状态下检查横侧向控制的输入，确保在‘未考虑工作阶段’或‘未考虑工作状态’时的解算过程正确性。",
            "系统应对不同余度的横侧向控制执行时序进行同步检查，确保在‘两个或多个余度执行时序未同步’时的功能实现正确。",
            "系统应检查不同余度的工作状态，确保在‘两个或多个余度处于不同状态’时的横侧向控制功能正确实现。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 66,
        "requirement": "系统应能够实现节风门空速闭环控制，其中给定空速 ug 由飞机飞行性能计算得到，数据参见附录的五边飞行速度。",
        "original_safety_criterions": [
            "对不同余度的接口数据进行检查，分析‘单个余度故障、全部余度均故障（如数据异常、时序故障、通信故障、目的设备故障等）’情况下，功能实现的正确性",
            "对不同余度所处的工作状态进行检查，分析‘两个或多个余度处于不同状态’等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统应对不同余度的接口数据进行检查，确保在发生‘单个余度故障’或‘全部余度故障’（如数据异常、时序故障、通信故障等）时，节风门空速闭环控制功能仍能正确执行。",
            "系统应检查不同余度的工作状态，在‘两个或多个余度处于不同状态’的情况下，通过动态裁决机制确保节风门空速闭环控制功能的正确性。",
            "系统应对飞机飞行性能计算得到的给定空速 ug 进行多源数据校验，确保其与附录五边飞行速度的一致性，防止异常输入导致控制失效。",
            "系统应在余度故障或状态冲突时触发容错处理流程，并记录故障信息以支持后续诊断及恢复。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 67,
        "requirement": "系统应能够实现离散化计算，包括 Md2(k)、Md3(k) 和 Jg(k) 的计算，并对 Md2(k) 和 Md3(k) 进行限幅处理。",
        "original_safety_criterions": [
            "对功能的多个输入数据进行检查，分析多个输入数据取值为“正常值等价类组合、异常值等价类组合、边界值组合、初始值组合、安全值组合、缺省值组合”等情况下功能处理的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性",
            "对不同余度的离散型输出数据取值进行检查，分析两个或多个余度输出数据“取值不一致”等情况下，功能实现的正确性",
            "对不同余度的离散型接口数据取值进行检查，分析两个或多个余度接口数据“取值不一致”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统应对离散化计算的输入数据（包括正常值、异常值、边界值、初始值、安全值、缺省值等组合）进行检查，确保 Md2(k)、Md3(k) 和 Jg(k) 的计算及限幅处理正确。",
            "系统在多个余度处于不同工作状态时，应验证离散化计算（包括 Md2(k)、Md3(k) 和 Jg(k) 的计算及限幅处理）的准确性。",
            "系统应对不同余度的离散型接口数据取值进行一致性检查，在出现‘取值不一致’时确保离散化计算（包括 Md2(k)、Md3(k) 和 Jg(k) 的计算及限幅处理）的正确性。",
            "系统应对不同余度的离散型输出数据取值进行一致性检查，在出现‘输出取值不一致’时确保离散化计算（包括 Md2(k)、Md3(k) 和 Jg(k) 的计算及限幅处理）的正确性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 68,
        "requirement": "系统应能够实现下降段的纵向控制，与爬升 1 段相同，其中给定空速 ug 由飞机飞行性能计算得到，并对边界点进行限幅。",
        "original_safety_criterions": [
            "对功能的控制解算结果进行检查，分析控制解算结果为‘正常值、异常值、边界值、极大极小值’等情况下功能处理的正确性",
            "对不同余度的接口数据进行检查，分析‘单个余度故障、全部余度均故障（如数据异常、时序故障、通信故障、目的设备故障等）’情况下，功能实现的正确性",
            "对不同余度所处的工作状态进行检查，分析‘两个或多个余度处于不同状态’等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统在下降段纵向控制解算时，应对空速 ug 的解算结果（包括正常值、异常值、边界值及极大极小值）进行检查，并确保边界点限幅处理的正确性。",
            "系统在下降段纵向控制中，应检查不同余度的工作状态，当两个或多个余度处于不同状态时，需确保控制功能输出的正确性和一致性。",
            "系统应对下降段纵向控制涉及的余度接口数据进行实时监测，在单个余度故障或全部余度故障（如数据异常、时序故障、通信故障等）情况下，采取容错或冗余切换措施保障控制功能实现。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 69,
        "requirement": "系统应能够实现下降段的横侧向控制，与爬升 2 段相同。",
        "original_safety_criterions": [
            "对不同余度的输出数据进行检查，分析“单个余度故障、多个余度均故障”情况下，功能实现的正确性",
            "系统进行控制的顺序和时序是否与硬件协调，控制条件是否完备且前后一致？",
            "对不同余度的执行时序进行检查，分析“两个或多个余度执行时序未同步”等情况下，功能实现的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统应对下降段横侧向控制的余度输出数据进行实时检查，确保在‘单个余度故障’或‘多个余度均故障’情况下控制功能实现的正确性。",
            "系统应检查不同余度的执行时序同步性，确保在‘两个或多个余度执行时序未同步’情况下，下降段横侧向控制功能仍能正确执行。",
            "系统在下降段横侧向控制过程中，应确保控制顺序、时序与硬件协调，并验证控制条件的完备性和前后一致性。",
            "系统应监控不同余度的工作状态，确保在‘两个或多个余度处于不同状态’情况下，下降段横侧向控制功能输出的正确性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 70,
        "requirement": "系统应能够实现定节风门控制，按最小节风门限幅值收节风门，该最小节风门限幅值可通过节风门微调量更改，其缺省值应按 5000、6000、7000、8000 米高度提供，中间通过线性插值处理。5000 米以上，下降时更改量为[-10%。",
        "original_safety_criterions": [
            "对接口数据的缺省值进行检查，分析“缺省值为值域范围外的异常值”等情况下输出的正确性",
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "对接口数据的缺省值进行检查，分析“未设置缺省值”等情况下输出的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统应对不同余度的工作状态进行检查，确保在‘两个或多个余度处于不同状态’时，定节风门控制功能的实现符合预期。",
            "系统应对定节风门控制的逻辑判断条件和逻辑分支进行完整性检查，防止‘逻辑恒假、逻辑恒真、判断条件错误或分支遗漏’导致功能异常。",
            "系统应验证最小节风门限幅值缺省值（5000、6000、7000、8000米高度）及其线性插值结果的正确性，并在缺省值超出值域范围时触发异常处理机制。",
            "系统应确保未设置缺省值时，定节风门控制逻辑仍能正确执行，特别是在5000米以上高度下降时更改量[-10%]的生效条件符合安全约束。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 71,
        "requirement": "飞行阶段确定功能需求：根据飞机的位置信息和运动参数信息自动确定当前飞行阶段。",
        "original_safety_criterions": [
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "可能与软件相关的系统安全性要求是否已经在软件需求或设计文档中得到充分且准确的实现？",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性",
            "针对各项任务的持续时间进行检查，分析任务持续时间大于规定时间等情况下，功能处理的正确性"
        ],
        "safety_requirements": [
            "系统应在余度工作状态不一致时，检查飞行阶段确定功能的输出，确保其逻辑判断正确且符合当前飞行阶段的实际状态。",
            "系统应对飞行阶段确定功能的逻辑判断条件及分支进行完整性验证，避免逻辑恒假、恒真、条件错误或分支遗漏导致的错误处理。",
            "系统需确保飞行阶段确定功能的相关安全性要求（包括多飞行阶段控制解算差异）在软件需求及设计文档中明确实现并验证。",
            "系统在不同飞行阶段执行控制解算时，应对输入参数进行动态检查，确保已准确关联当前飞行阶段和飞行状态参数。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 72,
        "requirement": "地面等待阶段：在起飞前和完全着陆后，飞机处于停机状态。",
        "original_safety_criterions": [
            "两个或多个状态之间不存在转移关系，对这些状态的进入条件进行检查，分析进入条件“同时满足、状态执行过程中满足”等情况下状态执行的正确性",
            "对软件状态空间中两两状态之间的转移条件进行检查，分析转移条件“未设置、始终满足、无法满足”等情况下状态转移的正确性",
            "各模态的进入条件和退出条件是否一致？",
            "对状态进入条件进行检查，分析状态执行过程中进入条件“满足、不满足、再次满足”等情况下状态执行的正确性"
        ],
        "safety_requirements": [
            "系统应在地面等待阶段的状态转移时，检查两两状态之间的转移条件是否被正确设置，确保在‘未设置、始终满足、无法满足’情况下状态转移的正确性。",
            "系统应对地面等待阶段中无转移关系的状态进行进入条件检查，确保在‘同时满足、状态执行过程中满足’情况下状态的正确执行。",
            "系统应在地面等待阶段的状态执行过程中持续监控进入条件，确保在条件‘满足、不满足、再次满足’时状态执行逻辑的正确性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 73,
        "requirement": "起飞地面段（起飞滑跑段）：通过左右差动刹车和偏转方向舵控制飞机相对跑道中线的侧偏距及偏航角，纵向按给定俯仰角控制飞机。",
        "original_safety_criterions": [
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "针对各项任务的先后执行时序进行检查，分析任务执行时序与规定时序不一致时，功能处理的正确性",
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统在起飞地面段（起飞滑跑段）应检查任务执行时序，确保与规定时序不一致时，左右差动刹车、方向舵偏转及纵向俯仰角控制的功能处理正确。",
            "系统在起飞地面段（起飞滑跑段）应对功能输入进行工作阶段和状态检查，确保未考虑相关因素时，侧偏距、偏航角及俯仰角控制的解算过程准确。",
            "系统应检查起飞地面段（起飞滑跑段）中不同余度的工作状态，当两个或多个余度处于不同状态时，确保侧偏距、偏航角及俯仰角控制的实现正确。",
            "系统应对起飞地面段（起飞滑跑段）的逻辑判断条件及分支进行检查，确保逻辑恒假、恒真、判断错误或分支遗漏时，控制功能的处理符合安全要求。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 74,
        "requirement": "起飞离地段：从高度和空速达到一定值到安全高度，主要控制飞机以一定的俯仰角爬升。",
        "original_safety_criterions": [
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "针对各项任务的先后执行时序进行检查，分析任务执行时序与规定时序不一致时，功能处理的正确性",
            "对功能的控制解算结果进行检查，分析控制解算结果为“正常值、异常值、边界值、极大极小值”等情况下功能处理的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统在起飞离地段应对控制解算结果进行实时检查，确保‘正常值、异常值、边界值、极大极小值’等情况下飞机俯仰角爬升控制的正确性。",
            "系统应验证起飞离地段逻辑判断条件和分支的完备性，确保‘逻辑恒假、逻辑恒真、逻辑条件错误、分支遗漏’等情况发生时控制逻辑处理的正确性。",
            "系统在检测到两个及以上余度处于不同工作状态时，应确保起飞离地段俯仰角爬升功能的正确执行，并触发状态同步机制。",
            "系统应监控起飞离地段任务的执行时序，当任务时序与规定不一致时，立即启用纠错机制以保证俯仰角爬升控制的准确性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 75,
        "requirement": "爬升1段：从安全高度（80m）开始到襟翼收起的阶段，主要控制飞机继续爬升，纵向转为空速控制，依次收起落架和襟翼。",
        "original_safety_criterions": [
            "对功能的控制解算结果进行检查，分析控制解算结果为‘正常值、异常值、边界值、极大极小值’等情况下功能处理的正确性",
            "针对各项任务的先后执行时序进行检查，分析任务执行时序与规定时序不一致时，功能处理的正确性",
            "对不同余度所处的工作状态进行检查，分析‘两个或多个余度处于不同状态’等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统在爬升1段时，应对不同余度的工作状态进行检查，当两个或多个余度处于不同状态时，确保飞机继续爬升、纵向转为空速控制并正确依次收起落架和襟翼的功能实现。",
            "系统应检查爬升1段的控制解算结果（包括正常值、异常值、边界值、极大极小值等），确保在各类情况下功能处理的正确性，并维持从安全高度（80m）到襟翼收起阶段的控制稳定性。",
            "系统应验证爬升1段任务的执行时序，当检测到任务时序与规定时序不一致时，自动触发修正机制以确保起飞架和襟翼收起的顺序符合安全操作要求。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 76,
        "requirement": "爬升2段：从襟翼收起到高度达到要求的巡航高度，或者从一个高度爬到另一个较高的高度，纵向按给定的空速控制，横侧向控制飞机使飞机沿着预先装订的航线飞行。",
        "original_safety_criterions": [
            "两个或多个状态之间不存在转移关系，对这些状态的进入条件进行检查，分析进入条件“同时满足、状态执行过程中满足”等情况下状态执行的正确性",
            "对两个或多个存在转移关系的状态下、设置了优先级的不同功能进行检查，分析“高优先级切换低优先级、低优先级切换高优先级”等情况下状态与功能的正确性",
            "对软件状态空间中两两状态之间的转移条件进行检查，分析转移条件“未设置、始终满足、无法满足”等情况下状态转移的正确性",
            "对状态进入条件进行检查，分析状态执行过程中进入条件“满足、不满足、再次满足”等情况下状态执行的正确性"
        ],
        "safety_requirements": [
            "系统在爬升2段状态转移时，应检查两两状态间的转移条件，确保‘未设置、始终满足、无法满足’情况下状态转移逻辑正确，且纵向空速控制与横侧航线跟踪功能正常。",
            "系统应对爬升2段状态的进入条件进行检查，分析执行过程中进入条件‘满足、不满足、再次满足’时的状态执行正确性，确保巡航高度或指定高度爬升过程符合预设参数。",
            "系统应验证爬升2段与其他状态（如襟翼收起至巡航高度、低高度至高高度爬升）的转移逻辑，确保航线飞行控制与空速控制的匹配性及功能正确性。",
            "系统在爬升2段中，应对无转移关系的状态进行进入条件检查，分析‘同时满足、执行过程中满足’等情况，确保纵向与横侧控制指令不冲突且符合安全阈值。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 77,
        "requirement": "定高阶段：纵向控制飞机的高度和空速，横侧向进行侧偏距控制，使飞机按要求的高度和空速飞行。",
        "original_safety_criterions": [
            "对状态进入条件进行检查，分析状态执行过程中进入条件“满足、不满足、再次满足”等情况下状态执行的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统在定高阶段应检查各余度工作状态，当两个或多个余度处于不同状态时，确保纵向高度、空速控制和横侧向侧偏距控制功能的正确性。",
            "系统在定高阶段应检查进入条件，确保状态执行过程中因条件满足、不满足或再次满足导致的变化不影响飞行高度、空速及侧偏距控制的准确性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 78,
        "requirement": "在 5000 米以下下降时，节风门限幅为不小于 6%，且更改量为[-6.5%，10%]。",
        "original_safety_criterions": [
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "对功能的控制解算结果进行检查，分析控制解算结果为“正常值、异常值、边界值、极大极小值”等情况下功能处理的正确性"
        ],
        "safety_requirements": [
            "系统应对节风门限幅的逻辑判断条件和逻辑分支进行检查，确保在‘逻辑恒假、逻辑恒真、判断条件错误、分支遗漏’等情况下，功能处理正确并符合限幅不小于6%且更改量为[-6.5%，10%]的要求。",
            "系统应对节风门限幅的控制解算结果进行检查，确保在‘正常值、异常值、边界值、极大极小值’等情况下，解算结果正确且始终处于[-6.5%，10%]范围内，同时限幅值不低于6%。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 79,
        "requirement": "飞机穿越 5000 米高度时，将节风门微调量以 5%/s 的速度线性减至零。",
        "original_safety_criterions": [
            "对软件状态空间中两两状态之间的转移条件进行检查，分析转移条件“未设置、始终满足、无法满足”等情况下状态转移的正确性",
            "是否有基于回绕检测的故障处理，故障时状态上报策略是否合理？",
            "对状态进入条件进行检查，分析状态执行过程中进入条件“满足、不满足、再次满足”等情况下状态执行的正确性",
            "下发危险的控制指令或动作时，是否有依据设备状态进行合理性判断？",
            "对功能的数据处理过程进行检查，分析数据处理过程是否存在除0的情况"
        ],
        "safety_requirements": [
            "系统在飞机穿越5000米高度时，应基于回绕检测机制执行故障处理，并确保节风门微调量线性减至零的状态上报策略符合安全要求。",
            "系统应对进入节风门微调量调整状态的条件进行检查，验证当条件‘满足、不满足、再次满足’时，节风门以5%/s速度线性减至零的执行正确性。",
            "系统下发节风门控制指令时，应根据飞机高度（如5000米）进行合理性判断，避免危险操作。",
            "系统需验证状态转移条件（未设置、始终满足、无法满足）的正确性，确保飞机穿越5000米高度时，节风门微调量调整条件及执行过程无误。",
            "系统应对节风门微调量的数据处理过程进行动态检查，排除除0操作风险，确保计算稳定性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 80,
        "requirement": "下滑 1 段纵向控制与五边定高相同，给定高度参见第六分册的下滑线处理部分。",
        "original_safety_criterions": [
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "对功能的控制解算过程进行检查，分析控制解算过程出现超时（未在规定时间内返回结果）等情况下的功能处理正确性"
        ],
        "safety_requirements": [
            "系统应检查下滑1段纵向控制与五边定高相同的功能逻辑判断条件，确保在‘逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏’情况下处理逻辑的正确性。",
            "系统应在检测到逻辑判断条件异常时触发预警机制，并保持当前安全飞行状态直至逻辑条件恢复正确。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 81,
        "requirement": "下滑 1 段横侧向控制与爬升 2 段相同。",
        "original_safety_criterions": [
            "针对各项任务的先后执行时序进行检查，分析任务执行时序与规定时序不一致时，功能处理的正确性",
            "对不同余度所处的工作状态进行检查，分析‘两个或多个余度处于不同状态’等情况下，功能实现的正确性",
            "对功能的循环判断条件进行检查，分析‘循环判断条件恒假、恒真’等情况下功能处理的正确性"
        ],
        "safety_requirements": [
            "系统应检查下滑1段横侧向控制与爬升2段的余度工作状态，确保在‘两个或多个余度处于不同状态’时，控制功能实现的正确性。",
            "系统应验证任务执行时序与规定时序的一致性，当横侧向控制与爬升控制的时序出现偏差时，触发纠错机制以确保功能处理正确。",
            "系统应对横侧向控制与爬升功能的循环判断条件进行实时监测，确保在‘条件恒假’或‘恒真’情况下仍能正确处理控制逻辑。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 82,
        "requirement": "下滑 1 段节风门空速闭环控制公式为 δp = Kp (vg - vk)，δp 限幅 [12.5%，100%]，给定空速参见附录的下滑速度。",
        "original_safety_criterions": [
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "对功能的循环判断条件进行检查，分析“循环判断条件恒假、恒真”等情况下功能处理的正确性",
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "对功能的控制解算结果进行检查，分析控制解算结果为“正常值、异常值、边界值、极大极小值”等情况下功能处理的正确性",
            "各功能点控制逻辑之间的时序关系、约束关系、并发关系和组合关系是否正确"
        ],
        "safety_requirements": [
            "系统应对下滑 1 段节风门空速闭环控制公式 δp = Kp (vg - vk) 的逻辑判断条件和分支进行检查，确保在‘逻辑恒假、恒真、判断条件错误或分支遗漏’情况下功能处理的正确性。",
            "系统在不同工作阶段及状态下应对空速参数（vg, vk）进行有效性检查，确保控制解算过程考虑当前工作阶段及状态的约束条件。",
            "系统应对节风门控制解算结果 δp 进行实时监测，确保对‘正常值、异常值、边界值、极大极小值’采取预设处理策略，并强制 δp 限幅在 [12.5%，100%] 范围内。",
            "系统应验证控制公式的时序关系、约束关系及组合逻辑的正确性，确保 δp 计算结果严格遵循 [12.5%，100%] 的限幅约束。",
            "系统应对控制公式中的循环判断条件进行动态检测，防止‘循环条件恒假或恒真’导致的解算逻辑失效。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 83,
        "requirement": "下滑 2 段纵向控制与下滑 1 段相同。",
        "original_safety_criterions": [
            "针对各项任务的先后执行时序进行检查，分析任务执行时序与规定时序不一致时，功能处理的正确性",
            "针对各项任务的持续时间进行检查，分析任务持续时间大于规定时间等情况下，功能处理的正确性",
            "针对各项任务的持续时间进行检查，分析任务持续时间小于规定时间等情况下，功能处理的正确性"
        ],
        "safety_requirements": [
            "系统应检查下滑2段纵向控制任务的持续时间，在任务持续时间小于规定时间时，确保其处理逻辑与下滑1段一致，并验证输出结果的正确性。",
            "系统应检查下滑2段纵向控制任务的持续时间，在任务持续时间大于规定时间时，确保其处理逻辑与下滑1段一致，并验证输出结果的正确性。",
            "系统应监测下滑2段纵向控制任务的执行时序，在时序与规定时序不一致时，强制修正处理流程并验证功能逻辑的完整性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 84,
        "requirement": "下滑 2 段横侧向滚转控制结构见图 3-6，航向控制公式为 yg = - (Kyz .Δy + KyzI∫ Kys .Δydt + Kyzd . wy)，其中下划线处限幅 [- XfFxd , XfFxd]。",
        "original_safety_criterions": [
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "对功能的控制解算结果进行检查，分析控制解算结果为“正常值、异常值、边界值、极大极小值”等情况下功能处理的正确性",
            "各功能点控制逻辑之间的时序关系、约束关系、并发关系和组合关系是否正确",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统应对航向控制公式 yg = - (Kyz .Δy + KyzI∫ Kys .Δydt + Kyzd . wy) 的解算结果进行实时检查，确保输出值在限幅范围 [- XfFxd , XfFxd] 内，并处理‘正常值、异常值、边界值、极大极小值’等情况的正确性。",
            "系统应验证航向控制公式的逻辑判断条件和逻辑分支，确保逻辑无恒假、恒真、判断条件错误或分支遗漏，并保证限幅 [- XfFxd , XfFxd] 的正确应用。",
            "系统应检查下滑2段横侧向滚转控制结构内各功能点的时序、约束、并发及组合关系，确保航向控制公式 yg = - (Kyz .Δy + KyzI∫ Kys .Δydt + Kyzd . wy) 的执行逻辑符合设计要求。",
            "系统在多个余度处于不同工作状态时，应确保航向控制公式 yg = - (Kyz .Δy + KyzI∫ Kys .Δydt + Kyzd . wy) 的输出仍遵循限幅 [- XfFxd , XfFxd]，并保持控制解算的完整性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 85,
        "requirement": "下滑 2 段节风门空速闭环控制与下滑 1 段相同。",
        "original_safety_criterions": [
            "故障项的检测逻辑是否合理，检测方式是否会对设备正常工作产生影响？"
        ],
        "safety_requirements": [
            "系统应验证故障检测逻辑的合理性，并确保检测方式不会对下滑2段节风门空速闭环控制的正常工作产生干扰。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 86,
        "requirement": "离散化公式为 Md2(k) = KxzI . Md1(k)，Md2(k) 限幅 [- XfGama / 0.6, + XfGama]。",
        "original_safety_criterions": [
            "对不同余度的输出数据进行检查，分析“单个余度故障、多个余度均故障”情况下，功能实现的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性",
            "对不同余度的离散型输出数据取值进行检查，分析两个或多个余度输出数据“取值不一致”等情况下，功能实现的正确性",
            "对不同余度的离散型接口数据取值进行检查，分析两个或多个余度接口数据“取值不一致”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统在检测到两个或多个余度处于不同工作状态时，应对离散化公式 Md2(k) = KxzI·Md1(k) 进行正确性验证，并确保 Md2(k) 限幅在 [-XfGama/0.6, +XfGama] 范围内。",
            "系统应对不同余度的离散型接口数据取值进行检查，当出现两个或多个余度接口数据不一致时，确保离散化公式 Md2(k) = KxzI·Md1(k) 的计算正确，且 Md2(k) 限幅在 [-XfGama/0.6, +XfGama] 范围内。",
            "系统应对不同余度的离散型输出数据取值进行检查，当两个或多个余度输出数据不一致时，验证离散化公式 Md2(k) = KxzI·Md1(k) 的正确性，并保证 Md2(k) 限幅符合 [-XfGama/0.6, +XfGama] 的要求。",
            "系统在发生单个或多个余度故障时，应检查离散化公式 Md2(k) = KxzI·Md1(k) 的输出限幅，确保其严格限定在 [-XfGama/0.6, +XfGama] 范围内。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 87,
        "requirement": "计算 Md3(k) = Kxz * Dz(k)",
        "original_safety_criterions": [
            "对不同余度的输出数据进行检查，分析“单个余度故障、多个余度均故障”情况下，功能实现的正确性",
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "针对各项任务的执行条件中的输入数据取值进行检查，分析输入数据取值使得任务执行条件延迟满足时，功能处理的正确性",
            "针对各项任务的持续时间进行检查，分析任务持续时间大于规定时间等情况下，功能处理的正确性",
            "针对各项任务的执行条件中的输入数据取值进行检查，分析输入数据取值使得任务执行条件提前满足时，功能处理的正确性"
        ],
        "safety_requirements": [
            "系统应检查计算 Md3(k) = Kxz * Dz(k) 的任务持续时间，确保在持续时间大于规定时间时计算结果正确。",
            "系统应检查输入数据取值是否使任务执行条件提前满足，并确保计算 Md3(k) = Kxz * Dz(k) 的功能处理正确。",
            "系统应检查逻辑判断条件及分支，确保在逻辑恒假、恒真、判断错误或分支遗漏时，Md3(k) = Kxz * Dz(k) 计算正确。",
            "系统应检查不同余度的输出数据，在单个或多个余度故障时，确保 Md3(k) = Kxz * Dz(k) 计算结果正确。",
            "系统应检查输入数据取值是否使任务执行条件延迟满足，并确保计算 Md3(k) = Kxz * Dz(k) 的功能处理正确。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 88,
        "requirement": "计算 Md4(k) = Md2(k) + Md3(k) + Kxzd * Dz(k)",
        "original_safety_criterions": [
            "对不同余度的输出数据进行检查，分析“单个余度故障、多个余度均故障”情况下，功能实现的正确性",
            "对功能的多个输入数据进行检查，分析多个输入数据取值为“正常值等价类组合、异常值等价类组合、边界值组合、初始值组合、安全值组合、缺省值组合”等情况下功能处理的正确性",
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "针对各项任务的执行条件中的输入数据取值进行检查，分析输入数据取值使得任务执行条件延迟满足时，功能处理的正确性",
            "针对各项任务的执行条件中的输入数据取值进行检查，分析输入数据取值使得任务执行条件提前满足时，功能处理的正确性"
        ],
        "safety_requirements": [
            "系统应对 Md4(k) 的输入数据（Md2(k)、Md3(k)、Kxzd、Dz(k)）进行取值检查，确保在任务执行条件延迟满足时计算结果的正确性。",
            "系统应对 Md4(k) 的计算逻辑进行条件验证，排除逻辑恒假、恒真、判断条件错误或分支遗漏等异常情况下的计算错误。",
            "系统应在 Md4(k) 输入数据为正常值/异常值/边界值/初始值/安全值/缺省值组合时，执行等价类及边界值验证，保证计算结果符合预期。",
            "系统应对 Md4(k) 的输出数据余度进行监测，在单个余度或全部余度故障时保持计算过程的有效性和结果可靠性。",
            "系统应检查 Md4(k) 输入数据导致任务执行条件提前满足的情形，确保功能处理逻辑的时序正确性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 89,
        "requirement": "对 Md5(k) 进行限幅处理，限幅范围为 [-XfGama, XfGama]",
        "original_safety_criterions": [
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "对功能的循环判断条件进行检查，分析“循环判断条件恒假、恒真”等情况下功能处理的正确性",
            "对功能的控制解算结果进行检查，分析控制解算结果为“正常值、异常值、边界值、极大极小值”等情况下功能处理的正确性",
            "对功能的控制解算过程进行检查，分析控制解算过程出现超时（未在规定时间内返回结果）等情况下的功能处理正确性"
        ],
        "safety_requirements": [
            "系统应对 Md5(k) 限幅处理的循环判断条件进行检查，确保在‘条件恒假’或‘条件恒真’情况下仍能正确执行限幅处理。",
            "系统应确保 Md5(k) 的限幅处理在规定时间内完成，超时情况下应触发超时处理机制并返回正确结果。",
            "系统应检查 Md5(k) 限幅处理的逻辑判断条件和分支，确保在‘逻辑恒假’、‘逻辑恒真’、‘条件错误’或‘分支遗漏’时处理正确。",
            "系统应对 Md5(k) 限幅处理结果进行验证，确保在‘正常值’、‘异常值’、‘边界值’或‘极大极小值’情况下处理正确。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 90,
        "requirement": "计算 yg(k) = -Md5(k)",
        "original_safety_criterions": [
            "对不同余度的输出数据进行检查，分析“单个余度故障、多个余度均故障”情况下，功能实现的正确性",
            "对功能的多个输入数据进行检查，分析多个输入数据取值为“正常值等价类组合、异常值等价类组合、边界值组合、初始值组合、安全值组合、缺省值组合”等情况下功能处理的正确性",
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "针对各项任务的执行条件中的输入数据取值进行检查，分析输入数据取值使得任务执行条件延迟满足时，功能处理的正确性",
            "针对各项任务的执行条件中的输入数据取值进行检查，分析输入数据取值使得任务执行条件提前满足时，功能处理的正确性"
        ],
        "safety_requirements": [
            "系统应对计算 yg(k) = -Md5(k) 的逻辑判断条件进行全面检查，确保逻辑恒假、逻辑恒真、判断条件错误或分支遗漏场景下功能处理的正确性。",
            "系统应验证计算 yg(k) = -Md5(k) 时输入数据在正常值等价类组合、异常值组合、边界值组合、初始值组合、安全值组合、缺省值组合下的计算结果正确性。",
            "系统应确保当输入数据导致计算 yg(k) = -Md5(k) 的任务执行条件延迟满足时，功能处理逻辑仍能保持正确性。",
            "系统应检测输出数据余度状态（单个余度故障/多余度故障），并在所有余度故障场景下保持计算 yg(k) = -Md5(k) 的正确性。",
            "系统应确保当输入数据导致计算 yg(k) = -Md5(k) 的任务执行条件提前满足时，功能处理逻辑的正确性和时序有效性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 91,
        "requirement": "计算 Md2(k) = KyzI * Md1(k)",
        "original_safety_criterions": [
            "对不同余度的输出数据进行检查，分析“单个余度故障、多个余度均故障”情况下，功能实现的正确性",
            "对功能的多个输入数据进行检查，分析多个输入数据取值为“正常值等价类组合、异常值等价类组合、边界值组合、初始值组合、安全值组合、缺省值组合”等情况下功能处理的正确性",
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "针对各项任务的执行条件中的输入数据取值进行检查，分析输入数据取值使得任务执行条件延迟满足时，功能处理的正确性",
            "针对各项任务的执行条件中的输入数据取值进行检查，分析输入数据取值使得任务执行条件提前满足时，功能处理的正确性"
        ],
        "safety_requirements": [
            "系统在执行 Md2(k) = KyzI * Md1(k) 计算前，应检查输入数据取值，确保任务执行条件延迟满足时功能处理的正确性。",
            "系统应对 Md2(k) = KyzI * Md1(k) 的输入数据进行多场景校验，包括正常值、异常值、边界值、初始值、安全值及缺省值组合，确保计算逻辑的鲁棒性。",
            "系统应验证 Md2(k) = KyzI * Md1(k) 的逻辑判断条件，识别并处理逻辑恒假、恒真、条件错误或分支遗漏等异常情况，确保分支完整性。",
            "系统在计算 Md2(k) = KyzI * Md1(k) 时，应对不同余度输出进行故障检测，确保单个或全部余度故障情况下计算结果的正确性和容错能力。",
            "系统应监控 Md2(k) = KyzI * Md1(k) 的任务执行条件，检查输入数据取值导致条件提前满足的情况，并保证功能处理流程的准确性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 92,
        "requirement": "对 Md2(k) 进行限幅处理，限幅范围为 [-XfFxd, XfFxd]",
        "original_safety_criterions": [
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "对功能的循环判断条件进行检查，分析“循环判断条件恒假、恒真”等情况下功能处理的正确性",
            "对功能的控制解算过程进行检查，分析控制解算过程出现超时（未在规定时间内返回结果）等情况下的功能处理正确性",
            "各功能点控制逻辑之间的时序关系、约束关系、并发关系和组合关系是否正确",
            "对功能的控制解算结果进行检查，分析控制解算结果为“正常值、异常值、边界值、极大极小值”等情况下功能处理的正确性"
        ],
        "safety_requirements": [
            "系统应检查 Md2(k) 限幅处理的逻辑判断条件及分支，确保在逻辑恒假、恒真、条件错误或分支遗漏时，限幅范围严格限制在 [-XfFxd, XfFxd] 内。",
            "系统应验证 Md2(k) 限幅处理的循环判断条件，确保在循环条件恒假或恒真情况下，限幅逻辑正确执行且结果符合预期。",
            "系统应确保 Md2(k) 限幅处理的控制逻辑与其他功能点的时序关系、约束关系、并发关系和组合关系正确，避免逻辑冲突。",
            "系统应对 Md2(k) 限幅处理结果进行实时检查，确保正常值、异常值、边界值及极大极小值均被正确处理，并维持输出在有效范围内。",
            "系统应监控 Md2(k) 控制解算过程的执行时间，在超时情况下触发容错机制，确保功能处理的正确性和系统安全状态。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 93,
        "requirement": "计算 Md3(k) = Kyz * Δy(k) + Md2(k) + Kyzd * wy(k)",
        "original_safety_criterions": [
            "对不同余度的输出数据进行检查，分析“单个余度故障、多个余度均故障”情况下，功能实现的正确性",
            "对功能的多个输入数据进行检查，分析多个输入数据取值为“正常值等价类组合、异常值等价类组合、边界值组合、初始值组合、安全值组合、缺省值组合”等情况下功能处理的正确性",
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "对功能的控制解算结果进行检查，分析控制解算结果为“正常值、异常值、边界值、极大极小值”等情况下功能处理的正确性",
            "针对各项任务的执行条件中的输入数据取值进行检查，分析输入数据取值使得任务执行条件提前满足时，功能处理的正确性"
        ],
        "safety_requirements": [
            "系统应对计算 Md3(k) 的输入数据（Kyz, Δy(k), Md2(k), Kyzd, wy(k)）进行多场景检查，包括正常值、异常值、边界值、初始值、安全值和缺省值等价类组合，确保计算结果正确。",
            "系统应验证控制解算结果为正常值、异常值、边界值或极大极小值时，Md3(k) = Kyz * Δy(k) + Md2(k) + Kyzd * wy(k) 的准确性。",
            "系统应在任务执行条件的输入数据提前满足时，检查 Md3(k) 计算逻辑的功能处理正确性。",
            "系统应对不同余度输出数据进行监控，确保在单个或多个余度故障时，Md3(k) 计算结果仍符合预期。",
            "系统应检查 Md3(k) 计算逻辑的条件和分支，覆盖逻辑恒假、恒真、判断条件错误及分支遗漏等情况，保证功能处理正确。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 94,
        "requirement": "对 Md3(k) 进行限幅处理，限幅范围为 [-XfFxd, XfFxd]",
        "original_safety_criterions": [
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "对功能的循环判断条件进行检查，分析“循环判断条件恒假、恒真”等情况下功能处理的正确性",
            "各功能点控制逻辑之间的时序关系、约束关系、并发关系和组合关系是否正确",
            "对功能的控制解算结果进行检查，分析控制解算结果为“正常值、异常值、边界值、极大极小值”等情况下功能处理的正确性",
            "对功能的执行条件进行检查，分析功能执行过程中执行条件“不满足、再次满足”等情况下功能处理的正确性"
        ],
        "safety_requirements": [
            "系统应对限幅处理的循环判断条件进行检查，确保在‘条件恒假、恒真’情况下 Md3(k) 的限幅处理逻辑正确执行，范围保持在 [-XfFxd, XfFxd]。",
            "系统应验证 Md3(k) 限幅处理的逻辑判断条件和分支，覆盖‘逻辑恒假、恒真、判断条件错误、分支遗漏’等场景，确保处理结果正确。",
            "系统应检查 Md3(k) 限幅处理范围 [-XfFxd, XfFxd] 与其他功能点控制逻辑的时序、约束、并发及组合关系，确保交互正确性。",
            "系统需在限幅条件‘不满足’或‘再次满足’时，触发正确的处理逻辑，并验证限幅结果的准确性。",
            "系统应对 Md3(k) 限幅处理结果进行验证，涵盖‘正常值、异常值、边界值、极大极小值’等场景，确保输出符合预期。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 95,
        "requirement": "计算 yg(k) = -Md3(k)",
        "original_safety_criterions": [
            "对不同余度的输出数据进行检查，分析“单个余度故障、多个余度均故障”情况下，功能实现的正确性",
            "对功能的多个输入数据进行检查，分析多个输入数据取值为“正常值等价类组合、异常值等价类组合、边界值组合、初始值组合、安全值组合、缺省值组合”等情况下功能处理的正确性",
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "针对各项任务的执行条件中的输入数据取值进行检查，分析输入数据取值使得任务执行条件延迟满足时，功能处理的正确性",
            "针对各项任务的执行条件中的输入数据取值进行检查，分析输入数据取值使得任务执行条件提前满足时，功能处理的正确性"
        ],
        "safety_requirements": [
            "系统应在计算 yg(k) = -Md3(k) 时，检查任务执行条件的输入数据取值，确保输入数据使任务执行条件提前或延迟满足情况下功能处理的正确性。",
            "系统应对计算 yg(k) = -Md3(k) 的输入数据进行等价类组合验证，覆盖正常值、异常值、边界值、初始值、安全值及缺省值组合场景的计算准确性。",
            "系统应对计算 yg(k) = -Md3(k) 的逻辑判断条件进行完整性检查，确保逻辑恒假、恒真、条件错误或分支遗漏等异常情况下仍能正确处理。",
            "系统应通过余度设计检测计算 yg(k) = -Md3(k) 的输出数据，在单个或多个余度故障时保持计算结果的正确性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 96,
        "requirement": "在拉平段纵向控制中，计算 h& 为经过惯导垂直加速度补偿后的无线电高度表升降速度",
        "original_safety_criterions": [
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "对不同余度的连续型输出数据取值进行检查，分析两个或多个余度输出数据“取值不一致，即取值之差超出规定阈值”等情况下，功能实现的正确性",
            "对功能的控制解算过程进行检查，分析控制解算过程出现超时（未在规定时间内返回结果）等情况下的功能处理正确性",
            "对功能的控制解算结果进行检查，分析控制解算结果为“正常值、异常值、边界值、极大极小值”等情况下功能处理的正确性"
        ],
        "safety_requirements": [
            "系统在拉平段纵向控制中计算 h& 时，应对逻辑判断条件和分支进行检查，确保‘逻辑恒假、逻辑恒真、条件错误、分支遗漏’等情况下的处理正确性。",
            "系统应对拉平段纵向控制的解算结果进行检查，确保解算结果为‘正常值、异常值、边界值、极大极小值’时的处理正确性，并验证 h& 的合理性。",
            "系统应监控拉平段纵向控制的解算过程，在解算超时（未在规定时间内返回结果）时触发预设的安全处理机制。",
            "系统在计算 h& 时，应根据当前飞行阶段和状态检查功能输入，确保‘未考虑工作阶段’或‘未考虑工作状态’等情况下的纵向控制计算结果正确。",
            "系统应对不同余度的连续型输出数据进行实时一致性检查，当余度数据差值超出规定阈值时，标记异常并确保 h& 计算结果的正确性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 97,
        "requirement": "在拉平段纵向控制中，计算 vyg 为给定升降速度，vyg = vyt + (h - ht)(vyf - vyt)",
        "original_safety_criterions": [
            "对不同余度接收到的同一输入数据取值进行检查，分析两个或多个余度接收到的同一输入数据取值不一致时，功能实现的正确性",
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "对功能的控制解算结果进行检查，分析控制解算结果为“正常值、异常值、边界值、极大极小值”等情况下功能处理的正确性",
            "各功能点控制逻辑之间的时序关系、约束关系、并发关系和组合关系是否正确"
        ],
        "safety_requirements": [
            "系统应检查不同余度接收的输入数据（vyt、h、ht、vyf）一致性，确保在取值不一致时，拉平段纵向控制的给定升降速度 vyg = vyt + (h - ht)(vyf - vyt) 计算结果正确。",
            "系统应对拉平段纵向控制的逻辑判断条件（如逻辑恒假、恒真、条件错误、分支遗漏）进行验证，确保逻辑处理正确且覆盖所有异常场景。",
            "系统在拉平段纵向控制中应根据当前工作阶段和状态动态校验输入数据，避免因未考虑阶段或状态导致 vyg 计算错误。",
            "系统应验证拉平段纵向控制的时序、约束、并发及组合关系与其他功能逻辑的协调性，确保 vyg 计算逻辑无冲突。",
            "系统应对拉平段纵向控制的解算结果（正常值、异常值、边界值、极大极小值）进行实时校验，并在异常时启动纠错或告警机制。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 98,
        "requirement": "在拉平段纵向控制中，计算 vygSemi 为给定升降速度自动修正量",
        "original_safety_criterions": [
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "对功能的控制解算过程进行检查，分析控制解算过程出现超时（未在规定时间内返回结果）等情况下的功能处理正确性",
            "各功能点控制逻辑之间的时序关系、约束关系、并发关系和组合关系是否正确",
            "对功能的控制解算结果进行检查，分析控制解算结果为“正常值、异常值、边界值、极大极小值”等情况下功能处理的正确性"
        ],
        "safety_requirements": [
            "系统在拉平段纵向控制中计算 vygSemi 时，应对计算过程进行超时监控，并在超时未返回结果时触发异常处理机制，确保功能正确性。",
            "系统应检查拉平段纵向控制中计算的 vygSemi 结果，确保在正常值、异常值、边界值、极大极小值等情况下采取正确的控制解算处理。",
            "系统在计算 vygSemi 前，应对输入参数进行检查，确保其包含当前工作阶段与状态信息，防止因未考虑相关因素导致的计算错误。",
            "系统应验证拉平段纵向控制中计算 vygSemi 的逻辑条件与分支，避免逻辑恒假、恒真、判断条件错误或分支遗漏，确保处理流程正确。",
            "系统应确保拉平段纵向控制中各功能点的时序关系、约束关系及并发组合符合设计要求，保障 vygSemi 计算过程的准确性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 99,
        "requirement": "在拉平段纵向控制中，计算 duy 为给定升降加速度",
        "original_safety_criterions": [
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "对功能的控制解算过程进行检查，分析控制解算过程出现超时（未在规定时间内返回结果）等情况下的功能处理正确性",
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统在拉平段纵向控制中，应检查输入是否考虑工作阶段及状态，确保升降加速度 duy 的计算功能在‘未考虑工作阶段、未考虑工作状态’等情况下的正确性。",
            "系统应对拉平段纵向控制的解算过程进行超时检测，确保在未规定时间内返回结果时，仍能正确处理升降加速度 duy 的计算。",
            "系统应检查拉平段纵向控制中计算 duy 的逻辑判断条件及分支，确保‘逻辑恒假、恒真、条件错误、分支遗漏’等情况下的功能处理正确性。",
            "系统应监控不同余度的工作状态，确保在两个或多个余度处于不同状态时，拉平段纵向控制的 duy 计算功能仍能正确实现给定升降加速度。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 100,
        "requirement": "当飞行高度小于 2.1 米时，给定升降速度自动修正量 vygSemi 开始接入，并根据飞机的俯仰角依据下式计算后限幅至[－2，2]。",
        "original_safety_criterions": [
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "对功能的控制解算过程进行检查，分析控制解算过程出现超时（未在规定时间内返回结果）等情况下的功能处理正确性",
            "对不同余度的离散型输出数据取值进行检查，分析两个或多个余度输出数据“取值不一致”等情况下，功能实现的正确性",
            "针对各项任务的持续时间进行检查，分析任务持续时间小于规定时间等情况下，功能处理的正确性",
            "对功能的控制解算结果进行检查，分析控制解算结果为“正常值、异常值、边界值、极大极小值”等情况下功能处理的正确性"
        ],
        "safety_requirements": [
            "系统在飞行高度小于2.1米时，应检查控制解算过程的执行时间，确保超时情况下升降速度自动修正量vygSemi的接入和处理符合安全要求。",
            "系统应监测不同余度的离散型输出数据，当飞行高度小于2.1米且出现余度数据取值不一致时，确保升降速度自动修正量vygSemi的功能实现正确性。",
            "系统应对升降速度自动修正量vygSemi的控制解算结果进行分类检查（正常值、异常值、边界值、极大极小值），验证其计算和限幅至[－2，2]的准确性。",
            "系统在飞行高度小于2.1米时，应对逻辑判断条件进行全面验证，包括逻辑恒假、恒真、条件错误或分支遗漏等情况，确保vygSemi计算及限幅处理的正确性。",
            "系统应检查任务持续时间与规定时间的偏差，当飞行高度小于2.1米且任务执行时间不足时，保证vygSemi的接入、计算及限幅处理的完整性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 101,
        "requirement": "如果此时惯导加速度无效，则不加入升降加速度的反馈。",
        "original_safety_criterions": [
            "故障项的检测逻辑是否合理，检测方式是否会对设备正常工作产生影响？",
            "是否规定了误操作、无效操作的响应处理要求？",
            "人员操作是否有合理性判断，不符合当前场景或状态的指令不进行响应？"
        ],
        "safety_requirements": [
            "系统在检测到惯导加速度无效时，应立即停止加入升降加速度反馈，并记录无效状态以确保响应处理符合安全操作要求。",
            "系统应对惯导加速度无效的检测逻辑进行冗余校验，确保检测方式不影响设备正常工作，并在异常时触发实时告警。",
            "系统应验证人员操作中‘不加入升降加速度反馈’逻辑的合理性，确保仅在惯导加速度无效时执行该操作，并提供操作确认机制。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 102,
        "requirement": "δp = Kp (vg - vk) + f(J)，δp 限幅为[3%, 100 %]",
        "original_safety_criterions": [
            "对不同余度的连续型输出数据取值进行检查，分析两个或多个余度输出数据“取值不一致，即取值之差超出规定阈值”等情况下，功能实现的正确性",
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "对功能的多个输入数据进行检查，分析多个输入数据取值为“正常值等价类组合、异常值等价类组合、边界值组合、初始值组合、安全值组合、缺省值组合”等情况下功能处理的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统在多个余度处于不同工作状态时，应检查余度状态差异，确保 δp = Kp (vg - vk) + f(J) 的计算正确性，并严格保持 δp 限幅为[3%, 100%]。",
            "系统应对 δp 计算的输入数据（vg、vk、J等）进行等价类组合检查，覆盖正常值、异常值、边界值、初始值、安全值和缺省值，确保计算处理符合预期且 δp 限幅有效。",
            "系统应监测不同余度的输出数据差值，当超出规定阈值时，立即校验 δp 计算结果并强制限幅至[3%, 100%]。",
            "系统应对逻辑判断条件进行全分支覆盖检查，包括逻辑恒假、恒真、条件错误或分支遗漏，确保 δp 计算过程及限幅始终符合安全要求。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 103,
        "requirement": "vg = Vt + (h - ht)(Vs - Vt) / (hf - ht)",
        "original_safety_criterions": [
            "对不同余度的输出数据进行检查，分析“单个余度故障、多个余度均故障”情况下，功能实现的正确性",
            "对功能的多个输入数据进行检查，分析多个输入数据取值为“正常值等价类组合、异常值等价类组合、边界值组合、初始值组合、安全值组合、缺省值组合”等情况下功能处理的正确性",
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "对功能的循环判断条件进行检查，分析“循环判断条件恒假、恒真”等情况下功能处理的正确性"
        ],
        "safety_requirements": [
            "系统应对vg计算功能的逻辑判断条件进行全面检查，确保在‘逻辑恒假、逻辑恒真、判断条件错误、分支遗漏’情况下，公式vg = Vt + (h - ht)(Vs - Vt)/(hf - ht)的计算结果正确。",
            "系统应实施余度数据校验机制，当出现‘单个余度故障’或‘多个余度均故障’时，保障vg = Vt + (h - ht)(Vs - Vt)/(hf - ht)的计算结果准确性。",
            "系统应验证vg计算中的循环判断条件，在‘循环条件恒假、恒真’等异常情况下确保功能处理符合预期逻辑。",
            "系统需覆盖所有输入数据组合场景（包括正常值/异常值/边界值/初始值/安全值/缺省值），确保vg = Vt + (h - ht)(Vs - Vt)/(hf - ht)的计算完整性。",
            "系统应根据不同工作阶段和状态动态调整控制解算过程，避免因‘未考虑工作阶段’或‘未考虑工作状态’导致vg计算结果错误。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 104,
        "requirement": "若出现升降速度自动修正量 vygSemi 的计算中 J < 3.5 的情况，则将节风门量 δp 收为零。",
        "original_safety_criterions": [
            "对不同余度的输出数据进行检查，分析“单个余度故障、多个余度均故障”情况下，功能实现的正确性",
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "对功能的控制解算过程进行检查，分析控制解算过程出现超时（未在规定时间内返回结果）等情况下的功能处理正确性",
            "对不同余度的离散型输出数据取值进行检查，分析两个或多个余度输出数据“取值不一致”等情况下，功能实现的正确性",
            "对功能的数据处理过程进行检查，分析数据处理过程是否存在除0的情况"
        ],
        "safety_requirements": [
            "系统应验证 J < 3.5 的逻辑判断条件，确保在逻辑恒假、恒真、判断条件错误或分支遗漏时，节风门量 δp 收为零的功能处理正确。",
            "系统在控制解算超时（未在规定时间内返回结果）时，应触发容错机制，保证升降速度自动修正量 vygSemi 的计算中 J < 3.5 情况下 δp 收零的准确性。",
            "系统在单个余度或多个余度故障时，应维持 J < 3.5 的判断逻辑，确保节风门量 δp 收为零的功能正确执行。",
            "系统应对 vygSemi 的计算过程进行实时监控，避免除0错误，并在检测到异常时立即终止计算并执行 δp 收零操作。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 105,
        "requirement": "横侧向控制与下滑 2 段相同。",
        "original_safety_criterions": [
            "针对各项任务的持续时间进行检查，分析任务持续时间大于规定时间等情况下，功能处理的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统应检查横侧向控制与下滑2段功能的余度工作状态，确保在‘两个或多个余度处于不同状态’时控制逻辑的正确性。",
            "系统应对横侧向控制与下滑2段任务的持续时间进行监控，在任务持续时间超过规定时间时，执行预设的安全处理机制并保持功能输出正确。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 106,
        "requirement": "离散化 vyg",
        "original_safety_criterions": [
            "对接口数据中具有离散型值域的数据位进行检查，分析相邻两个周期数据取值发生跳变输出的正确性",
            "对接口数据中具有离散型值域的数据位进行检查，分析数据位取值为“有效值域外未定义的异常值”等情况下输出的正确性",
            "对不同余度的离散型接口数据取值进行检查，分析两个或多个余度接口数据“取值不一致”等情况下，功能实现的正确性",
            "对不同余度的离散型输出数据取值进行检查，分析两个或多个余度输出数据“取值不一致”等情况下，功能实现的正确性",
            "对接口数据中具有离散型值域的数据位进行检查，分析数据位取值为“有效值域的每项枚举值”等情况下输出的正确性"
        ],
        "safety_requirements": [
            "系统应对不同余度的离散型接口数据取值进行检查，确保在“取值不一致”情况下离散化 vyg 功能实现的正确性。",
            "系统应检查接口数据中 vyg 数据位的取值，确保在“有效值域外未定义的异常值”情况下输出的正确性。",
            "系统应对不同余度的离散化 vyg 输出数据取值进行检查，确保在“取值不一致”情况下功能实现的正确性。",
            "系统应验证接口数据中 vyg 数据位的取值，确保“有效值域的每项枚举值”处理符合预期。",
            "系统应检测相邻两个周期内 vyg 数据取值的跳变情况，确保跳变时输出的正确性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 107,
        "requirement": "计算(k) = vyt + (h(k) - ht )(vyf  - vyt ) /(hf  - ht )",
        "original_safety_criterions": [
            "对不同余度的输出数据进行检查，分析“单个余度故障、多个余度均故障”情况下，功能实现的正确性",
            "对功能的多个输入数据进行检查，分析多个输入数据取值为“正常值等价类组合、异常值等价类组合、边界值组合、初始值组合、安全值组合、缺省值组合”等情况下功能处理的正确性",
            "多个功能或多个状态具有同一个接口数据，不同功能/状态对输入初始值的要求不同。对这一接口数据的初始值进行检查，分析接口数据初始值“大于功能/状态要求、小于功能/状态要求”等情况下输出的正确性",
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "针对各项任务的执行条件中的输入数据取值进行检查，分析输入数据取值使得任务执行条件提前满足时，功能处理的正确性"
        ],
        "safety_requirements": [
            "系统应对计算(k)=vyt + (h(k)-ht)(vyf-vyt)/(hf-ht)的输入数据进行全面检查，确保在正常值、异常值、边界值、初始值、安全值、缺省值等组合情况下功能处理的正确性。",
            "系统应验证计算(k)=vyt + (h(k)-ht)(vyf-vyt)/(hf-ht)的输出余度，确保在单个余度故障或多个余度均故障时仍能输出正确结果。",
            "系统应对共享接口数据的初始值进行检查，分析初始值大于或小于功能要求的情况，确保计算(k)=vyt + (h(k)-ht)(vyf-vyt)/(hf-ht)的准确性。",
            "系统应检测计算(k)=vyt + (h(k)-ht)(vyf-vyt)/(hf-ht)的输入数据导致任务执行条件提前满足的场景，并确保功能处理逻辑的正确性。",
            "系统应对计算(k)=vyt + (h(k)-ht)(vyf-vyt)/(hf-ht)的逻辑判断条件及分支进行校验，确保逻辑恒假、恒真、条件错误或分支遗漏等异常情况下的处理正确性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 108,
        "requirement": "Md 2(k ) = KLI  . Md 1(k )",
        "original_safety_criterions": [
            "针对各项任务的先后执行时序进行检查，分析任务执行时序与规定时序不一致时，功能处理的正确性",
            "对不同余度的输出数据进行检查，分析“单个余度故障、多个余度均故障”情况下，功能实现的正确性",
            "多个功能串行执行，前序功能的输出数据是后续功能的输入数据。对前序功能的输出数据进行检查，分析数据取值为“正常值等价类组合、异常值等价类组合”等情况下多功能处理的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统应对前序功能的输出数据 Md1(k) 进行检查，确保在‘正常值等价类组合’或‘异常值等价类组合’情况下，Md2(k) = KLI . Md1(k) 功能处理的正确性。",
            "系统应对不同余度的输出数据进行检查，确保在‘单个余度故障’或‘多个余度均故障’情况下，Md2(k) = KLI . Md1(k) 功能实现的正确性。",
            "系统应检查不同余度的工作状态，确保在‘两个或多个余度处于不同状态’情况下，Md2(k) = KLI . Md1(k) 功能实现的正确性。",
            "系统应检查任务执行时序与规定时序的一致性，确保时序不符时 Md2(k) = KLI . Md1(k) 功能处理的正确性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 109,
        "requirement": "Md 2(k ) 限幅[- XfSitaF , XfSitaF ]",
        "original_safety_criterions": [
            "对不同余度的连续型接口数据取值进行检查，分析两个或多个余度接口数据“取值不一致，即取值之差超出规定阈值”等情况下，功能实现的正确性",
            "对功能的多个输入数据进行检查，分析多个输入数据取值为“正常值等价类组合、异常值等价类组合、边界值组合、初始值组合、安全值组合、缺省值组合”等情况下功能处理的正确性",
            "对不同余度的连续型输出数据取值进行检查，分析两个或多个余度输出数据“取值不一致，即取值之差超出规定阈值”等情况下，功能实现的正确性",
            "对功能的控制解算结果进行检查，分析控制解算结果为“正常值、异常值、边界值、极大极小值”等情况下功能处理的正确性",
            "各功能点控制逻辑之间的时序关系、约束关系、并发关系和组合关系是否正确"
        ],
        "safety_requirements": [
            "系统应对 Md 2(k) 限幅功能的输入数据进行组合检查，确保在正常值等价类组合、异常值等价类组合、边界值组合、初始值组合、安全值组合、缺省值组合等情况下限幅处理[- XfSitaF , XfSitaF ]的正确性。",
            "系统应检测不同余度的连续型输出数据差值，当两个或多个余度输出数据取值之差超出规定阈值时，确保 Md 2(k) 限幅[- XfSitaF , XfSitaF ]功能的正确实现。",
            "系统应对 Md 2(k) 的控制解算结果进行检查，确保在正常值、异常值、边界值、极大极小值等情况下的处理逻辑符合限幅要求。",
            "系统应验证 Md 2(k) 限幅控制逻辑与其他功能点控制逻辑的时序关系、约束关系、并发关系和组合关系的正确性。",
            "系统应检查不同余度的连续型接口数据差值，当两个或多个余度接口数据取值之差超出阈值时，确保 Md 2(k) 限幅[- XfSitaF , XfSitaF ]功能实现正确。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 110,
        "requirement": "dvyg (k) = h&(k)(vyf   - vyt ) /(hf  - ht )",
        "original_safety_criterions": [
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "对不同余度的输出数据进行检查，分析“单个余度故障、多个余度均故障”情况下，功能实现的正确性",
            "对功能的多个输入数据进行检查，分析多个输入数据取值为“正常值等价类组合、异常值等价类组合、边界值组合、初始值组合、安全值组合、缺省值组合”等情况下功能处理的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统应对 dvyg(k) = h&(k)(vyf - vyt)/(hf - ht) 计算进行余度输出检查，确保在单个或多个余度故障时仍能输出正确结果。",
            "系统应对 dvyg(k) = h&(k)(vyf - vyt)/(hf - ht) 的逻辑判断条件和分支进行验证，确保逻辑恒假、恒真、条件错误或分支遗漏等情况下的处理正确性。",
            "系统应检查不同余度工作状态的组合情况，确保在多个余度处于不同状态时，dvyg(k) = h&(k)(vyf - vyt)/(hf - ht) 的计算结果准确。",
            "系统应对 dvyg(k) = h&(k)(vyf - vyt)/(hf - ht) 的输入数据组合进行校验，覆盖正常值、异常值、边界值、初始值、安全值及缺省值等场景，确保计算功能鲁棒性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 111,
        "requirement": "Md3(k ) = Md 2(k ) + KL  . [vyg (k ) - h&(k )]+ KLd  . [dvyg (k ) - &(k )]",
        "original_safety_criterions": [
            "对不同余度的输出数据进行检查，分析“单个余度故障、多个余度均故障”情况下，功能实现的正确性",
            "对不同余度的接口数据进行检查，分析“单个余度故障、全部余度均故障（如数据异常、时序故障、通信故障、目的设备故障等）”情况下，功能实现的正确性",
            "对不同余度的离散型输出数据取值进行检查，分析两个或多个余度输出数据“取值不一致”等情况下，功能实现的正确性",
            "多个功能同时输出同一接口数据，对这些功能输出数据的取值进行检查，分析多个功能对同一接口数据的取值不同等情况下，多功能处理的正确性",
            "针对各项任务的执行条件中的输入数据取值进行检查，分析输入数据取值使得任务执行条件提前满足时，功能处理的正确性"
        ],
        "safety_requirements": [
            "系统应检查不同余度的接口数据，在单个余度故障或全部余度故障（数据异常、时序故障、通信故障、目的设备故障等）情况下，确保 Md3(k) = Md2(k) + KL . [vyg(k) - h&(k)] + KLd . [dvyg(k) - &(k)] 的计算正确性。",
            "系统应检查输入数据取值，在任务执行条件因输入数据提前满足时，确保 Md3(k) = Md2(k) + KL . [vyg(k) - h&(k)] + KLd . [dvyg(k) - &(k)] 的功能处理正确性。",
            "系统应检查不同余度的离散型输出数据，在两个或多个余度输出数据取值不一致时，确保 Md3(k) = Md2(k) + KL . [vyg(k) - h&(k)] + KLd . [dvyg(k) - &(k)] 的功能正确性。",
            "系统应检查多个功能输出的同一接口数据取值，在取值不同时，确保 Md3(k) = Md2(k) + KL . [vyg(k) - h&(k)] + KLd . [dvyg(k) - &(k)] 的计算结果正确性。",
            "系统应检查不同余度的输出数据，在单个余度故障或多个余度均故障时，确保 Md3(k) = Md2(k) + KL . [vyg(k) - h&(k)] + KLd . [dvyg(k) - &(k)] 的功能正确性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 112,
        "requirement": "Md 4(k ) = [(22.0 - T). Md 4(k - 1) + (T + 4). Md 3(k ) + (T - 4). Md 3(k - 1)]/(22.0 + T)",
        "original_safety_criterions": [
            "对功能的多个输入数据进行检查，分析多个输入数据取值为“正常值等价类组合、异常值等价类组合、边界值组合、初始值组合、安全值组合、缺省值组合”等情况下功能处理的正确性",
            "对不同余度的离散型接口数据取值进行检查，分析两个或多个余度接口数据“取值不一致”等情况下，功能实现的正确性",
            "对不同余度的接口数据进行检查，分析“单个余度故障、全部余度均故障（如数据异常、时序故障、通信故障、目的设备故障等）”情况下，功能实现的正确性",
            "对不同余度的离散型输出数据取值进行检查，分析两个或多个余度输出数据“取值不一致”等情况下，功能实现的正确性",
            "针对各项任务的执行条件中的输入数据取值进行检查，分析输入数据取值使得任务执行条件提前满足时，功能处理的正确性"
        ],
        "safety_requirements": [
            "系统应对不同余度的离散型接口数据进行取值检查，在出现两个或多个余度接口数据取值不一致时，确保 Md4(k) = [(22.0 - T). Md4(k-1) + (T+4). Md3(k) + (T-4). Md3(k-1)]/(22.0 + T) 功能的正确实现。",
            "系统应对不同余度的离散型输出数据进行取值检查，在出现两个或多个余度输出数据取值不一致时，验证 Md4(k) = [(22.0 - T). Md4(k-1) + (T+4). Md3(k) + (T-4). Md3(k-1)]/(22.0 + T) 功能输出的正确性。",
            "系统应检查 Md4(k) 执行条件的输入数据取值，在输入数据导致任务执行条件提前满足时，确保功能处理逻辑的准确性。",
            "系统应检查余度接口数据，当出现单个余度故障或全部余度故障（如数据异常、时序故障等）时，保障 Md4(k) 计算功能的正确执行。",
            "系统应对 Md4(k) 的输入数据进行组合验证，包括正常值、异常值、边界值、初始值等场景，确保其计算功能在各类取值组合下处理的正确性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 113,
        "requirement": "Md 4(k ) 限幅[- XfSitaF ,  XfSitaF ]",
        "original_safety_criterions": [
            "对功能的多个输入数据进行检查，分析多个输入数据取值为“正常值等价类组合、异常值等价类组合、边界值组合、初始值组合、安全值组合、缺省值组合”等情况下功能处理的正确性",
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "对不同余度的连续型输出数据取值进行检查，分析两个或多个余度输出数据“取值不一致，即取值之差超出规定阈值”等情况下，功能实现的正确性",
            "对功能的控制解算结果进行检查，分析控制解算结果为“正常值、异常值、边界值、极大极小值”等情况下功能处理的正确性",
            "各功能点控制逻辑之间的时序关系、约束关系、并发关系和组合关系是否正确"
        ],
        "safety_requirements": [
            "系统应对 Md 4(k) 限幅逻辑的判断条件和分支进行验证，确保在‘逻辑恒假、恒真、判断条件错误、分支遗漏’情况下仍能正确执行[- XfSitaF, XfSitaF]限幅处理。",
            "系统应检查不同余度的连续型输出数据差值，当余度数据差异超过规定阈值时，确保限幅[- XfSitaF, XfSitaF]功能实现结果的正确性和一致性。",
            "系统应对 Md 4(k) 的限幅结果进行异常检测，正确处理‘正常值、异常值、边界值、极大极小值’情况，并实施安全值强制修正机制。",
            "系统应验证 Md 4(k) 限幅功能的多输入组合（正常/异常/边界/初始/安全/缺省值），确保所有等价类组合均符合[- XfSitaF, XfSitaF]约束要求。",
            "系统应确认 Md 4(k) 限幅控制逻辑与其他功能点的时序、约束、并发及组合关系，避免因逻辑冲突导致限幅功能失效。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 114,
        "requirement": "Jg (k ) = Md 4(k )",
        "original_safety_criterions": [
            "对功能的多个输入数据进行检查，分析多个输入数据取值为“正常值等价类组合、异常值等价类组合、边界值组合、初始值组合、安全值组合、缺省值组合”等情况下功能处理的正确性",
            "针对各项任务的持续时间进行检查，分析任务持续时间小于规定时间等情况下，功能处理的正确性",
            "对功能的数据处理过程进行检查，分析数据处理过程是否存在除0的情况",
            "针对各项任务的持续时间进行检查，分析任务持续时间大于规定时间等情况下，功能处理的正确性",
            "针对各项任务的执行条件中的输入数据取值进行检查，分析输入数据取值使得任务执行条件提前满足时，功能处理的正确性"
        ],
        "safety_requirements": [
            "系统应检查输入数据取值，确保在任务执行条件提前满足时，Jg(k) = Md4(k)功能处理的正确性。",
            "系统应在Jg(k) = Md4(k)的数据处理过程中实施除零检查，并在检测到除零操作时触发安全处理机制。",
            "系统应验证任务持续时间大于规定时间时，Jg(k) = Md4(k)功能处理的正确性，并记录异常事件。",
            "系统应验证任务持续时间小于规定时间时，Jg(k) = Md4(k)功能处理的正确性，并确保状态回滚机制的有效性。",
            "系统应对输入数据的正常值、异常值、边界值、初始值、安全值和缺省值组合进行校验，确保Jg(k) = Md4(k)计算结果符合预期。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 115,
        "requirement": "δp (k ) = Kp (vg (k ) -vk (k ))+ f (J(k ))",
        "original_safety_criterions": [
            "对功能的多个输入数据进行检查，分析多个输入数据取值为“正常值等价类组合、异常值等价类组合、边界值组合、初始值组合、安全值组合、缺省值组合”等情况下功能处理的正确性",
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "对不同余度的连续型输出数据取值进行检查，分析两个或多个余度输出数据“取值不一致，即取值之差超出规定阈值”等情况下，功能实现的正确性",
            "针对各项任务的执行条件中的输入数据取值进行检查，分析输入数据取值使得任务执行条件延迟满足时，功能处理的正确性",
            "对不同余度的离散型输出数据取值进行检查，分析两个或多个余度输出数据“取值不一致”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统应在不同余度的离散型输出数据取值不一致时，检查并确保 δp(k) = Kp(vg(k) - vk(k)) + f(J(k)) 功能实现的正确性。",
            "系统应在输入数据取值导致任务执行条件延迟满足时，检查并确保 δp(k) = Kp(vg(k) - vk(k)) + f(J(k)) 功能处理的正确性。",
            "系统应对 δp(k) = Kp(vg(k) - vk(k)) + f(J(k)) 的逻辑判断条件进行检查，确保逻辑恒假、恒真、条件错误或分支遗漏情况下功能处理的正确性。",
            "系统应在不同余度的连续型输出数据取值超出规定阈值时，检查并确保 δp(k) = Kp(vg(k) - vk(k)) + f(J(k)) 功能实现的正确性。",
            "系统应在输入数据为正常值、异常值、边界值、初始值、安全值、缺省值组合时，验证 δp(k) = Kp(vg(k) - vk(k)) + f(J(k)) 功能处理的正确性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 116,
        "requirement": "δp (k )限幅[3%, 100 % ]",
        "original_safety_criterions": [
            "对不同余度的连续型接口数据取值进行检查，分析两个或多个余度接口数据“取值不一致，即取值之差超出规定阈值”等情况下，功能实现的正确性",
            "对功能的多个输入数据进行检查，分析多个输入数据取值为“正常值等价类组合、异常值等价类组合、边界值组合、初始值组合、安全值组合、缺省值组合”等情况下功能处理的正确性",
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性",
            "对不同余度的连续型输出数据取值进行检查，分析两个或多个余度输出数据“取值不一致，即取值之差超出规定阈值”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统应对不同余度的连续型输出数据进行检查，确保当δp(k)限幅[3%, 100%]功能的余度输出数据差值超出阈值时，输出结果的正确性。",
            "系统应检查不同余度的工作状态，确保在多个余度处于不同状态时，δp(k)限幅[3%, 100%]功能的实现符合设计要求。",
            "系统应对δp(k)限幅[3%, 100%]的逻辑判断条件和分支进行验证，确保逻辑恒假、恒真、条件错误或分支遗漏等情况下的处理正确性。",
            "系统应验证δp(k)限幅[3%, 100%]功能在多种输入数据组合（正常/异常值、边界值、初始值、安全值、缺省值）下的处理正确性。",
            "系统应对不同余度的连续型接口数据进行一致性检查，确保当余度接口数据差值超出阈值时，δp(k)限幅[3%, 100%]功能的输出结果准确。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 117,
        "requirement": "f (J(k )) = 3J(k )",
        "original_safety_criterions": [
            "对功能的多个输入数据进行检查，分析多个输入数据取值为“正常值等价类组合、异常值等价类组合、边界值组合、初始值组合、安全值组合、缺省值组合”等情况下功能处理的正确性",
            "对功能的循环判断条件进行检查，分析“循环判断条件恒假、恒真”等情况下功能处理的正确性",
            "针对各项任务的持续时间进行检查，分析任务持续时间小于规定时间等情况下，功能处理的正确性",
            "针对各项任务的持续时间进行检查，分析任务持续时间大于规定时间等情况下，功能处理的正确性",
            "针对各项任务的执行条件中的输入数据取值进行检查，分析输入数据取值使得任务执行条件提前满足时，功能处理的正确性"
        ],
        "safety_requirements": [
            "系统应检查任务执行条件的输入数据取值，确保当输入数据导致条件提前满足时，公式 f(J(k)) = 3J(k) 的计算结果正确。",
            "系统应验证当任务持续时间小于规定时间时，公式 f(J(k)) = 3J(k) 的功能处理正确性。",
            "系统应验证当任务持续时间大于规定时间时，公式 f(J(k)) = 3J(k) 的功能处理正确性。",
            "系统应对飞行状态参数 J(k) 的输入数据（正常值、异常值、边界值、初始值、安全值、缺省值组合）进行检查，确保功能处理正确。",
            "系统应检查循环判断条件，确保在条件恒假或恒真时，公式 f(J(k)) = 3J(k) 的处理正确。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 118,
        "requirement": "在拉平段结束时刻，系统需要根据δx 0 计算副翼舵偏回路的地偏转指令。",
        "original_safety_criterions": [
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "对功能的循环判断条件进行检查，分析“循环判断条件恒假、恒真”等情况下功能处理的正确性",
            "针对各项任务的持续时间进行检查，分析任务持续时间小于规定时间等情况下，功能处理的正确性",
            "对功能的数据处理过程进行检查，分析数据处理过程是否存在除0的情况",
            "针对各项任务的持续时间进行检查，分析任务持续时间大于规定时间等情况下，功能处理的正确性"
        ],
        "safety_requirements": [
            "系统在计算副翼舵偏回路地偏转指令时，应检查循环判断条件，确保条件恒假或恒真情况下功能处理的正确性。",
            "系统应检查任务持续时间小于或大于规定时间的情况，确保副翼舵偏回路地偏转指令计算的正确性。",
            "系统应对副翼舵偏回路地偏转指令的逻辑条件和分支进行检查，防止逻辑恒假、恒真、判断错误或分支遗漏导致的功能错误。",
            "系统应检查副翼舵偏回路地偏转指令计算过程，避免出现除0错误，并在检测到异常时终止计算或触发安全机制。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 119,
        "requirement": "系统需要计算yg值，公式为yg = - (Kyz .Δy + KyzI∫ Kys .Δydt + Kyzd . wy)，且yg值需限幅在[- XfFxd , XfFxd]范围内。",
        "original_safety_criterions": [
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "针对各项任务的执行条件中的输入数据取值进行检查，分析输入数据取值使得任务执行条件延迟满足时，功能处理的正确性",
            "针对各项任务的执行条件中的输入数据取值进行检查，分析输入数据取值使得任务执行条件提前满足时，功能处理的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统在输入数据取值导致任务执行条件提前满足时，应确保yg值计算的正确性，并严格限幅在[- XfFxd , XfFxd]范围内。",
            "系统在输入数据取值导致任务执行条件延迟满足时，应验证yg值计算功能的处理正确性，并确保限幅有效性。",
            "系统在多个余度处于不同工作状态时，应对yg值计算过程进行冗余一致性检查，确保结果正确且限幅符合要求。",
            "系统应对计算yg值的逻辑判断条件及分支进行全面检查，确保在逻辑恒假、恒真、判断条件错误或分支遗漏时仍能正确处理并限幅。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 120,
        "requirement": "节风门空速闭环控制在拉平段期间应与拉平段相同。",
        "original_safety_criterions": [
            "针对各项任务的先后执行时序进行检查，分析任务执行时序与规定时序不一致时，功能处理的正确性",
            "各功能点控制逻辑之间的时序关系、约束关系、并发关系和组合关系是否正确",
            "系统进行控制的顺序和时序是否与硬件协调，控制条件是否完备且前后一致？",
            "对不同余度的执行时序进行检查，分析“两个或多个余度执行时序未同步”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统在拉平段期间应确保节风门空速闭环控制的顺序、时序与硬件协调，控制条件保持完备且与拉平段逻辑一致。",
            "系统在节风门空速闭环控制任务执行时序与规定时序不一致时，应触发异常处理机制并保持功能输出的正确性。",
            "系统应对多余度执行时序同步性进行检查，当两个或多个余度执行时序未同步时，应确保节风门空速闭环控制功能的正确实施。",
            "系统应验证拉平段期间节风门空速闭环控制的时序关系、约束关系及并发组合关系，确保其符合飞行阶段要求。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 121,
        "requirement": "离散化过程中，Md 2(k) = KyzI . Md1(k)，且Md 2(k)需限幅在[- XfFxd , XfFxd]范围内。",
        "original_safety_criterions": [
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性",
            "对不同余度的离散型接口数据取值进行检查，分析两个或多个余度接口数据“取值不一致”等情况下，功能实现的正确性",
            "对不同余度的离散型输出数据取值进行检查，分析两个或多个余度输出数据“取值不一致”等情况下，功能实现的正确性",
            "针对各项任务的持续时间进行检查，分析任务持续时间小于规定时间等情况下，功能处理的正确性",
            "针对各项任务的持续时间进行检查，分析任务持续时间大于规定时间等情况下，功能处理的正确性"
        ],
        "safety_requirements": [
            "系统在余度处于不同工作状态时，应检查离散化过程，确保 Md2(k) = KyzI·Md1(k) 的计算结果及限幅在 [-XfFxd, XfFxd] 范围内的正确性。",
            "系统在检测到两个或多个余度接口数据取值不一致时，应验证离散化过程中 Md2(k) 的计算和限幅功能实现的正确性。",
            "系统应对离散化过程的任务持续时间进行实时监控，在持续时间小于规定时间时，确保 Md2(k) 的计算和限幅处理的正确性。",
            "系统在检测到两个或多个余度输出数据取值不一致时，应验证 Md2(k) 的限幅功能在 [-XfFxd, XfFxd] 范围内的正确性。",
            "系统应对 Md2(k) 的持续时间进行监控，在任务持续时间大于规定时间时，确保限幅处理在 [-XfFxd, XfFxd] 范围内的正确性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 122,
        "requirement": "离散化过程中，Md 3(k) = Kyz . Δy(k) + Md 2(k) + Kyzd . wy (k)，且Md 3(k)需限幅在[- XfFxd , XfFxd]范围内。",
        "original_safety_criterions": [
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "对不同余度的离散型输出数据取值进行检查，分析两个或多个余度输出数据“取值不一致”等情况下，功能实现的正确性",
            "对不同余度的离散型接口数据取值进行检查，分析两个或多个余度接口数据“取值不一致”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统在不同工作阶段或状态时，应对功能输入进行检查，确保离散化过程中 Md 3(k) = Kyz·Δy(k) + Md 2(k) + Kyzd·wy(k) 的计算正确性，并强制限幅在 [-XfFxd, XfFxd] 范围内。",
            "系统应检查不同余度的离散型输出数据取值，当两个或多个余度数据取值不一致时，确保 Md 3(k) 的计算和限幅功能仍能正确实现。",
            "系统应校验不同余度的离散型接口数据取值，在余度数据不一致时，仍保证 Md 3(k) 计算结果符合 Kyz·Δy(k) + Md 2(k) + Kyzd·wy(k) 公式，并强制限幅为 [-XfFxd, XfFxd]。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 123,
        "requirement": "离散化过程中，yg (k) = -Md 3(k)。",
        "original_safety_criterions": [
            "对接口数据中具有离散型值域的数据位进行检查，分析数据位取值为“有效值域的每项枚举值”等情况下输出的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性",
            "对不同余度的离散型输出数据取值进行检查，分析两个或多个余度输出数据“取值不一致”等情况下，功能实现的正确性",
            "对不同余度的离散型接口数据取值进行检查，分析两个或多个余度接口数据“取值不一致”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统应检查不同余度的离散型接口数据取值，确保在'两个或多个余度接口数据取值不一致'情况下，离散化过程yg(k) = -Md3(k)的功能实现正确。",
            "系统应检查不同余度的离散型输出数据取值，确保在'两个或多个余度输出数据取值不一致'情况下，离散化过程yg(k) = -Md3(k)的功能实现正确。",
            "系统应对离散型接口数据位的有效值域进行校验，确保数据位取值为有效枚举值时离散化过程yg(k) = -Md3(k)的准确性。",
            "系统应监测不同余度的工作状态，确保在'两个或多个余度处于不同状态'情况下，离散化过程yg(k) = -Md3(k)的功能实现正确。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 124,
        "requirement": "着陆滑跑纵向控制与起飞地面段相同。",
        "original_safety_criterions": [
            "对不同余度的执行时序进行检查，分析“两个或多个余度执行时序未同步”等情况下，功能实现的正确性",
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "对功能的循环判断条件进行检查，分析“循环判断条件恒假、恒真”等情况下功能处理的正确性",
            "针对各项任务的持续时间进行检查，分析任务持续时间小于规定时间等情况下，功能处理的正确性",
            "对功能的控制解算结果进行检查，分析控制解算结果为“正常值、异常值、边界值、极大极小值”等情况下功能处理的正确性"
        ],
        "safety_requirements": [
            "系统应在不同工作阶段和状态下对着陆滑跑纵向控制的输入进行检查，确保'未考虑工作阶段'或'未考虑工作状态'情况下控制处理的正确性，并与起飞地面段功能逻辑保持一致。",
            "系统应对着陆滑跑纵向控制功能的多个余度执行时序进行同步检查，确保在'两个或多个余度执行时序未同步'情况下控制实现的正确性。",
            "系统应监控着陆滑跑纵向控制任务的持续时间，在任务持续时间小于规定时间时，执行异常处理并验证功能处理的正确性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 125,
        "requirement": "着陆滑跑横侧向控制中，yg在2秒内由-δx 0 / Ky线性减至0。",
        "original_safety_criterions": [
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "对功能的循环判断条件进行检查，分析“循环判断条件恒假、恒真”等情况下功能处理的正确性",
            "针对各项任务的持续时间进行检查，分析任务持续时间小于规定时间等情况下，功能处理的正确性",
            "对功能的数据处理过程进行检查，分析数据处理过程是否存在除0的情况",
            "对功能的控制解算结果进行检查，分析控制解算结果为“正常值、异常值、边界值、极大极小值”等情况下功能处理的正确性"
        ],
        "safety_requirements": [
            "系统应确保着陆滑跑横侧向控制任务持续时间符合2秒要求，在任务持续时间小于2秒时，验证yg线性减至0的功能处理正确性。",
            "系统在着陆滑跑横侧向控制过程中，应根据不同工作阶段和状态调整控制解算逻辑，确保未忽略工作阶段或状态时yg线性减至0的准确性。",
            "系统在yg由-δx 0/Ky线性减至0的计算过程中，应对Ky进行非零校验，避免除零错误，并验证数据处理的完整性。",
            "系统应对横侧向控制的循环判断条件进行实时监测，确保条件非恒真或恒假，防止循环异常导致控制解算失效。",
            "系统应对横侧向控制解算结果（正常值、异常值、边界值、极大极小值）进行动态检查，并在异常情况下触发纠错机制。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 126,
        "requirement": "着陆滑跑横侧向控制中，yg (k) = Kyg (Kz . Dz (k) + Kz . Dz (k) - K . Δy(k) - K . wy (k)) + 0.5yg 0，其中yg 0为滚转改平段结束时方向舵通道外回路控制量。",
        "original_safety_criterions": [
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "对不同余度的离散型输出数据取值进行检查，分析两个或多个余度输出数据“取值不一致”等情况下，功能实现的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统应检查不同余度的离散型输出数据取值，在‘取值不一致’情况下确保着陆滑跑横侧向控制功能实现的正确性。",
            "系统应检查不同余度的工作状态，在‘两个或多个余度处于不同状态’情况下，确保yg(k)计算结果的准确性，包括Kyg、Dz(k)、Δy(k)、wy(k)及yg0的正确处理。",
            "系统应检查着陆滑跑横侧向控制的逻辑判断条件和分支，在‘逻辑恒假、恒真、条件错误或分支遗漏’情况下，确保功能处理的正确性。",
            "系统应在不同工作阶段和状态下，对功能输入进行检查，确保解算过程正确处理‘未考虑工作阶段’或‘未考虑工作状态’的情况。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 127,
        "requirement": "发动机空中起动过程中，节风门控制按照起动流程控制，发动机空中起动成功后飞机退出飘落转入相应阶段，节风门控制按照相应阶段控制；若发动机空中起动失败，则将节风门位置置为 0％。",
        "original_safety_criterions": [
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "各功能点控制逻辑之间的时序关系、约束关系、并发关系和组合关系是否正确",
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统在发动机空中起动过程中，应对逻辑判断条件和分支进行全面检查，确保‘逻辑恒假、逻辑恒真、判断条件错误或分支遗漏’等情况下的处理逻辑正确性。",
            "系统应根据发动机不同工作阶段和状态进行输入参数验证，确保起动控制解算正确，防止‘未考虑工作阶段’或‘未考虑工作状态’导致的错误。",
            "系统应检查多个余度的工作状态，当‘两个或多个余度处于不同状态’时，确保节风门控制逻辑的准确性和一致性。",
            "系统应验证发动机空中起动过程中节风门控制与起动流程的时序、约束、并发及组合关系，确保起动成功或失败时的逻辑转换正确（包括退出飘落阶段或置节风门为0%）。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 128,
        "requirement": "当自主控制不能达到满意的控制效果时，可采用人工修正控制对自主控制进行微量的修正，其修正量通过三个遥控操纵杆通道(升降舵操纵量、副翼操纵量、方向舵操纵量) 和空速修正组合指令进入飞控计算机, 并作相应的比例转换后进入控制律中，从而达到对控制效果修正的目的，在不同飞行阶段修正项的意义是不一样的。",
        "original_safety_criterions": [
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "对功能的控制解算过程进行检查，分析控制解算过程出现超时（未在规定时间内返回结果）等情况下的功能处理正确性",
            "各功能点控制逻辑之间的时序关系、约束关系、并发关系和组合关系是否正确",
            "对功能的执行条件进行检查，分析功能执行过程中执行条件“不满足、再次满足”等情况下功能处理的正确性"
        ],
        "safety_requirements": [
            "系统应对自主控制修正逻辑的判断条件进行全面检查，确保在逻辑恒假、恒真、条件错误或分支遗漏时，控制修正量（升降舵、副翼、方向舵操纵量及空速修正指令）的处理符合预期。",
            "系统应验证人工修正控制的执行条件，确保在条件'不满足'或'再次满足'时，飞控计算机对修正量的比例转换和控制律输入的正确性。",
            "系统需明确自主控制与人工修正控制的时序、约束及并发关系，确保不同飞行阶段的修正项意义与实际控制效果一致。",
            "系统应检查控制解算过程的输入数据，确保在不同工作状态和飞行阶段下，对升降舵、副翼、方向舵操纵量及空速修正指令的处理逻辑适应性。",
            "系统应对控制解算过程设置超时监测机制，若超时未返回结果，需确保人工修正控制的修正量通过遥控操纵杆通道和空速修正指令正确进入控制律，且比例转换过程有效。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 129,
        "requirement": "对应每个飞行阶段的控制需要有不同的人工修正量，人工修正量与操纵量的对应关系是线性的。",
        "original_safety_criterions": [
            "针对各项任务的先后执行时序进行检查，分析任务执行时序与规定时序不一致时，功能处理的正确性",
            "对系统状态、工作阶段或系统任务对应的软件状态进行检查，分析“不存在对应软件状态、软件与系统不一致”等情况下状态执行的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统应检查不同余度的工作状态，在两个或多个余度处于不同状态时，验证人工修正量与操纵量的线性对应关系的正确性。",
            "系统应检查每个飞行阶段控制任务的执行时序，在任务执行时序与规定时序不一致时，确保人工修正量与操纵量的对应关系处理的正确性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 130,
        "requirement": "人工修正控制采用的控制规律与自动控制规律相同（式 2-1，式 2-2，式 2-3），只在相应控制量中加入了修正量。",
        "original_safety_criterions": [
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "对功能的控制解算过程进行检查，分析控制解算过程出现超时（未在规定时间内返回结果）等情况下的功能处理正确性",
            "对功能的控制解算结果进行检查，分析控制解算结果为“正常值、异常值、边界值、极大极小值”等情况下功能处理的正确性"
        ],
        "safety_requirements": [
            "系统应对人工修正控制的解算过程进行超时检查，确保在未按规定时间返回结果时执行预设错误处理流程，并输出安全默认值。",
            "系统应对人工修正控制的逻辑判断条件（式2-1、式2-2、式2-3）进行完整性验证，识别逻辑恒假、恒真及分支遗漏错误，确保异常条件下的控制量修正处理符合安全预期。",
            "系统应验证人工修正控制解算结果是否符合正常值范围，对异常值、边界值和极大极小值实施安全过滤机制，并触发告警记录。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 131,
        "requirement": "指令控制模式是飞机在巡航过程中，根据当时的实际情况需要通过指令控制改变飞机的飞行状态或飞行位置的一种控制模式。",
        "original_safety_criterions": [
            "对两个或多个存在转移关系的状态下、设置了优先级的不同功能进行检查，分析“高优先级切换低优先级、低优先级切换高优先级”等情况下状态与功能的正确性",
            "对软件状态空间中两两状态之间的转移条件进行检查，分析转移条件“未设置、始终满足、无法满足”等情况下状态转移的正确性",
            "对状态进入条件进行检查，分析状态执行过程中进入条件“满足、不满足、再次满足”等情况下状态执行的正确性"
        ],
        "safety_requirements": [
            "系统在进入指令控制模式前，应检查进入条件，确保在‘满足、不满足、再次满足’等情况下状态执行的正确性。",
            "系统应对存在优先级的不同指令控制模式进行切换检查，确保‘高优先级切换低优先级’或‘低优先级切换高优先级’时状态与功能的正确性。",
            "系统应验证指令控制模式下状态间的转移条件，确保在条件‘未设置、始终满足、无法满足’等情况下状态转移的正确性。",
            "系统应监控指令控制模式的激活过程，确保飞行状态或位置变更仅在所有转移条件及优先级规则校验通过后执行。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 132,
        "requirement": "指令控制模式不改变自主控制模式下的控制律结构。",
        "original_safety_criterions": [
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "两个或多个状态之间不存在转移关系，对这些状态的进入条件进行检查，分析进入条件“同时满足、状态执行过程中满足”等情况下状态执行的正确性",
            "系统进行控制的顺序和时序是否与硬件协调，控制条件是否完备且前后一致？"
        ],
        "safety_requirements": [
            "系统应确保指令控制模式与自主控制模式的切换顺序、时序与硬件协调，且控制条件完整性和一致性验证机制完备，维持控制律结构不变。",
            "系统在进入指令控制模式时，应检查状态进入条件是否满足互斥性，分析‘条件同时满足’或‘执行过程中满足’等场景，确保自主控制模式下的控制律结构不被改变。",
            "系统应实时监控控制模式状态转移过程，当检测到非预期条件触发时，立即冻结控制律结构参数并启动异常处理机制。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 133,
        "requirement": "设置的指令控制类指令有侧向。",
        "original_safety_criterions": [
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性"
        ],
        "safety_requirements": [
            "系统应对指令控制类功能（如侧向指令）的逻辑判断条件和逻辑分支进行检查，确保在‘逻辑恒假、逻辑恒真、逻辑判断条件错误或逻辑分支遗漏’情况下处理的正确性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 134,
        "requirement": "支持“左盘旋”、“右盘旋”、“8 字飞”、“临时航路点” 和纵向的“定高”、“高度设置”、以及速度控制的“定速”、“速度设置”等指令控制模式。",
        "original_safety_criterions": [
            "系统进行控制的顺序和时序是否与硬件协调，控制条件是否完备且前后一致？",
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "对功能的控制解算结果进行检查，分析控制解算结果为“正常值、异常值、边界值、极大极小值”等情况下功能处理的正确性",
            "若多个功能点可以同时执行，则分析这些功能点是否可能对同一执行机构进行操作；",
            "各功能点控制逻辑之间的时序关系、约束关系、并发关系和组合关系是否正确"
        ],
        "safety_requirements": [
            "系统应对指令控制模式的逻辑判断条件和分支进行全面检查，确保在“逻辑恒假、逻辑恒真、判断条件错误、分支遗漏”等情况下，‘左盘旋’、‘右盘旋’、‘8字飞’、‘临时航路点’、纵向定高/高度设置及速度定速/速度设置等指令的正确执行。",
            "系统应检测并处理‘左盘旋’、‘右盘旋’、‘8字飞’、‘临时航路点’、纵向定高/高度设置及速度定速/速度设置等多指令控制模式并发执行时对同一执行机构的操作冲突。",
            "系统应验证各指令控制模式的时序关系、约束关系、并发关系及组合关系的正确性，并确保其与硬件控制的顺序、时序及条件的一致性。",
            "系统应对指令控制模式的解算结果进行校验，确保‘正常值、异常值、边界值、极大极小值’等情况下的处理逻辑正确，避免错误输出。",
            "系统应在指令控制模式执行期间持续监测执行机构状态，确保控制条件完备且前后一致，防止因条件冲突导致的安全风险。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 135,
        "requirement": "在自主控制或指令控制模式下，从爬升 2 段到飞完航线切入五边航线（不含）之间的航段，发送上述指令中的任意一个均可转入指令控制模式。",
        "original_safety_criterions": [
            "两个或多个状态之间不存在转移关系，对这些状态的进入条件进行检查，分析进入条件“同时满足、状态执行过程中满足”等情况下状态执行的正确性",
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "对软件状态空间中两两状态之间的转移条件进行检查，分析转移条件“未设置、始终满足、无法满足”等情况下状态转移的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统在自主控制或指令控制模式下，当两个或多个余度处于不同工作状态时，应对从爬升2段到飞完航线切入五边航线（不含）之间的航段转入指令控制模式的功能实现进行正确性验证。",
            "系统应检查自主控制或指令控制模式下状态转移条件的设置，确保在转移条件“未设置、始终满足、无法满足”等异常情况下，航段指令控制模式转换的状态转移逻辑正确。",
            "系统在转入指令控制模式时，应对功能输入进行多阶段多状态检查，确保工作阶段和状态未被忽略的情况下控制解算过程正确。",
            "系统应对不存在转移关系的状态进入条件进行检查，分析进入条件“同时满足、状态执行过程中满足”等异常场景下航段指令控制模式转换的正确性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 136,
        "requirement": "在爬升 1 段，仅“定速”、“空速设置”指令有效，其余指令无效。",
        "original_safety_criterions": [
            "对软件状态空间中两两状态之间的转移条件进行检查，分析转移条件“未设置、始终满足、无法满足”等情况下状态转移的正确性",
            "两个或多个存在转移关系的状态对同一个功能的执行要求不同，部分状态允许功能执行，其他状态不允许。分析状态转移前后功能“保持执行、中断执行”等情况下状态与功能的正确性",
            "人员设置的参数是否有有效性判断，异常参数进行提示或不予响应？",
            "是否规定了误操作、无效操作的响应处理要求？",
            "人员操作是否有合理性判断，不符合当前场景或状态的指令不进行响应？"
        ],
        "safety_requirements": [
            "系统在爬升1段应仅响应‘定速’、‘空速设置’指令，其余指令无效，并对异常指令进行提示或不予响应。",
            "系统应对爬升1段与其他状态间的转移条件进行检查，确保在‘未设置’、‘始终满足’或‘无法满足’条件下状态转移逻辑的正确性。",
            "系统在爬升1段应对输入的参数进行有效性判定，仅允许‘定速’、‘空速设置’相关参数生效，其他参数视为无效。",
            "系统在状态转移前后应验证‘定速’、‘空速设置’指令的有效性及其他指令的无效性，确保功能与状态的同步一致性。",
            "系统在爬升1段应实时监控人员操作指令，仅执行‘定速’、‘空速设置’功能，其余指令自动忽略且无响应。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 137,
        "requirement": "在指令控制模式下，可以重新发送相同类型的指令，新的指令将取代旧的指令。",
        "original_safety_criterions": [
            "两个或多个存在转移关系的状态具有同一个功能，对状态转移前后功能的执行情况进行检查，分析功能在状态转移后“开始执行、保持执行、中断执行”等情况下功能处理的正确性",
            "对系统状态、工作阶段或系统任务对应的软件状态进行检查，分析“不存在对应软件状态、软件与系统不一致”等情况下状态执行的正确性",
            "对软件状态空间中两两状态之间的转移条件进行检查，分析转移条件“未设置、始终满足、无法满足”等情况下状态转移的正确性"
        ],
        "safety_requirements": [
            "系统在指令控制模式下应检查软件状态与系统状态的一致性，确保新指令取代旧指令时不存在状态不一致或软件状态缺失的情况。",
            "系统在状态转移过程中应对相同类型指令的执行状态进行检查，确保新指令开始执行时旧指令被完全中断并清除。",
            "系统应对指令控制模式下的状态转移条件进行有效性验证，确保转移条件未被错误设置为‘未设置、始终满足、无法满足’等非正常状态。",
            "系统在指令替换过程中应维持功能执行连续性，确保状态转移前后指令处理逻辑的完整性和中断机制的可靠性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 138,
        "requirement": "在“定高”指令控制时，飞行控制律中的给定高度取为收到“定高”指令时刻的飞行高度。",
        "original_safety_criterions": [
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "对功能的控制解算过程进行检查，分析控制解算过程出现超时（未在规定时间内返回结果）等情况下的功能处理正确性",
            "人员操作是否有合理性判断，不符合当前场景或状态的指令不进行响应？"
        ],
        "safety_requirements": [
            "系统在‘定高’指令控制时，应对飞行控制律的给定高度解算过程进行超时检查，确保未在规定时间内返回结果时功能处理正确。",
            "系统在‘定高’指令控制时，应校验人员操作指令的合理性，拒绝执行与当前飞行高度或状态不符的指令。",
            "系统在不同工作阶段或状态下执行‘定高’指令时，应对功能输入进行完整性检查，确保给定高度严格取自接收到指令时刻的实际飞行高度。",
            "系统应实时验证控制解算过程与当前工作阶段、状态的匹配性，防止因未考虑工作阶段或状态导致的给定高度取值偏差。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 139,
        "requirement": "在“高度设置”指令控制时，飞行控制律中的给定高度取为所设置的高度值。",
        "original_safety_criterions": [
            "对不同余度的连续型接口数据取值进行检查，分析两个或多个余度接口数据“取值不一致，即取值之差超出规定阈值”等情况下，功能实现的正确性",
            "工作状态发生转移时，对功能接口数据的取值进行检查，分析“取值发生变化或者取值区间发生变化”等情况下输出的正确性",
            "对不同余度的连续型输出数据取值进行检查，分析两个或多个余度输出数据“取值不一致，即取值之差超出规定阈值”等情况下，功能实现的正确性",
            "对功能的控制解算结果进行检查，分析控制解算结果为“正常值、异常值、边界值、极大极小值”等情况下功能处理的正确性",
            "针对各项任务的执行条件中的输入数据取值进行检查，分析输入数据取值使得任务执行条件提前满足时，功能处理的正确性"
        ],
        "safety_requirements": [
            "系统应在不同余度的连续型接口数据取值不一致（差值超出规定阈值）时，确保高度设置指令控制功能正确将飞行控制律中的给定高度取为所设置的高度值。",
            "系统应对不同余度的高度设置指令输出数据进行实时比对，在取值不一致（差值超出规定阈值）时触发容错处理机制，并维持给定高度取值的正确性。",
            "系统应检查高度设置指令的控制解算结果，对‘正常值、异常值、边界值、极大极小值’等场景进行差异化处理，确保飞行控制律中给定高度取值的逻辑正确。",
            "系统在输入数据导致任务执行条件提前满足时，应对高度设置指令的输入数据进行校验，确保飞行控制律中给定高度取值与指令设定高度严格一致。",
            "系统在工作状态转移时应对接口数据进行取值检查，若高度设置指令的输入数据取值或取值区间发生变化，必须保证飞行控制律中给定高度的取值更新正确性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 140,
        "requirement": "自主控制模式下的给定高度为目标航路点的高度。",
        "original_safety_criterions": [
            "对状态进入条件进行检查，分析状态执行过程中进入条件“满足、不满足、再次满足”等情况下状态执行的正确性",
            "输出控制状态的时机是否符合场景要求？",
            "出现异常外部因素情况（例如高海况、恶劣气象条件等）时，软件是否进行了相应的判断和处理？",
            "下发危险的控制指令或动作时，是否有依据设备状态进行合理性判断？",
            "两个或多个状态之间不存在转移关系，对这些状态的进入条件进行检查，分析进入条件“同时满足、状态执行过程中满足”等情况下状态执行的正确性"
        ],
        "safety_requirements": [
            "系统在异常外部因素（高海况、恶劣气象等）出现时，应对自主控制模式进行判断和处理，确保给定高度符合目标航路点高度要求。",
            "系统在自主控制模式下应检查状态进入条件，分析条件‘满足、不满足、再次满足’时的状态执行正确性，保证给定高度为目标航路点高度。",
            "系统应确保自主控制模式下输出控制状态的时机与目标航路点高度要求严格同步。",
            "系统在多个无转移关系的状态进入条件‘同时满足’或‘执行过程中满足’时，应验证自主控制模式下给定高度为目标航路点高度的正确性。",
            "系统在下发控制指令前，应根据当前设备状态（如自主控制模式下的给定高度）进行合理性判断，防止危险指令执行。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 141,
        "requirement": "在指令控制模式下，导航算法或航点切换方法可以根据指令进行变化，但控制律与自主控制相同。",
        "original_safety_criterions": [
            "对两个或多个存在转移关系的状态下、设置了优先级的不同功能进行检查，分析“高优先级切换低优先级、低优先级切换高优先级”等情况下状态与功能的正确性",
            "工作状态发生转移时，对功能接口数据的取值进行检查，分析“取值发生变化或者取值区间发生变化”等情况下输出的正确性",
            "对状态进入条件进行检查，分析状态执行过程中进入条件“满足、不满足、再次满足”等情况下状态执行的正确性",
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "下发危险的控制指令或动作时，是否有依据设备状态进行合理性判断？"
        ],
        "safety_requirements": [
            "系统在指令控制模式下应对状态进入条件进行实时检查，确保在条件‘满足、不满足、再次满足’时，导航算法或航点切换方法执行符合控制律要求且与自主控制模式行为一致。",
            "系统在指令控制模式下应验证功能输入是否考虑当前工作阶段与状态，若检测到‘未考虑工作阶段’或‘未考虑工作状态’的输入，需终止处理并触发容错机制。",
            "系统在执行不同优先级指令控制模式切换时，应确保‘高优先级切换低优先级’或‘低优先级切换高优先级’的转移逻辑正确，且控制解算过程与目标状态严格匹配。",
            "系统在指令控制模式工作状态转移时，应对功能接口数据的取值及区间变化进行动态校验，保证导航算法或航点切换方法输出的参数符合预设约束条件。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 142,
        "requirement": "飞行控制律中的给定空速在“定速”指令控制时取为收到“定速”指令时刻的空速值",
        "original_safety_criterions": [
            "对接口数据的取值时刻进行检查，分析输入取值时刻为“过早停止、过晚停止”等情况下输出的正确性",
            "对接口数据的取值时刻进行检查，分析输入取值时刻为“极大值、极小值”等情况下输出的正确性",
            "对不同余度的连续型输出数据取值进行检查，分析两个或多个余度输出数据“取值不一致，即取值之差超出规定阈值”等情况下，功能实现的正确性",
            "对不同余度的离散型输出数据取值进行检查，分析两个或多个余度输出数据“取值不一致”等情况下，功能实现的正确性",
            "各功能点控制逻辑之间的时序关系、约束关系、并发关系和组合关系是否正确"
        ],
        "safety_requirements": [
            "系统应对不同余度的离散型输出数据进行检查，在出现两个或多个余度数据‘取值不一致’时，确保飞行控制律中‘定速’指令的空速取值正确采用指令时刻的空速值，并触发容错处理机制。",
            "系统应对不同余度的连续型输出数据进行检查，当余度数据差值超出规定阈值时，立即执行纠错算法并告警，保证‘定速’指令的空速取值与指令时刻空速值严格一致。",
            "系统应验证指令时刻空速值的输入时间戳，当出现‘极大值、极小值’等异常时间参数时，自动屏蔽非法数据并采用冗余备份时间戳执行空速取值。",
            "系统应对‘定速’指令的输入停止时间进行边界检查，若检测到‘过早停止’或‘过晚停止’异常，需启用预设阈值范围限制并保留最后一次有效空速值。",
            "系统应确保‘定速’指令控制逻辑的时序关系和并发约束符合规范，当检测到时序冲突或组合关系错误时，强制优先级仲裁并禁止异常状态下的空速取值操作。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 143,
        "requirement": "飞行控制律中的给定空速在“速度设置”时取为所设置的空速值",
        "original_safety_criterions": [
            "对功能的多个输入数据进行检查，分析多个输入数据取值为“正常值等价类组合、异常值等价类组合、边界值组合、初始值组合、安全值组合、缺省值组合”等情况下功能处理的正确性",
            "对不同余度接收到的同一输入数据取值进行检查，分析两个或多个余度接收到的同一输入数据取值不一致时，功能实现的正确性",
            "对不同余度的连续型输出数据取值进行检查，分析两个或多个余度输出数据“取值不一致，即取值之差超出规定阈值”等情况下，功能实现的正确性",
            "对不同余度的离散型输出数据取值进行检查，分析两个或多个余度输出数据“取值不一致”等情况下，功能实现的正确性",
            "各功能点控制逻辑之间的时序关系、约束关系、并发关系和组合关系是否正确"
        ],
        "safety_requirements": [
            "系统在‘速度设置’模式下应验证给定空速的时序关系、约束关系、并发关系和组合关系，确保取值为所设置的空速值。",
            "系统应对不同余度的离散型输出数据进行一致性检查，在‘取值不一致’情况下确保飞行控制律中给定空速的取值正确性。",
            "系统应对不同余度的连续型输出数据进行阈值检查，在‘取值差异超出规定阈值’时确保飞行控制律中给定空速的取值正确性。",
            "系统应检查飞行控制律中给定空速输入数据的正常值、异常值、边界值、初始值、安全值及缺省值组合，确保功能处理的正确性并实施数据完整性校验。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 144,
        "requirement": "飞行控制律中的给定空速在自主控制时为根据飞行性能计算的存储在飞控计算机中的数值",
        "original_safety_criterions": [
            "对不同余度的输出数据进行检查，分析“单个余度故障、多个余度均故障”情况下，功能实现的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性",
            "对不同余度的连续型输出数据取值进行检查，分析两个或多个余度输出数据“取值不一致，即取值之差超出规定阈值”等情况下，功能实现的正确性",
            "对不同余度的离散型输出数据取值进行检查，分析两个或多个余度输出数据“取值不一致”等情况下，功能实现的正确性",
            "对功能的控制解算结果进行检查，分析控制解算结果为“正常值、异常值、边界值、极大极小值”等情况下功能处理的正确性"
        ],
        "safety_requirements": [
            "系统应对不同余度的离散型输出数据进行检查，当两个或多个余度输出数据取值不一致时，确保飞行控制律中给定空速计算和存储的正确性。",
            "系统应对不同余度的连续型输出数据进行检查，当余度间取值之差超出规定阈值时，确保飞行控制律中的给定空速计算和存储功能的正确执行。",
            "系统应检查飞行控制律中的给定空速是否为正常值、异常值、边界值或极大极小值，并确保在上述情况下飞行控制处理的正确性。",
            "系统应在单个或多个余度故障情况下，通过冗余机制保障飞行控制律中给定空速计算和存储的准确性。",
            "系统应检查不同余度所处的工作状态，当两个或多个余度处于不同状态时，确保给定空速计算和存储的正确性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 145,
        "requirement": "空速设置限幅值为（25m/s, 65m/s）",
        "original_safety_criterions": [
            "针对各项任务的持续时间进行检查，分析任务持续时间大于规定时间等情况下，功能处理的正确性",
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "针对各项任务的持续时间进行检查，分析任务持续时间小于规定时间等情况下，功能处理的正确性",
            "针对各项任务的先后执行时序进行检查，分析任务执行时序与规定时序不一致时，功能处理的正确性",
            "各功能点控制逻辑之间的时序关系、约束关系、并发关系和组合关系是否正确"
        ],
        "safety_requirements": [
            "系统应检查空速设置限幅值任务的执行时序，确保当时序与规定不一致时，功能处理的正确性符合（25m/s, 65m/s）的限幅要求。",
            "系统应验证空速设置限幅值（25m/s, 65m/s）的任务持续时间，当持续时间大于或小于规定时间时，确保功能处理的正确性。",
            "系统应对空速设置限幅值的逻辑判断条件及分支进行检查，识别逻辑恒假、恒真、条件错误或分支遗漏等情况，并确保功能处理的正确性。",
            "系统应验证空速设置限幅值（25m/s, 65m/s）时各功能点的控制逻辑时序、约束、并发及组合关系的正确性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 146,
        "requirement": "发送“取消定高”指令时，从“定高”或“高度设置”指令控制中退出，给定高度取为目标航路点的高度",
        "original_safety_criterions": [
            "工作状态发生转移时，对功能接口数据的取值进行检查，分析“取值发生变化或者取值区间发生变化”等情况下输出的正确性",
            "对软件状态空间中两两状态之间的转移条件进行检查，分析转移条件“未设置、始终满足、无法满足”等情况下状态转移的正确性",
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "各模态的进入条件和退出条件是否一致？",
            "下发危险的控制指令或动作时，是否有依据设备状态进行合理性判断？"
        ],
        "safety_requirements": [
            "系统在工作状态转移至‘取消定高’时，应检查功能接口数据的取值变化或取值区间变化，确保给定高度准确切换至目标航路点的高度",
            "系统在发送‘取消定高’指令时，应验证从‘定高’或‘高度设置’状态退出的条件一致性，并执行目标航路点高度的强制更新",
            "系统应对‘定高’与‘高度设置’状态间的转移条件进行全面检测，包括未设置、始终满足及无法满足场景，确保状态转移逻辑正确且高度参数同步更新",
            "系统在不同工作阶段切换时，应检查控制解算过程与当前状态的匹配性，特别在‘取消定高’指令下需强制退出控制并锁定目标航路点高度",
            "系统下发‘取消定高’指令前，应基于当前飞行设备状态进行合理性判定，防止无效指令触发非预期状态迁移"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 147,
        "requirement": "发送“取消定速”指令时，从“定速”或“速度设置”指令控制中退出，给定速度取值与自主控制相同",
        "original_safety_criterions": [
            "工作状态发生转移时，对功能接口数据的取值进行检查，分析“取值发生变化或者取值区间发生变化”等情况下输出的正确性",
            "针对各项任务的执行条件中的输入数据取值进行检查，分析输入数据取值使得任务执行条件延迟满足时，功能处理的正确性",
            "对接口数据的取值时刻进行检查，分析输入取值时刻为“过早停止、过晚停止”等情况下输出的正确性",
            "针对各项任务的执行条件中的输入数据取值进行检查，分析输入数据取值使得任务执行条件提前满足时，功能处理的正确性"
        ],
        "safety_requirements": [
            "系统在发送‘取消定速’指令时，应检查输入数据取值，确保任务执行条件提前满足时能正确退出‘定速’或‘速度设置’控制，且给定速度取值与自主控制一致。",
            "系统在发送‘取消定速’指令时，应验证输入数据取值延迟满足情况下的功能处理正确性，确保及时退出控制状态并同步速度取值。",
            "系统工作状态转移时，应检查功能接口数据的取值或取值区间变化，确保发送‘取消定速’指令后退出控制状态，且速度取值与自主控制严格一致。",
            "系统应对‘取消定速’指令的输入取值时刻进行验证，分析‘过早停止’或‘过晚停止’情况下的输出正确性，确保控制状态切换及时且速度取值准确。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 148,
        "requirement": "发送“恢复航线”指令时，从侧向指令控制中退出，并从当前位置切入原来的航线到点",
        "original_safety_criterions": [
            "余度切换条件满足时，是否会导致当前正在运行的功能输出值出现异常？",
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "针对各项任务的持续时间进行检查，分析任务持续时间小于规定时间等情况下，功能处理的正确性",
            "针对各项任务的持续时间进行检查，分析任务持续时间大于规定时间等情况下，功能处理的正确性"
        ],
        "safety_requirements": [
            "系统应检查‘恢复航线’指令的任务持续时间，在持续时间大于规定时间时，确保正确退出侧向指令控制并切入原航线到点。",
            "当余度切换条件满足时，系统应确保发送‘恢复航线’指令的功能输出值正常，不产生异常。",
            "系统应检查‘恢复航线’指令的持续时间，在短于规定时间时确保功能处理的正确性。",
            "系统在处理‘恢复航线’指令时，应对当前状态和工作阶段进行输入检查，防止‘未考虑工作阶段或状态’导致的航线切入错误。",
            "系统应对发送‘恢复航线’指令的逻辑判断条件和分支进行检查，避免恒假、恒真、条件错误或遗漏，确保功能处理正确。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 149,
        "requirement": "“取消定高”、“取消定速”和“恢复航线”指令需在指令控制模式下且已发送过相应的进入指令控制的指令后才有效",
        "original_safety_criterions": [
            "对状态进入条件进行检查，分析状态执行过程中进入条件“满足、不满足、再次满足”等情况下状态执行的正确性",
            "系统进行控制的顺序和时序是否与硬件协调，控制条件是否完备且前后一致？",
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "输出控制状态的时机是否符合场景要求？",
            "下发危险的控制指令或动作时，是否有依据设备状态进行合理性判断？"
        ],
        "safety_requirements": [
            "系统应确保在执行‘取消定高’、‘取消定速’和‘恢复航线’指令前验证当前处于指令控制模式，且已发送过对应的进入指令控制的指令。",
            "系统在指令控制模式下应检查状态进入条件的动态变化（满足、不满足、再次满足），确保‘取消定高’、‘取消定速’和‘恢复航线’指令的执行正确性。",
            "系统下发‘取消定高’、‘取消定速’和‘恢复航线’指令时，应依据设备当前状态进行合理性判断，防止无效或冲突操作。",
            "系统应验证‘取消定高’、‘取消定速’和‘恢复航线’指令的输出控制时机是否符合预设的场景要求。",
            "系统应确保控制指令的顺序和时序与硬件协调，且指令执行条件（如模式、前置指令）前后一致，避免状态冲突。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 150,
        "requirement": "“取消定高”、“取消定速”和“恢复航线”指令有效处理后，只有在纵向、侧向、速度三方面均退出指令控制状态下，控制模式才恢复为自主控制，否则保持指令控制模式",
        "original_safety_criterions": [
            "系统进行控制的顺序和时序是否与硬件协调，控制条件是否完备且前后一致？",
            "各模态的进入条件和退出条件是否一致？",
            "输出控制状态的时机是否符合场景要求？",
            "下发危险的控制指令或动作时，是否有依据设备状态进行合理性判断？",
            "对于关键控制或动作，是否有超时判断，以处理硬件状态长时间达不到控制要求的情况？"
        ],
        "safety_requirements": [
            "系统在执行‘取消定高’、‘取消定速’或‘恢复航线’指令后，应严格检查纵向、侧向、速度三方面的指令控制状态退出情况，仅在全部满足退出条件时恢复自主控制模式，否则维持指令控制模式。",
            "系统在控制模式切换时，应对硬件状态进行合理性判断，确保‘取消定高’、‘取消定速’和‘恢复航线’指令的执行逻辑与硬件协调一致。",
            "系统应确保‘取消定高’、‘取消定速’和‘恢复航线’指令的模态进入/退出条件定义一致，并在状态切换时进行实时验证。",
            "系统在处理‘取消定高’、‘取消定速’和‘恢复航线’指令时，应设置超时判断机制，若硬件状态长时间未达到控制要求，需触发异常处理流程。",
            "系统应验证控制模式恢复为自主控制的时机与场景要求的一致性，确保仅在纵向、侧向、速度三方面均退出指令控制且符合场景条件时执行切换。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 151,
        "requirement": "遥控控制模式分为带内回路遥控和不带内回路遥控两种模式",
        "original_safety_criterions": [
            "输出回路是否有检测机制，在不影响正常输出时进行回路状态检测？"
        ],
        "safety_requirements": [
            "系统应具备带内回路遥控和不带内回路遥控模式的回路状态实时检测机制，且检测过程不得干扰遥控控制模式的正常输出。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 152,
        "requirement": "不带内回路遥控直接控制舵面（升降舵，副翼和方向舵），将遥控操纵量进行合适的比例转换。",
        "original_safety_criterions": [
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "各功能点控制逻辑之间的时序关系、约束关系、并发关系和组合关系是否正确",
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统应检查不同余度工作状态，确保在'两个或多个余度处于不同状态'时，遥控直接控制舵面（升降舵、副翼、方向舵）的功能实现正确性。",
            "系统应验证遥控直接控制舵面的逻辑时序、约束及比例转换关系，确保无内回路时遥控操纵量转换逻辑的正确性。",
            "系统应对舵面控制逻辑的判断条件和分支进行检查，覆盖'逻辑恒假、恒真、条件错误、分支遗漏'等场景，确保异常条件下的功能处理正确性。",
            "系统在不同工作阶段和状态下应动态检查遥控操纵量，确保控制解算过程符合当前状态，避免未考虑工作阶段或状态的错误处理。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 153,
        "requirement": "带内回路遥控将遥控操纵量转换为对应的给定姿态角，通过自主控制规律（式（2-1）、式（2-2）和式（2-3））解算出相应的舵偏控制指令控制舵面。",
        "original_safety_criterions": [
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性",
            "各功能点控制逻辑之间的时序关系、约束关系、并发关系和组合关系是否正确",
            "对功能的控制解算结果进行检查，分析控制解算结果为“正常值、异常值、边界值、极大极小值”等情况下功能处理的正确性"
        ],
        "safety_requirements": [
            "系统应检查带内回路遥控的余度工作状态，确保在两个或多个余度处于不同状态时，遥控操纵量至给定姿态角的转换及自主控制规律（式（2-1）、式（2-2）和式（2-3））解算舵偏控制指令的准确性。",
            "系统应对带内回路遥控的逻辑判断条件及分支进行验证，确保在‘逻辑恒假、逻辑恒真、条件错误、分支遗漏’等情况下功能处理的正确性。",
            "系统应根据不同工作状态和阶段检查遥控操纵量及给定姿态角的输入，确保在‘未考虑工作阶段或状态’的情况下功能处理的正确性。",
            "系统应验证带内回路遥控控制逻辑与自主控制规律（式（2-1）、式（2-2）和式（2-3））之间的时序、约束、并发及组合关系的正确性。",
            "系统应检查控制解算结果（正常值、异常值、边界值、极大极小值），确保其符合预期，并在异常或边界情况下触发安全响应机制。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 154,
        "requirement": "两种遥控模式下，对节风门的遥控是一样的。",
        "original_safety_criterions": [
            "两个或多个存在转移关系的状态具有同一个功能，对状态转移前后功能的执行情况进行检查，分析功能在状态转移后“开始执行、保持执行、中断执行”等情况下功能处理的正确性",
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "两个或多个状态之间不存在转移关系，对这些状态的进入条件进行检查，分析进入条件“同时满足、状态执行过程中满足”等情况下状态执行的正确性"
        ],
        "safety_requirements": [
            "系统在两种遥控模式下，应检查节风门的遥控状态执行条件，确保‘同时满足’或‘状态执行过程中满足’时的操作正确性。",
            "系统在遥控模式切换时，应对节风门的功能处理进行验证，确保切换后‘开始执行、保持执行、中断执行’等操作的逻辑正确性。",
            "系统应确保两种遥控模式下节风门遥控指令的一致性，提供模式切换时的状态保持机制，防止异常变化。",
            "系统应对节风门遥控操作进行实时一致性监控，在检测到跨模式执行偏差时触发告警并保持安全状态。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 155,
        "requirement": "遥控控制有最高的控制权限，可以在任何时候任何情况切换到遥控控制模式。",
        "original_safety_criterions": [
            "对两个或多个存在转移关系的状态下、设置了优先级的不同功能进行检查，分析“高优先级切换低优先级、低优先级切换高优先级”等情况下状态与功能的正确性",
            "余度切换时间过长，软件是否有正确处理？",
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "对于关键控制或动作，是否有超时判断，以处理硬件状态长时间达不到控制要求的情况？"
        ],
        "safety_requirements": [
            "系统在不同工作阶段和状态下切换至遥控控制模式时，应检查功能输入，确保‘未考虑工作阶段’或‘未考虑工作状态’情况下切换逻辑的正确性。",
            "系统应在余度切换时间超过阈值时强制触发遥控控制模式，确保任何情况下均能及时完成模式切换。",
            "系统应对遥控控制模式与其他状态之间的转移进行检查，确保‘从其他状态切换到遥控控制模式’及反向切换时功能与状态的一致性。",
            "系统应在状态转移过程中验证遥控控制的最高权限有效性，防止非授权干预导致权限失效。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 156,
        "requirement": "带内回路遥控在飞机处于地面状态时，方向舵偏角指令计算公式为：δy = KyY . Y + [Kyg (K . (-yg) + Ky . wy)] + Kywy . wy。",
        "original_safety_criterions": [
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "对不同余度的输出数据进行检查，分析“单个余度故障、多个余度均故障”情况下，功能实现的正确性",
            "对不同余度的离散型输出数据取值进行检查，分析两个或多个余度输出数据“取值不一致”等情况下，功能实现的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统在地面状态工作阶段计算方向舵偏角指令δy时，应对输入参数（Y, yg, wy等）进行状态检查，确保未遗漏工作阶段或状态条件导致的公式逻辑错误。",
            "系统应检查不同余度的工作状态，在多个余度处于不同状态时，确保方向舵偏角指令δy的计算公式逻辑正确性，并隔离异常余度输出。",
            "系统应对不同余度的方向舵偏角指令δy计算结果进行实时一致性校验，在取值不一致时触发纠错机制或告警。",
            "系统在检测到单个或多个余度故障时，应动态调整方向舵偏角指令δy的计算逻辑，确保余度失效不影响整体功能正确性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 157,
        "requirement": "给定姿态角和节风门偏度δp与遥控操纵量的线性对应关系。",
        "original_safety_criterions": [
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析‘未考虑工作阶段、未考虑工作状态’等情况下功能处理的正确性",
            "对不同余度所处的工作状态进行检查，分析‘两个或多个余度处于不同状态’等情况下，功能实现的正确性",
            "对功能的逻辑判断条件和逻辑分支进行检查，分析‘逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏’等情况下功能处理的正确性"
        ],
        "safety_requirements": [
            "系统应对姿态角和节风门偏度δp与遥控操纵量的线性对应关系的逻辑判断条件及分支进行检查，确保‘逻辑恒假、逻辑恒真、判断条件错误、分支遗漏’等情况下的功能处理正确性。",
            "系统在多个余度处于不同工作状态时，应确保姿态角和节风门偏度δp与遥控操纵量的线性对应关系计算正确，并进行多状态校验。",
            "系统应根据不同工作状态及阶段检查姿态角和节风门偏度δp的输入，验证‘未考虑工作阶段’或‘未考虑工作状态’情况下的控制解算正确性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 158,
        "requirement": "系统应能够沿着预先装订的航线飞行。",
        "original_safety_criterions": [
            "对功能的循环判断条件进行检查，分析“循环判断条件恒假、恒真”等情况下功能处理的正确性",
            "针对各项任务的先后执行时序进行检查，分析任务执行时序与规定时序不一致时，功能处理的正确性",
            "对不同余度的执行时序进行检查，分析“两个或多个余度执行时序未同步”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统应检查不同余度的执行时序同步性，确保在‘两个或多个余度执行时序未同步’情况下，仍能正确实现沿预先装订航线的飞行功能。",
            "系统应验证任务执行时序与规定时序的一致性，在时序不一致时维持沿预先装订航线的飞行功能处理的正确性。",
            "系统应对航线飞行的循环判断条件进行实时监控，确保‘条件恒假、恒真’等异常情况下功能处理的正确性，并触发相应容错机制。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 159,
        "requirement": "系统在五边飞行段应控制飞机处于定高飞行状态，并在导航方式为五边导航时，飞行阶段回报为五边飞行阶段，控制方式同定高段。",
        "original_safety_criterions": [
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "两个或多个状态之间不存在转移关系，对这些状态的进入条件进行检查，分析进入条件“同时满足、状态执行过程中满足”等情况下状态执行的正确性",
            "系统进行控制的顺序和时序是否与硬件协调，控制条件是否完备且前后一致？",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统在五边飞行段应确保控制顺序、时序与硬件协调，且控制条件完备且前后一致。",
            "系统应检查五边飞行段定高飞行状态的进入条件，确保在进入条件同时满足或执行过程中满足时，状态执行正确。",
            "系统应根据五边飞行段的工作阶段和状态进行控制解算，确保输入检查覆盖未考虑阶段或状态的情况。",
            "系统应检查不同余度的工作状态，确保在多个余度处于不同状态时，五边飞行段定高控制功能正确执行。",
            "系统在五边导航方式下应验证飞行阶段回报为五边飞行阶段，并确保控制方式与定高段严格一致。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 160,
        "requirement": "系统在下滑1段应控制飞机沿预先设定的下滑线按给定空速从五边飞行高度下滑到下滑1段结束高度100m，纵向控制飞机跟踪下滑线高度，横侧向消除飞机相对机场轴线的侧偏距，在有侧风的情况下，飞机无侧滑角。",
        "original_safety_criterions": [
            "系统进行控制的顺序和时序是否与硬件协调，控制条件是否完备且前后一致？",
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性",
            "各功能点控制逻辑之间的时序关系、约束关系、并发关系和组合关系是否正确"
        ],
        "safety_requirements": [
            "系统应检查下滑1段的逻辑判断条件和分支，确保在‘逻辑恒假、恒真、判断条件错误、分支遗漏’等情况下，飞机仍能按预定下滑线、空速和高度完成纵向跟踪及横侧向侧偏距消除，并在侧风条件下保持无侧滑角。",
            "系统应验证下滑1段控制逻辑的时序关系、约束关系及并发组合关系，确保纵向高度跟踪和横侧向侧偏距消除的功能顺序与硬件协调，且控制条件完备一致。",
            "系统在下滑1段控制过程中，需确保纵向与横侧向控制的时序与硬件动作严格同步，控制条件（如空速、高度、侧风补偿）前后一致且覆盖所有场景。",
            "系统应监测不同余度的工作状态差异，当出现‘两个或多个余度处于不同状态’时，仍能保障下滑1段的控制功能（包括高度跟踪、侧偏距消除及侧风抗干扰）正确执行。",
            "系统应根据当前工作阶段和状态动态检查功能输入，确保未遗漏阶段或状态因素时，下滑1段控制功能（空速、高度、侧偏距、侧风处理）的正确性和完整性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 161,
        "requirement": "系统在下滑2段应控制飞机从下滑1段结束高度100m至拉平高度17m，使飞机以定直侧滑的方式下滑。",
        "original_safety_criterions": [
            "对软件状态空间中两两状态之间的转移条件进行检查，分析转移条件“未设置、始终满足、无法满足”等情况下状态转移的正确性",
            "系统进行控制的顺序和时序是否与硬件协调，控制条件是否完备且前后一致？",
            "对外部设备（如传感器、NVM、数据库、其他系统等）进行检查，分析源设备处于“降级、维护”等情况下输出的正确性",
            "输出控制状态的时机是否符合场景要求？",
            "下发危险的控制指令或动作时，是否有依据设备状态进行合理性判断？"
        ],
        "safety_requirements": [
            "系统在下滑2段控制飞机从100m至17m时，应验证控制状态的输出时机符合场景时序要求，确保定直侧滑方式的完整性。",
            "系统在下滑2段过程中，需对外部设备（传感器、NVM、数据库等）进行状态检查，当设备处于降级或维护模式时，仍能保持控制输出的正确性。",
            "系统下发控制指令前，应对飞机当前下滑状态（高度100m至17m范围）进行实时合理性验证，阻止与当前状态冲突的危险指令执行。",
            "系统在下滑2段状态转移时，应检查转移条件是否满足‘已设置、可满足’要求，并确保以定直侧滑方式下滑的稳定性不受异常条件影响。",
            "系统在下滑2段的控制顺序和时序须与硬件动作严格同步，验证控制条件的完备性和一致性，避免因时序偏差导致飞行姿态失控。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 162,
        "requirement": "系统在拉平阶段应将飞机的轨迹倾角拉平，使飞机以小的下降速度着陆，横侧向的控制方式与下滑后段相同。",
        "original_safety_criterions": [
            "对软件状态空间中两两状态之间的转移条件进行检查，分析转移条件“未设置、始终满足、无法满足”等情况下状态转移的正确性",
            "系统进行控制的顺序和时序是否与硬件协调，控制条件是否完备且前后一致？",
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "输出控制状态的时机是否符合场景要求？",
            "下发危险的控制指令或动作时，是否有依据设备状态进行合理性判断？"
        ],
        "safety_requirements": [
            "系统在拉平阶段应确保输出控制状态的时机符合场景要求，正确拉平飞机的轨迹倾角，使飞机以小下降速度着陆，并保持横侧向控制方式与下滑后段一致。",
            "系统在下发拉平阶段的控制指令时，应根据飞机当前状态（如高度、速度）进行实时合理性判断，防止危险指令执行。",
            "系统应对拉平阶段与其它状态间的转移条件进行完整性检查，确保在条件‘未设置、始终满足、无法满足’时状态转移逻辑正确，不影响轨迹倾角控制。",
            "系统在拉平阶段的控制顺序和时序应与硬件动作严格协调，控制条件需具备完备性及一致性，保障轨迹倾角拉平过程与横侧向控制的同步性。",
            "系统在拉平阶段的功能解算过程中，应对输入数据进行工作阶段和状态标记检查，防止因未识别阶段或状态导致轨迹倾角或横侧向控制异常。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 163,
        "requirement": "系统在滚转改平阶段应从滚转改平高度1.5m到满足转换到着陆滑跑段的条件。",
        "original_safety_criterions": [
            "两个或多个状态之间不存在转移关系，对这些状态的进入条件进行检查，分析进入条件“同时满足、状态执行过程中满足”等情况下状态执行的正确性",
            "对软件状态空间中两两状态之间的转移条件进行检查，分析转移条件“未设置、始终满足、无法满足”等情况下状态转移的正确性",
            "对状态进入条件进行检查，分析状态执行过程中进入条件“满足、不满足、再次满足”等情况下状态执行的正确性"
        ],
        "safety_requirements": [
            "系统在滚转改平阶段与着陆滑跑段之间转换时，应检查状态进入条件，确保在条件‘同时满足’或‘状态执行过程中满足’的情况下，状态转换的正确性。",
            "系统应对滚转改平阶段到着陆滑跑段的转移条件进行有效性验证，确保在条件‘未设置、始终满足、无法满足’时，状态转移逻辑正确且明确。",
            "系统在滚转改平阶段执行过程中，应持续监测进入条件，确保条件‘满足、不满足、再次满足’时状态的正确执行及转换决策。",
            "系统应在滚转改平阶段高度达到1.5m时，验证转换到着陆滑跑段的必要条件完整性，防止非法状态转移。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 164,
        "requirement": "系统在着陆滑跑阶段应收到遥控接地信号或起落架全压缩信号或者链路异常75拍后，进入着陆滑跑段，以方向舵和刹车纠正飞机相对跑道轴线的侧偏距及偏航角。",
        "original_safety_criterions": [
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "针对各项任务的持续时间进行检查，分析任务持续时间小于规定时间等情况下，功能处理的正确性",
            "针对各项任务的先后执行时序进行检查，分析任务执行时序与规定时序不一致时，功能处理的正确性",
            "针对各项任务的持续时间进行检查，分析任务持续时间大于规定时间等情况下，功能处理的正确性"
        ],
        "safety_requirements": [
            "系统在着陆滑跑阶段应验证遥控接地信号、起落架全压缩信号及链路异常75拍的逻辑判断条件，确保在‘逻辑恒假、逻辑恒真、条件错误、分支遗漏’情况下仍能准确进入滑跑段并执行方向舵与刹车控制。",
            "系统应检查着陆滑跑段控制任务的持续时间，在持续时间超过规定阈值时保证方向舵与刹车对侧偏距及偏航角的纠正功能有效性，并触发异常告警机制。",
            "系统应验证着陆滑跑段各控制任务的执行时序，在时序与规定不符时确保方向舵与刹车控制的实时一致性及容错处理能力。",
            "系统应基于当前飞行阶段和工作状态进行控制解算输入校验，防止‘未识别工作阶段或状态’导致的方向舵与刹车指令偏差。",
            "系统应对着陆滑跑段控制任务的持续时间进行下限检测，在持续时间不足规定阈值时维持控制逻辑完整性并输出状态诊断信息。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 165,
        "requirement": "系统在飘落阶段应控制飞机在空中停车后进入飘落段。",
        "original_safety_criterions": [
            "进行硬件控制后，是否有监控并判断硬件状态与控制要求的匹配性？",
            "系统恢复后，记录的关键状态是否仍满足实时性要求？",
            "系统的掉电恢复或跑飞复位机制启动后，是否能恢复到正常工作状态？"
        ],
        "safety_requirements": [
            "系统在恢复后，应确保记录的飘落阶段关键状态满足实时性要求。",
            "系统掉电恢复或跑飞复位机制启动后，应能恢复至正常工作状态，特别是在飘落阶段维持控制飞机空中停车后进入飘落段的功能。",
            "系统执行硬件控制后，应监控并验证飞机在空中停车后进入飘落段的硬件状态与控制要求的匹配性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 166,
        "requirement": "遥控操纵量对应舵面偏角指令和节风门偏度指令，舵偏角和节风门指令与遥控操纵量的线性对应关系为：δz (－28º~+28º)，δx (－20º~+20º)，δy (－25º~+25º)，δp (0～115％)。限幅为[－30°,+20 °]。",
        "original_safety_criterions": [
            "对不同余度的输出数据进行检查，分析“单个余度故障、多个余度均故障”情况下，功能实现的正确性",
            "传感器采集范围是否明确（上限和下限），超过采集范围值时是否报传感器故障？",
            "对功能的控制解算过程进行检查，分析控制解算过程出现超时（未在规定时间内返回结果）等情况下的功能处理正确性",
            "多个功能串行执行，前序功能的输出数据是后续功能的输入数据。对前序功能的输出数据进行检查，分析数据取值为“边界值组合、初始值组合、安全值组合、缺省值组合”等情况下多功能处理的正确性",
            "对功能的控制解算结果进行检查，分析控制解算结果为“正常值、异常值、边界值、极大极小值”等情况下功能处理的正确性"
        ],
        "safety_requirements": [
            "系统应对前序功能输出的舵面偏角指令和节风门指令进行边界值、初始值、安全值及缺省值组合检查，确保遥控操纵量与δz(－28º~+28º)、δx(－20º~+20º)、δy(－25º~+25º)、δp(0～115％)的线性对应关系及限幅[－30°,+20 °]的准确性。",
            "系统在单个或多个余度故障时，应验证舵偏角δz、δx、δy和δp的指令输出，确保其线性范围及限幅[－30°,+20 °]符合设计要求。",
            "系统应对控制解算结果（正常值、异常值、边界值、极大极小值）进行实时校验，确保舵偏角与节风门指令的线性关系（δz/δx/δy/δp范围）及限幅[－30°,+20 °]的合规性。",
            "系统应在控制解算超时情况下触发预设容错机制，保证舵面偏角指令和节风门指令的输出处于安全状态。",
            "系统应实时监测传感器采集范围（δz/δx/δy/δp），超限时立即报故障并采用安全值替代输出。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 167,
        "requirement": "升降舵操纵量(0～255)，副翼操纵量(0～255)，方向舵操纵量(0～255)，节风门操纵量(0～255)。",
        "original_safety_criterions": [
            "各功能点控制逻辑之间的时序关系、约束关系、并发关系和组合关系是否正确",
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "对功能的控制解算结果进行检查，分析控制解算结果为“正常值、异常值、边界值、极大极小值”等情况下功能处理的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统应对升降舵、副翼、方向舵和节风门操纵量的逻辑判断条件及分支进行完整性检查，确保在逻辑恒假、恒真、条件错误或分支遗漏时功能处理的正确性。",
            "系统应对升降舵、副翼、方向舵和节风门操纵量（0～255）进行有效性验证，确保正常值、异常值、边界值、极大极小值等情况的正确处理。",
            "系统应检查升降舵、副翼、方向舵和节风门操纵量之间的时序关系、约束关系、并发关系及组合关系，确保其逻辑一致性。",
            "系统在多个余度处于不同工作状态时，应确保升降舵、副翼、方向舵和节风门操纵量（0～255）功能实现的正确性和冗余容错性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 168,
        "requirement": "通过遥控开关指令分别将副翼和升降舵偏度衰减为上述值的 2/3，从而对应关系变为：δz (－20º~+20º)，δx (－13º~+13º)，δy (－25º~+25º)，δp (0～115％)。",
        "original_safety_criterions": [
            "对不同余度的连续型输出数据取值进行检查，分析两个或多个余度输出数据‘取值不一致，即取值之差超出规定阈值’等情况下，功能实现的正确性",
            "对不同余度接收到的同一输入数据取值进行检查，分析两个或多个余度接收到的同一输入数据取值不一致时，功能实现的正确性",
            "各功能点控制逻辑之间的时序关系、约束关系、并发关系和组合关系是否正确",
            "对不同余度所处的工作状态进行检查，分析‘两个或多个余度处于不同状态’等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统在执行遥控开关指令调整副翼和升降舵偏度衰减时，应验证 δz (－20º~+20º)、δx (－13º~+13º)、δy (－25º~+25º) 和 δp (0～115％) 的对应关系正确性，并确保控制逻辑的时序、约束及组合关系符合要求。",
            "系统应对不同余度的连续输出数据（副翼和升降舵偏度衰减值）进行实时一致性检查，当余度间数据差值超出设定阈值时，需确保功能执行逻辑的正确性。",
            "系统在检测到不同余度接收的同一输入数据（如遥控指令）取值不一致时，应触发数据校验机制，并保证副翼和升降舵偏度衰减功能的正确执行。",
            "系统应监测各余度的工作状态，当检测到两个或多个余度处于不同状态时，需确保副翼和升降舵偏度衰减功能仍能按设定参数（δz、δx、δy、δp）正确执行。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 169,
        "requirement": "升降舵操纵量(0～255)、副翼操纵量(0～255)、方向舵操纵量(0～255)、节风门操纵量(0～255)的控制范围和精度要求",
        "original_safety_criterions": [
            "对功能的控制解算结果进行检查，分析控制解算结果为“正常值、异常值、边界值、极大极小值”等情况下功能处理的正确性"
        ],
        "safety_requirements": [
            "系统应检查升降舵、副翼、方向舵、节风门操纵量（0～255）的控制解算结果，确保在正常值、异常值、边界值、极大极小值等情况下功能处理的正确性，并符合控制范围和精度要求。",
            "系统在检测到控制解算结果为异常值或超出允许范围时，应立即触发告警机制，并限制超出预定范围的操纵量输出。",
            "系统应对升降舵、副翼、方向舵、节风门操纵量的控制解算数据实施完整性保护，防止篡改或错误数据影响控制精度。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 170,
        "requirement": "自主控制、人工修正控制、指令控制、姿态遥控和舵面遥控五种飞行控制模式的实现",
        "original_safety_criterions": [
            "系统的各种运行场景切换过程中，各项控制功能所可能引发的危险？",
            "各模态的进入条件、退出条件、约束条件是否充分、准确？",
            "系统进行控制的顺序和时序是否与硬件协调，控制条件是否完备且前后一致？",
            "各功能点控制逻辑之间的时序关系、约束关系、并发关系和组合关系是否正确"
        ],
        "safety_requirements": [
            "系统应验证自主控制、人工修正控制、指令控制、姿态遥控和舵面遥控五种飞行控制模式间的时序、约束、并发及组合关系，确保模式切换时系统行为正确且无冲突。",
            "系统在五种飞行控制模式切换过程中，需对控制功能进行风险评估，实现实时安全检查机制，避免危险操作触发。",
            "系统应严格定义五种飞行控制模式的进入、退出及约束条件，确保条件充分性、准确性，并在切换前完成状态同步验证。",
            "系统需确保五种飞行控制模式的控制顺序、时序与硬件动作协调一致，且控制条件逻辑完备，切换前后保持严格一致性。",
            "系统应在模式切换过程中实时监测控制信号状态，对异常切换请求进行拦截，并触发应急处理机制。",
            "系统需对五种飞行控制模式的切换操作进行完整性审计，包括切换时间、操作源及上下文环境参数，确保可追溯性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 171,
        "requirement": "控制模式切换时的特别处理",
        "original_safety_criterions": [
            "两个或多个存在转移关系的状态具有同一个功能，对状态转移前后功能的执行情况进行检查，分析功能在状态转移后“开始执行、保持执行、中断执行”等情况下功能处理的正确性",
            "工作状态发生转移时，对功能接口数据的取值进行检查，分析“取值发生变化或者取值区间发生变化”等情况下输出的正确性",
            "对软件状态空间中两两状态之间的转移条件进行检查，分析转移条件“未设置、始终满足、无法满足”等情况下状态转移的正确性"
        ],
        "safety_requirements": [
            "系统在控制模式切换时，应对具有相同功能的不同模式进行执行情况检查（开始执行、保持执行、中断执行），确保功能处理的正确性。",
            "系统在控制模式切换时，应验证状态转移条件的设置（未设置、始终满足、无法满足），确保状态转移的正确性。",
            "系统在控制模式切换时，应检查功能接口数据的取值或取值区间变化，并确保输出结果的正确性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 172,
        "requirement": "自主控制模式下，从爬升 2 段（含）到飞完航线切入五边航线（不含）之间的阶段发送 3.2.4 所述指令中的任意一个均可转入指令控制模式",
        "original_safety_criterions": [
            "对接口数据的发送、接收周期进行检查，分析发送和接收周期是否匹配"
        ],
        "safety_requirements": [
            "系统在自主控制模式下从爬升 2 段到切入五边航线阶段发送指令时，应检查接口数据的发送与接收周期，确保其匹配性。",
            "系统在接收到 3.2.4 所述指令转入指令控制模式前，应验证发送周期与接收周期的一致性，避免因周期偏差导致模式转换异常。",
            "系统应在自主控制模式与指令控制模式切换过程中，对接口数据进行实时监控，并在周期不匹配时触发告警机制。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 173,
        "requirement": "指令控制模式下，发“自主控制”指令可以切换回自主控制模式",
        "original_safety_criterions": [
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "状态执行过程中，软件掉电重启，对重启后的状态进行检查，分析重启后“状态未恢复、错误恢复”等情况下状态执行的正确性"
        ],
        "safety_requirements": [
            "系统在指令控制模式下切换至自主控制模式时，应对功能输入进行状态检查，确保‘已正确识别当前工作阶段’且‘已明确进入指令控制模式’，防止‘未考虑工作阶段’或‘未考虑指令控制模式’导致切换异常。",
            "系统处理“自主控制”指令时，应验证当前状态与目标模式的兼容性，并在功能解算过程中检测无效输入或未授权操作，确保模式切换的完整性与可控性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 174,
        "requirement": "自主控制与指令控制之间的切换不改变控制律，不需要作软化处理",
        "original_safety_criterions": [
            "输出控制状态的时机是否符合场景要求？",
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "对于关键控制或动作，是否有超时判断，以处理硬件状态长时间达不到控制要求的情况？"
        ],
        "safety_requirements": [
            "系统应在自主控制与指令控制切换时验证切换时机符合场景要求，确保控制律未变更且无需软化处理。",
            "系统应在不同工作阶段和状态下检查自主控制与指令控制的输入条件，分析‘未考虑工作阶段’或‘未考虑工作状态’对切换逻辑的影响，确保切换正确性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 175,
        "requirement": "自主控制模式时，发“人工修正”指令可以切换到人工修正模式",
        "original_safety_criterions": [
            "系统的各种运行场景切换过程中，各项控制功能所可能引发的危险？",
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "对两个或多个存在转移关系的状态下、设置了优先级的不同功能进行检查，分析“高优先级切换低优先级、低优先级切换高优先级”等情况下状态与功能的正确性"
        ],
        "safety_requirements": [
            "系统在自主控制模式向人工修正模式切换时，应检查功能输入是否基于当前工作阶段和状态，确保‘人工修正’指令仅能在有效条件下触发模式切换。",
            "系统应对自主控制模式与人工修正模式的切换过程进行风险评估，识别并消除切换过程中控制功能可能引发的危险。",
            "系统在模式切换中应验证优先级逻辑，确保高优先级模式（如人工修正）可即时覆盖低优先级模式（如自主控制），反之需通过授权确认机制。",
            "系统应在模式切换后强制重新校验控制解算参数，避免残留数据导致的功能异常。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 176,
        "requirement": "人工修正切换到自主控制时，在控制律中去掉人工修正量，不需要作软化处理。",
        "original_safety_criterions": [
            "输出控制状态的时机是否符合场景要求？",
            "对软件状态空间中两两状态之间的转移条件进行检查，分析转移条件“未设置、始终满足、无法满足”等情况下状态转移的正确性",
            "故障检测是否有防虚警处理，防虚警处理是否会满足告警处置的实时性要求？"
        ],
        "safety_requirements": [
            "系统在人工修正切换到自主控制时，应检查输出控制状态的时机，确保符合场景要求并正确去除人工修正量。",
            "系统在人工修正切换到自主控制时，应对状态转移条件进行检查，确保在条件未设置、始终满足或无法满足时状态转移的正确性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 177,
        "requirement": "自主控制切换到姿态遥控时，控制律结构发生变化，需要对给定姿态角进行软化，软化时间为2秒，并且需要进行节风门指令软化，软化时间为2秒。",
        "original_safety_criterions": [
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "对软件状态空间中两两状态之间的转移条件进行检查，分析转移条件“未设置、始终满足、无法满足”等情况下状态转移的正确性",
            "对于关键控制或动作，是否有超时判断，以处理硬件状态长时间达不到控制要求的情况？"
        ],
        "safety_requirements": [
            "系统在自主控制切换到姿态遥控时，应检查状态转移条件的设置，确保在‘未设置、始终满足、无法满足’等情况下，状态转移逻辑正确执行。",
            "系统在不同工作状态（如自主控制与姿态遥控）切换时，应对控制律结构变化及姿态角、节风门指令的软化处理进行输入检查，确保工作阶段和状态的正确关联。",
            "系统在自主控制切换到姿态遥控过程中，若硬件状态超过设定时间（如2秒）未达到控制要求，应触发超时判断机制并执行安全响应。",
            "系统应对姿态角软化（2秒）和节风门指令软化（2秒）的处理过程进行实时验证，确保其在不同状态下的计算准确性与执行稳定性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 178,
        "requirement": "姿态遥控切换到自主控制时，控制律结构发生变化，需要对给定姿态角进行软化，软化时间为2秒。如果飞机在巡航（爬升2、定高和下降），则将从点经纬度改为飞机所处当前位置经纬度，以引导飞机向原来的到点飞行。需要进行节风门指令软化，软化时间为2秒。",
        "original_safety_criterions": [
            "对两个或多个存在转移关系的状态下、设置了优先级的不同功能进行检查，分析“高优先级切换低优先级、低优先级切换高优先级”等情况下状态与功能的正确性",
            "对软件状态空间中两两状态之间的转移条件进行检查，分析转移条件“未设置、始终满足、无法满足”等情况下状态转移的正确性",
            "系统的各种运行场景切换过程中，各项控制功能所可能引发的危险？",
            "余度切换时间过长，软件是否有正确处理？",
            "对于关键控制或动作，是否有超时判断，以处理硬件状态长时间达不到控制要求的情况？"
        ],
        "safety_requirements": [
            "系统在姿态遥控切换到自主控制时，应确保控制律结构变化的处理时间不超过2秒，并验证姿态角软化、节风门指令软化及经纬度切换的正确性。",
            "系统在姿态遥控切换到自主控制过程中，应对控制律结构变化进行实时风险评估，确保姿态角软化（2秒）和节风门指令软化（2秒）的执行安全性，防止巡航阶段经纬度切换导致的路径偏差。",
            "系统在切换状态时，应对硬件状态进行超时监控（阈值可配置），若长时间未达到控制要求，则触发安全回退机制。",
            "系统应对姿态遥控与自主控制之间的双向切换进行功能完整性检查，确保控制律结构变化时姿态角和节风门指令的软化逻辑（2秒）严格符合预设条件。",
            "系统应检测姿态遥控切换到自主控制的状态转移条件（未设置/始终满足/无法满足），并确保软化处理（2秒）与经纬度切换动作的同步性和一致性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 179,
        "requirement": "自主控制切换到舵面遥控时，转为直接舵面控制，对舵偏指令进行软化，软化时间为2秒，并且需要进行节风门指令软化，软化时间为2秒。",
        "original_safety_criterions": [
            "故障项的检测逻辑是否合理，检测方式是否会对设备正常工作产生影响？",
            "对系统状态、工作阶段或系统任务对应的软件状态进行检查，分析“不存在对应软件状态、软件与系统不一致”等情况下状态执行的正确性",
            "软件掉电重启，对重启时接口数据通信进行检查，分析接口数据通信“中断、重新连接、无法恢复”等情况下输出的正确性"
        ],
        "safety_requirements": [
            "系统在软件掉电重启时，应检查接口数据通信状态，确保在‘中断、重新连接、无法恢复’情况下，自主控制切换到舵面遥控时仍能正确执行舵偏指令和节风门指令的2秒软化处理。",
            "系统在自主控制切换到舵面遥控时，应验证软件状态与系统状态的一致性，在‘不存在对应软件状态’或‘软件与系统不一致’情况下，确保直接舵面控制及2秒指令软化正确执行。",
            "系统在自主控制切换到舵面遥控时，应确保检测逻辑合理性且不影响设备正常工作，特别在舵偏指令和节风门指令的2秒软化过程中维持控制稳定性。",
            "系统应在状态切换期间实时监控舵偏指令和节风门指令的软化过程，确保2秒软化时间的严格遵循，并在异常时触发安全恢复机制。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 180,
        "requirement": "舵面遥控切换到自主控制时，需要进行具体的操作，但文档未详细描述。建议进一步明确具体的控制律变化和软化处理。",
        "original_safety_criterions": [
            "对软件状态空间中两两状态之间的转移条件进行检查，分析转移条件“未设置、始终满足、无法满足”等情况下状态转移的正确性",
            "若余度切换条件满足时，余度切换失败，软件是否有正确处理？",
            "余度切换时间过长，软件是否有正确处理？",
            "下发危险的控制指令或动作时，是否有依据设备状态进行合理性判断？",
            "参数是否有变化率合理范围（斜率上限和下限），超斜率数据的处理策略是否明确？"
        ],
        "safety_requirements": [
            "系统在舵面遥控切换到自主控制时，应确保余度切换时间符合阈值要求，超时情况下触发容错处理机制。",
            "系统在舵面遥控切换到自主控制时，需校验参数变化率是否处于预设斜率上下限范围内，并明确超斜率数据的过滤或修正策略。",
            "系统在舵面遥控切换到自主控制余度切换失败时，应立即回退至安全模式并告警。",
            "系统应对舵面遥控切换到自主控制的状态转移条件进行实时验证，确保在条件'未设置、始终满足、无法满足'等异常情况下状态转移逻辑正确。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 181,
        "requirement": "发“自主控制”指令可实现该切换，退出直接舵面控制，对舵偏指令进行软化，软化时间设为 2s，如果此时飞机在巡航（爬升 2、定高和下降），则将从点经纬度改为飞机所处当前位置经纬度，以引导飞机向原来的到点飞行。需要进行节风门指令软化，软化时间设为 2s。",
        "original_safety_criterions": [
            "系统进行控制的顺序和时序是否与硬件协调，控制条件是否完备且前后一致？",
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "余度切换时间过长，软件是否有正确处理？",
            "对功能的控制解算过程进行检查，分析控制解算过程出现超时（未在规定时间内返回结果）等情况下的功能处理正确性",
            "各功能点控制逻辑之间的时序关系、约束关系、并发关系和组合关系是否正确"
        ],
        "safety_requirements": [
            "系统在‘自主控制’指令切换时，应确保舵偏指令和节风门指令的软化时间严格为2s，并在巡航（爬升2、定高、下降）状态下正确更新从点经纬度为飞机当前位置，以维持原飞行路径引导。",
            "系统应验证‘自主控制’指令的触发条件、控制顺序及时序与硬件协同，确保舵偏指令/节风门指令软化时间（2s）及经纬度更新逻辑的完备性和一致性。",
            "系统应对‘自主控制’切换逻辑进行全分支覆盖检查，识别并处理‘逻辑恒假、恒真、条件错误、分支遗漏’等异常场景，确保直接舵面控制切换及指令软化的正确性。",
            "系统应监控控制解算过程的超时情况，确保舵偏指令和节风门指令的软化处理在2s内完成，超时后触发预设容错机制。",
            "系统应校验功能点间的时序、约束及并发关系，确保切换过程中指令软化时间（2s）、经纬度更新逻辑与飞行状态严格匹配。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 182,
        "requirement": "发“舵面遥控”指令可实现该切换，转为直接舵面控制，对舵偏指令进行软化，软化时间设为 2s。",
        "original_safety_criterions": [
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "针对各项任务的持续时间进行检查，分析任务持续时间小于规定时间等情况下，功能处理的正确性",
            "各功能点控制逻辑之间的时序关系、约束关系、并发关系和组合关系是否正确",
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性"
        ],
        "safety_requirements": [
            "系统应检查舵面遥控指令的持续时间，确保在指令持续时间小于2秒时，舵偏指令的软化处理逻辑正确且符合预期。",
            "系统在处理舵面遥控指令时，应对当前工作阶段和工作状态进行检查，确保在不同状态或阶段下舵偏指令的解算逻辑正确。",
            "系统在发‘舵面遥控’指令切换至直接舵面控制时，应验证控制逻辑的时序关系及软化时间的约束条件，确保软化时间严格为2秒。",
            "系统应对舵面遥控指令的逻辑判断条件和分支进行完整性检查，覆盖‘逻辑恒假、恒真、判断条件错误或分支遗漏’等情况的正确处理。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 183,
        "requirement": "发“姿态遥控”指令可实现该切换，退出直接舵面控制，对舵偏指令进行软化，软化时间设为 2s。",
        "original_safety_criterions": [
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "各模态的进入条件和退出条件是否一致？",
            "各功能点控制逻辑之间的时序关系、约束关系、并发关系和组合关系是否正确",
            "针对各项任务的持续时间进行检查，分析任务持续时间大于规定时间等情况下，功能处理的正确性"
        ],
        "safety_requirements": [
            "系统在接收‘姿态遥控’指令时，应检查逻辑判断条件和分支，确保‘逻辑恒假、恒真、条件错误、分支遗漏’等情况下指令切换和舵偏软化处理的正确性。",
            "系统应验证‘姿态遥控’指令的软化处理持续时间，当任务执行超过2s时，确保功能处理的正确性并触发超时反馈机制。",
            "系统应确保‘姿态遥控’指令与直接舵面控制之间的时序、约束、并发及组合关系正确，且在切换指令和2s软化时间条件下无冲突或状态异常。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 184,
        "requirement": "发“姿态遥控”指令可实现该切换，对给定姿态角进行软化，软化时间设为 2s。需要进行节风门指令软化，软化时间设为 2s。",
        "original_safety_criterions": [
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "各功能点控制逻辑之间的时序关系、约束关系、并发关系和组合关系是否正确",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统在切换姿态遥控指令时，应对逻辑判断条件进行检查，确保在逻辑恒假、恒真、判断错误或分支遗漏的情况下，姿态角软化（2s）和节风门指令软化（2s）处理正确。",
            "系统在两个或多个余度处于不同工作状态时，应检查并确保姿态遥控指令和节风门指令软化功能（2s）实现的正确性。",
            "系统应验证姿态遥控指令的控制逻辑与时序、约束、并发及组合关系的正确性，确保姿态角和节风门指令软化（2s）过程中符合设计规范。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 185,
        "requirement": "发“舵面遥控”指令可实现该切换，对舵偏指令进行软化，软化时间设为 2s。需要进行节风门指令软化，软化时间设为 2s。",
        "original_safety_criterions": [
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "各功能点控制逻辑之间的时序关系、约束关系、并发关系和组合关系是否正确",
            "针对各项任务的持续时间进行检查，分析任务持续时间大于规定时间等情况下，功能处理的正确性",
            "针对各项任务的持续时间进行检查，分析任务持续时间小于规定时间等情况下，功能处理的正确性"
        ],
        "safety_requirements": [
            "系统在发‘舵面遥控’指令时，应检查舵偏指令和节风门指令的逻辑判断条件，确保逻辑恒假、恒真、条件错误或分支遗漏情况下的处理正确性。",
            "系统应验证舵偏指令和节风门指令的软化处理时序关系及约束条件，确保在并发切换时软化时间严格为2s。",
            "系统应对舵面遥控指令和节风门指令的软化时间进行实时监测，若软化时间小于2s时触发异常处理机制。",
            "系统应监控舵面遥控和节风门指令的任务执行持续时间，在超过规定软化时间2s时确保功能处理的正确性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 186,
        "requirement": "发“姿态遥控”指令可实现该切换，对给定姿态角进行软化，软化时间设为 2s。需要进行节风门指令软化，软化时间设为 2s。",
        "original_safety_criterions": [
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "各功能点控制逻辑之间的时序关系、约束关系、并发关系和组合关系是否正确",
            "对不同余度所处的工作状态进行检查，分析‘两个或多个余度处于不同状态’等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统在接收姿态遥控指令时，应验证逻辑判断条件和分支的完备性，确保在逻辑恒假、恒真、判断条件错误或分支遗漏情况下，姿态角及节风门指令的软化处理逻辑正确且软化时间严格为2s。",
            "系统应确保姿态遥控指令与节风门指令的时序关系、约束条件、并发执行及组合操作符合设计要求，软化处理过程中两指令的时序同步性及软化时间参数（2s）的一致性。",
            "系统在检测到不同余度处于异态时，应维持姿态遥控和节风门指令软化功能的正确性，确保软化时间为2s且输出参数与当前余度状态严格匹配。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 187,
        "requirement": "发“舵面遥控”指令可实现该切换，对舵偏指令进行软化，软化时间设为 2s。",
        "original_safety_criterions": [
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "各功能点控制逻辑之间的时序关系、约束关系、并发关系和组合关系是否正确",
            "针对各项任务的持续时间进行检查，分析任务持续时间大于规定时间等情况下，功能处理的正确性",
            "针对各项任务的持续时间进行检查，分析任务持续时间小于规定时间等情况下，功能处理的正确性"
        ],
        "safety_requirements": [
            "系统在执行‘舵面遥控’指令时，应严格校验控制逻辑的时序关系、约束关系及软化时间参数（2s），确保指令切换与软化处理逻辑正确。",
            "系统应检查舵面遥控指令的持续时间：当指令持续时间小于2s时，需终止软化处理并触发异常告警，防止未完整执行指令。",
            "系统应检查舵面遥控指令的持续时间：当指令持续时间大于2s时，需在软化完成后自动复位指令状态，避免残留指令干扰。",
            "系统应对舵面遥控指令的逻辑判断条件进行冗余校验，识别‘逻辑恒假、逻辑恒真、判断条件错误、分支遗漏’等异常，并在检测到错误时拒绝执行舵偏指令。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 188,
        "requirement": "发“舵面遥控”指令可实现该切换，对舵偏指令进行软化，软化时间设为 2s。",
        "original_safety_criterions": [
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "各功能点控制逻辑之间的时序关系、约束关系、并发关系和组合关系是否正确",
            "针对各项任务的持续时间进行检查，分析任务持续时间大于规定时间等情况下，功能处理的正确性",
            "针对各项任务的持续时间进行检查，分析任务持续时间小于规定时间等情况下，功能处理的正确性"
        ],
        "safety_requirements": [
            "系统应确保舵面遥控指令与舵偏指令软化之间的时序关系、约束关系、并发关系和组合关系正确，并在异常情况下触发容错处理机制。",
            "系统在舵面遥控指令持续时间小于2s时，应保证软化处理逻辑的正确性，并生成未完成软化状态的告警提示。",
            "系统在舵面遥控指令持续时间大于2s时，应确保软化处理完成后维持最终输出状态，防止软化过程反复触发。",
            "系统应对舵面遥控指令的逻辑判断条件及分支进行检查，在出现逻辑恒假、恒真、条件错误或分支遗漏时，停止软化处理并反馈错误状态。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 189,
        "requirement": "需要进行节风门指令软化，软化时间设为 2s。",
        "original_safety_criterions": [
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "各功能点控制逻辑之间的时序关系、约束关系、并发关系和组合关系是否正确"
        ],
        "safety_requirements": [
            "系统应验证节风门指令软化控制逻辑与其他功能点控制逻辑的时序关系、约束关系、并发关系和组合关系，确保其正确性。",
            "系统应对节风门指令软化逻辑的判断条件和逻辑分支进行检查，确保在‘逻辑恒假、恒真、判断条件错误或分支遗漏’等情况下的处理正确性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 190,
        "requirement": "控制模式切换时的软化优先级高于阶段转换，故模式切换时若伴随着阶段转换，则只进行模式切换的软化。",
        "original_safety_criterions": [
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "对软件状态空间中两两状态之间的转移条件进行检查，分析转移条件“未设置、始终满足、无法满足”等情况下状态转移的正确性",
            "对两个或多个存在转移关系的状态下、设置了优先级的不同功能进行检查，分析“高优先级切换低优先级、低优先级切换高优先级”等情况下状态与功能的正确性"
        ],
        "safety_requirements": [
            "系统在控制模式切换伴随阶段转换时，应确保仅执行模式切换的软化处理，并验证高优先级切换低优先级的逻辑正确性。",
            "系统应对控制模式与阶段的状态转移条件进行检查，确保转移条件（未设置、始终满足、无法满足等）的异常情况下状态切换的正确性。",
            "系统在不同工作状态和阶段下切换控制模式时，应对输入参数进行检查，确保解算过程已完整包含当前工作阶段与状态的约束条件。",
            "系统在状态转移过程中应实时验证控制模式切换解算结果的优先级一致性，当检测到逻辑冲突时触发强制状态锁定机制。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 191,
        "requirement": "指令控制切换为自主控制时，若飞机处于定高状态，则退出定高；若飞机处于定速状态，则退出定速；若飞机处于左盘、右盘、8 字飞、飞向临时航点状态，则恢复航线，进行一般导航。",
        "original_safety_criterions": [
            "对两个或多个存在转移关系的状态下、设置了优先级的不同功能进行检查，分析“高优先级切换低优先级、低优先级切换高优先级”等情况下状态与功能的正确性",
            "对状态进入条件进行检查，分析状态执行过程中进入条件“满足、不满足、再次满足”等情况下状态执行的正确性"
        ],
        "safety_requirements": [
            "系统在指令控制切换为自主控制时，应检查状态进入条件，确保在‘满足、不满足、再次满足’等情况下，定高、定速、左盘、右盘、8字飞及临时航点状态均能正确执行退出、恢复航线或一般导航操作。",
            "系统在指令控制切换为自主控制时，应验证优先级切换逻辑（高优先级切低优先级、低优先级切高优先级），确保各飞行状态下的切换功能正确，且航线恢复符合规范。",
            "系统应实时验证飞行状态参数的有效性，确保定高、定速等模式切换过程中参数合法，防止无效状态导致的导航错误。",
            "系统应在自主控制切换过程中记录状态变更日志，并提供异常切换时的告警机制，确保切换失败可追溯且及时干预。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 192,
        "requirement": "自主及指令控制切换为遥控时，若导航解算标志为无导航解算（0），则将从、到点更新为五边 6、7 点；指令控制切换为遥控时，侧向控制置为一般导航，纵向控制置为正常，定速控制置为正常。若侧向控制为向临时航点飞行，则到点更新为原来的到点。",
        "original_safety_criterions": [
            "对软件状态空间中两两状态之间的转移条件进行检查，分析转移条件“未设置、始终满足、无法满足”等情况下状态转移的正确性",
            "对功能的控制解算过程进行检查，分析控制解算过程出现超时（未在规定时间内返回结果）等情况下的功能处理正确性",
            "对功能的控制解算结果进行检查，分析控制解算结果为“正常值、异常值、边界值、极大极小值”等情况下功能处理的正确性"
        ],
        "safety_requirements": [
            "系统在自主及指令控制切换为遥控时，应对控制解算结果（正常值、异常值、边界值、极大极小值）进行检查，确保导航解算标志为无导航解算（0）时，从、到点更新为五边6、7点，且侧向、纵向、定速控制状态设置正确；若侧向控制为向临时航点飞行，则到点更新为原值。",
            "系统在自主及指令控制切换为遥控时，应检查控制解算过程超时情况，确保在未返回结果时仍能正确更新从、到点及控制状态，符合导航解算标志为无导航解算（0）的设定。",
            "系统在自主及指令控制切换为遥控时，应对状态转移条件（未设置、始终满足、无法满足）进行检查，确保导航解算标志为无导航解算（0）时从、到点更新正确，且侧向、纵向、定速控制状态转移符合规范。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 193,
        "requirement": "为了平滑数据，防止数据的突跳，需要对数据进行软化（淡入淡出）处理。",
        "original_safety_criterions": [
            "对功能的多个输入数据进行检查，分析多个输入数据取值为“正常值等价类组合、异常值等价类组合、边界值组合、初始值组合、安全值组合、缺省值组合”等情况下功能处理的正确性",
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "针对各项任务的执行条件中的输入数据取值进行检查，分析输入数据取值使得任务执行条件延迟满足时，功能处理的正确性",
            "对功能的控制解算过程进行检查，分析控制解算过程出现超时（未在规定时间内返回结果）等情况下的功能处理正确性",
            "针对各项任务的执行条件中的输入数据取值进行检查，分析输入数据取值使得任务执行条件提前满足时，功能处理的正确性"
        ],
        "safety_requirements": [
            "系统应在数据软化处理过程中检查逻辑判断条件，确保‘逻辑恒假、逻辑恒真、逻辑条件错误或分支遗漏’等情况下数据处理的正确性。",
            "系统应对任务执行条件的输入数据取值进行检查，确保在延迟满足执行条件时，软化（淡入淡出）处理的逻辑和结果符合预期。",
            "系统应在控制解算过程超时（未在规定时间内返回结果）时，触发预设容错机制，确保数据软化处理的完整性和连续性。",
            "系统应对任务执行条件的输入数据取值进行检查，确保在提前满足执行条件时，软化（淡入淡出）处理的逻辑和结果符合预期。",
            "系统应对输入数据进行等价类组合检查（包括正常值、异常值、边界值、初始值、安全值及缺省值组合），确保数据软化处理的正确性和稳定性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 194,
        "requirement": "在软化时间内，旧值和新值两者加权处理得到软化后的值：软化后的值＝旧值×（1－t /软化时限）＋新值×t /软化时限",
        "original_safety_criterions": [
            "针对各项任务的执行条件中的输入数据取值进行检查，分析输入数据取值使得任务执行条件延迟满足时，功能处理的正确性",
            "对不同余度的离散型输出数据取值进行检查，分析两个或多个余度输出数据“取值不一致”等情况下，功能实现的正确性",
            "针对各项任务的持续时间进行检查，分析任务持续时间小于规定时间等情况下，功能处理的正确性",
            "针对各项任务的持续时间进行检查，分析任务持续时间大于规定时间等情况下，功能处理的正确性",
            "针对各项任务的执行条件中的输入数据取值进行检查，分析输入数据取值使得任务执行条件提前满足时，功能处理的正确性"
        ],
        "safety_requirements": [
            "系统在任务执行条件因输入数据延迟满足时，应检查输入数据取值，确保软化后的值＝旧值×（1－t/软化时限）＋新值×t/软化时限的计算准确。",
            "系统在任务持续时间小于软化时限时，应对软化处理逻辑进行检查，确保计算结果符合加权处理规则。",
            "系统在两个或多个余度的离散型输出数据取值不一致时，应验证软化后的值计算的正确性，并按规则输出有效值。",
            "系统在任务执行条件因输入数据提前满足时，应检查输入数据取值，确保软化后的值＝旧值×（1－t/软化时限）＋新值×t/软化时限的计算正确。",
            "系统在任务持续时间超过规定时间时，应确保软化后的值＝旧值×（1－t/软化时限）＋新值×t/软化时限的计算结果符合预期。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 195,
        "requirement": "通过积分器初值的软化方法，专用于向控制律中带有积分器的阶段切换时给定姿态角（Jg, Yg, yg）和节风门指令的软化",
        "original_safety_criterions": [
            "对不同余度的连续型接口数据取值进行检查，分析两个或多个余度接口数据“取值不一致，即取值之差超出规定阈值”等情况下，功能实现的正确性",
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "对功能的控制解算过程进行检查，分析控制解算过程出现超时（未在规定时间内返回结果）等情况下的功能处理正确性",
            "对不同余度的离散型输出数据取值进行检查，分析两个或多个余度输出数据“取值不一致”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统应检查不同余度的离散型输出数据取值，在‘取值不一致’情况下确保通过积分器初值软化方法处理的正确性，并生成告警记录。",
            "系统应对控制律中积分器的逻辑判断条件和分支进行检查，在‘逻辑恒假、恒真、判断错误或分支遗漏’情况下保障姿态角（Jg, Yg, yg）和节风门指令软化处理的容错机制。",
            "系统应在不同工作阶段和状态切换时检查输入参数，确保未遗漏阶段或状态因素，并验证姿态角和节风门指令软化处理的完整性。",
            "系统应监测不同余度的连续型接口数据差值，当超出规定阈值时触发数据同步机制，并重新执行积分器初值软化处理。",
            "系统应限制控制解算过程的执行时间，在超时情况下终止当前解算并启动安全恢复流程，确保阶段切换的稳定性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 196,
        "requirement": "当向有积分器的控制律切换时，为了平滑过渡相应的给定姿态角Jg 或Yg 或yg，不是简单地把将要转入的下一阶段控制律的积分器初值设为零，而是通过令下一阶段的给定姿态角等于上一阶段的给定姿态角来解算出积分器的初值",
        "original_safety_criterions": [
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "对功能的控制解算结果进行检查，分析控制解算结果为“正常值、异常值、边界值、极大极小值”等情况下功能处理的正确性",
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统应在不同余度处于不同工作状态时，检查控制律切换过程中给定姿态角Jg、Yg或yg的平滑过渡功能，确保积分器初值解算正确性。",
            "系统在控制律切换时，应对工作阶段及状态进行输入核查，确保通过上一阶段给定姿态角解算积分器初值的逻辑正确性，避免未考虑状态或阶段的切换错误。",
            "系统应对控制律切换时的解算结果（正常值、异常值、边界值等）进行实时验证，确保给定姿态角过渡平滑且积分器初值解算过程稳定。",
            "系统应检查控制律切换逻辑的判断条件与分支完整性，防止逻辑恒假、恒真或遗漏，确保姿态角连续解算积分器初值的平滑过渡功能可靠执行。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 197,
        "requirement": "在起飞离地段与爬升1段切换时，设起飞离地段转入爬升1前一时刻解算出的给定俯仰角为Jg，空速积分器的初值为x，则x这样计算：x = Jg - Kv [nk (k) - ng (k)] / K vI",
        "original_safety_criterions": [
            "对软件状态空间中两两状态之间的转移条件进行检查，分析转移条件“未设置、始终满足、无法满足”等情况下状态转移的正确性",
            "对两个或多个存在转移关系的状态下、设置了优先级的不同功能进行检查，分析“高优先级切换低优先级、低优先级切换高优先级”等情况下状态与功能的正确性",
            "两个或多个状态之间不存在转移关系，对这些状态的进入条件进行检查，分析进入条件“同时满足、状态执行过程中满足”等情况下状态执行的正确性",
            "对接口数据的等价类进行检查，分析数据取值在不同输出等价类之间切换时输出的正确性"
        ],
        "safety_requirements": [
            "系统在起飞离地段与爬升1段切换时，应检查接口数据的等价类，确保给定俯仰角Jg和空速积分器初值x在不同输出等价类切换时的计算正确性。",
            "系统在起飞离地段转入爬升1段时，应验证优先级切换场景（高优先级切低优先级、低优先级切高优先级）下状态与功能的正确性，并确保空速积分器初值x = Jg - Kv [nk (k) - ng (k)] / K vI的准确计算。",
            "系统在起飞离地段与爬升1段切换时，应检查状态转移条件（未设置、始终满足、无法满足），确保状态转移逻辑的正确性。",
            "系统在起飞离地段与爬升1段切换时，应检查状态进入条件（同时满足、状态执行过程中满足），确保状态执行的正确性和完整性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 198,
        "requirement": "高度类型切换时，两种高度类型数据的软化。",
        "original_safety_criterions": [
            "对两个或多个存在转移关系的状态下、设置了优先级的不同功能进行检查，分析“高优先级切换低优先级、低优先级切换高优先级”等情况下状态与功能的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性",
            "对接口数据的等价类进行检查，分析数据取值在不同输出等价类之间切换时输出的正确性"
        ],
        "safety_requirements": [
            "系统在高度类型切换时，应检查接口数据的等价类，确保不同输出等价类之间切换的正确性。",
            "系统在高度类型切换时，应检查不同余度的工作状态，确保在两个或多个余度处于不同状态时，两种高度类型数据软化的正确性。",
            "系统应验证高优先级切换低优先级和低优先级切换高优先级的情况，确保高度类型切换时状态与功能的正确性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 199,
        "requirement": "与舵面遥控进行切换时舵偏指令和节风门偏度指令的软化。",
        "original_safety_criterions": [
            "对接口数据的等价类进行检查，分析接口数据取值在不同等价类之间切换时输出的正确性",
            "各功能点控制逻辑之间的时序关系、约束关系、并发关系和组合关系是否正确",
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "对接口数据的等价类进行检查，分析数据取值在不同输出等价类之间切换时输出的正确性"
        ],
        "safety_requirements": [
            "系统在与舵面遥控切换时，应检查舵偏指令和节风门偏度指令的接口数据等价类，确保不同输出等价类间切换的指令正确性。",
            "系统在与舵面遥控切换时，应验证舵偏指令和节风门偏度指令的软化控制逻辑时序、约束、并发及组合关系正确。",
            "系统在舵面遥控切换过程中，应对舵偏指令和节风门偏度指令的逻辑判断条件进行校验，避免逻辑恒假、恒真、条件错误或分支遗漏导致的处理错误。",
            "系统应确保舵偏指令和节风门偏度指令在等价类切换时的软化过程符合安全约束，防止指令突变引发异常。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 200,
        "requirement": "自主转姿态遥控、姿态遥控转自主时给定姿态角（Jg, Yg, yg）的软化。",
        "original_safety_criterions": [
            "两个或多个存在转移关系的状态具有同一个功能，对状态转移前后功能的执行情况进行检查，分析功能在状态转移后“开始执行、保持执行、中断执行”等情况下功能处理的正确性",
            "对软件状态空间中两两状态之间的转移条件进行检查，分析转移条件“未设置、始终满足、无法满足”等情况下状态转移的正确性",
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "同一个状态与其他多个状态之间存在转移关系，对同一个状态向多个状态转移以及多个状态向同一个状态转移的条件进行检查，分析多个状态转移条件同时满足时状态转移的正确性"
        ],
        "safety_requirements": [
            "系统在自主转姿态遥控、姿态遥控转自主状态转移时，应检查给定姿态角（Jg, Yg, yg）的软化处理，确保在‘开始执行、保持执行、中断执行’等情况下功能处理的正确性。",
            "系统在不同工作状态或阶段下应对给定姿态角（Jg, Yg, yg）的输入进行检查，确保在‘未考虑工作阶段’或‘未考虑工作状态’时功能处理的正确性。",
            "系统应验证自主转姿态遥控、姿态遥控转自主的转移条件设置，确保在条件‘未设置、始终满足、无法满足’等情况下状态转移的正确性。",
            "系统在自主与姿态遥控状态并存时，应检查多个状态转移条件同时满足的情况，确保给定姿态角（Jg, Yg, yg）的软化处理逻辑正确执行。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 201,
        "requirement": "转着陆滑跑段时给定姿态角（Jg, Yg, yg）的软化，其它阶段转换时的给定姿态角（Yg, yg）和节风门偏度指令的软化。",
        "original_safety_criterions": [
            "对两个或多个存在转移关系的状态下、设置了优先级的不同功能进行检查，分析“高优先级切换低优先级、低优先级切换高优先级”等情况下状态与功能的正确性",
            "对软件状态空间中两两状态之间的转移条件进行检查，分析转移条件“未设置、始终满足、无法满足”等情况下状态转移的正确性",
            "对状态进入条件进行检查，分析状态执行过程中进入条件“满足、不满足、再次满足”等情况下状态执行的正确性",
            "两个或多个存在转移关系的状态具有同一个功能，对状态转移前后功能的执行情况进行检查，分析功能在状态转移后“开始执行、保持执行、中断执行”等情况下功能处理的正确性",
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性"
        ],
        "safety_requirements": [
            "系统在状态转移时应对进入条件进行检查，确保在条件‘满足、不满足、再次满足’的情况下，转着陆滑跑段的给定姿态角（Jg, Yg, yg）软化及其它阶段给定姿态角（Yg, yg）和节风门偏度指令软化执行的正确性。",
            "系统在状态优先级切换（高优先级↔低优先级）时，应确保转着陆滑跑段姿态角（Jg, Yg, yg）软化及其它阶段姿态角（Yg, yg）和节风门偏度指令软化的处理逻辑与优先级规则一致。",
            "系统应对状态转移条件进行有效性检查，当条件为‘未设置、始终满足、无法满足’时，需阻止非法状态转移并确保姿态角（Jg, Yg, yg）和节风门偏度指令的软化处理符合当前飞行阶段。",
            "系统在状态转移后应对同一功能的执行状态进行监控，确保姿态角（Jg, Yg, yg）和节风门偏度指令的软化处理在‘开始执行、保持执行、中断执行’场景下与飞行阶段严格匹配。",
            "系统需根据当前工作阶段和状态动态调整控制解算过程，确保未考虑‘工作阶段’或‘工作状态’的输入不会影响姿态角（Jg, Yg, yg）和节风门偏度指令软化的准确性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 202,
        "requirement": "向纵向控制律带有积分器的阶段切换时给定俯仰角角的软化。",
        "original_safety_criterions": [
            "余度切换条件满足时，是否会导致当前正在运行的功能输出值出现异常？",
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "对接口数据的等价类进行检查，分析数据取值在不同输出等价类之间切换时输出的正确性",
            "对接口数据的等价类进行检查，分析接口数据取值在不同等价类之间切换时输出的正确性",
            "参数是否有变化率合理范围（斜率上限和下限），超斜率数据的处理策略是否明确？"
        ],
        "safety_requirements": [
            "系统在向纵向控制律带有积分器的阶段切换时，应检查功能接口数据的等价类切换行为，确保俯仰角角的软化处理输出正确。",
            "系统应确保俯仰角角的软化过程中参数变化率处于预设的斜率上下限范围内，并明确超限数据的处理策略。",
            "系统在不同工作阶段或状态切换时，应对功能输入进行状态有效性检查，确保俯仰角角软化处理的控制解算与当前阶段匹配。",
            "系统在余度切换条件触发时，应监测纵向控制律积分器阶段切换的软化输出值，防止异常并启用容错机制。",
            "系统应在俯仰角角软化过程中对数据输出等价类进行实时验证，确保不同等价类间切换时输出的连续性和稳定性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 203,
        "requirement": "爬升转定高、下降转定高时节风门偏度指令的软化。爬升转定高时节风门控制积分器初值直接赋为 100.0，下降转定高时积分器初值直接赋为 50.0。",
        "original_safety_criterions": [
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "针对各项任务的执行条件中的输入数据取值进行检查，分析输入数据取值使得任务执行条件提前满足时，功能处理的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统应在爬升转定高、下降转定高转换时，对节风门偏度指令的逻辑判断条件和分支进行检查，确保逻辑恒假、恒真、条件错误或分支遗漏情况下功能处理的正确性。",
            "系统应检查爬升转定高、下降转定高时节风门偏度指令的输入数据取值，确保任务执行条件提前满足时功能处理的正确性。",
            "系统应对不同余度的工作状态进行检查，确保在多个余度处于不同状态时，爬升转定高时节风门控制积分器初值赋为 100.0，下降转定高时赋为 50.0。",
            "系统应在不同工作阶段和状态下检查功能输入，确保未考虑阶段或状态时，节风门偏度指令软化的处理正确性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 204,
        "requirement": "姿态遥控转自主时，纵向控制积分器清零。若为定高阶段，节风门控制积分器初值直接赋为 50.0。",
        "original_safety_criterions": [
            "系统进行控制的顺序和时序是否与硬件协调，控制条件是否完备且前后一致？",
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "输出控制状态的时机是否符合场景要求？",
            "故障项的检测逻辑是否合理，检测方式是否会对设备正常工作产生影响？",
            "对于关键控制或动作，是否有超时判断，以处理硬件状态长时间达不到控制要求的情况？"
        ],
        "safety_requirements": [
            "系统在姿态遥控转自主时，应确保纵向控制积分器清零与节风门控制积分器初值赋值的执行时机符合当前场景要求，并检查输出控制状态的同步性。",
            "系统应验证姿态遥控转自主时纵向控制积分器清零及定高阶段节风门控制积分器初值赋值的检测逻辑合理性，避免对设备运行产生干扰。",
            "系统执行纵向控制积分器清零和节风门控制积分器初值赋值时，应确保控制顺序、时序与硬件协调，且控制条件逻辑完备一致。",
            "系统在不同工作阶段或状态切换时，应对输入条件进行检查，确保纵向控制积分器清零和节风门控制积分器初值赋值的正确性未被工作阶段或状态因素影响。",
            "系统应对纵向控制积分器清零和节风门控制积分器初值赋值设置超时判断机制，以处理硬件状态长时间未达控制要求的异常情况。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 205,
        "requirement": "爬升转定高时节风门偏度指令的软化是两种软化方法同时进行，下降转定高时节风门偏度指令的软化仅采用了积分器初值软化法。",
        "original_safety_criterions": [
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "针对各项任务的先后执行时序进行检查，分析任务执行时序与规定时序不一致时，功能处理的正确性",
            "对不同余度的执行时序进行检查，分析“两个或多个余度执行时序未同步”等情况下，功能实现的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统应在任务执行时序与规定时序不一致时，确保爬升转定高和下降转定高时节风门偏度指令软化方法的处理逻辑正确性。",
            "系统应对爬升转定高和下降转定高时节风门偏度指令的软化方法进行逻辑检查，确保在逻辑恒假、恒真、条件错误或分支遗漏时功能处理正确。",
            "系统应在不同余度执行时序未同步的情况下，验证爬升转定高和下降转定高时节风门偏度指令软化功能的实现正确性。",
            "系统应在不同余度处于不同工作状态时，确保爬升转定高（双软化方法）和下降转定高（积分器初值软化法）的节风门偏度指令软化功能正确执行。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 206,
        "requirement": "为了抑制传感器的噪声以及外界对传感器输出数据的干扰，需要对输入的部分传感器数据进行滤波处理。",
        "original_safety_criterions": [
            "针对各项任务的执行条件中的输入数据取值进行检查，分析输入数据取值使得任务执行条件延迟满足时，功能处理的正确性",
            "采集时是否进行了滤波防抖动处理，屏蔽干扰数据？",
            "针对各项任务的执行条件中的输入数据取值进行检查，分析输入数据取值使得任务执行条件提前满足时，功能处理的正确性",
            "是否进行了传感器特定故障（基于传感器工作原理）的判断和处理？"
        ],
        "safety_requirements": [
            "系统应在任务执行条件因输入数据取值提前满足时，验证传感器数据滤波处理的正确性，确保抑制噪声和外界干扰的有效性。",
            "系统应对传感器特定故障进行检测及处理，包括基于工作原理的异常判断，并通过滤波抑制噪声和干扰数据。",
            "系统应在任务执行条件因输入数据取值延迟满足时，验证传感器数据滤波处理的正确性，保障输出数据准确性。",
            "系统应在数据采集阶段对输入传感器数据进行实时滤波处理，以确保噪声和外界干扰数据被有效抑制。",
            "系统应对滤波处理后的传感器数据进行有效性验证（如数据范围校验），防止异常数据进入后续控制流程。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 207,
        "requirement": "采用前置滤波器对输入数据进行滤波，滤波器的截止频率 wc 通过 Tustin 双线性变换后得到滤波公式 y(k) = a0y(k-1) + a1[x(k)+x(k-1)]，其中 a0 和 a1 根据 wc 的不同取不同的值。",
        "original_safety_criterions": [
            "对不同余度的连续型接口数据取值进行检查，分析两个或多个余度接口数据“取值不一致，即取值之差超出规定阈值”等情况下，功能实现的正确性",
            "对不同余度接收到的同一输入数据取值进行检查，分析两个或多个余度接收到的同一输入数据取值不一致时，功能实现的正确性",
            "对功能的多个输入数据进行检查，分析多个输入数据取值为“正常值等价类组合、异常值等价类组合、边界值组合、初始值组合、安全值组合、缺省值组合”等情况下功能处理的正确性",
            "对不同余度的连续型输出数据取值进行检查，分析两个或多个余度输出数据“取值不一致，即取值之差超出规定阈值”等情况下，功能实现的正确性",
            "对不同余度的离散型输出数据取值进行检查，分析两个或多个余度输出数据“取值不一致”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统应对前置滤波器的输入数据进行检查，确保在‘正常值等价类组合、异常值等价类组合、边界值组合、初始值组合、安全值组合、缺省值组合’情况下，滤波公式 y(k) = a0y(k-1) + a1[x(k)+x(k-1)] 的处理正确性。",
            "系统在连续型接口数据的多余度取值（如 a0 和 a1）不一致且差值超出规定阈值时，应确保滤波功能实现正确性，并触发异常处理机制。",
            "系统应对多余度滤波输出数据进行检查，当输出数据取值不一致时，提供数据纠错或冗余仲裁机制，确保结果可靠性。",
            "系统在不同余度接收的同一输入数据取值不一致时，应验证数据有效性并采用预设安全策略（如多数表决或安全默认值）进行滤波处理。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 208,
        "requirement": "对不同的传感器数据选用不同的 wc，相应的 a0 和 a1 也不同，具体参数见表 3-21。",
        "original_safety_criterions": [
            "对不同余度的输出数据进行检查，分析“单个余度故障、多个余度均故障”情况下，功能实现的正确性",
            "对不同余度的离散型输出数据取值进行检查，分析两个或多个余度输出数据“取值不一致”等情况下，功能实现的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统在多个余度处于不同工作状态时，应检查传感器数据并确保选用对应的 wc、a0 和 a1 参数的准确性。",
            "系统在单个余度故障或多个余度均故障时，应验证传感器数据选用的 wc、a0 和 a1 参数的功能正确性。",
            "系统应对离散型传感器输出数据进行一致性检查，在取值不一致时确保参数选用逻辑的正确性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 209,
        "requirement": "使用惯导垂直加速度对无线电高度表升降速度和大气机升降速度进行补偿，以提高其精度。",
        "original_safety_criterions": [
            "对不同余度的连续型输出数据取值进行检查，分析两个或多个余度输出数据“取值不一致，即取值之差超出规定阈值”等情况下，功能实现的正确性",
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "对不同余度的执行时序进行检查，分析“两个或多个余度执行时序未同步”等情况下，功能实现的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统应检查不同余度的工作状态，在‘两个或多个余度处于不同状态’的情况下，确保惯导垂直加速度对无线电高度表升降速度和大气机升降速度的补偿功能正确实现。",
            "系统应对惯导垂直加速度补偿逻辑的判断条件和逻辑分支进行检查，在‘逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏’情况下，确保功能处理的正确性。",
            "系统应检查不同余度的连续型输出数据取值，在‘取值不一致且超出规定阈值’时，确保对无线电高度表升降速度和大气机升降速度的补偿功能正确执行。",
            "系统应检查不同余度的执行时序，在‘两个或多个余度未同步’的情况下，确保惯导垂直加速度补偿功能的正确性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 210,
        "requirement": "实现组合滤波的方法，包括读取惯导垂直加速度数据，并将其应用于无线电高度表和大气机升降速度的补偿计算。",
        "original_safety_criterions": [
            "对不同余度的输出数据进行检查，分析“单个余度故障、多个余度均故障”情况下，功能实现的正确性",
            "对功能的多个输入数据进行检查，分析多个输入数据取值为“正常值等价类组合、异常值等价类组合、边界值组合、初始值组合、安全值组合、缺省值组合”等情况下功能处理的正确性",
            "对不同余度的离散型接口数据取值进行检查，分析两个或多个余度接口数据“取值不一致”等情况下，功能实现的正确性",
            "对不同余度的连续型输出数据取值进行检查，分析两个或多个余度输出数据“取值不一致，即取值之差超出规定阈值”等情况下，功能实现的正确性",
            "对不同余度的离散型输出数据取值进行检查，分析两个或多个余度输出数据“取值不一致”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统应在组合滤波处理中检查输入数据的正常值、异常值、边界值、初始值、安全值及缺省值组合，确保无线电高度表和大气机升降速度补偿计算的正确性。",
            "系统应对不同余度的惯导垂直加速度数据执行一致性检查，当两个或多个余度接口数据取值之差超出规定阈值时，触发容错处理逻辑并确保补偿计算正确。",
            "系统应在单个或多个惯导垂直加速度数据余度故障时，采用预设安全值或默认余度数据，维持无线电高度表和大气机升降速度补偿功能的连续性。",
            "系统应对连续型余度输出数据进行阈值校验，当取值不一致超出允许范围时，隔离异常数据源并激活冗余补偿机制。",
            "系统应对离散型余度输出数据执行一致性分析，在取值不一致时采用多数表决或历史安全状态值，确保组合滤波输出的可靠性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 211,
        "requirement": "系统需要根据垂直加速度对大气机升降速度进行补偿",
        "original_safety_criterions": [
            "针对各项任务的先后执行时序进行检查，分析任务执行时序与规定时序不一致时，功能处理的正确性",
            "针对各项任务的持续时间进行检查，分析任务持续时间大于规定时间等情况下，功能处理的正确性",
            "对不同余度的执行时序进行检查，分析“两个或多个余度执行时序未同步”等情况下，功能实现的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统应检查不同余度的工作状态，确保在‘两个或多个余度处于不同状态’时，垂直加速度对大气机升降速度的补偿功能实现正确性。",
            "系统应监测大气机升降速度补偿任务的持续时间，确保任务执行时间超过规定时限时功能处理的正确性。",
            "系统应检查不同余度的执行时序，确保在‘两个或多个余度执行时序未同步’情况下，垂直加速度对大气机升降速度补偿功能的正确性。",
            "系统应验证任务执行时序与规定时序的一致性，确保时序不一致时垂直加速度对大气机升降速度补偿功能处理的正确性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 212,
        "requirement": "系统需要根据垂直加速度对无线电高度表升降速度进行补偿",
        "original_safety_criterions": [
            "针对各项任务的先后执行时序进行检查，分析任务执行时序与规定时序不一致时，功能处理的正确性",
            "针对各项任务的持续时间进行检查，分析任务持续时间大于规定时间等情况下，功能处理的正确性",
            "对不同余度所处的工作状态进行检查，分析‘两个或多个余度处于不同状态’等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统应在垂直加速度补偿任务持续时间超过规定时间时，确保无线电高度表升降速度的补偿处理正确。",
            "系统在多个余度处于不同工作状态时，应确保垂直加速度对无线电高度表升降速度补偿功能的正确性。",
            "系统应检查任务执行时序与规定时序的一致性，并在不一致时维持垂直加速度对无线电高度表升降速度补偿的正确性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 213,
        "requirement": "系统需要采用Tustin双线性变换得到统一滤波公式",
        "original_safety_criterions": [
            "对功能的多个输入数据进行检查，分析多个输入数据取值为“正常值等价类组合、异常值等价类组合、边界值组合、初始值组合、安全值组合、缺省值组合”等情况下功能处理的正确性",
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "对功能的循环判断条件进行检查，分析“循环判断条件恒假、恒真”等情况下功能处理的正确性",
            "对功能的控制解算结果进行检查，分析控制解算结果为“正常值、异常值、边界值、极大极小值”等情况下功能处理的正确性",
            "各功能点控制逻辑之间的时序关系、约束关系、并发关系和组合关系是否正确"
        ],
        "safety_requirements": [
            "系统应对Tustin双线性变换的滤波公式循环判断条件进行检查，确保在‘循环判断条件恒假、恒真’等情况下功能处理的正确性。",
            "系统应验证Tustin双线性变换过程中控制逻辑的时序关系、约束关系、并发关系和组合关系，确保统一滤波公式生成的逻辑正确性。",
            "系统应检查Tustin双线性变换的逻辑判断条件及分支，确保在‘逻辑恒假、逻辑恒真、判断条件错误、分支遗漏’等情况下滤波公式的正确性。",
            "系统应对滤波公式的输入数据（正常值、异常值、边界值、初始值、安全值、缺省值等组合）进行校验，确保功能处理的正确性。",
            "系统应检查Tustin双线性变换的控制解算结果（正常值、异常值、边界值、极大极小值），确保其处理逻辑的正确性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 214,
        "requirement": "系统需要计算H1(k)和Hbc(k)的值",
        "original_safety_criterions": [
            "对不同余度的输出数据进行检查，分析“单个余度故障、多个余度均故障”情况下，功能实现的正确性",
            "对功能的多个输入数据进行检查，分析多个输入数据取值为“正常值等价类组合、异常值等价类组合、边界值组合、初始值组合、安全值组合、缺省值组合”等情况下功能处理的正确性",
            "对功能的控制解算结果进行检查，分析控制解算结果为“正常值、异常值、边界值、极大极小值”等情况下功能处理的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统应检查H1(k)和Hbc(k)的控制解算结果，确保在正常值、异常值、边界值、极大极小值等情况下功能处理正确。",
            "系统应对不同余度的输出数据进行校验，在单个余度故障或多个余度均故障时，确保H1(k)和Hbc(k)计算结果正确。",
            "系统应检查不同余度的工作状态，在两个或多个余度处于不同状态的情况下，保证H1(k)和Hbc(k)的计算准确。",
            "系统应对H1(k)和Hbc(k)的输入数据进行组合检查，包括正常值等价类、异常值等价类、边界值、初始值、安全值及缺省值组合下的处理正确性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 215,
        "requirement": "当H分别取为Hb和Hr时，系统需要计算补偿后升降速度Hbc，分别对应uy和h。",
        "original_safety_criterions": [
            "对不同余度的连续型接口数据取值进行检查，分析两个或多个余度接口数据“取值不一致，即取值之差超出规定阈值”等情况下，功能实现的正确性",
            "对不同余度接收到的同一输入数据取值进行检查，分析两个或多个余度接收到的同一输入数据取值不一致时，功能实现的正确性",
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "对不同余度的连续型输出数据取值进行检查，分析两个或多个余度输出数据“取值不一致，即取值之差超出规定阈值”等情况下，功能实现的正确性",
            "对不同余度的离散型输出数据取值进行检查，分析两个或多个余度输出数据“取值不一致”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统应检查逻辑判断条件和分支，确保在‘逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏’等情况下，H取值为Hb和Hr时补偿后升降速度Hbc（对应uy和h）的计算正确性。",
            "系统应对不同余度的连续型接口数据进行一致性检查，当取值差异超出规定阈值时，确保补偿后升降速度Hbc（对应uy和h）计算的正确性。",
            "系统在检测到不同余度接收的同一输入数据取值不一致时，应触发纠错机制并重新计算补偿后升降速度Hbc（对应uy和h）。",
            "系统应对不同余度的离散型输出数据进行校验，确保补偿后升降速度Hbc的计算结果在所有余度取值一致时执行输出。",
            "系统应对不同余度的连续型输出数据进行阈值监控，当补偿后升降速度Hbc的余度计算结果差异超出规定范围时，启动容错处理流程。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 216,
        "requirement": "系统需要在每个采样周期T=20ms时，根据公式计算H1(k)和H2(k)的值。",
        "original_safety_criterions": [
            "对接口数据的发送、接收周期进行检查，分析发送和接收周期是否匹配",
            "软件通过接口从外部设备（如传感器、NVM、数据库、其他系统等）读取数据，对外部设备进行检查，分析当外部设备通信中断时，输出的正确性",
            "对接口数据的周期进行检查，分析输入取值周期为“极大值、极小值”等情况下输出的正确性"
        ],
        "safety_requirements": [
            "系统应检查接口数据的周期，确保输入周期为极大值或极小值时，H1(k)和H2(k)的计算结果正确，符合采样周期T=20ms的要求。",
            "系统应验证H1(k)和H2(k)的发送与接收周期匹配性，保证每个采样周期T=20ms时的计算结果同步性和正确性。",
            "系统在外部设备（如传感器、NVM、数据库等）通信中断时，应确保H1(k)和H2(k)的计算输出具备默认值或容错机制，维持功能逻辑正确性。",
            "系统应对H1(k)和H2(k)的计算过程进行实时校验，若检测到周期异常或通信中断，立即触发错误处理或告警机制。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 217,
        "requirement": "在自主控制、人工修正和指令控制模式下进行飞行阶段的确定",
        "original_safety_criterions": [
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性",
            "输出控制状态的时机是否符合场景要求？",
            "针对各项任务的先后执行时序进行检查，分析任务执行时序与规定时序不一致时，功能处理的正确性",
            "对功能的控制解算结果进行检查，分析控制解算结果为“正常值、异常值、边界值、极大极小值”等情况下功能处理的正确性",
            "对功能的执行条件进行检查，分析功能执行过程中执行条件“不满足、再次满足”等情况下功能处理的正确性"
        ],
        "safety_requirements": [
            "系统应检查不同余度的工作状态，确保在自主控制、人工修正和指令控制模式下，当两个或多个余度处于不同状态时，飞行阶段确定功能的实现正确。",
            "系统应对飞行阶段确定的执行条件进行检查，确保在自主控制、人工修正和指令控制模式下，执行条件‘不满足’或‘再次满足’时功能处理的正确性。",
            "系统应验证自主控制、人工修正和指令控制模式下输出控制状态的时机，确保其严格符合当前飞行阶段的场景要求。",
            "系统应监控飞行阶段确定任务的执行时序，在自主控制、人工修正和指令控制模式下，若任务时序与规定时序不一致，需触发纠错机制并确保功能处理的正确性。",
            "系统应对飞行阶段确定的控制解算结果进行检查，确保在结果为‘正常值、异常值、边界值、极大极小值’等情况下，功能处理的正确性并隔离异常影响。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 218,
        "requirement": "在遥控模式（带内回路遥控和不带内回路遥控）下飞行阶段的确定与其不同",
        "original_safety_criterions": [
            "下发危险的控制指令或动作时，是否有依据设备状态进行合理性判断？"
        ],
        "safety_requirements": [
            "系统在下发危险控制指令或动作前，应依据当前飞行阶段（带内回路遥控/不带内回路遥控）及设备状态进行合理性判断，确保指令与飞行阶段模式的一致性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 219,
        "requirement": "当控制模式相互之间切换时，进行相应的处理和阶段确定",
        "original_safety_criterions": [
            "对软件状态空间中两两状态之间的转移条件进行检查，分析转移条件“未设置、始终满足、无法满足”等情况下状态转移的正确性",
            "两个或多个存在转移关系的状态具有同一个功能，对状态转移前后功能的执行情况进行检查，分析功能在状态转移后“开始执行、保持执行、中断执行”等情况下功能处理的正确性",
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "对接口数据的等价类进行检查，分析数据取值在不同输出等价类之间切换时输出的正确性",
            "对接口数据的等价类进行检查，分析接口数据取值在不同等价类之间切换时输出的正确性"
        ],
        "safety_requirements": [
            "系统在控制模式切换时，应检查转移条件的设置有效性，分析‘未设置、始终满足、无法满足’情况下的状态转移正确性。",
            "系统应根据不同工作阶段和状态检查控制模式切换逻辑，确保切换过程正确处理‘未考虑工作阶段’或‘未考虑工作状态’的情况。",
            "系统在控制模式切换后应验证共享功能的执行状态，确保其按‘开始执行、保持执行、中断执行’策略正确处理。",
            "系统应对控制模式切换时的接口数据输入等价类进行检查，确保不同取值区间切换的输出正确性。",
            "系统应对控制模式切换时的接口数据输出等价类进行检查，确保数据在不同输出类间切换的响应准确性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 220,
        "requirement": "在飞行阶段转换时和控制模式切换时对给定姿态角、舵面控制指令或者节风门进行软化",
        "original_safety_criterions": [
            "系统的各种运行场景切换过程中，各项控制功能所可能引发的危险？",
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "下发危险的控制指令或动作时，是否有依据设备状态进行合理性判断？"
        ],
        "safety_requirements": [
            "系统在飞行阶段转换或控制模式切换时，应对给定姿态角、舵面控制指令和节风门进行软化处理，避免引发危险指令突变。",
            "系统应检查功能输入是否考虑当前飞行阶段和控制模式，确保在不同阶段或模式下控制解算过程的正确性。",
            "系统在飞行阶段转换或控制模式切换时，下发控制指令前应对设备状态进行合理性判断，防止危险动作。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 221,
        "requirement": "选取两种软化方式，一种用于与包含内回路的控制模式间切换或飞行阶段转换时的软化，另一种用于与不带内回路遥控模式切换时的软化",
        "original_safety_criterions": [
            "对两个或多个存在转移关系的状态下、设置了优先级的不同功能进行检查，分析“高优先级切换低优先级、低优先级切换高优先级”等情况下状态与功能的正确性",
            "对软件状态空间中两两状态之间的转移条件进行检查，分析转移条件“未设置、始终满足、无法满足”等情况下状态转移的正确性",
            "两个或多个存在转移关系的状态具有同一个功能，对状态转移前后功能的执行情况进行检查，分析功能在状态转移后“开始执行、保持执行、中断执行”等情况下功能处理的正确性",
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "对接口数据的等价类进行检查，分析接口数据取值在不同等价类之间切换时输出的正确性"
        ],
        "safety_requirements": [
            "系统应在状态转移时检查包含内回路控制模式间切换或飞行阶段转换的软化方式，确保转移条件未设置、始终满足或无法满足时仍能正确处理软化切换。",
            "系统应对状态转移前后的软化方式执行情况（开始执行、保持执行、中断执行）进行检查，确保带/不带内回路的两种软化模式切换时功能逻辑连续正确。",
            "系统在选择软化方式时，应检查控制解算过程是否考虑当前工作阶段和状态，防止‘未考虑工作阶段’或‘未考虑工作状态’导致切换错误。",
            "系统应在接口数据等价类切换时（如内回路模式与遥控模式间转换），验证软化方式切换逻辑的正确性，确保输出符合对应等价类要求。",
            "系统应对不同优先级软化方式的切换（高优先级切换低优先级及相反）进行检查，确保状态与功能在包含内回路模式切换时保持正确性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 222,
        "requirement": "飞控系统必须具备陷波滤波功能，以衰减机体结构振动模态信号，保证系统稳定。",
        "original_safety_criterions": [
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统在多个余度处于不同工作状态时，应确保陷波滤波功能正确衰减机体结构振动模态信号，维持系统稳定性。",
            "系统应对陷波滤波功能的逻辑判断条件和分支进行检查，确保逻辑条件无恒假、恒真、错误或遗漏，并验证功能处理的正确性。",
            "系统应实时验证陷波滤波功能的输入信号有效性，防止因无效数据导致滤波失效或系统失稳。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 223,
        "requirement": "飞控系统中的升降舵通道应包含两个陷波滤波器，一个位于控制律输出与舵回路之间，另一个位于升降加速度前置滤波器之后。",
        "original_safety_criterions": [
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "各功能点控制逻辑之间的时序关系、约束关系、并发关系和组合关系是否正确",
            "对不同余度的离散型输出数据取值进行检查，分析两个或多个余度输出数据“取值不一致”等情况下，功能实现的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统在不同工作阶段和状态下应检查控制律输出与舵回路之间的陷波滤波器、升降加速度前置滤波器后陷波滤波器的输入，确保工作阶段和状态被正确判定，避免‘未考虑工作阶段或状态’导致功能处理错误。",
            "系统应对升降舵通道中两个陷波滤波器的余度工作状态进行检查，确保在‘两个或多个余度处于不同状态’时，滤波器功能实现的逻辑正确性。",
            "系统应验证升降舵通道控制逻辑的时序关系、约束关系和组合关系，确保两个陷波滤波器的配置与位置合理性，符合功能逻辑要求。",
            "系统应检查不同余度的离散型输出数据取值一致性，确保在‘两个或多个余度输出数据不一致’时，陷波滤波器的功能实现符合预期。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 224,
        "requirement": "控制律输出与舵回路之间的陷波滤波器参数应设置为 x1z = 0.1，x2z = 0.6，wn1z = 24.3，wn2z = 24.3。",
        "original_safety_criterions": [
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "对不同余度的输出数据进行检查，分析“单个余度故障、多个余度均故障”情况下，功能实现的正确性",
            "对功能的控制解算结果进行检查，分析控制解算结果为“正常值、异常值、边界值、极大极小值”等情况下功能处理的正确性"
        ],
        "safety_requirements": [
            "系统在不同状态或工作阶段下应检查陷波滤波器参数解算过程，确保在‘未考虑工作阶段’或‘未考虑工作状态’情况下仍能正确设置x1z=0.1、x2z=0.6、wn1z=24.3、wn2z=24.3。",
            "系统应对陷波滤波器参数解算结果进行实时检查，区分正常值、异常值、边界值及极大极小值情况，并确保控制律输出与舵回路间参数设置符合x1z=0.1、x2z=0.6、wn1z=24.3、wn2z=24.3。",
            "系统在检测到单个余度故障或多个余度均故障时，应验证陷波滤波器参数x1z=0.1、x2z=0.6、wn1z=24.3、wn2z=24.3的设置完整性，并触发冗余切换机制。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 225,
        "requirement": "升降加速度前置滤波器之后的陷波滤波器的具体参数应在系统中配置。",
        "original_safety_criterions": [
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "各功能点控制逻辑之间的时序关系、约束关系、并发关系和组合关系是否正确",
            "系统进行控制的顺序和时序是否与硬件协调，控制条件是否完备且前后一致？",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统在配置升降加速度前置滤波器后的陷波滤波器参数时，应验证控制顺序和时序与硬件协调性，确保参数配置条件完备且前后一致。",
            "系统应在不同余度处于差异状态（如两个及以上余度状态不一致）时，检查并确保陷波滤波器参数配置的正确性。",
            "系统应对陷波滤波器的逻辑判断条件及分支进行完整性验证，确保‘逻辑恒假、逻辑恒真、条件错误、分支遗漏’等异常情况下的功能处理正确。",
            "系统应校验陷波滤波器参数配置与控制逻辑的时序关系、约束条件、并发机制及组合规则，确保其符合设计要求。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 226,
        "requirement": "拉平阶段纵向控制律中的升降加速度需要经过升降加速度陷波滤波器 2 的处理。",
        "original_safety_criterions": [
            "针对各项任务的先后执行时序进行检查，分析任务执行时序与规定时序不一致时，功能处理的正确性",
            "对功能的控制解算过程进行检查，分析控制解算过程出现超时（未在规定时间内返回结果）等情况下的功能处理正确性",
            "针对各项任务的持续时间进行检查，分析任务持续时间大于规定时间等情况下，功能处理的正确性",
            "针对各项任务的持续时间进行检查，分析任务持续时间小于规定时间等情况下，功能处理的正确性"
        ],
        "safety_requirements": [
            "系统应检查升降加速度陷波滤波器 2 的处理持续时间，在处理时间大于规定时间时，确保升降加速度计算的正确性并触发容错机制。",
            "系统应验证拉平阶段纵向控制任务执行时序，在时序与规定不一致时，确保升降加速度陷波滤波器 2 处理的正确性。",
            "系统应监控升降加速度控制解算过程，在解算超时（未在规定时间内返回结果）时终止异常流程并启动安全处理机制。",
            "系统应检查升降加速度陷波滤波器 2 的任务持续时间，在持续时间小于规定时间时，验证处理结果的正确性并标识潜在异常。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 227,
        "requirement": "副翼通道的陷波滤波器参数为 x1x = 0.1，x2x = 0.6，wn1x = 24.3，wn2x = 24.3。",
        "original_safety_criterions": [
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "对不同余度的输出数据进行检查，分析“单个余度故障、多个余度均故障”情况下，功能实现的正确性",
            "对功能的控制解算结果进行检查，分析控制解算结果为“正常值、异常值、边界值、极大极小值”等情况下功能处理的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统应检查副翼通道控制解算结果为正常值、异常值、边界值、极大极小值时，陷波滤波器参数（x1x=0.1，x2x=0.6，wn1x=24.3，wn2x=24.3）功能处理的正确性。",
            "系统在单个余度故障或多个余度均故障时，应验证副翼通道陷波滤波器输出数据的正确性，并确保参数（x1x=0.1，x2x=0.6，wn1x=24.3，wn2x=24.3）符合功能逻辑。",
            "系统在两个或多个余度处于不同状态时，应对副翼通道陷波滤波器参数（x1x=0.1，x2x=0.6，wn1x=24.3，wn2x=24.3）进行一致性检查，确保功能实现的正确性。",
            "系统应检查副翼通道陷波滤波器的逻辑判断条件和逻辑分支，在逻辑恒假、恒真、判断错误或分支遗漏情况下，确保参数（x1x=0.1，x2x=0.6，wn1x=24.3，wn2x=24.3）功能处理的正确性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 228,
        "requirement": "方向舵通道的陷波滤波器参数为 x1y = 0.1，x2y = 0.5999922，wn1y = 40.81997，wn2y = 25.11991。",
        "original_safety_criterions": [
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "对不同余度的输出数据进行检查，分析“单个余度故障、多个余度均故障”情况下，功能实现的正确性",
            "对功能的控制解算结果进行检查，分析控制解算结果为“正常值、异常值、边界值、极大极小值”等情况下功能处理的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统应在两个或多个余度处于不同工作状态时，验证方向舵通道陷波滤波器参数（x1y=0.1，x2y=0.5999922，wn1y=40.81997，wn2y=25.11991）功能实现的正确性。",
            "系统应对方向舵通道陷波滤波器参数（x1y, x2y, wn1y, wn2y）的控制解算结果进行检查，确保在‘正常值、异常值、边界值、极大极小值’情况下功能处理的正确性。",
            "系统应对方向舵通道陷波滤波器参数的逻辑判断条件和分支进行检查，确保在‘逻辑恒假、逻辑恒真、逻辑判断条件错误、分支遗漏’情况下功能处理的正确性。",
            "系统在‘单个余度故障’或‘多个余度均故障’时，应检查方向舵通道陷波滤波器参数的输出数据，确保功能实现的正确性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 229,
        "requirement": "采用 Tustin 双线性变换后得到的离散化陷波滤波器公式为 δd(k) = [- Kd12δd(k-1) - Kd22δd(k-2) + Kd01δ(k) + Kd11δ(k-1) + Kd]。",
        "original_safety_criterions": [
            "对不同余度接收到的同一输入数据取值进行检查，分析两个或多个余度接收到的同一输入数据取值不一致时，功能实现的正确性",
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "对不同余度的离散型接口数据取值进行检查，分析两个或多个余度接口数据“取值不一致”等情况下，功能实现的正确性",
            "对不同余度的连续型输出数据取值进行检查，分析两个或多个余度输出数据“取值不一致，即取值之差超出规定阈值”等情况下，功能实现的正确性",
            "对不同余度的离散型输出数据取值进行检查，分析两个或多个余度输出数据“取值不一致”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统应对不同余度的离散化陷波滤波器输出数据取值进行检查，确保在‘取值不一致’或‘差值超出规定阈值’时，公式 δd(k) = - Kd12δd(k-1) - Kd22δd(k-2) + Kd01δ(k) + Kd11δ(k-1) + Kd 的功能实现正确。",
            "系统应对不同余度接收的同一输入数据进行一致性检查，确保在输入数据取值不一致时，离散化陷波滤波器输出的正确性。",
            "系统应对离散化陷波滤波器公式的逻辑判断条件和分支进行验证，确保‘逻辑恒假、恒真、判断条件错误或分支遗漏’等异常情况下功能处理的正确性。",
            "系统应对不同余度的离散型接口数据取值进行实时校验，确保在‘取值不一致’时，陷波滤波器计算结果的准确性和冗余容错能力。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 230,
        "requirement": "软件系统需要实现升降加速度陷波滤波器 2 的功能，包括参数设置和滤波处理。",
        "original_safety_criterions": [
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "对不同余度的输出数据进行检查，分析“单个余度故障、多个余度均故障”情况下，功能实现的正确性",
            "各功能点控制逻辑之间的时序关系、约束关系、并发关系和组合关系是否正确",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统应检查升降加速度陷波滤波器 2 的逻辑判断条件和逻辑分支，确保在‘逻辑恒假、逻辑恒真、判断条件错误或分支遗漏’情况下滤波处理的正确性。",
            "系统应验证不同余度输出数据，确保在‘单个余度故障’或‘多个余度均故障’时，升降加速度陷波滤波器 2 的功能实现正确。",
            "系统应确保升降加速度陷波滤波器 2 的控制逻辑与其他功能间的时序、约束、并发及组合关系正确，避免冲突或异常。",
            "系统应检查不同余度的工作状态，在‘两个或多个余度处于不同状态’情况下，保障升降加速度陷波滤波器 2 功能执行的正确性和一致性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 231,
        "requirement": "软件系统需要实现副翼通道的陷波滤波器功能，包括参数设置和滤波处理。",
        "original_safety_criterions": [
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "出现异常外部因素情况（例如高海况、恶劣气象条件等）时，软件是否进行了相应的判断和处理？",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统在出现高海况、恶劣气象等异常外部因素时，应进行相应判断和处理，确保副翼通道陷波滤波器的参数设置和滤波处理的正确性。",
            "系统应对不同余度的工作状态进行检查，在‘两个或多个余度处于不同状态’情况下，确保副翼通道陷波滤波器功能的正确实现。",
            "系统应检查副翼通道陷波滤波器功能的逻辑判断条件和分支，处理‘逻辑恒假、逻辑恒真、条件错误、分支遗漏’等情况，确保功能处理的正确性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 232,
        "requirement": "软件系统需要实现方向舵通道的陷波滤波器功能，包括参数设置和滤波处理。",
        "original_safety_criterions": [
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "对功能的循环判断条件进行检查，分析“循环判断条件恒假、恒真”等情况下功能处理的正确性",
            "各功能点控制逻辑之间的时序关系、约束关系、并发关系和组合关系是否正确",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统应验证方向舵通道陷波滤波器功能的控制逻辑时序关系、约束关系、并发关系和组合关系的正确性，确保参数设置和滤波处理符合设计要求。",
            "系统应对方向舵通道陷波滤波器功能的逻辑判断条件及分支进行完整性检查，确保在‘逻辑恒假、恒真、条件错误或分支遗漏’时功能处理正确。",
            "系统在检测到两个或多个余度处于不同工作状态时，应确保方向舵通道陷波滤波器功能的实现正确性，并触发状态同步机制。",
            "系统应检查方向舵通道陷波滤波器功能的循环判断条件，确保在‘循环条件恒假或恒真’时功能处理逻辑正确，避免异常终止或死循环。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 233,
        "requirement": "软件系统需要实现 Tustin 双线性变换的离散化处理，生成离散化的陷波滤波器公式。",
        "original_safety_criterions": [
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性",
            "对不同余度的离散型输出数据取值进行检查，分析两个或多个余度输出数据“取值不一致”等情况下，功能实现的正确性",
            "对不同余度的离散型接口数据取值进行检查，分析两个或多个余度接口数据“取值不一致”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统应对不同余度的离散型输出数据进行一致性检查，在取值不一致时确保陷波滤波器公式生成的正确性。",
            "系统应验证离散化处理的逻辑判断条件和分支，确保在逻辑恒假、恒真或错误时，Tustin 双线性变换的正确性。",
            "系统应检查不同余度的工作状态，在状态不一致时仍能正确执行离散化处理及陷波滤波器生成。",
            "系统应对不同余度的离散型接口数据进行一致性校验，并在不一致时确保 Tustin 双线性变换处理的正确性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 234,
        "requirement": "根据飞行过程不同阶段的需要或遥控控制的需要来收放襟翼，襟翼有 0°、15°和 40°三个偏角位置。",
        "original_safety_criterions": [
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "两个或多个状态之间不存在转移关系，对这些状态的进入条件进行检查，分析进入条件“同时满足、状态执行过程中满足”等情况下状态执行的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统应在襟翼收放功能执行前检查当前飞行阶段与状态，确保襟翼偏角（0°、15°、40°）的切换严格匹配预设阶段与状态条件，避免未考虑因素导致的错误动作。",
            "系统应对襟翼收放状态的进入条件进行互斥性检查，确保不同偏角位置之间无冲突转移，且在状态执行期间触发条件变化时维持当前状态或按安全协议处理。",
            "系统在检测到多个余度通道的襟翼收放状态不一致时，应立即触发容错机制，强制同步至预设安全偏角（如0°），并生成告警记录。",
            "系统应对襟翼控制指令进行多重校验，包括飞行阶段状态、余度通道一致性及物理传感器反馈，确保仅当所有条件合规时执行偏角切换。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 235,
        "requirement": "系统应能够根据飞行阶段识别模块提供的信息，自动调整襟翼的偏角位置。",
        "original_safety_criterions": [
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性",
            "针对各项任务的先后执行时序进行检查，分析任务执行时序与规定时序不一致时，功能处理的正确性",
            "各功能点控制逻辑之间的时序关系、约束关系、并发关系和组合关系是否正确"
        ],
        "safety_requirements": [
            "系统在检测到两个或多个余度处于不同工作状态时，应确保襟翼偏角位置调整功能的正确执行，并触发状态同步机制。",
            "系统应验证襟翼偏角位置调整功能的控制逻辑时序、约束关系及并发组合关系，确保其与飞行阶段识别模块的信息严格匹配。",
            "系统应对飞行阶段识别模块的逻辑判断条件进行完整性检查，防止逻辑恒假、恒真或分支遗漏导致襟翼偏角位置调整错误。",
            "系统应监控飞行阶段识别信息与襟翼调整任务的执行时序，在时序偏离规定时强制纠正并记录异常事件。",
            "系统在襟翼偏角控制解算过程中，必须明确区分飞行阶段和工作状态参数，未考虑相关参数时应终止解算并告警。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 236,
        "requirement": "系统应支持通过遥控控制手动调整襟翼的偏角位置。",
        "original_safety_criterions": [
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "故障项的检测逻辑是否合理，检测方式是否会对设备正常工作产生影响？",
            "系统进行控制的顺序和时序是否与硬件协调，控制条件是否完备且前后一致？"
        ],
        "safety_requirements": [
            "系统应确保故障检测逻辑不会对遥控手动调整襟翼偏角位置的正常工作产生干扰，并在检测到故障时保持功能稳定性。",
            "系统应对襟翼偏角位置调整的逻辑判断条件进行全面检查，消除逻辑恒假、恒真、条件错误或分支遗漏，确保功能处理的正确性。",
            "系统在手动调整襟翼偏角位置时，应验证控制顺序和时序与硬件的协调性，保证控制条件完备且逻辑前后一致。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 237,
        "requirement": "系统应能够接收和处理飞行阶段识别模块提供的数据，以确定当前的飞行阶段。",
        "original_safety_criterions": [
            "对接口数据的发送、接收周期进行检查，分析发送和接收周期是否匹配",
            "工作状态发生转移时，对功能接口数据的取值进行检查，分析“取值发生变化或者取值区间发生变化”等情况下输出的正确性",
            "针对各项任务的持续时间进行检查，分析任务持续时间小于规定时间等情况下，功能处理的正确性",
            "针对各项任务的先后执行时序进行检查，分析任务执行时序与规定时序不一致时，功能处理的正确性",
            "针对各项任务的持续时间进行检查，分析任务持续时间大于规定时间等情况下，功能处理的正确性"
        ],
        "safety_requirements": [
            "系统应检查飞行阶段识别模块数据的发送和接收周期，确保周期匹配，以保证当前飞行阶段识别的正确性。",
            "系统在工作状态转移时应对飞行阶段识别模块数据的取值进行检查，确保在‘取值变化’或‘取值区间变化’情况下输出的正确性。",
            "系统应在飞行阶段识别任务持续时间小于规定时间时，验证数据处理逻辑的正确性并实施容错机制。",
            "系统应对飞行阶段识别任务的执行时序进行检查，确保时序与规定不一致时仍能正确处理数据并触发告警。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 238,
        "requirement": "系统应能够根据当前的飞行阶段，选择合适的襟翼偏角位置。",
        "original_safety_criterions": [
            "对两个或多个存在转移关系的状态下、设置了优先级的不同功能进行检查，分析“高优先级切换低优先级、低优先级切换高优先级”等情况下状态与功能的正确性",
            "是否有基于回绕检测的故障处理，故障时状态上报策略是否合理？",
            "输出控制状态的时机是否符合场景要求？",
            "下发危险的控制指令或动作时，是否有依据设备状态进行合理性判断？",
            "参数是否有变化率合理范围（斜率上限和下限），超斜率数据的处理策略是否明确？"
        ],
        "safety_requirements": [
            "系统应监控襟翼偏角位置的变化率，确保其在设定的斜率上下限范围内，并明确超限数据的处理策略。",
            "系统下发危险控制指令前，必须基于当前飞行阶段进行合理性判断，验证指令与飞行阶段的匹配性。",
            "系统选择襟翼偏角位置的时机需严格符合当前飞行阶段的时序要求，确保状态切换的合规性。",
            "系统应实现基于回绕检测的故障处理机制，故障时需上报飞行阶段及襟翼偏角位置状态，并触发应急策略。",
            "系统在飞行阶段优先级切换时（高低优先级互转），需检查襟翼偏角位置状态与功能的正确性，确保符合安全逻辑。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 239,
        "requirement": "系统应能够记录和显示襟翼的当前偏角位置。",
        "original_safety_criterions": [
            "故障项的检测逻辑是否合理，检测方式是否会对设备正常工作产生影响？",
            "工作状态发生转移时，对功能接口数据的取值进行检查，分析“取值未发生变化”等情况下输出的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性",
            "系统恢复后，记录的关键状态是否仍满足实时性要求？"
        ],
        "safety_requirements": [
            "系统在工作状态发生转移时，应对襟翼的当前偏角位置取值进行检查，确保在‘取值未发生变化’情况下记录的显示结果正确。",
            "系统恢复后，应验证记录的襟翼当前偏角位置数据满足实时性要求，确保与实际情况一致。",
            "故障检测逻辑的设计应避免对襟翼正常工作产生影响，检测方式需独立于襟翼控制执行流程。",
            "当两个或多个余度处于不同工作状态时，系统应准确记录和显示襟翼当前偏角位置，并标识余度状态不一致的异常情况。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 240,
        "requirement": "飞机在地面等待阶段，襟翼置为 0°。",
        "original_safety_criterions": [
            "对软件状态空间中两两状态之间的转移条件进行检查，分析转移条件“未设置、始终满足、无法满足”等情况下状态转移的正确性",
            "是否有基于回绕检测的故障处理，故障时状态上报策略是否合理？",
            "各模态的进入条件和退出条件是否一致？",
            "人员操作是否有合理性判断，不符合当前场景或状态的指令不进行响应？"
        ],
        "safety_requirements": [
            "系统应确保飞机在地面等待阶段设置襟翼为0°时，各模态的进入条件与退出条件一致，并验证操作逻辑的连续性。",
            "系统需检查地面等待阶段状态空间中的状态转移条件，在转移条件为‘未设置’‘始终满足’或‘无法满足’时，确保状态转移的准确性和合法性。",
            "系统在地面等待阶段应对人员操作指令进行实时校验，若检测到襟翼置为非0°等不符合当前场景的指令，应立即拒绝执行。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 241,
        "requirement": "飞机执行起飞时，从地面滑跑阶段开始，襟翼偏至 15°。",
        "original_safety_criterions": [
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "针对各项任务的先后执行时序进行检查，分析任务执行时序与规定时序不一致时，功能处理的正确性",
            "对不同余度的执行时序进行检查，分析“两个或多个余度执行时序未同步”等情况下，功能实现的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统应在襟翼偏至 15° 的功能执行时，检查不同余度的工作状态，确保在‘两个或多个余度处于不同状态’的情况下，襟翼偏角调整的正确性。",
            "系统应根据当前工作阶段和状态对输入进行校验，确保在‘未考虑工作阶段’或‘未考虑工作状态’时，襟翼偏至 15° 的控制解算逻辑正确。",
            "系统应对飞机起飞时的任务时序进行监控，确保地面滑跑阶段开始后襟翼偏至 15° 的时序符合规定，并在时序不一致时触发修正机制。",
            "系统应检查不同余度的执行时序同步状态，确保在‘余度执行时序未同步’的情况下，襟翼偏至 15° 的功能实现不发生冲突或错误。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 242,
        "requirement": "飞至爬升 1 段时开始计时，如果在 1 分钟内起落架收起，则从收起时刻起延时 5s 后收襟翼为 0°。",
        "original_safety_criterions": [
            "对不同余度的执行时序进行检查，分析‘两个或多个余度执行时序未同步’等情况下，功能实现的正确性",
            "对不同余度所处的工作状态进行检查，分析‘两个或多个余度处于不同状态’等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统应检查不同余度的执行时序同步性，在‘两个或多个余度执行时序未同步’情况下，仍确保飞至爬升1段时开始计时、1分钟内起落架收起后延时5s收襟翼至0°的功能正确执行。",
            "系统应检查不同余度的工作状态一致性，在‘两个或多个余度处于不同状态’情况下，仍确保计时逻辑、起落架状态判断及襟翼收起时序的准确性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 243,
        "requirement": "若 1 分钟后起落架仍然没有收起，则直接收襟翼为 0°。",
        "original_safety_criterions": [
            "针对各项任务的先后执行时序进行检查，分析任务执行时序与规定时序不一致时，功能处理的正确性",
            "针对各项任务的持续时间进行检查，分析任务持续时间大于规定时间等情况下，功能处理的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统应检查起落架收起和襟翼收起的任务执行时序，确保当时序与规定不一致时，功能处理的正确性。",
            "系统应监控起落架收起任务的持续时间，在持续超过1分钟时立即将襟翼收至0°，并验证该操作的执行正确性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 244,
        "requirement": "飞机飞行至五边航线的第四边时，若离到点距离小于 1500m，则放襟翼 15°。",
        "original_safety_criterions": [
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性",
            "对不同余度的离散型输出数据取值进行检查，分析两个或多个余度输出数据“取值不一致”等情况下，功能实现的正确性",
            "对不同余度的离散型接口数据取值进行检查，分析两个或多个余度接口数据“取值不一致”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统应对不同余度的离散型接口数据进行取值检查，在出现两个或多个余度接口数据‘取值不一致’时，仍能确保飞机在五边航线第四边且离到点距离小于1500m时正确执行放襟翼15°功能。",
            "系统应对不同余度所处的工作状态进行检查，在出现‘两个或多个余度处于不同状态’时，仍能确保飞机在五边航线第四边且离到点距离小于1500m时准确触发放襟翼15°操作。",
            "系统应对不同余度的离散型输出数据进行取值检查，在出现两个或多个余度输出数据‘取值不一致’时，仍能保证飞机在五边航线第四边且离到点距离小于1500m时可靠执行放襟翼15°功能。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 245,
        "requirement": "飞至第五边时，当距离预定着陆点的距离小于 Hw / tgλ + 1020 m 且大于 Hw / tgλ + 20 m 时放襟翼 40°。",
        "original_safety_criterions": [
            "对不同余度的输出数据进行检查，分析‘单个余度故障、多个余度均故障’情况下，功能实现的正确性",
            "对不同余度所处的工作状态进行检查，分析‘两个或多个余度处于不同状态’等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统在飞至第五边时，应对不同余度的工作状态进行检查，确保在‘两个或多个余度处于不同状态’情况下，放襟翼 40° 功能的条件判断与执行符合预定距离（Hw / tgλ + 20 m 至 Hw / tgλ + 1020 m）要求。",
            "系统应检查不同余度的输出数据，在‘单个余度故障’或‘多个余度均故障’情况下，仍能确保飞至第五边时放襟翼 40° 的功能正确触发或进入安全失效模式。",
            "系统应对距离预定着陆点的实时距离数据进行余度校验，确保数据有效性，并在检测到不一致时触发异常处理机制。",
            "系统应在余度数据故障或状态不一致时，记录故障信息并限制非安全状态下的襟翼操作。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 246,
        "requirement": "如果飞机没有进入下滑窗口，则飞机再次定高后收襟翼至 15°（Vg相应变化）。",
        "original_safety_criterions": [
            "对功能的循环判断条件进行检查，分析“循环判断条件恒假、恒真”等情况下功能处理的正确性",
            "针对各项任务的先后执行时序进行检查，分析任务执行时序与规定时序不一致时，功能处理的正确性",
            "对功能的控制解算过程进行检查，分析控制解算过程出现超时（未在规定时间内返回结果）等情况下的功能处理正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统在飞机未进入下滑窗口时，应检查余度工作状态，确保‘两个或多个余度处于不同状态’的情况下，收襟翼至15°（Vg相应变化）的功能执行正确。",
            "系统应对循环判断条件进行监测，在‘条件恒假’或‘条件恒真’时，确保收襟翼至15°（Vg相应变化）的处理逻辑正确。",
            "系统应验证任务执行时序与规定时序的一致性，当不一致时，保证飞机未进入下滑窗口后再次定高收襟翼至15°（Vg相应变化）的操作正确处理。",
            "系统应监控控制解算过程超时情况，在超时发生时，确保飞机未进入下滑窗口时收襟翼至15°（Vg相应变化）的功能执行仍符合安全要求。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 247,
        "requirement": "若飞机进入了下滑窗口则襟翼一直保持在 40°,直至完全着陆。",
        "original_safety_criterions": [
            "对软件状态空间中两两状态之间的转移条件进行检查，分析转移条件“未设置、始终满足、无法满足”等情况下状态转移的正确性",
            "对状态进入条件进行检查，分析状态执行过程中进入条件“满足、不满足、再次满足”等情况下状态执行的正确性"
        ],
        "safety_requirements": [
            "系统应在状态转移时检查襟翼控制的转移条件，确保当飞机进入下滑窗口后，襟翼始终保持在 40° 直至着陆，且在条件‘未设置、始终满足、无法满足’等异常情况下维持正确状态。",
            "系统应在飞机进入下滑窗口后持续验证状态进入条件，确保襟翼保持在 40° 的过程中，对进入条件‘满足、不满足、再次满足’等变化场景做出正确响应。",
            "系统应对下滑窗口的触发状态进行实时监控，若检测到非预期状态转移（如未完全着陆时襟翼角度变更），需立即执行安全恢复机制。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 248,
        "requirement": "在正向着陆时，系统在 A 点开始放襟翼 15°,  在 B 点放襟翼 40°；在逆向着陆时，系统在 C 点开始放襟翼 15°,  在 D 点放襟翼 40°。",
        "original_safety_criterions": [
            "各功能点控制逻辑之间的时序关系、约束关系、并发关系和组合关系是否正确",
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统应检查不同余度的工作状态，确保在‘两个或多个余度处于不同状态’时，襟翼在正向和逆向着陆点的放下功能实现正确。",
            "系统应验证正向着陆（A点、B点）与逆向着陆（C点、D点）的襟翼放下控制逻辑间的时序关系、约束关系及并发关系，确保其符合设计要求。",
            "系统应对襟翼放下的逻辑判断条件进行全面检查，防止‘逻辑恒假、恒真、条件错误或分支遗漏’导致的功能异常。",
            "系统在不同工作阶段和状态执行放襟翼操作时，应检查输入参数的完整性，确保未遗漏工作阶段或状态对控制解算的影响。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 249,
        "requirement": "遥控控制模式下，系统收到遥控发来的“襟翼位置 0”控制指令时，发出襟翼 0°控制信号；收到“襟翼位置 1”控制指令时，发出襟翼 15°控制信号；收到“襟翼位置 2”控制指令时，发出襟翼 40°控制信号。",
        "original_safety_criterions": [
            "输出控制状态的时机是否符合场景要求？",
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "系统进行控制的顺序和时序是否与硬件协调，控制条件是否完备且前后一致？",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统在遥控控制模式下应确保‘襟翼位置 0/1/2’指令与控制信号（0°/15°/40°）的严格对应，验证控制条件完备性及执行时序与硬件协调性。",
            "系统收到襟翼位置控制指令时，应在符合场景要求的时间阈值内输出控制信号，避免延迟或过早响应。",
            "在多个余度处于不同状态时，系统应通过冗余仲裁机制确保遥控控制模式下襟翼位置控制信号输出的正确性。",
            "系统应根据当前工作阶段和状态动态调整控制解算逻辑，对未匹配工作阶段或状态的输入指令进行异常处理并拒绝执行。",
            "系统应对襟翼控制指令进行有效性校验，确保极端输入或非法指令不会触发无效控制信号。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 250,
        "requirement": "起落架的收起控制通过收起落架信号发出控制，通过收起锁死信号检查是否收起。起落架的放下控制通过放起落架信号发出控制，通过放下锁死信号检查是否放下。放下不成功时可通过应急放信号起动应急泵。",
        "original_safety_criterions": [
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "对功能的执行条件进行检查，分析功能执行过程中执行条件“不满足、再次满足”等情况下功能处理的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统应在不同工作阶段和状态下对起落架控制输入进行检查，确保工作阶段与状态被正确识别，避免‘未考虑工作阶段’或‘未考虑工作状态’导致的控制错误。",
            "系统应检查起落架控制余度状态，当两个或多个余度处于不同状态时，确保收起和放下控制功能逻辑的正确性。",
            "系统应对起落架控制的逻辑判断条件（如应急放信号触发条件）及分支进行验证，防止‘逻辑恒假、恒真、条件错误或分支遗漏’导致的控制失效。",
            "系统应实时检查起落架收起和放下的执行条件，确保在条件‘不满足’或‘再次满足’时控制流程的合理性，包括应急泵的触发逻辑。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 251,
        "requirement": "自主控制、人工修正和遥控模式时都可实现起落架的收放控制。自主控制或人工修正时飞控系统根据飞机的位置、运动等信息自动收放起落架，遥控时，地面控制站可随时发出指令收放起落架。",
        "original_safety_criterions": [
            "系统进行控制的顺序和时序是否与硬件协调，控制条件是否完备且前后一致？",
            "对状态进入条件进行检查，分析状态执行过程中进入条件“满足、不满足、再次满足”等情况下状态执行的正确性",
            "进行硬件控制后，是否有监控并判断硬件状态与控制要求的匹配性？",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性",
            "输出控制状态的时机是否符合场景要求？"
        ],
        "safety_requirements": [
            "系统应在起落架收放控制后实时监控实际状态，判断其与控制要求的匹配性，并在不匹配时触发报警机制。",
            "系统应对不同余度的工作状态进行检查，当检测到‘两个或多个余度处于不同状态’时，仍能正确执行起落架收放控制功能。",
            "系统应确保自主控制、人工修正和遥控模式下的起落架收放控制顺序、时序与硬件协调，且控制条件具备完备性和前后一致性。",
            "系统应对起落架收放控制的进入条件进行动态检查，确保在条件‘满足、不满足、再次满足’变化时，状态执行的正确性和连续性。",
            "系统在自主、人工和遥控模式下执行起落架收放时，应根据飞机位置、运动信息及场景要求验证控制时机的合规性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 252,
        "requirement": "当飞机起飞到达爬升 1 阶段且起落架处于放下状态时，系统应将收起落架信号置为高电平，同时发左右刹车信号（刹车压力为 50％FS）。",
        "original_safety_criterions": [
            "系统进行控制的顺序和时序是否与硬件协调，控制条件是否完备且前后一致？",
            "对状态进入条件进行检查，分析状态执行过程中进入条件“满足、不满足、再次满足”等情况下状态执行的正确性",
            "对外部设备（如传感器、NVM、数据库、其他系统等）进行检查，分析源设备处于“降级、维护”等情况下输出的正确性",
            "输出控制状态的时机是否符合场景要求？",
            "针对系统所有故障情况，是否进行了差异化的告警措施和处置措施？"
        ],
        "safety_requirements": [
            "系统应在飞机起飞到达爬升1阶段时，检查起落架状态与进入条件，确保在条件‘满足、不满足、再次满足’时，收起落架信号置为高电平及左右刹车信号（50％FS压力）输出的正确性。",
            "系统控制的顺序和时序应与硬件协调，确保在起落架处于放下状态时，收起落架信号与刹车信号的触发条件完备且逻辑一致。",
            "系统在检测到故障时，应针对收起落架信号和刹车信号执行差异化告警与处置措施，确保异常情况下的控制安全性。",
            "系统应对外部设备（如起落架传感器）进行状态监测，在设备处于‘降级、维护’等异常状态下仍能正确触发收起落架信号与刹车信号。",
            "系统应验证爬升1阶段中控制信号输出的实时性，确保收起落架信号与刹车信号触发的时机符合飞行场景要求。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 253,
        "requirement": "1s 后系统应检查收起锁死信号，若收起锁死信号为低电平，则继续检查起落架收放状态。",
        "original_safety_criterions": [
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "工作状态发生转移时，对功能接口数据的取值进行检查，分析“取值未发生变化”等情况下输出的正确性",
            "故障项的检测逻辑是否合理，检测方式是否会对设备正常工作产生影响？",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统应对不同余度的工作状态进行检查，确保在‘两个或多个余度处于不同状态’情况下，收起锁死信号和起落架收放状态的检查功能正确执行。",
            "系统应验证收起锁死信号的检测逻辑合理性，确保检测方式不影响系统正常工作。",
            "系统应对收起锁死信号的逻辑判断条件进行完整性检查，覆盖‘逻辑恒假、逻辑恒真、条件错误、分支遗漏’等异常情况，确保功能处理正确性。",
            "系统在工作状态转移时，应检查收起锁死信号的取值，确保‘取值未发生变化’情况下输出结果的正确性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 254,
        "requirement": "若起落架处于放下状态，系统应将收起落架信号置为低电平、左右刹车信号置为 0，并置起落架收故障标志。",
        "original_safety_criterions": [
            "是否有基于回绕检测的故障处理，故障时状态上报策略是否合理？",
            "对外部设备（如传感器、NVM、数据库、其他系统等）进行检查，分析源设备处于“降级、维护”等情况下输出的正确性",
            "针对系统所有故障情况，是否进行了差异化的告警措施和处置措施？",
            "故障项的检测逻辑是否合理，检测方式是否会对设备正常工作产生影响？",
            "故障检测的故障项是否充分？"
        ],
        "safety_requirements": [
            "系统应对起落架收故障标志的检测逻辑进行验证，确保其合理性且不影响设备正常运行。",
            "当外部设备（如传感器、NVM、数据库等）处于降级或维护状态时，系统应保持起落架收故障标志设置的正确性。",
            "系统应根据起落架收故障类型实施差异化告警措施和处置措施。",
            "系统在检测到起落架收故障时，应依据预定策略执行状态上报，并确保故障处理逻辑符合安全要求。",
            "系统应全面覆盖起落架收故障检测项，包括故障标志设置的触发条件、信号电平状态及刹车信号重置的正确性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 255,
        "requirement": "若起落架处于收起状态，系统应将收起落架信号置为低电平、左右刹车信号置为 0。",
        "original_safety_criterions": [
            "故障项的检测逻辑是否合理，检测方式是否会对设备正常工作产生影响？",
            "系统进行控制的顺序和时序是否与硬件协调，控制条件是否完备且前后一致？",
            "针对系统所有故障情况，是否进行了差异化的告警措施和处置措施？",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统应确保起落架收起状态的检测逻辑合理，检测方式不得干扰设备正常工作，并在检测到收起状态时准确置低收起落架信号、置零左右刹车信号。",
            "系统在起落架处于收起状态时，应验证控制顺序和时序与硬件协调性，确保控制条件完备且前后一致，使收起落架信号和左右刹车信号状态正确。",
            "系统应对起落架收起状态的故障实施差异化告警及处置措施，包括信号异常时触发对应等级的告警与恢复机制。",
            "系统在检测到两个或多个余度处于不同工作状态时，应分析并确保起落架收起信号和左右刹车信号输出的正确性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 256,
        "requirement": "若收起锁死信号为高电平，系统应周期性检查收起锁死信号。",
        "original_safety_criterions": [
            "故障项的检测逻辑是否合理，检测方式是否会对设备正常工作产生影响？",
            "输出回路是否有检测机制，在不影响正常输出时进行回路状态检测？",
            "对不同余度所处的工作状态进行检查，分析‘两个或多个余度处于不同状态’等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统应确保收起锁死信号的检测逻辑合理性，采用非侵入式检测方式，避免对系统正常工作产生干扰。",
            "系统在周期性检查收起锁死信号时，输出回路应具备独立检测机制，确保检查过程不影响正常输出功能。",
            "当两个或多个余度处于不同工作状态时，系统应仍能正确执行收起锁死信号为高电平的周期性检查功能。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 257,
        "requirement": "若 1 分钟内收起锁死信号变为低电平，系统应将收起落架信号置为低电平，左右刹车信号置为 0，并置起落架状态为收起。",
        "original_safety_criterions": [
            "对不同余度的接口数据进行检查，分析“单个余度故障、全部余度均故障（如数据异常、时序故障、通信故障、目的设备故障等）”情况下，功能实现的正确性",
            "对功能的控制解算过程进行检查，分析控制解算过程出现超时（未在规定时间内返回结果）等情况下的功能处理正确性",
            "对两个或多个存在转移关系的状态下、设置了优先级的不同功能进行检查，分析“高优先级切换低优先级、低优先级切换高优先级”等情况下状态与功能的正确性",
            "针对系统所有故障情况，是否进行了差异化的告警措施和处置措施？"
        ],
        "safety_requirements": [
            "系统应在检测到收起锁死信号低电平故障时，执行收起落架信号置低、左右刹车信号置0及状态置收起操作，并实施差异化告警与处置措施。",
            "系统在状态优先级切换时（高/低优先级转移），应确保1分钟内收起锁死信号触发后的操作正确执行，且状态切换符合预设优先级逻辑。",
            "系统在单个或全部余度接口数据故障（数据异常、通信故障等）时，应维持收起落架信号、刹车信号及状态设置的功能正确性。",
            "系统在起落架控制解算超时情况下，应启动预设处理机制，确保功能输出的正确性并触发相应告警。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 258,
        "requirement": "若 1 分钟后收起锁死信号仍为高电平，系统应将收起落架信号置为低电平、左右刹车信号置为 0，并置起落架收故障标志。",
        "original_safety_criterions": [
            "故障检测是否有防虚警处理，防虚警处理是否会满足告警处置的实时性要求？",
            "同一个接口数据存在多个故障处理策略，对同一个接口数据下不同故障处理策略要求的安全值进行检查，分析多个故障处理策略的安全值不同等情况下输出的正确性",
            "对不同余度的接口数据进行检查，分析“单个余度故障、全部余度均故障（如数据异常、时序故障、通信故障、目的设备故障等）”情况下，功能实现的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性",
            "对功能的控制解算结果进行检查，分析控制解算结果为“正常值、异常值、边界值、极大极小值”等情况下功能处理的正确性"
        ],
        "safety_requirements": [
            "系统在检测到两个或多个余度处于不同工作状态时，应确保收起落架信号置为低电平、左右刹车信号置为0，并准确置起落架收故障标志。",
            "系统在单个余度或全部余度发生数据异常、时序故障、通信故障或目的设备故障时，应正确执行收起落架信号置低、左右刹车信号置0及故障标志置位。",
            "系统应对同一接口数据的不同故障处理策略进行安全值检查，确保在策略冲突时按最高优先级安全值执行信号处理和故障标志置位。",
            "系统的防虚警处理机制应满足实时性要求，确保在收起锁死信号持续高电平1分钟后及时触发信号置位和故障标志更新。",
            "系统应对起落架控制解算结果（正常值、异常值、边界值及极大极小值）进行校验，确保其触发信号处理和故障标志置位的逻辑正确性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 259,
        "requirement": "当飞机返场飞行至五边航线的第三边，离到点的距离小于 5000m 时，系统应将左右刹车置为 100％，放起落架信号置为高电平。",
        "original_safety_criterions": [
            "对功能的控制解算过程进行检查，分析控制解算过程出现超时（未在规定时间内返回结果）等情况下的功能处理正确性",
            "对功能的控制解算结果进行检查，分析控制解算结果为“正常值、异常值、边界值、极大极小值”等情况下功能处理的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统在飞机返场飞行至五边航线第三边且离到点距离小于5000m时，应对不同余度的工作状态进行检查，确保在‘两个或多个余度处于不同状态’情况下，左右刹车置为100％及放起落架信号置为高电平的功能正确执行。",
            "系统在触发控制解算过程中应进行超时监测，若未在规定时间内返回结果，需启动预设安全响应机制以保证左右刹车及起落架信号的正确输出。",
            "系统应对控制解算结果进行实时验证，确保‘正常值、异常值、边界值、极大极小值’等情况下，左右刹车置为100％及起落架信号置为高电平的处理逻辑符合安全规范，异常结果触发告警。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 260,
        "requirement": "1s 后系统应检查放下锁死信号。",
        "original_safety_criterions": [
            "故障项的检测逻辑是否合理，检测方式是否会对设备正常工作产生影响？",
            "对功能的数据处理过程进行检查，分析数据处理过程是否存在除0的情况",
            "对功能的控制解算过程进行检查，分析控制解算过程出现超时（未在规定时间内返回结果）等情况下的功能处理正确性"
        ],
        "safety_requirements": [
            "系统在检查放下锁死信号时，应确保检测逻辑合理且检测方式不影响系统正常工作。",
            "系统对放下锁死信号的数据处理过程应进行完整性检查，防止出现除0等异常情况。",
            "系统在控制解算过程中出现超时未返回结果时，应触发预设容错机制并确保功能处理正确性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 261,
        "requirement": "若放下锁死信号为低电平，表示放起落架电路故障，再将应急放起落架信号置为高电平，1分钟后，将放起落架和应急放起落架信号均置为低电平（这种情况无法检查放下锁死信号），并将左右刹车置为相应的预置量，起落架放故障标志置为有效。",
        "original_safety_criterions": [
            "针对各项任务的先后执行时序进行检查，分析任务执行时序与规定时序不一致时，功能处理的正确性",
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "对不同余度的输出数据进行检查，分析“单个余度故障、多个余度均故障”情况下，功能实现的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统应对放起落架电路的逻辑判断条件和逻辑分支进行检查，确保在‘逻辑恒假、逻辑恒真、逻辑判断条件错误或逻辑分支遗漏’情况下，功能处理符合应急放起落架信号置位、刹车预置量设置及故障标志置位的正确性。",
            "系统在检测到不同余度处于不同工作状态时，应确保放起落架和应急放起落架信号的置位逻辑正确，并在1分钟后将其置为低电平，同时准确设置左右刹车预置量及起落架放故障标志。",
            "系统应对不同余度的输出数据进行检查，确保在‘单个余度故障或多个余度均故障’情况下，应急放起落架信号置位、刹车预置量设置及故障标志置位的正确性。",
            "系统应验证任务执行时序与规定时序的一致性，确保在放下锁死信号为低电平时，应急信号置位、1分钟后信号复位、刹车预置量配置及故障标志设置的操作顺序严格符合要求。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 262,
        "requirement": "若放下锁死信号为高电平，则周期性检查放下锁死信号：若1分钟内放下锁死信号变为低电平，表示起落架已放下，将放起落架信号置为低电平，置起落架状态为放下，并将左右刹车置为相应的预置量，起落架放故障标志置为无效。",
        "original_safety_criterions": [
            "是否有基于回绕检测的故障处理，故障时状态上报策略是否合理？",
            "对状态进入条件进行检查，分析状态执行过程中进入条件“满足、不满足、再次满足”等情况下状态执行的正确性",
            "是否规定了误操作、无效操作的响应处理要求？",
            "故障项的检测逻辑是否合理，检测方式是否会对设备正常工作产生影响？",
            "故障检测的故障项是否充分？"
        ],
        "safety_requirements": [
            "系统在检测到放下锁死信号为高电平时，应实施周期性检查并定义故障处理策略，包括1分钟内信号未变为低电平时的故障标志置位及状态上报。",
            "系统应规定误操作或无效操作的响应机制，确保在放下锁死信号异常时，放起落架信号、刹车预置量及状态更新的操作符合安全约束。",
            "系统对放下锁死信号的检测逻辑需独立于起落架正常工作流程，避免检测操作干扰其物理执行机构的正常功能。",
            "系统应在状态执行过程中持续监测进入条件的满足性，确保在条件反复变化（满足→不满足→再次满足）时，状态转换和刹车预置量的准确性。",
            "系统应覆盖与放下锁死信号相关的所有潜在故障项，包括但不限于信号丢失、周期检测超时及逻辑冲突，并设置对应的故障标志及恢复机制。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 263,
        "requirement": "若放下锁死信号为高电平，则周期性检查放下锁死信号：若1分钟后放下锁死信号仍为高电平，表示放起落架故障，再将应急放起落架信号置为高电平，1s后周期性检查放下锁死信号。",
        "original_safety_criterions": [
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "对不同余度的输出数据进行检查，分析“单个余度故障、多个余度均故障”情况下，功能实现的正确性",
            "对不同余度的接口数据进行检查，分析“单个余度故障、全部余度均故障（如数据异常、时序故障、通信故障、目的设备故障等）”情况下，功能实现的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统应对不同余度的放下锁死信号进行检查，确保在单个余度故障或多个余度均故障的情况下，放起落架功能与应急放起落架信号触发的逻辑正确性。",
            "系统应检查不同余度的工作状态，在存在两个及以上余度处于不同状态时，保证周期性检查放下锁死信号及应急放起落架信号置为高电平的功能正确执行。",
            "系统应对放下锁死信号的逻辑判断条件和分支进行完整性检查，在出现逻辑恒假、恒真、判断条件错误或分支遗漏时，确保故障处理流程的正确性和告警机制的有效性。",
            "系统应检测不同余度接口数据状态（包括数据异常、时序故障、通信故障等），在单个余度故障或全部余度故障时，维持放下锁死信号和应急放起落架信号功能的可靠性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 264,
        "requirement": "若1分钟后放下锁死信号仍为高电平，表示应急放起落架失败，将放起落架和应急放起落架信号均置为低电平，并将左右刹车置为相应的预置量，起落架放故障标志置为有效。",
        "original_safety_criterions": [
            "对不同余度的输出数据进行检查，分析“单个余度故障、多个余度均故障”情况下，功能实现的正确性",
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "是否进行了传感器特定故障（基于传感器工作原理）的判断和处理？",
            "对功能的控制解算过程进行检查，分析控制解算过程出现超时（未在规定时间内返回结果）等情况下的功能处理正确性",
            "针对各项任务的先后执行时序进行检查，分析任务执行时序与规定时序不一致时，功能处理的正确性"
        ],
        "safety_requirements": [
            "系统应对应急放起落架的逻辑判断条件进行验证，确保在‘逻辑恒假、逻辑恒真、判断条件错误、分支遗漏’情况下，放起落架信号、应急信号置低、刹车预置及故障标志处理正确。",
            "系统应检查应急放起落架任务执行时序，当1分钟后放下锁死信号仍为高电平时，严格按顺序将信号置低、设置左右刹车预置量，并置位故障标志。",
            "系统在单余度或多余度故障时，应确保应急放起落架功能正确触发放起落架信号置低、刹车预置及故障标志置位操作。",
            "系统应基于起落架工作原理检测特定故障，并在检测到应急放失败时，强制将放起落架和应急信号置低，设定刹车预置量，激活故障标志。",
            "系统应监控应急放起落架控制解算过程，超时后自动执行信号置低、刹车预置及故障标志置位，确保与1分钟高电平判断结果一致。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 265,
        "requirement": "若1分钟内放下锁死信号为变低电平，表示起落架应急放成功，延时2s后，将放起落架和应急放起落架信号均置为低电平，置起落架状态为放下，并将左右刹车置为相应的预置量，起落架放故障标志置为无效。",
        "original_safety_criterions": [
            "是否有基于回绕检测的故障处理，故障时状态上报策略是否合理？",
            "是否规定了误操作、无效操作的响应处理要求？",
            "故障项的检测逻辑是否合理，检测方式是否会对设备正常工作产生影响？",
            "故障检测的故障项是否充分？",
            "对于关键控制或动作，是否有超时判断，以处理硬件状态长时间达不到控制要求的情况？"
        ],
        "safety_requirements": [
            "系统应在起落架应急放操作启动后1分钟内检测放下锁死信号状态，若未变低电平，触发故障处理机制并上报状态。",
            "系统应在起落架应急放过程中执行故障检测，确保检测逻辑不影响设备正常工作，且能识别关键故障项。",
            "系统在应急放成功（放下锁死信号变低电平）后，应延时2s将放起落架和应急放信号置为低电平，并准确设置起落架状态、左右刹车预置量及故障标志。",
            "系统应对应急放操作中的误操作或无效操作进行实时识别，并执行预设的响应处理策略。",
            "系统应确保起落架应急放故障检测覆盖信号异常、时序超限及执行机构失效等场景，并记录故障标志状态。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 266,
        "requirement": "地面加电时，系统应初始化所有信号和状态，确保起落架和刹车系统的初始状态正确。",
        "original_safety_criterions": [
            "对外部设备（如传感器、NVM、数据库、其他系统等）进行检查，分析设备处于“下电、初始化”等工作状态下输出的正确性",
            "多个功能或多个状态具有同一个接口数据，不同功能/状态对输入初始值的要求不同。对这一接口数据的初始值进行检查，分析接口数据初始值“大于功能/状态要求、小于功能/状态要求”等情况下输出的正确性",
            "对状态进入条件进行检查，分析状态执行过程中进入条件“满足、不满足、再次满足”等情况下状态执行的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统在地面加电时，应检查不同余度的工作状态，确保在‘两个或多个余度处于不同状态’的情况下，所有信号和状态的初始化正确，维持起落架和刹车系统的初始状态正确。",
            "系统在地面加电时，应对状态进入条件进行验证，确保在条件‘满足、不满足、再次满足’等情况下，状态执行的输出结果与起落架和刹车系统的初始状态要求一致。",
            "系统在地面加电时，应检查外部设备（如传感器、NVM、数据库等）的工作状态，确保设备处于‘下电、初始化’等状态下输出的正确性，以支持起落架和刹车系统的正确初始化。",
            "系统在地面加电时，应对起落架和刹车系统的初始状态进行验证，分析‘初始状态大于功能要求、小于功能要求’等情况下的输出正确性，确保符合设计要求。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 267,
        "requirement": "根据需要可在任何控制模式下发遥控指令收放起落架。",
        "original_safety_criterions": [
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "下发危险的控制指令或动作时，是否有依据设备状态进行合理性判断？",
            "针对各项任务的先后执行时序进行检查，分析任务执行时序与规定时序不一致时，功能处理的正确性",
            "各功能点控制逻辑之间的时序关系、约束关系、并发关系和组合关系是否正确"
        ],
        "safety_requirements": [
            "系统在不同工作阶段和状态下发遥控指令收放起落架时，应检查功能输入是否与当前阶段及状态匹配，并确保指令处理的正确性。",
            "系统下发遥控指令收放起落架前，应对设备状态（如锁定、故障等）进行实时监测和合理性判断，禁止在无效状态下执行指令。",
            "系统应验证遥控指令收放起落架的任务执行时序是否符合预定义时序规则，若检测到时序不一致则终止操作并反馈异常。",
            "系统应对控制模式下遥控指令收放起落架的逻辑判断条件进行全面检查，避免逻辑恒假、恒真、条件错误或分支遗漏导致的误操作。",
            "系统应确保各控制模式下遥控指令收放起落架的时序关系、约束条件、并发及组合关系符合安全规范，防止冲突或并发风险。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 268,
        "requirement": "收到“收起落架”遥控指令时，若飞行阶段不为地面等待且飞行高度不低于 80m，则按照 3.2.11.3 中 1）的处理（不包含其条件）进行。",
        "original_safety_criterions": [
            "人员操作是否有合理性判断，不符合当前场景或状态的指令不进行响应？",
            "下发危险的控制指令或动作时，是否有依据设备状态进行合理性判断？",
            "针对各项任务的持续时间进行检查，分析任务持续时间小于规定时间等情况下，功能处理的正确性",
            "针对各项任务的持续时间进行检查，分析任务持续时间大于规定时间等情况下，功能处理的正确性",
            "对功能的执行条件进行检查，分析功能执行过程中执行条件“不满足、再次满足”等情况下功能处理的正确性"
        ],
        "safety_requirements": [
            "系统在执行‘收起落架’指令前，应检查飞行阶段及飞行高度是否满足条件（非地面等待且高度≥80m），并在执行过程中持续监测条件状态变化，确保功能处理的正确性。",
            "系统在收到‘收起落架’指令时，应根据当前飞行阶段和飞行高度进行合理性判断，不符合条件（如地面等待或高度<80m）时拒绝响应。",
            "系统应对‘收起落架’任务的执行持续时间进行监控，若超时则触发异常处理机制，确保功能终止或恢复到安全状态。",
            "系统在飞行阶段或飞行高度条件不满足时收到‘收起落架’指令，应记录非法指令并生成告警，同时禁止执行相关操作。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 269,
        "requirement": "收到“放起落架”的遥控指令时，按照 3.2.11.3 中 2）的处理（不包含其条件）进行。",
        "original_safety_criterions": [
            "对功能的控制解算过程进行检查，分析控制解算过程出现超时（未在规定时间内返回结果）等情况下的功能处理正确性",
            "下发危险的控制指令或动作时，是否有依据设备状态进行合理性判断？",
            "对功能的控制解算结果进行检查，分析控制解算结果为“正常值、异常值、边界值、极大极小值”等情况下功能处理的正确性",
            "针对各项任务的先后执行时序进行检查，分析任务执行时序与规定时序不一致时，功能处理的正确性",
            "针对各项任务的持续时间进行检查，分析任务持续时间大于规定时间等情况下，功能处理的正确性"
        ],
        "safety_requirements": [
            "系统在执行‘放起落架’任务时，应检查任务持续时间，若超出规定时间需触发异常处理机制并确保功能处理符合安全状态。",
            "系统应对‘放起落架’指令的控制解算结果进行验证，确保在‘正常值、异常值、边界值、极大极小值’等情况下的处理逻辑正确性。",
            "系统应在‘放起落架’控制解算过程超时（未在规定时间返回结果）时，终止操作并执行安全保护动作。",
            "系统应监控‘放起落架’任务的执行时序，若与规定时序不一致时，立即中止任务并恢复至安全状态。",
            "系统下发‘放起落架’指令前，应基于实时设备状态进行合理性判断，拒绝不符合安全条件的指令执行。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 270,
        "requirement": "飞机两后轮各有一套独立的刹车系统，刹车采用 PWM 控制方案。飞控计算机向刹车系统发送 2kHz 的脉宽调制信号，刹车力矩与脉宽调制信号的占空比成正比。刹车持续时间对应 PWM 信号的持续时间。",
        "original_safety_criterions": [
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "各功能点控制逻辑之间的时序关系、约束关系、并发关系和组合关系是否正确"
        ],
        "safety_requirements": [
            "系统应对刹车系统的逻辑判断条件和分支进行全面检查，确保在‘逻辑恒假、逻辑恒真、逻辑条件错误或分支遗漏’情况下，刹车处理逻辑仍能正确执行PWM控制方案。",
            "系统应验证飞控计算机发送2kHz PWM信号时各功能点的时序、约束、并发及组合关系，确保刹车力矩与占空比严格成正比且持续时间与信号持续期精确匹配。",
            "系统应实时监控PWM信号的占空比与刹车力矩的对应关系，在检测到非线性偏差时立即触发校正机制并隔离异常刹车通道。",
            "系统应对独立双刹车系统的PWM控制指令进行交叉验证，确保两套系统占空比计算的一致性，并在任一系统失效时自动切换冗余控制。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 271,
        "requirement": "若起落架全压缩信号有效，空速小于某一速度阈值vk_may_brake时，则采用差动刹车纠偏。",
        "original_safety_criterions": [
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "对不同余度的连续型输出数据取值进行检查，分析两个或多个余度输出数据“取值不一致，即取值之差超出规定阈值”等情况下，功能实现的正确性",
            "针对各项任务的持续时间进行检查，分析任务持续时间小于规定时间等情况下，功能处理的正确性",
            "针对各项任务的先后执行时序进行检查，分析任务执行时序与规定时序不一致时，功能处理的正确性",
            "对功能的控制解算结果进行检查，分析控制解算结果为“正常值、异常值、边界值、极大极小值”等情况下功能处理的正确性"
        ],
        "safety_requirements": [
            "系统应检查起落架全压缩信号有效与空速小于vk_may_brake的逻辑判断条件，确保在‘逻辑恒假、逻辑恒真、判断条件错误、分支遗漏’情况下差动刹车纠偏功能处理的正确性。",
            "系统应对不同余度的连续型输出数据进行校验，当余度输出数据差值超出规定阈值时，确保差动刹车纠偏功能的正确实现。",
            "系统应验证差动刹车纠偏任务的执行时序，在时序与规定不一致时保证功能处理的正确性。",
            "系统应检查差动刹车纠偏控制解算结果的合理性，包括正常值、异常值、边界值及极大极小值场景下的处理正确性。",
            "系统应监测起落架全压缩信号有效且空速小于vk_may_brake的持续时间，当任务持续时间小于规定阈值时，确保纠偏功能正确执行。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 272,
        "requirement": "在自主控制模式下，差动刹车控制律为：δb = -(Kz * Dz + Kz * Dz - K * Δy - Ky * wy)",
        "original_safety_criterions": [
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "对系统状态、工作阶段或系统任务对应的软件状态进行检查，分析“不存在对应软件状态、软件与系统不一致”等情况下状态执行的正确性",
            "对状态进入条件进行检查，分析状态执行过程中进入条件“满足、不满足、再次满足”等情况下状态执行的正确性"
        ],
        "safety_requirements": [
            "系统在自主控制模式下应对状态进入条件进行检查，确保在进入条件‘满足、不满足、再次满足’时，差动刹车控制律（δb = -(Kz*Dz + Kz*Dz - K*Δy - Ky*wy)）的执行逻辑正确。",
            "系统在不同工作阶段或状态切换时，应对功能输入进行检查，确保未遗漏工作阶段或状态的情况下，差动刹车控制律（δb = -(Kz*Dz + Kz*Dz - K*Δy - Ky*wy)）的解算处理正确。",
            "系统在自主控制模式下应检查软件状态与系统状态、工作阶段的一致性，防止‘不存在对应软件状态’或‘软硬件不一致’导致的状态执行错误。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 273,
        "requirement": "在人工修正模式下，差动刹车控制律为：δb = -[Kz * (Dz - DzgSemi - DzsemiOld) + Kz * Dz - K * Δy - Ky * wy]，其中DzsemiOld为拉平段的侧偏距修正量。",
        "original_safety_criterions": [
            "对两个或多个存在转移关系的状态下、设置了优先级的不同功能进行检查，分析“高优先级切换低优先级、低优先级切换高优先级”等情况下状态与功能的正确性",
            "对软件状态空间中两两状态之间的转移条件进行检查，分析转移条件“未设置、始终满足、无法满足”等情况下状态转移的正确性",
            "对状态进入条件进行检查，分析状态执行过程中进入条件“满足、不满足、再次满足”等情况下状态执行的正确性",
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "对系统状态、工作阶段或系统任务对应的软件状态进行检查，分析“不存在对应软件状态、软件与系统不一致”等情况下状态执行的正确性"
        ],
        "safety_requirements": [
            "系统在进入人工修正模式时，应检查状态进入条件，确保在条件‘满足、不满足、再次满足’时差动刹车控制律δb的计算正确，并准确使用DzsemiOld参数。",
            "系统在不同工作阶段和状态下计算差动刹车控制律δb时，应对输入参数进行校验，确保未忽略工作阶段或状态导致的解算差异。",
            "系统在人工修正模式下进行状态优先级切换时，应验证‘高优先级切换低优先级’和‘低优先级切换高优先级’场景中控制律δb的执行正确性。",
            "系统应确保人工修正模式下的状态转移条件设置完整，在‘未设置、始终满足、无法满足’情况下禁止异常转移，并维持控制律δb的有效性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 274,
        "requirement": "在带内回路遥控（姿态遥控）模式下，差动刹车控制律为：δb = K * (-yg) + Ky * wy",
        "original_safety_criterions": [
            "系统进行控制的顺序和时序是否与硬件协调，控制条件是否完备且前后一致？",
            "是否有基于回绕检测的故障处理，故障时状态上报策略是否合理？",
            "输出回路是否有检测机制，在不影响正常输出时进行回路状态检测？",
            "对状态进入条件进行检查，分析状态执行过程中进入条件“满足、不满足、再次满足”等情况下状态执行的正确性"
        ],
        "safety_requirements": [
            "系统在进入带内回路遥控（姿态遥控）模式前，应检查进入条件，确保在条件‘满足、不满足、再次满足’时差动刹车控制律 δb = K * (-yg) + Ky * wy 的执行正确性。",
            "系统在带内回路遥控（姿态遥控）模式下应具备基于回绕检测的故障处理机制，故障时执行合理的状态上报策略，并确保差动刹车控制律 δb 的运算准确性。",
            "系统在带内回路遥控（姿态遥控）模式下应实时检测控制回路状态，确保差动刹车控制律 δb = K * (-yg) + Ky * wy 的运算不影响正常输出。",
            "系统应确保带内回路遥控（姿态遥控）模式下的控制顺序、时序与硬件协调，控制条件完备且一致，差动刹车控制律 δb 的执行须严格遵循公式定义。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 275,
        "requirement": "在不带内回路遥控（舵面遥控）模式下，差动刹车控制律的具体公式未提供，但需要实现相应的控制逻辑。",
        "original_safety_criterions": [
            "对不同余度的连续型输出数据取值进行检查，分析两个或多个余度输出数据“取值不一致，即取值之差超出规定阈值”等情况下，功能实现的正确性",
            "对不同余度的离散型输出数据取值进行检查，分析两个或多个余度输出数据“取值不一致”等情况下，功能实现的正确性",
            "对不同余度的执行时序进行检查，分析“两个或多个余度执行时序未同步”等情况下，功能实现的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统应检查不同余度的工作状态，确保在‘两个或多个余度处于不同状态’时，差动刹车控制逻辑的正确实现。",
            "系统应监测不同余度的连续型输出数据，当取值差异超出规定阈值时，确保差动刹车控制逻辑的准确性和一致性。",
            "系统应检查不同余度的离散型输出数据，在‘取值不一致’情况下维持差动刹车控制逻辑的可靠执行。",
            "系统应同步不同余度的执行时序，当‘两个或多个余度执行时序未同步’时，触发纠错机制以保证控制逻辑正确性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 276,
        "requirement": "在地面等待阶段，自主和人工修正模式下的差动刹车控制律为：δb = 0。",
        "original_safety_criterions": [
            "对软件状态空间中两两状态之间的转移条件进行检查，分析转移条件“未设置、始终满足、无法满足”等情况下状态转移的正确性",
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "输出控制状态的时机是否符合场景要求？",
            "下发危险的控制指令或动作时，是否有依据设备状态进行合理性判断？",
            "对于关键控制或动作，是否有超时判断，以处理硬件状态长时间达不到控制要求的情况？"
        ],
        "safety_requirements": [
            "系统在地面等待阶段的自主和人工修正模式下，应确保差动刹车控制律 δb=0 的输出时机符合场景要求，并检查控制状态切换的触发条件。",
            "系统在下发地面等待阶段的差动刹车控制指令前，应基于设备状态进行合理性判断，避免危险动作的执行。",
            "系统应检查功能输入的阶段和状态信息，确保差动刹车控制律 δb=0 在未考虑工作阶段或状态时仍被正确处理。",
            "系统应对地面等待阶段的自主与人工修正模式间状态转移条件进行检查，确保其未被错误设置为“未设置、始终满足或无法满足”。",
            "系统应针对地面等待阶段差动刹车控制律 δb=0 设置超时判断机制，处理长时间未达到控制要求的情况。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 277,
        "requirement": "遥控模式下与滑跑阶段相同，其中，vk_may_brake = 80km/h。",
        "original_safety_criterions": [
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "对软件状态空间中两两状态之间的转移条件进行检查，分析转移条件“未设置、始终满足、无法满足”等情况下状态转移的正确性",
            "对状态进入条件进行检查，分析状态执行过程中进入条件“满足、不满足、再次满足”等情况下状态执行的正确性"
        ],
        "safety_requirements": [
            "系统在遥控模式下滑跑阶段应检查状态进入条件，确保在条件'满足、不满足、再次满足'时，vk_may_brake = 80km/h 的执行逻辑正确。",
            "系统应验证遥控模式下滑跑阶段的控制解算功能输入，确保处理逻辑明确区分工作阶段和模式，避免'未考虑工作阶段'或'未考虑遥控模式'的错误。",
            "系统应对遥控模式下滑跑阶段的软件状态转移条件进行完整性检查，确保转移条件不为'未设置、始终满足、无法满足'，并触发相应的异常处理机制。",
            "系统在状态转移过程中应实时监控并记录 vk_may_brake 参数的变化，确保其取值符合滑跑阶段的安全约束。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 278,
        "requirement": "若起落架全压缩信号有效，空速不小于vk_may_brake时，δb = 0。",
        "original_safety_criterions": [
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性",
            "对功能的控制解算结果进行检查，分析控制解算结果为“正常值、异常值、边界值、极大极小值”等情况下功能处理的正确性",
            "各功能点控制逻辑之间的时序关系、约束关系、并发关系和组合关系是否正确"
        ],
        "safety_requirements": [
            "系统应对起落架全压缩信号有效和空速不小于vk_may_brake的逻辑判断条件进行检查，确保‘逻辑恒假、逻辑恒真、判断条件错误或分支遗漏’情况下功能处理的正确性，并保证δb = 0。",
            "系统在起落架全压缩信号有效且空速不小于vk_may_brake时，应对控制解算结果（正常值、异常值、边界值、极大极小值）进行验证，确保δb = 0的输出正确。",
            "系统应检查不同余度的工作状态，若存在‘两个或多个余度处于不同状态’，需确保起落架全压缩信号有效且空速不小于vk_may_brake时，δb = 0的实现正确。",
            "系统应验证δb = 0的控制逻辑与其他功能点逻辑的时序、约束、并发及组合关系，确保其符合安全约束条件。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 279,
        "requirement": "δb 限幅在[ -XfB ，XfB ]。XfB 为最大比例刹车量，可通过遥控设置，缺省值 40％。",
        "original_safety_criterions": [
            "对接口数据的缺省值进行检查，分析“缺省值为值域范围外的异常值”等情况下输出的正确性",
            "对功能的多个输入数据进行检查，分析多个输入数据取值为“正常值等价类组合、异常值等价类组合、边界值组合、初始值组合、安全值组合、缺省值组合”等情况下功能处理的正确性",
            "对接口数据的缺省值进行检查，分析“未设置缺省值”等情况下输出的正确性",
            "各功能点控制逻辑之间的时序关系、约束关系、并发关系和组合关系是否正确",
            "对功能的控制解算结果进行检查，分析控制解算结果为“正常值、异常值、边界值、极大极小值”等情况下功能处理的正确性"
        ],
        "safety_requirements": [
            "系统应对δb的控制解算结果进行检查，确保在正常值、异常值、边界值、极大极小值等情况下，控制逻辑处理的正确性。",
            "系统应验证输入数据的组合取值（包括正常值等价类组合、异常值等价类组合、边界值组合等），确保功能逻辑正确处理δb的限幅范围[-XfB, XfB]。",
            "系统在未设置XfB缺省值时，应强制启用40%缺省值，并确保该缺省值在[-XfB, XfB]范围内有效。",
            "系统应校验遥控设置的XfB值与δb限幅逻辑的时序关系及约束条件，确保限幅范围[ -XfB，XfB ]始终有效。",
            "系统应对XfB的缺省值进行范围检查，当缺省值40%超出[-XfB，XfB]范围时，触发异常处理机制并拒绝应用。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 280,
        "requirement": "若δb < 0，则δbL = -δb + YzBL + YjB，δbR = YzBL + YjB；否则δbL = YzBL + YjB，δbR = δb + YzBR + YjB。",
        "original_safety_criterions": [
            "对不同余度的连续型接口数据取值进行检查，分析两个或多个余度接口数据“取值不一致，即取值之差超出规定阈值”等情况下，功能实现的正确性",
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "对不同余度的连续型输出数据取值进行检查，分析两个或多个余度输出数据“取值不一致，即取值之差超出规定阈值”等情况下，功能实现的正确性",
            "对不同余度的离散型输出数据取值进行检查，分析两个或多个余度输出数据“取值不一致”等情况下，功能实现的正确性",
            "对功能的数据处理过程进行检查，分析数据处理过程是否存在除0的情况"
        ],
        "safety_requirements": [
            "系统应在舵偏角计算过程中检查数据处理步骤，确保不存在除零情况。",
            "系统应对不同余度的连续型输出数据（如δb）进行校验，当取值差值超出规定阈值时，确保δbL和δbR的计算结果正确。",
            "系统应对不同余度的离散型输出数据进行校验，在取值不一致时，保证δbL和δbR计算的正确性。",
            "系统应对不同余度的连续型接口数据（如YzBL、YjB）进行校验，当取值差异超出阈值时，确保舵偏角计算结果准确。",
            "系统应验证逻辑条件（δb < 0）的正确性，避免恒真、恒假或判断错误，并确保所有逻辑分支处理正确。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 281,
        "requirement": "YzBL 和 YzBR 分别为左、右刹车预置量，可以通过遥控设置，缺省值为 10%。",
        "original_safety_criterions": [
            "各功能点控制逻辑之间的时序关系、约束关系、并发关系和组合关系是否正确",
            "对功能的多个输入数据进行检查，分析多个输入数据取值为‘正常值等价类组合、异常值等价类组合、边界值组合、初始值组合、安全值组合、缺省值组合’等情况下功能处理的正确性",
            "对功能的逻辑判断条件和逻辑分支进行检查，分析‘逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏’等情况下功能处理的正确性"
        ],
        "safety_requirements": [
            "系统应检查刹车预置量（YzBL 和 YzBR）的逻辑判断条件和分支，确保在‘逻辑恒假、逻辑恒真、条件错误或分支遗漏’情况下功能处理的正确性。",
            "系统应对刹车预置量（YzBL 和 YzBR）的输入数据进行组合验证，包括正常值、异常值、边界值、初始值、安全值及缺省值（10%），确保功能处理正确。",
            "系统应验证左、右刹车预置量（YzBL 和 YzBR）设置逻辑与缺省值（10%）的时序、约束及并发关系，确保控制逻辑正确无误。",
            "系统在接收遥控设置的刹车预置量（YzBL 和 YzBR）时，应进行异常输入过滤及缺省值恢复机制，防止非法数据注入。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 282,
        "requirement": "YjB 为应急刹车偏置量，正常情况为 0，链路中断时为 30%。",
        "original_safety_criterions": [
            "是否有基于回绕检测的故障处理，故障时状态上报策略是否合理？",
            "对接口数据的取值时刻进行检查，分析输入取值时刻为“过早停止、过晚停止”等情况下输出的正确性",
            "输出回路是否有检测机制，在不影响正常输出时进行回路状态检测？",
            "故障项的检测逻辑是否合理，检测方式是否会对设备正常工作产生影响？",
            "故障检测的故障项是否充分？"
        ],
        "safety_requirements": [
            "系统应在链路中断时触发基于回绕检测的故障处理机制，并确保应急刹车偏置量 YjB 的状态上报策略合理，正确切换为 30%。",
            "系统在链路中断时应急刹车偏置量 YjB 从 0 变为 30% 的检测逻辑应合理，且不得影响设备正常工作。",
            "系统应具备输出回路检测机制，在链路中断时对应急刹车偏置量 YjB 的输出状态进行实时检测，且不影响正常输出功能。",
            "系统故障检测机制应覆盖应急刹车偏置量 YjB 的所有潜在变化场景，包括链路中断时的状态切换及异常数据判定。",
            "系统应对接口数据的取值时刻进行检查，确保在‘过早停止’或‘过晚停止’情况下应急刹车偏置量 YjB 的取值正确性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 283,
        "requirement": "当按 a）进行解算后得出的max(δbL ,δbR ) ≤1。",
        "original_safety_criterions": [
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "对不同余度的连续型输出数据取值进行检查，分析两个或多个余度输出数据“取值不一致，即取值之差超出规定阈值”等情况下，功能实现的正确性",
            "对功能的控制解算过程进行检查，分析控制解算过程出现超时（未在规定时间内返回结果）等情况下的功能处理正确性",
            "对不同余度的离散型输出数据取值进行检查，分析两个或多个余度输出数据“取值不一致”等情况下，功能实现的正确性",
            "对功能的控制解算结果进行检查，分析控制解算结果为“正常值、异常值、边界值、极大极小值”等情况下功能处理的正确性"
        ],
        "safety_requirements": [
            "系统应对不同余度的离散型输出数据进行检查，确保在‘取值不一致’情况下，max(δbL, δbR) ≤1 的功能正确实现。",
            "系统应在解算结果为正常值、异常值、边界值或极大极小值时，验证 max(δbL, δbR) ≤1 的处理逻辑正确性。",
            "系统应监控解算过程超时情况，确保超时条件下 max(δbL, δbR) 的计算结果符合 ≤1 的约束。",
            "系统应根据当前工作状态和阶段对输入数据进行校验，避免因未考虑状态或阶段导致 max(δbL, δbR) 解算结果不满足 ≤1。",
            "系统应对不同余度的连续型输出数据进行差值阈值检查，当差值超出规定范围时，确保 max(δbL, δbR) ≤1 的功能正确性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 284,
        "requirement": "具体的软化时间应该根据控制要求、实际需要和以往的控制经验来确定。",
        "original_safety_criterions": [
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "输出控制状态的时机是否符合场景要求？",
            "针对各项任务的持续时间进行检查，分析任务持续时间小于规定时间等情况下，功能处理的正确性",
            "各功能点控制逻辑之间的时序关系、约束关系、并发关系和组合关系是否正确",
            "对于关键控制或动作，是否有超时判断，以处理硬件状态长时间达不到控制要求的情况？"
        ],
        "safety_requirements": [
            "系统在不同状态或工作阶段应检查功能输入，分析‘未考虑工作阶段’或‘未考虑工作状态’等情况，确保软化时间确定的正确性。",
            "系统应对关键控制或动作实施超时判断机制，根据控制要求、实际需要及历史经验设定超时时间，处理硬件状态未达要求的情况。",
            "系统应验证输出控制状态的时机是否符合控制要求、实际需求及历史经验，确保时序合理性。",
            "系统应检查任务持续时间是否小于规定时间，分析软化时间处理的正确性，并确保符合规定约束。",
            "系统在确定软化时间时，应确保控制逻辑的时序关系、约束关系和组合关系正确，并严格遵循控制要求、实际需求及历史经验。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 285,
        "requirement": "地面等待阶段的转入和转出通过开关指令三选二提高可靠性。",
        "original_safety_criterions": [
            "下发危险的控制指令或动作时，是否有依据设备状态进行合理性判断？"
        ],
        "safety_requirements": [
            "系统在下发地面等待阶段转入/转出指令前，应基于三选二开关逻辑验证设备状态合理性，确保控制指令与当前状态匹配。",
            "系统执行危险控制指令时，应对地面等待阶段的转入/转出状态进行实时校验，状态异常时终止指令执行并触发告警。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 286,
        "requirement": "其他阶段的转换条件应根据具体情况进行多次判断，当连续5次判断的结果一致时才进行阶段转换，以降低误判的概率。",
        "original_safety_criterions": [
            "对状态进入条件进行检查，分析状态执行过程中进入条件‘满足、不满足、再次满足’等情况下状态执行的正确性",
            "对软件状态空间中两两状态之间的转移条件进行检查，分析转移条件‘未设置、始终满足、无法满足’等情况下状态转移的正确性"
        ],
        "safety_requirements": [
            "系统在状态转移时，应对软件状态空间中各状态间的转移条件进行检查，确保‘未设置、始终满足、无法满足’等情况下转移逻辑正确，并仅在连续5次判断结果一致时执行阶段转换。",
            "系统在状态执行过程中应对进入条件进行检查，分析‘满足、不满足、再次满足’等情况下的执行正确性，且仅在连续5次判断结果一致时允许阶段转换。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 287,
        "requirement": "飞控计算机地面加电或飞机完全着陆发出飞控预关机指令后，进入地面等待阶段。",
        "original_safety_criterions": [
            "系统的掉电恢复或跑飞复位机制启动后，是否能恢复到正常工作状态？",
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "输出控制状态的时机是否符合场景要求？",
            "下发危险的控制指令或动作时，是否有依据设备状态进行合理性判断？",
            "对于关键控制或动作，是否有超时判断，以处理硬件状态长时间达不到控制要求的情况？"
        ],
        "safety_requirements": [
            "系统应在飞控计算机地面加电或收到预关机指令后，对硬件状态进行超时判断，若长时间未达控制要求则触发安全处理机制。",
            "系统在掉电恢复或异常复位后，应确保可恢复到地面等待阶段的正常工作状态，并验证控制解算逻辑的完整性。",
            "系统进入地面等待阶段时，应对功能输入进行工作阶段和工作状态检查，避免未正确切换状态导致的功能处理错误。",
            "系统在进入地面等待阶段时，应验证输出控制状态的执行时机是否符合预设场景的时间约束条件。",
            "系统在下发控制指令前，应基于飞控计算机加电或着陆状态进行合理性判断，禁止在非安全条件下执行危险操作。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 288,
        "requirement": "在地面滑跑（含起飞滑跑和着陆滑跑）阶段，接收到遥控发来的地面等待指令后，转入地面等待阶段。",
        "original_safety_criterions": [
            "对接口数据的发送、接收周期进行检查，分析发送和接收周期是否匹配"
        ],
        "safety_requirements": [
            "系统在地面滑跑阶段接收到地面等待指令时，应验证指令来源的合法性和完整性，确保仅执行授权遥控设备发送的指令。",
            "系统在状态转入地面等待阶段前，需检查当前滑跑阶段的有效性，确认符合状态转移条件后方可执行转换。",
            "系统应记录地面等待指令的接收时间、来源及状态转换日志，支持事后审计与异常追溯。",
            "系统在地面等待阶段转换过程中若检测到指令冲突或异常参数，应立即维持原状态并触发告警机制。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 289,
        "requirement": "当 max(δbL, δbR) > 100% 时，若 δbL ≥ δbR，则取 δbR = δbR - (δbL - 100)，δbL = 100%；若 δbR > δbL，则取 δbL = δbL - (δbR - 100)，δbR = 100%。从而保证左右刹车满足差动量的要求。",
        "original_safety_criterions": [
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "对不同余度的输出数据进行检查，分析“单个余度故障、多个余度均故障”情况下，功能实现的正确性",
            "对功能的多个输入数据进行检查，分析多个输入数据取值为“正常值等价类组合、异常值等价类组合、边界值组合、初始值组合、安全值组合、缺省值组合”等情况下功能处理的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统应检查刹车逻辑判断条件和分支，确保在‘逻辑恒假、恒真、判断条件错误、分支遗漏’情况下，差动量调整（δbL ≥ δbR 或 δbR > δbL）的正确性。",
            "系统应分析不同余度工作状态（如两个及以上余度处于不同状态），确保左右刹车差动量要求计算的正确性。",
            "系统应对刹车输入数据（正常/异常值组合、边界值、初始值、安全值、缺省值）进行检查，确保 max(δbL, δbR) > 100% 时差动量调整处理的正确性。",
            "系统应检查余度输出数据，在‘单个余度故障或多个余度故障’情况下，保证左右刹车差动量的计算结果符合安全要求。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 290,
        "requirement": "遥控发的刹车指令具有最高的优先级。不管处于何种控制模式，当收到“刹车”指令时，飞机将全刹车量分别叠加在左右刹车控制量上，再进行超限处理，该全刹车量可遥控装订，缺省值为 80%。",
        "original_safety_criterions": [
            "对接口数据的缺省值进行检查，分析“缺省值为值域范围外的异常值”等情况下输出的正确性",
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "对功能的控制解算过程进行检查，分析控制解算过程出现超时（未在规定时间内返回结果）等情况下的功能处理正确性",
            "针对各项任务的先后执行时序进行检查，分析任务执行时序与规定时序不一致时，功能处理的正确性"
        ],
        "safety_requirements": [
            "系统应在不同工作阶段和状态下检查刹车指令输入，确保全刹车量叠加及超限处理的正确性，并验证未考虑工作阶段或状态时的处理逻辑是否符合预期。",
            "系统应对刹车指令的逻辑判断条件及分支进行全面检查，确保不存在逻辑恒假、恒真、条件错误或分支遗漏，并保证指令优先级处理的正确性。",
            "系统应验证遥控装订的全刹车量缺省值（80%）处于有效值域范围内，并在缺省值异常时触发纠错机制。",
            "系统应在任务执行时序与规定时序不一致时，检查刹车指令的叠加与处理过程，确保时序偏差不影响最终控制输出的正确性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 291,
        "requirement": "当收到“松刹车”指令时，按照解算出的左右刹车量进行刹车（即不再叠加全刹车量），此时，若解算出的刹车量 δb 为 0，则左右刹车均取相应的刹车预置量。",
        "original_safety_criterions": [
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "对不同余度的离散型接口数据取值进行检查，分析两个或多个余度接口数据“取值不一致”等情况下，功能实现的正确性",
            "对功能的控制解算过程进行检查，分析控制解算过程出现超时（未在规定时间内返回结果）等情况下的功能处理正确性",
            "针对各项任务的先后执行时序进行检查，分析任务执行时序与规定时序不一致时，功能处理的正确性"
        ],
        "safety_requirements": [
            "系统在任务执行时序与规定时序不一致时，应确保解算出的左右刹车量 δb 和刹车预置量处理的正确性。",
            "系统应对不同状态和工作阶段的输入条件进行检查，确保未考虑工作阶段或状态时，解算出的刹车量 δb 正确，并在收到‘松刹车’指令时按解算结果执行，δb 为 0 时左右刹车均采用预置量。",
            "系统应检查刹车逻辑判断条件及分支，确保在‘逻辑恒假、恒真、条件错误或分支遗漏’时刹车处理的正确性。",
            "系统在刹车控制解算超时（未在规定时间内返回结果）时，应触发预设的安全处理机制，确保功能正确性。",
            "系统在余度离散接口数据取值不一致时，应确保当解算出的刹车量 δb 为 0 时，左右刹车均采用相应预置量。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 292,
        "requirement": "当收到车指令或松刹车指令时，左右刹车控制量分别取左右地检刹车量。",
        "original_safety_criterions": [
            "工作状态发生转移时，对功能接口数据的取值进行检查，分析“取值发生变化或者取值区间发生变化”等情况下输出的正确性",
            "多个功能同时执行时，对多个功能的输入数据和输出数据进行检查，分析输入数据取值/输出数据取值为“边界值组合、初始值组合、安全值组合、缺省值组合”等情况下多功能处理的正确性",
            "多个功能同时执行时，对多个功能的输入数据和输出数据进行检查，分析输入数据取值/输出数据取值为“正常值等价类组合、异常值等价类组合”等情况下多功能处理的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性",
            "针对各项任务的执行条件中的输入数据取值进行检查，分析输入数据取值使得任务执行条件提前满足时，功能处理的正确性"
        ],
        "safety_requirements": [
            "系统在检测到多个余度处于不同工作状态时，应验证左右刹车控制量取自左右地检刹车量的功能正确性。",
            "系统在多个功能同时执行时，应对输入/输出数据的边界值、初始值、安全值及缺省值组合进行检查，确保收到车指令或松刹车指令时左右刹车控制量的正确性。",
            "系统应检查车指令或松刹车指令的输入数据取值是否导致任务执行条件提前满足，并验证此时左右刹车控制量取自地检刹车量的正确性。",
            "系统在工作状态发生转移时，应对左右地检刹车量的取值或取值区间变化进行检查，确保输出的刹车控制量正确。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 293,
        "requirement": "当收到飞控预关机指令后，将左右刹车控制量取为 0，即清除左右刹车预置量。",
        "original_safety_criterions": [
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性",
            "对功能的数据处理过程进行检查，分析数据处理过程是否存在除0的情况",
            "各功能点控制逻辑之间的时序关系、约束关系、并发关系和组合关系是否正确"
        ],
        "safety_requirements": [
            "系统在不同工作阶段和状态下收到飞控预关机指令时，应检查功能输入，确保‘未考虑工作阶段或状态’的情况下，正确执行左右刹车控制量置0操作并清除预置量。",
            "系统应验证飞控预关机指令与左右刹车控制逻辑间的时序、约束、并发及组合关系，确保指令触发后立即清零刹车预置量且无逻辑冲突。",
            "系统在处理飞控预关机指令的数据时，应对所有可能导致除0错误的数据处理过程进行检查，确保控制量置0操作的稳定性。",
            "系统需对飞控预关机指令的逻辑判断条件和分支进行完备性检查，包括逻辑恒假、恒真、条件错误及分支遗漏场景，保证清除刹车预置量功能的鲁棒性。",
            "系统在多个余度处于不同工作状态时，应检测余度状态差异，确保跨余度环境下清除左右刹车预置量功能的执行正确性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 294,
        "requirement": "刹车指令的处理仅在地面等待、起飞滑跑、着陆滑跑段时进行。",
        "original_safety_criterions": [
            "是否有基于回绕检测的故障处理，故障时状态上报策略是否合理？",
            "输出控制状态的时机是否符合场景要求？",
            "出现异常外部因素情况（例如高海况、恶劣气象条件等）时，软件是否进行了相应的判断和处理？",
            "下发危险的控制指令或动作时，是否有依据设备状态进行合理性判断？",
            "人员操作是否有合理性判断，不符合当前场景或状态的指令不进行响应？"
        ],
        "safety_requirements": [
            "系统应在地面等待、起飞滑跑、着陆滑跑段处理刹车指令时，实施基于回绕检测的故障处理机制，并在故障发生时执行合理的状态上报策略。",
            "系统在检测到高海况、恶劣气象等异常外部因素时，应在地面等待、起飞滑跑、着陆滑跑段对刹车指令进行附加判断和处理。",
            "下发刹车指令前，系统应依据当前设备状态（地面等待、起飞滑跑、着陆滑跑段）进行合理性判断，确保指令符合阶段要求。",
            "系统应对人员操作的刹车指令进行判断，若不符合当前飞行状态（地面等待、起飞滑跑、着陆滑跑段），则不予响应。",
            "系统应严格限制刹车指令处理时机仅在地面等待、起飞滑跑、着陆滑跑段，并验证场景符合性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 295,
        "requirement": "收起落架时左右刹车量均置为 50％，放起落架时左右刹车量均置为 100％；收起落架结束时左右刹车量均置为 0％，放起落架结束时左右刹车量均置为预置量。",
        "original_safety_criterions": [
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "对不同余度的输出数据进行检查，分析“单个余度故障、多个余度均故障”情况下，功能实现的正确性",
            "各功能点控制逻辑之间的时序关系、约束关系、并发关系和组合关系是否正确",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统应验证收起落架和放起落架功能点控制逻辑的时序关系、约束关系及组合关系，确保左右刹车量在状态转移时严格遵循50%、100%、0%及预置量的设置规则。",
            "系统在单个或多个余度故障时，应确保收起落架和放起落架的左右刹车量设置正确，包括故障检测与容错处理机制。",
            "系统应检查不同余度的工作状态，当两个及以上余度处于不一致状态时，需强制同步并保证刹车量设置符合当前起落架操作阶段的要求。",
            "系统应对起落架操作的逻辑判断条件进行全面覆盖测试，确保无恒假、恒真、条件错误或分支遗漏等情况导致刹车量设置异常。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 296,
        "requirement": "飞机返航着陆时，如果不满足安全着陆的条件而继续着陆，有可能影响着陆的安全。为了提高飞机着陆安全性，提供了复飞功能，使飞机能够调整飞行状态重新着陆。",
        "original_safety_criterions": [
            "对软件状态空间中两两状态之间的转移条件进行检查，分析转移条件“未设置、始终满足、无法满足”等情况下状态转移的正确性",
            "对功能的执行条件进行检查，分析功能执行过程中执行条件“不满足、再次满足”等情况下功能处理的正确性",
            "对状态进入条件进行检查，分析状态执行过程中进入条件“满足、不满足、再次满足”等情况下状态执行的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统应检查余度工作状态，确保在两个或多个余度处于不同状态时，复飞功能的执行逻辑正确且符合安全着陆条件。",
            "系统应对复飞功能的执行条件进行动态评估，确保在条件‘不满足’或‘再次满足’时，功能处理逻辑符合预设安全策略。",
            "系统应实时监控返航着陆状态的进入条件，在条件‘满足、不满足、再次满足’时准确触发并执行复飞功能。",
            "系统应验证返航着陆状态转移条件的有效性，确保在条件‘未设置、始终满足、无法满足’时状态转移逻辑正确，保障复飞功能的安全性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 297,
        "requirement": "飞机以自主或人工修正模式进入下滑后，若转入了遥控操纵，当飞行高度高于决断高度（40m）时，若再次转入自主控制模式，则飞机自动复飞，并采用遥控转自主的软化方式。",
        "original_safety_criterions": [
            "对软件状态空间中两两状态之间的转移条件进行检查，分析转移条件“未设置、始终满足、无法满足”等情况下状态转移的正确性",
            "对状态进入条件进行检查，分析状态执行过程中进入条件“满足、不满足、再次满足”等情况下状态执行的正确性",
            "输出控制状态的时机是否符合场景要求？",
            "下发危险的控制指令或动作时，是否有依据设备状态进行合理性判断？",
            "对于关键控制或动作，是否有超时判断，以处理硬件状态长时间达不到控制要求的情况？"
        ],
        "safety_requirements": [
            "系统在飞机从遥控操纵模式转回自主控制模式时，应验证控制状态输出的时机是否符合飞行高度高于40m时的场景要求。",
            "系统应在遥控操纵模式下飞行高度高于40m时，对自动复飞指令执行超时判断，确保及时触发复飞动作。",
            "系统应对遥控操纵模式转自主控制模式的状态转移条件进行检查，确保未设置、始终满足或无法满足等条件下状态转移逻辑正确，且自动复飞与软化方式有效执行。",
            "系统在下达复飞指令前，应依据当前飞行高度和控制模式进行合理性判断，防止危险指令错误触发。",
            "系统在飞机进入自主控制模式时，应对状态进入条件进行检查，确保在条件满足、不满足或再次满足时复飞与软化方式正确执行。",
            "系统应确保遥控转自主的软化方式过程中控制指令的连续性与平滑性，避免状态切换引发异常波动。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 298,
        "requirement": "当下述条件 1）和 2）同时满足时，执行指令复飞：\n1） 飞行高度高于决断高度（40m），若控制模式不为遥控，还应满足已进入下滑。\n2） 收到飞行开关指令：“复飞”。",
        "original_safety_criterions": [
            "对状态进入条件进行检查，分析状态执行过程中进入条件“满足、不满足、再次满足”等情况下状态执行的正确性",
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "两个或多个状态之间不存在转移关系，对这些状态的进入条件进行检查，分析进入条件“同时满足、状态执行过程中满足”等情况下状态执行的正确性",
            "对功能的执行条件进行检查，分析功能执行过程中执行条件“不满足、再次满足”等情况下功能处理的正确性",
            "针对各项任务的执行条件中的输入数据取值进行检查，分析输入数据取值使得任务执行条件提前满足时，功能处理的正确性"
        ],
        "safety_requirements": [
            "系统应在复飞指令执行过程中持续检查进入条件（飞行高度高于40m、控制模式非遥控时的下滑状态及复飞开关指令），确保条件\"满足、不满足、再次满足\"时的状态执行正确性。",
            "系统应对复飞指令的逻辑判断条件进行校验，防止逻辑恒假、恒真、判断条件错误或分支遗漏，确保功能处理正确。",
            "系统应在复飞指令执行中监测执行条件（飞行高度高于40m、控制模式非遥控时的下滑状态及复飞开关指令），处理条件\"不满足或再次满足\"时的异常情况。",
            "系统应对复飞任务输入数据（飞行高度、控制模式、下滑状态及复飞开关指令）进行实时检查，防止输入值异常导致条件提前满足时的错误执行。",
            "系统应确保当飞行高度高于40m、控制模式非遥控且已进入下滑状态同时收到复飞指令时，严格判定状态转移条件，避免状态执行冲突。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 299,
        "requirement": "若飞机处于自主控制模式，则直接控制飞机进行复飞，若飞机不处于自主控制模式，则自动转入自主控制模式，再控制飞机进行复飞，软化方式与模式转换的软化方式相同。",
        "original_safety_criterions": [
            "对软件状态空间中两两状态之间的转移条件进行检查，分析转移条件“未设置、始终满足、无法满足”等情况下状态转移的正确性",
            "系统进行控制的顺序和时序是否与硬件协调，控制条件是否完备且前后一致？",
            "对状态进入条件进行检查，分析状态执行过程中进入条件“满足、不满足、再次满足”等情况下状态执行的正确性",
            "两个或多个存在转移关系的状态具有同一个功能，对状态转移前后功能的执行情况进行检查，分析功能在状态转移后“开始执行、保持执行、中断执行”等情况下功能处理的正确性",
            "输出控制状态的时机是否符合场景要求？"
        ],
        "safety_requirements": [
            "系统在自主控制模式与非自主控制模式状态转移时，应检查功能执行情况，确保转移后功能处理（开始、保持、中断）的正确性，特别是模式转换过程中的控制逻辑一致性。",
            "系统应验证自主控制模式进入条件的执行正确性，处理条件'满足、不满足、再次满足'等情况，确保状态转换的准确性。",
            "系统应检查自主控制模式转换的控制时序与硬件协调性，确保转换条件完备且与当前控制需求一致。",
            "系统应对自主控制模式的状态转移条件（未设置、始终满足、无法满足）进行校验，防止异常转移并保证输出时机的合规性。",
            "系统在模式转换过程中应确保控制指令的输出时机符合自主控制模式要求，避免时序冲突。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 300,
        "requirement": "将节风门推至 100％位置，飞行阶段转为爬升 2 段，纵向控制飞机向五边航线高度爬升，侧向控制飞机从当前点切入五边航线。到达五边高度定高后飞机将退出复飞状态，置襟翼为 15°。随后再次进入五边航线，重新着陆。",
        "original_safety_criterions": [
            "对软件状态空间中两两状态之间的转移条件进行检查，分析转移条件“未设置、始终满足、无法满足”等情况下状态转移的正确性",
            "对两个或多个存在转移关系的状态下、设置了优先级的不同功能进行检查，分析“高优先级切换低优先级、低优先级切换高优先级”等情况下状态与功能的正确性",
            "两个或多个状态之间不存在转移关系，对这些状态的进入条件进行检查，分析进入条件“同时满足、状态执行过程中满足”等情况下状态执行的正确性",
            "对状态进入条件进行检查，分析状态执行过程中进入条件“满足、不满足、再次满足”等情况下状态执行的正确性"
        ],
        "safety_requirements": [
            "系统在飞行阶段从复飞状态切换到爬升2段时，应验证高优先级与低优先级状态切换的正确性，确保纵向控制飞机向五边航线高度爬升和侧向控制飞机切入五边航线的功能准确执行。",
            "系统应对飞行阶段转换条件（节风门推至100%、到达五边高度定高等）进行检查，确保在条件满足、不满足或再次满足时，状态转换及襟翼置为15°的操作正确执行。",
            "系统应检查无直接转移关系的状态进入条件（如切入五边航线、退出复飞状态、置襟翼为15°），确保进入条件同时满足或状态执行过程中满足时的操作正确性。",
            "系统应对复飞状态到爬升2段、五边高度定高退出复飞状态的转移条件进行完整性检查，确保条件未设置、始终满足或无法满足时状态转移逻辑的正确性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 301,
        "requirement": "复飞过程中不允许设置起点，允许改变着陆方向。",
        "original_safety_criterions": [
            "对接口数据的初始值进行检查，分析“未设置初始值”等情况下输出的正确性"
        ],
        "safety_requirements": [
            "系统应对接口数据的初始值进行检查，确保在‘未设置初始值’情况下，复飞过程中禁止设置起点并允许改变着陆方向的功能正确执行。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 302,
        "requirement": "自主或人工修正控制模式下，飞机定高飞行或在下滑 1 段飞行时，若空速连续三次判断均小于一定值（具体数值参见附录）或俯仰角连续三次判断均大于 10 度，则认为飞机进入失速状态。",
        "original_safety_criterions": [
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性",
            "对状态进入条件进行检查，分析状态执行过程中进入条件“满足、不满足、再次满足”等情况下状态执行的正确性",
            "下发危险的控制指令或动作时，是否有依据设备状态进行合理性判断？",
            "对于关键控制或动作，是否有超时判断，以处理硬件状态长时间达不到控制要求的情况？"
        ],
        "safety_requirements": [
            "系统在自主或人工修正控制模式下，应检查飞机空速连续三次小于设定值或俯仰角连续三次大于10度的条件，确保状态进入失速判定的准确性，并验证‘条件满足、不满足、再次满足’时状态转换的正确性。",
            "系统在自主或人工修正控制模式下触发失速判定时，应对关键控制动作设置超时判断机制，防止因硬件状态长时间不达标导致控制失效。",
            "系统在多个余度处于不同工作状态时，应确保自主或人工修正控制模式下基于空速和俯仰角连续判断的失速状态判定功能正确执行。",
            "系统在下发控制指令前，需依据当前空速和俯仰角状态进行合理性验证，避免因错误判定失速状态导致危险指令执行。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 303,
        "requirement": "转入爬升 2 段，升降舵空速控制，推节风门至 100％，若飞机已进入下滑 1 而失速，则进入复飞控制。",
        "original_safety_criterions": [
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性",
            "针对各项任务的先后执行时序进行检查，分析任务执行时序与规定时序不一致时，功能处理的正确性",
            "各功能点控制逻辑之间的时序关系、约束关系、并发关系和组合关系是否正确"
        ],
        "safety_requirements": [
            "系统在余度工作状态不一致时，应确保转入爬升2段、升降舵空速控制、推节风门至100％，以及飞机进入下滑1失速时进入复飞控制的功能正确执行。",
            "系统应对任务执行时序进行监控，当时序与规定不一致时，确保爬升控制、空速调节、风门操作及复飞控制功能的处理逻辑符合安全要求。",
            "系统应检查逻辑判断条件和分支的完整性，避免逻辑恒假、恒真、条件错误或分支遗漏导致爬升控制、空速调节、风门操作及复飞控制失效。",
            "系统应验证各功能点控制逻辑间的时序、约束、并发及组合关系，确保在爬升控制、空速调节、风门操作及复飞控制场景下符合预设规则。",
            "系统应在不同工作阶段和状态时校验功能输入，确保未遗漏阶段或状态因素影响爬升控制、空速调节、风门操作及复飞控制的正确性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 304,
        "requirement": "当连续五次判断空速增加至大于给定速度时，飞机退出失速状态，根据当时的高度偏差判断转入哪一阶段（爬升 2 段或定高段），继续飞行。",
        "original_safety_criterions": [
            "对软件状态空间中两两状态之间的转移条件进行检查，分析转移条件“未设置、始终满足、无法满足”等情况下状态转移的正确性",
            "对状态进入条件进行检查，分析状态执行过程中进入条件“满足、不满足、再次满足”等情况下状态执行的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性",
            "两个或多个状态之间不存在转移关系，对这些状态的进入条件进行检查，分析进入条件“同时满足、状态执行过程中满足”等情况下状态执行的正确性",
            "对于关键控制或动作，是否有超时判断，以处理硬件状态长时间达不到控制要求的情况？"
        ],
        "safety_requirements": [
            "系统应在连续五次空速判断满足退出失速条件时，严格验证状态进入条件的满足性、不满足性及再次满足性，确保正确转入爬升2段或定高段。",
            "系统应对退出失速状态的关键控制逻辑设置超时判断机制，确保连续五次空速判断的执行时效性符合安全要求。",
            "系统应检查爬升2段与定高段间的转移条件冲突，在进入条件同时满足时，基于优先级规则执行状态转移。",
            "系统应对状态转移条件（未设置、始终满足、无法满足）进行边界测试，确保退出失速后的状态转移逻辑容错性。",
            "系统在多个余度状态不一致时，应通过多数表决机制确保退出失速状态及阶段转入决策的可靠性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 305,
        "requirement": "控制律计算出的舵偏角指令在输出到舵机之前，副翼偏角指令还需要进行舵偏指令的分配。",
        "original_safety_criterions": [
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "对功能的循环判断条件进行检查，分析“循环判断条件恒假、恒真”等情况下功能处理的正确性",
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "针对各项任务的先后执行时序进行检查，分析任务执行时序与规定时序不一致时，功能处理的正确性",
            "各功能点控制逻辑之间的时序关系、约束关系、并发关系和组合关系是否正确"
        ],
        "safety_requirements": [
            "系统应在不同工作阶段和状态对控制律输入进行检查，确保舵偏角指令分配正确，避免未考虑工作阶段或状态的情况。",
            "系统应检查任务执行时序，确保与规定时序一致时，舵偏角指令分配和输出到舵机的处理正确。",
            "系统应验证副翼偏角指令分配的时序、约束、并发及组合关系，确保符合设计要求。",
            "系统应检查舵偏指令分配的循环判断条件，处理恒假或恒真等情况，确保功能正确。",
            "系统应检查控制律输出到舵机前的逻辑判断条件和分支，处理逻辑恒假、恒真、条件错误或分支遗漏的情况。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 306,
        "requirement": "副翼舵面上偏和副翼下偏的效率不一样，上偏效率低，下偏效率高，进行舵偏指令分配，通过分配系数的不同，达到使控制效果相同的目的。",
        "original_safety_criterions": [
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "对两个或多个存在转移关系的状态下、设置了优先级的不同功能进行检查，分析“高优先级切换低优先级、低优先级切换高优先级”等情况下状态与功能的正确性"
        ],
        "safety_requirements": [
            "系统在状态转移时，应检查高优先级与低优先级切换场景下的副翼舵面上偏和下偏效率分配正确性，确保分配系数的差异能够实现相同的控制效果。",
            "系统在不同工作阶段和状态下进行舵偏指令分配时，应验证功能输入是否考虑工作阶段及状态，防止‘未考虑工作阶段’或‘未考虑工作状态’导致的控制解算错误。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 307,
        "requirement": "若副翼偏角指令δx >0，则左副翼偏角指令δxL ＝ k1 δx ，右副翼偏角指令 δxR ＝ k2",
        "original_safety_criterions": [
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "对不同余度接收到的同一输入数据取值进行检查，分析两个或多个余度接收到的同一输入数据取值不一致时，功能实现的正确性",
            "各功能点控制逻辑之间的时序关系、约束关系、并发关系和组合关系是否正确",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统在多个余度处于不同工作状态时，应检查左副翼偏角指令δxL = k1 δx和右副翼偏角指令δxR = k2的计算逻辑，确保结果的正确性。",
            "系统在检测到多个余度接收的副翼偏角指令δx取值不一致时，应启动纠错机制并确保δxL和δxR的输出符合功能逻辑要求。",
            "系统应对δx>0的逻辑判断条件进行完整性检查，覆盖逻辑恒假、恒真、条件错误及分支遗漏等情况，保证副翼指令计算的容错处理。",
            "系统应验证δx>0时δxL = k1 δx与δxR = k2的时序、约束、并发及组合关系，确保指令执行的同步性和参数间的逻辑一致性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 308,
        "requirement": "若副翼偏角指令δx <0，则左副翼偏角指令δxL ＝ k2  δx ，右副翼偏角指令 δxR ＝ k1 δx，其中，k1 为上偏分配系数，k2 为下偏分配系数。",
        "original_safety_criterions": [
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "对不同余度接收到的同一输入数据取值进行检查，分析两个或多个余度接收到的同一输入数据取值不一致时，功能实现的正确性",
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统在接收副翼偏角指令δx时，应对不同余度的δx取值进行一致性检查，若存在两个或多个余度的δx取值不一致，应确保左副翼δxL = k2 δx和右副翼δxR = k1 δx的分配逻辑正确执行。",
            "系统应对δx <0的逻辑判断条件进行校验，分析逻辑恒假、恒真、条件错误或分支遗漏等情况，确保左/右副翼偏角指令分配的准确性。",
            "系统在解算副翼偏角指令时，应检查当前工作状态及阶段的影响，若未正确考虑状态或阶段参数，需触发错误处理机制以保证控制解算正确性。",
            "系统应对不同余度的工作状态进行监测，若多个余度处于不同状态，需确保左副翼δxL = k2 δx和右副翼δxR = k1 δx的分配系数应用符合逻辑规则。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 309,
        "requirement": "飞行控制与管理软件应能够根据给定的飞行重量、海拔高度和飞行真空速，计算出失速速度。",
        "original_safety_criterions": [
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "对功能的控制解算结果进行检查，分析控制解算结果为“正常值、异常值、边界值、极大极小值”等情况下功能处理的正确性",
            "对不同余度的离散型输出数据取值进行检查，分析两个或多个余度输出数据“取值不一致”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统在计算失速速度时，应对逻辑判断条件及分支进行完整性检查，确保不存在逻辑恒假、恒真、判断错误或分支遗漏导致的错误计算结果。",
            "系统应检验不同余度的失速速度计算结果，当两个或多个余度输出数据取值不一致时，需触发容错处理机制并确保功能实现正确性。",
            "系统应对失速速度控制解算结果进行有效性验证，确保正常值、异常值、边界值及极大极小值场景下的处理逻辑符合安全操作规范。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 310,
        "requirement": "飞行控制与管理软件应支持不同襟翼角度下的失速速度计算，特别是襟翼为 40°时的失速速度计算。",
        "original_safety_criterions": [
            "出现异常外部因素情况（例如高海况、恶劣气象条件等）时，软件是否进行了相应的判断和处理？",
            "各功能点控制逻辑之间的时序关系、约束关系、并发关系和组合关系是否正确"
        ],
        "safety_requirements": [
            "系统在不同襟翼角度（特别是40°）的失速速度计算中，应确保时序关系、约束关系和并发逻辑的正确性，避免状态切换导致的逻辑冲突。",
            "系统在检测到高海况或恶劣气象条件时，应触发异常处理机制，动态调整不同襟翼角度下的失速速度计算策略，并确保40°襟翼角度的计算结果符合安全阈值。",
            "系统应对襟翼角度输入参数（如40°）进行实时有效性校验，防止异常外部因素导致的数据偏差影响失速速度计算结果的完整性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 311,
        "requirement": "地面等待阶段在五边航线和机场气压高度已装订且收到起飞指令后转入起飞地面段（起飞滑跑段）。",
        "original_safety_criterions": [
            "两个或多个存在转移关系的状态具有同一个功能，对状态转移前后功能的执行情况进行检查，分析功能在状态转移后“开始执行、保持执行、中断执行”等情况下功能处理的正确性",
            "对软件状态空间中两两状态之间的转移条件进行检查，分析转移条件“未设置、始终满足、无法满足”等情况下状态转移的正确性",
            "对两个或多个存在转移关系的状态下、设置了优先级的不同功能进行检查，分析“高优先级切换低优先级、低优先级切换高优先级”等情况下状态与功能的正确性",
            "对状态进入条件进行检查，分析状态执行过程中进入条件“满足、不满足、再次满足”等情况下状态执行的正确性"
        ],
        "safety_requirements": [
            "系统在地面等待阶段转入起飞地面段（起飞滑跑段）时，应检查状态转移前后功能执行情况，确保‘开始执行、保持执行、中断执行’等功能处理的正确性。",
            "系统应验证地面等待阶段与起飞地面段之间的状态转移条件，确保在条件‘未设置、始终满足、无法满足’等情况下状态转移的正确性。",
            "系统应对地面等待阶段的进入条件进行实时监控，确保在状态执行过程中进入条件‘满足、不满足、再次满足’时状态执行的正确性。",
            "系统应检查地面等待阶段与起飞地面段（起飞滑跑段）之间设置优先级的功能切换，确保‘高优先级切换低优先级、低优先级切换高优先级’时状态与功能的正确性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 312,
        "requirement": "在起飞滑跑段，当空速大于 30m/s 且高度大于 15m 时转入起飞离地段，软化时限设为 2s。",
        "original_safety_criterions": [
            "输出控制状态的时机是否符合场景要求？",
            "各模态的进入条件和退出条件是否一致？",
            "各模态的进入条件、退出条件、约束条件是否充分、准确？",
            "输出状态的持续时间是否满足约束要求？"
        ],
        "safety_requirements": [
            "系统在起飞滑跑段应确保进入条件和退出条件的一致性，当空速大于 30m/s 且高度大于 15m 时转入起飞离地段的条件需严格验证，软化时限设定为 2s。",
            "系统在起飞滑跑段应全面验证空速大于 30m/s 和高度大于 15m 的条件是否充分、准确，确保参数超出阈值时状态转移的可靠性。",
            "系统在状态转入起飞离地段时，应持续监测输出状态的软化时限，严格保证持续时间达到 2s 的要求。",
            "系统在起飞滑跑段的状态转移过程中，应实时检查控制状态切换的时机，确保符合场景时序要求且软化时限精确执行。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 313,
        "requirement": "在起飞离地段，当飞行高度大于安全高度 80m 时转入爬升 1 段，升降舵通道采用设置积分器初值软化的方法，其它通道不需软化。",
        "original_safety_criterions": [
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "对功能的控制解算过程进行检查，分析控制解算过程出现超时（未在规定时间内返回结果）等情况下的功能处理正确性",
            "各功能点控制逻辑之间的时序关系、约束关系、并发关系和组合关系是否正确"
        ],
        "safety_requirements": [
            "系统在起飞离地段转入爬升1段时，应验证升降舵通道积分器初值软化与其他通道不需软化的时序、约束、并发和组合关系正确性。",
            "系统应对起飞离地段转入爬升1段的逻辑条件进行完整性检查，防止逻辑恒假、恒真、判断错误或分支遗漏导致的错误状态切换。",
            "系统应监控起飞离地段控制解算过程的时间，确保超时情况下触发预设容错机制，维持飞行状态安全。",
            "系统在飞行高度超过80m的安全高度时，应实时校验升降舵通道软化方法与其他通道非软化策略的兼容性，并记录校验结果。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 314,
        "requirement": "在爬升 1 段，开始收起落架，若起落架收起，则延时 5s 开始收襟翼；若 1 分钟后起落架仍未收起，则直接收襟翼为 0 度。若襟翼收到 0 度，则延时 5s 后转入爬升 2 段；若进入爬升 1 后超过 75s 时限襟翼仍未收到 0 度，则直接转入爬升 2 段。转入爬升 2 段时软化时限为 2s。",
        "original_safety_criterions": [
            "对两个或多个存在转移关系的状态下、设置了优先级的不同功能进行检查，分析“高优先级切换低优先级、低优先级切换高优先级”等情况下状态与功能的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性",
            "对状态进入条件进行检查，分析状态执行过程中进入条件“满足、不满足、再次满足”等情况下状态执行的正确性",
            "对于关键控制或动作，是否有超时判断，以处理硬件状态长时间达不到控制要求的情况？"
        ],
        "safety_requirements": [
            "系统在爬升1段转入爬升2段时，应检查状态转移优先级，确保高优先级切换低优先级的逻辑正确性，并验证起落架收起和襟翼收起的顺序及延时处理的准确性。",
            "系统在爬升1段状态执行中，应持续监测进入条件（如起落架和襟翼状态），确保在条件满足、不满足或再次满足时状态转换的正确性，且严格遵循75s时限约束。",
            "系统在爬升1段应实施超时判定机制：若起落架1分钟后未收起则强制收襟翼至0度；若75秒内襟翼未收至0度则强制转入爬升2段，并确保2s时限软化处理的可靠性。",
            "系统应对不同余度的工作状态进行一致性检查，若爬升1段和爬升2段存在多余度状态差异，需确保起落架和襟翼控制逻辑的容错性与状态同步正确性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 315,
        "requirement": "在爬升 2 段，若飞机未失速，根据当前高度与期望高度之差 DH 的值进行相应处理：1）当 DH>10m，则转入下降段，软化时限设为 2s，升降舵通道采用设置积分器初值软化的方法进行软化。2）当 －10m≤DH≤10m，则转入定高段，软化时限设为 2s。",
        "original_safety_criterions": [
            "对功能的多个输入数据进行检查，分析多个输入数据取值为“正常值等价类组合、异常值等价类组合、边界值组合、初始值组合、安全值组合、缺省值组合”等情况下功能处理的正确性",
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "对功能的控制解算过程进行检查，分析控制解算过程出现超时（未在规定时间内返回结果）等情况下的功能处理正确性",
            "对功能的控制解算结果进行检查，分析控制解算结果为“正常值、异常值、边界值、极大极小值”等情况下功能处理的正确性",
            "对功能的执行条件进行检查，分析功能执行过程中执行条件“不满足、再次满足”等情况下功能处理的正确性"
        ],
        "safety_requirements": [
            "系统在爬升 2 段应检查控制解算结果是否为正常值、异常值、边界值或极大极小值，确保当 DH>10m 转入下降段或 －10m≤DH≤10m 转入定高段时功能处理的正确性。",
            "系统在爬升 2 段应验证逻辑判断条件（如 DH>10m 或 －10m≤DH≤10m）是否存在逻辑恒假、恒真、条件错误或分支遗漏，确保状态转移和软化处理的逻辑正确性。",
            "系统在爬升 2 段应监控控制解算过程超时情况，若未在规定时间内返回结果，仍能正确处理不同 DH 值并正确转入下降段或定高段，同时设置 2s 软化时限。",
            "系统在爬升 2 段应检查功能执行条件（如 DH 值变化导致条件不满足或再次满足），确保状态转移、软化时限设置及积分器初值软化方法的正确触发。",
            "系统在爬升 2 段应对输入数据组合（正常/异常/边界/初始/安全/缺省值）进行校验，确保在不同 DH 值下转入对应状态段并完成软化处理的准确性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 316,
        "requirement": "设置定高控制积分器、高度跟踪积分器以及节风门控制积分器的初值（按节风门位置为 100%计算节风门控制积分器的初值）进行软化，为定高控制和高度跟踪控制做准备。",
        "original_safety_criterions": [
            "对两个或多个存在转移关系的状态下、设置了优先级的不同功能进行检查，分析“高优先级切换低优先级、低优先级切换高优先级”等情况下状态与功能的正确性",
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性",
            "对功能的控制解算结果进行检查，分析控制解算结果为“正常值、异常值、边界值、极大极小值”等情况下功能处理的正确性"
        ],
        "safety_requirements": [
            "系统在状态切换时，应检查定高控制积分器、高度跟踪积分器及节风门控制积分器的初值设置，确保‘高优先级切换低优先级’和‘低优先级切换高优先级’场景下的设置正确性。",
            "系统应在不同工作阶段和状态中，验证定高控制积分器、高度跟踪积分器及节风门控制积分器的初值设置逻辑，确保覆盖‘未考虑工作阶段’和‘未考虑工作状态’的异常情况。",
            "系统应对定高控制积分器、高度跟踪积分器及节风门控制积分器的解算结果进行实时检查，确保‘正常值、异常值、边界值、极大极小值’等场景下处理的正确性。",
            "系统应验证积分器的逻辑判断条件和逻辑分支，确保无‘逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏’等错误，保障初值设置的正确性。",
            "系统在多个余度处于不同状态时，应检查并确保定高控制积分器、高度跟踪积分器及节风门控制积分器的初值设置符合冗余状态要求。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 317,
        "requirement": "若处于五边航线飞行的第五边，且进入了下滑窗口，则转入下滑 1 段；否则，根据当前高度与期望高度之差 DH 的值进行相应处理。",
        "original_safety_criterions": [
            "对软件状态空间中两两状态之间的转移条件进行检查，分析转移条件“未设置、始终满足、无法满足”等情况下状态转移的正确性",
            "对状态进入条件进行检查，分析状态执行过程中进入条件“满足、不满足、再次满足”等情况下状态执行的正确性",
            "出现异常外部因素情况（例如高海况、恶劣气象条件等）时，软件是否进行了相应的判断和处理？",
            "对功能的控制解算结果进行检查，分析控制解算结果为“正常值、异常值、边界值、极大极小值”等情况下功能处理的正确性",
            "参数是否有变化率合理范围（斜率上限和下限），超斜率数据的处理策略是否明确？"
        ],
        "safety_requirements": [
            "系统应在五边航线飞行中检查第五边状态进入条件，确保在‘满足、不满足、再次满足’条件下状态转移逻辑的正确性。",
            "系统在异常外部因素（如高海况、恶劣气象）下，需验证是否依据第五边下滑窗口条件或高度差DH值进行正确状态转移和处理。",
            "系统应定义五边航线飞行参数（如高度差DH）的变化率合理范围，并明确超限数据的处理策略，尤其在第五边下滑窗口或DH值触发处理时。",
            "系统应检查五边飞行各状态间转移条件的有效性，确保‘未设置、始终满足、无法满足’等场景下状态转移逻辑正确，特别是第五边进入下滑窗口或基于DH值的处理。",
            "系统应对五边飞行控制解算结果（正常值、异常值、边界值等）进行校验，确保其在状态转移及处理逻辑中的正确响应。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 318,
        "requirement": "当 DH > 50m，转入下降段，软化时限设为 2s，升降舵通道采用设置积分器初值软化的方法进行软化。",
        "original_safety_criterions": [
            "输出控制状态的时机是否符合场景要求？"
        ],
        "safety_requirements": [
            "当 DH > 50m 时，系统转入下降段应验证输出控制状态的时机符合场景要求，并确保软化时限设为 2s 的准确执行。",
            "系统在转入下降段时，应对积分器初值软化方法进行实时校验，确保升降舵通道控制的安全性和正确性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 319,
        "requirement": "当 DH < -50m，转入爬升 2 段，软化时限设为 2s，升降舵通道采用设置积分器初值软化的方法进行软化。",
        "original_safety_criterions": [
            "对两个或多个存在转移关系的状态下、设置了优先级的不同功能进行检查，分析“高优先级切换低优先级、低优先级切换高优先级”等情况下状态与功能的正确性",
            "对软件状态空间中两两状态之间的转移条件进行检查，分析转移条件“未设置、始终满足、无法满足”等情况下状态转移的正确性",
            "对状态进入条件进行检查，分析状态执行过程中进入条件“满足、不满足、再次满足”等情况下状态执行的正确性"
        ],
        "safety_requirements": [
            "系统在 DH < -50m 触发转入爬升 2 段时，应检查状态进入条件的满足、不满足及再次满足情况，确保软化时限 2s 和升降舵通道积分器初值软化方法的正确执行。",
            "系统应对爬升 2 段的转移条件进行校验，分析转移条件‘未设置、始终满足、无法满足’等情况下的状态转移逻辑，确保 DH < -50m 时的转换正确性。",
            "系统在状态切换时应对优先级进行验证，确保高优先级与低优先级功能切换的正确性，并严格执行软化时限 2s 和积分器初值软化方法。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 320,
        "requirement": "当一般标志侧向控制标志由其他方式更改为五边飞行时，设置高度跟踪积分器的初值进行软化；当一般标志侧向控制标志由五边飞行更改为其他方式时，设置定高控制积分器的初值进行软化。",
        "original_safety_criterions": [
            "对接口数据的初始值进行检查，分析“未设置初始值”等情况下输出的正确性"
        ],
        "safety_requirements": [
            "系统在一般标志侧向控制标志切换时（五边飞行与其他方式互改），应对高度跟踪积分器和定高控制积分器的初值进行完整性检查，确保软化操作中初始值的正确设置。",
            "系统应验证高度跟踪积分器和定高控制积分器初值的有效性，确保初始值处于预定义的安全范围内，防止因无效初值导致控制异常。",
            "系统应对积分器初值设置过程进行数据完整性保护，防止未经授权或错误的修改影响软化逻辑。",
            "系统在检测到积分器初值未设置或设置异常时，应立即触发安全容错机制，采用默认安全值并发出告警信号。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 321,
        "requirement": "根据当前高度与期望高度之差 DH 的值进行相应处理：若 -10m ≤ DH ≤ 10m，则转入定高段，软化时限设为 2s，并设置定高控制积分器、高度跟踪积分器以及节风门控制积分器的初值进行软化，为定高控制和高度跟踪控制做准备。",
        "original_safety_criterions": [
            "对状态进入条件进行检查，分析状态执行过程中进入条件“满足、不满足、再次满足”等情况下状态执行的正确性",
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "输出控制状态的时机是否符合场景要求？",
            "参数是否有变化率合理范围（斜率上限和下限），超斜率数据的处理策略是否明确？",
            "对于关键控制或动作，是否有超时判断，以处理硬件状态长时间达不到控制要求的情况？"
        ],
        "safety_requirements": [
            "系统在转入定高段前，应对当前高度与期望高度之差 DH 的值进行实时检查，确保当 -10m ≤ DH ≤ 10m 时准确触发状态转移，并正确设置软化时限（2s）、定高控制积分器、高度跟踪积分器及节风门控制积分器的初值。",
            "系统应验证转入定高段的控制时机与场景要求的一致性，确保仅在 DH 值处于 -10m ≤ DH ≤ 10m 范围时执行状态切换，且软化时限严格设定为 2s。",
            "系统在不同工作阶段处理功能输入时，需检查是否关联当前工作阶段及 DH 值的状态，避免因未识别阶段或忽略 DH 值导致功能处理错误。",
            "系统应监测定高段软化时限（2s），若超时后 DH 值仍未达到 -10m ≤ DH ≤ 10m 范围，须立即触发超时处理机制并重置控制参数。",
            "系统需对高度差 DH 的变化率进行斜率边界（上限/下限）检查，超出合理范围时应执行预设的数据异常处理策略。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 322,
        "requirement": "当 DH < -10m，则转入下降段。",
        "original_safety_criterions": [
            "两个或多个状态之间不存在转移关系，对这些状态的进入条件进行检查，分析进入条件“同时满足、状态执行过程中满足”等情况下状态执行的正确性",
            "工作状态发生转移时，对功能接口数据的取值进行检查，分析“取值未发生变化”等情况下输出的正确性",
            "对软件状态空间中两两状态之间的转移条件进行检查，分析转移条件“未设置、始终满足、无法满足”等情况下状态转移的正确性",
            "对状态进入条件进行检查，分析状态执行过程中进入条件“满足、不满足、再次满足”等情况下状态执行的正确性"
        ],
        "safety_requirements": [
            "系统在工作状态转移时应对高度差(DH)取值进行实时检查，确保在‘取值未发生变化’时仍能正确维持或转换状态，尤其当 DH < -10m 时需准确触发下降段转入逻辑。",
            "系统应验证状态转移条件（DH < -10m）的完整性，确保该条件未被设置为‘始终满足、无法满足或未定义’，且在满足条件时严格触发下降段转入动作。",
            "系统应监控状态进入条件（DH < -10m）的动态变化，确保在条件‘满足后不满足、再次满足’等场景下，下降段状态执行逻辑的可靠性与一致性。",
            "系统应对无直接转移关系的状态进行进入条件冲突检测，当其他状态的条件（如 DH < -10m 与其他条件）同时满足时，需执行优先级判定或锁定机制以避免逻辑冲突。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 323,
        "requirement": "入爬升 2 段，软化时限设为 2s，升降舵通道采用设置积分器初值软化的方法进行软化。",
        "original_safety_criterions": [
            "针对各项任务的持续时间进行检查，分析任务持续时间大于规定时间等情况下，功能处理的正确性",
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "针对各项任务的持续时间进行检查，分析任务持续时间小于规定时间等情况下，功能处理的正确性",
            "针对各项任务的先后执行时序进行检查，分析任务执行时序与规定时序不一致时，功能处理的正确性",
            "各功能点控制逻辑之间的时序关系、约束关系、并发关系和组合关系是否正确"
        ],
        "safety_requirements": [
            "系统应在入爬升2段时检查任务执行时序，确保在时序与规定不一致的情况下，升降舵通道设置积分器初值软化处理的正确性。",
            "系统应验证入爬升2段时升降舵通道控制逻辑的时序关系、约束关系及并发关系，确保软化时限设为2s时的逻辑正确性。",
            "系统应对入爬升2段的逻辑判断条件和分支进行完整性检查，识别‘逻辑恒假、恒真、判断错误或分支遗漏’等异常情况，并确保功能处理的正确性。",
            "系统应在入爬升2段任务持续时间大于2s时，检查升降舵通道积分器初值软化方法的处理正确性。",
            "系统应在入爬升2段任务持续时间小于2s时，检查升降舵通道积分器初值软化处理的正确性。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 324,
        "requirement": "在下滑 1 段，当飞行高度低于 100m 时，转入下滑 2 段，并将定直侧滑控制积分器和航向控制保持积分器清零，为下滑 2 段的飞行控制做准备，软化时限设为 2s。",
        "original_safety_criterions": [
            "不同状态、工作阶段下功能的控制解算过程不同，对功能输入进行检查，分析“未考虑工作阶段、未考虑工作状态”等情况下功能处理的正确性",
            "对软件状态空间中两两状态之间的转移条件进行检查，分析转移条件“未设置、始终满足、无法满足”等情况下状态转移的正确性",
            "对两个或多个存在转移关系的状态下、设置了优先级的不同功能进行检查，分析“高优先级切换低优先级、低优先级切换高优先级”等情况下状态与功能的正确性",
            "对状态进入条件进行检查，分析状态执行过程中进入条件“满足、不满足、再次满足”等情况下状态执行的正确性"
        ],
        "safety_requirements": [
            "系统在下滑 1 段转入下滑 2 段时，应验证飞行高度低于 100m 的条件，确保定直侧滑控制积分器、航向控制保持积分器清零操作及 2s 软化时限设置的正确性",
            "系统在下滑阶段状态转移过程中，应对高优先级/低优先级切换机制进行检查，确保飞行高度触发条件满足时状态转移和积分器清零的不可逆性",
            "系统应检查下滑 1 段至 2 段的转移条件设置，分析并防止‘始终满足’或‘无法满足’等异常条件导致的状态误切换",
            "系统在状态执行过程中应持续监测飞行高度参数，当进入条件在‘满足-不满足-再次满足’状态变化时，确保仅当首次满足高度＜100m 时触发状态转移",
            "系统应对状态转移后的控制解算模块进行完整性校验，确保下滑 2 段初始化参数与积分器清零操作的有效性"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 325,
        "requirement": "在下滑 2 段，当飞行高度低于 17m 时，转入拉平段，升降舵通道采用设置积分器初值软化的方法，其它通道不需软化。",
        "original_safety_criterions": [
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "系统在下滑2段应检查逻辑判断条件及分支，确保在逻辑恒假、恒真、条件错误或分支遗漏情况下，飞行高度低于17m时正确转入拉平段并采用升降舵通道积分器初值软化方法，其他通道不软化。",
            "系统应检查不同余度的工作状态，在出现‘两个或多个余度处于不同状态’时，确保升降舵通道积分器初值软化方法正确执行，其他通道维持不软化。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 326,
        "requirement": "在拉平段，当飞行高度低于 1.5m 时，转入滚转改平段，各通道不进行软化。",
        "original_safety_criterions": [
            "两个或多个状态之间不存在转移关系，对这些状态的进入条件进行检查，分析进入条件“同时满足、状态执行过程中满足”等情况下状态执行的正确性",
            "对软件状态空间中两两状态之间的转移条件进行检查，分析转移条件“未设置、始终满足、无法满足”等情况下状态转移的正确性",
            "对状态进入条件进行检查，分析状态执行过程中进入条件“满足、不满足、再次满足”等情况下状态执行的正确性"
        ],
        "safety_requirements": [
            "系统在拉平段应检查飞行高度条件，当高度低于1.5m时，确保状态转移至滚转改平段的执行正确性，并验证进入条件在‘满足、不满足、再次满足’情况下的处理逻辑。",
            "系统应确保拉平段与滚转改平段之间无转移关系的状态在进入条件‘同时满足’或‘状态执行过程中满足’时，各通道仍保持不软化且状态转移符合预期。",
            "系统应对拉平段至滚转改平段的转移条件进行检查，确保在条件‘未设置、始终满足、无法满足’等异常情况下状态转移的正确性，并避免错误切换。",
            "系统在转入滚转改平段时，应强制保持各通道不进行软化操作，且该行为不受转移条件之外的其他参数影响。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 327,
        "requirement": "在滚转改平段，当以下条件之一满足时，转入着陆滑跑段，软化时限设为 2s。\n1） 起落架全压缩信号连续 12 拍为真；\n2） 遥控接地信号为真；\n3） 累计 75 拍遥控信号状态为不正常。 注意，该项条件只需判断一次。",
        "original_safety_criterions": [
            "对软件状态空间中两两状态之间的转移条件进行检查，分析转移条件“未设置、始终满足、无法满足”等情况下状态转移的正确性",
            "对状态进入条件进行检查，分析状态执行过程中进入条件“满足、不满足、再次满足”等情况下状态执行的正确性",
            "对功能的循环判断条件进行检查，分析“循环判断条件恒假、恒真”等情况下功能处理的正确性",
            "两个或多个状态之间不存在转移关系，对这些状态的进入条件进行检查，分析进入条件“同时满足、状态执行过程中满足”等情况下状态执行的正确性",
            "对于关键控制或动作，是否有超时判断，以处理硬件状态长时间达不到控制要求的情况？"
        ],
        "safety_requirements": [
            "系统应在滚转改平段设置超时判断机制，若2秒内未触发转入着陆滑跑段的条件，需执行预设安全操作并报警。",
            "系统应对滚转改平段至着陆滑跑段的转移条件进行验证，确保在条件‘未设置、始终满足、无法满足’时状态转移逻辑正确。",
            "系统应检查滚转改平段转入着陆滑跑段的条件（包括起落架全压缩信号连续12拍为真、遥控接地信号为真、累计75拍遥控信号异常），确保多个条件同时满足时转移逻辑无误。",
            "系统在滚转改平段执行过程中，若转入条件‘满足、不满足、再次满足’，需保证状态转移仅按设计要求触发，其中累计75拍遥控信号异常条件仅判断一次。",
            "系统应监测滚转改平段转入着陆滑跑段的循环判断条件，若出现‘恒假或恒真’情况，需维持当前状态并触发异常处理机制。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 328,
        "requirement": "在着陆滑跑段，当飞控预关机指令有效后，转入地面等待阶段。",
        "original_safety_criterions": [
            "是否有基于回绕检测的故障处理，故障时状态上报策略是否合理？",
            "下发危险的控制指令或动作时，是否有依据设备状态进行合理性判断？",
            "系统的掉电恢复或跑飞复位机制启动后，是否能恢复到正常工作状态？"
        ],
        "safety_requirements": [
            "系统在着陆滑跑段飞控预关机指令有效并转入地面等待阶段时，应对设备状态进行合理性判断，确保状态转换的正当性。",
            "系统在着陆滑跑段转入地面等待阶段过程中，应实施基于回绕检测的故障处理机制，并在故障时执行预定义的状态上报策略。",
            "系统若在着陆滑跑段转入地面等待阶段时触发跑飞复位或掉电恢复机制，应确保恢复后能准确重建状态参数并维持正常工作模式。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 329,
        "requirement": "若发动机空中停车，则飞机进入飘落阶段。",
        "original_safety_criterions": [
            "故障项的检测逻辑是否合理，检测方式是否会对设备正常工作产生影响？",
            "下发危险的控制指令或动作时，是否有依据设备状态进行合理性判断？"
        ],
        "safety_requirements": [
            "系统在下发进入飘落阶段的控制指令时，应基于发动机空中停车状态的验证结果进行合理性判断。",
            "发动机空中停车的检测逻辑应独立于正常工作流程，确保不影响飞机其他系统功能，并避免误触发或漏检。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 330,
        "requirement": "当 DH<－10m，转入爬升 2段，设置空速控制积分器的初值进行软化",
        "original_safety_criterions": [
            "对两个或多个存在转移关系的状态下、设置了优先级的不同功能进行检查，分析“高优先级切换低优先级、低优先级切换高优先级”等情况下状态与功能的正确性",
            "对软件状态空间中两两状态之间的转移条件进行检查，分析转移条件“未设置、始终满足、无法满足”等情况下状态转移的正确性",
            "对于关键控制或动作，是否有超时判断，以处理硬件状态长时间达不到控制要求的情况？"
        ],
        "safety_requirements": [
            "当 DH<－10m 转入爬升 2 段时，系统应设置超时判断机制，处理硬件状态长时间未达到控制要求的情况。",
            "系统在 DH<－10m 触发爬升 2 段状态转移时，应对转移条件进行校验，确保在‘未设置、始终满足、无法满足’等异常情况下状态转移逻辑正确。",
            "系统在转入爬升 2 段并设置空速控制积分器初值时，应验证高优先级与低优先级功能切换的正确性，确保状态与软化操作的同步性。",
            "系统应对爬升 2 段的空速控制积分器初值设置过程进行完整性保护，防止因优先级切换冲突导致初值配置错误。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 331,
        "requirement": "当－10m <DH<10m，转入定高段，设置定高控制积分器、高度跟踪积分器的初值进行软化",
        "original_safety_criterions": [
            "对两个或多个存在转移关系的状态下、设置了优先级的不同功能进行检查，分析“高优先级切换低优先级、低优先级切换高优先级”等情况下状态与功能的正确性",
            "对软件状态空间中两两状态之间的转移条件进行检查，分析转移条件“未设置、始终满足、无法满足”等情况下状态转移的正确性",
            "系统进行控制的顺序和时序是否与硬件协调，控制条件是否完备且前后一致？",
            "对接口数据的初始值进行检查，分析“未设置初始值”等情况下输出的正确性"
        ],
        "safety_requirements": [
            "系统在－10m < DH < 10m转入定高段时，应确保控制条件完备且时序与硬件协调，定高控制积分器、高度跟踪积分器的初值设置与软化处理逻辑一致。",
            "系统在转入定高段时，应对定高控制积分器和高度跟踪积分器的接口数据初始值进行强制检查，确保未设置初始值情况下输出符合安全容错要求。",
            "系统应验证状态转移条件（包括未设置、始终满足、无法满足等场景），确保当－10m < DH < 10m时定高段状态的转移逻辑和积分器初始化操作正确执行。",
            "系统在处理高/低优先级状态切换时（如定高段与其他飞行阶段），应严格执行优先级规则，确保转入定高段后的积分器初值设置和软化操作不受异常切换干扰。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 332,
        "requirement": "以上阶段转换软化时限设为 2s",
        "original_safety_criterions": [
            "输出控制状态的时机是否符合场景要求？",
            "对软件状态空间中两两状态之间的转移条件进行检查，分析转移条件“未设置、始终满足、无法满足”等情况下状态转移的正确性",
            "对于关键控制或动作，是否有超时判断，以处理硬件状态长时间达不到控制要求的情况？"
        ],
        "safety_requirements": [
            "系统应在关键控制中设置超时判断机制，当硬件状态在2秒内未达到控制要求时，触发异常处理流程并确保阶段转换软化时限严格为2s。",
            "系统应验证输出控制状态的时机与场景要求的一致性，在阶段转换软化时限设为2s时，确保状态转移的时序符合设计规范。",
            "系统应对软件状态空间的转移条件进行全面检查，当条件‘未设置、始终满足或无法满足’时，禁止非法状态转移并执行安全回退策略，且确保2s软化时限的精确性。",
            "系统应在状态转换过程中实施实时监控，若2s软化时限内无法完成合法状态转移，则强制进入预设安全状态。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 333,
        "requirement": "执行起飞指令时，转入起飞滑跑段",
        "original_safety_criterions": [
            "对状态进入条件进行检查，分析状态执行过程中进入条件‘满足、不满足、再次满足’等情况下状态执行的正确性",
            "对系统状态、工作阶段或系统任务对应的软件状态进行检查，分析‘不存在对应软件状态、软件与系统不一致’等情况下状态执行的正确性"
        ],
        "safety_requirements": [
            "系统在执行起飞指令时，应检查当前软件状态与系统状态的一致性，确保在‘不存在对应软件状态’或‘软件与系统不一致’情况下起飞滑跑段转换的正确性。",
            "系统在进入起飞滑跑段前，应对进入条件进行实时检查，确保在条件‘满足、不满足或再次满足’时状态执行的正确性，并生成相应的异常处理机制。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 334,
        "requirement": "在起飞滑跑段，当空速>30m/s 且高度大于 15m 时转入起飞离地段，不做软化处理",
        "original_safety_criterions": [
            "故障检测是否有防虚警处理，防虚警处理是否会满足告警处置的实时性要求？",
            "输出控制状态的时机是否符合场景要求？",
            "出现异常外部因素情况（例如高海况、恶劣气象条件等）时，软件是否进行了相应的判断和处理？",
            "针对各项任务的持续时间进行检查，分析任务持续时间大于规定时间等情况下，功能处理的正确性",
            "对于关键控制或动作，是否有超时判断，以处理硬件状态长时间达不到控制要求的情况？"
        ],
        "safety_requirements": [
            "系统在起飞滑跑段应具备防虚警处理机制，确保当空速>30m/s且高度>15m时，状态转换的告警处置满足实时性要求。",
            "系统在异常外部因素（如高海况、恶劣气象）下，应验证起飞滑跑段空速>30m/s且高度>15m时的状态转换判断逻辑，并保持不做软化处理的执行完整性。",
            "系统对起飞滑跑段转入起飞离地段的硬件状态要求应设定超时判断机制，防止空速>30m/s且高度>15m时因硬件未达标导致控制失效。",
            "系统在起飞滑跑段空速>30m/s且高度>15m时，应确保输出控制状态的时机严格符合场景时序要求。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 335,
        "requirement": "当飞行高度大于安全高度 80m 时，转入爬升 1 段，不做软化处理",
        "original_safety_criterions": [
            "工作状态发生转移时，对功能接口数据的取值进行检查，分析“取值发生变化或者取值区间发生变化”等情况下输出的正确性",
            "对状态进入条件进行检查，分析状态执行过程中进入条件“满足、不满足、再次满足”等情况下状态执行的正确性",
            "出现异常外部因素情况（例如高海况、恶劣气象条件等）时，软件是否进行了相应的判断和处理？",
            "下发危险的控制指令或动作时，是否有依据设备状态进行合理性判断？",
            "对于关键控制或动作，是否有超时判断，以处理硬件状态长时间达不到控制要求的情况？"
        ],
        "safety_requirements": [
            "系统应在飞行状态进入条件变化（满足、不满足、再次满足）时，确保转入爬升1段的执行正确性，并验证飞行高度大于安全高度80m的判定逻辑。",
            "系统应对关键控制动作设置超时判断机制，当飞行高度持续未达到安全高度80m时触发异常处理。",
            "系统在工作状态转移时，应对飞行高度数据进行实时取值检查，确保‘取值变化’或‘取值区间变化’时转入爬升1段决策的准确性。",
            "系统在转入爬升1段前，应结合设备状态进行合理性判断，排除因设备异常导致的误操作风险。",
            "系统在外部异常因素（如高海况、恶劣气象）下，应确保飞行高度大于安全高度80m时仍能正确执行转入爬升1段的逻辑，并进行相应异常防护处理。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 336,
        "requirement": "当起落架全压缩信号为真或遥控接地信号为真时，转入着陆滑跑段，不做软化处理",
        "original_safety_criterions": [
            "对状态进入条件进行检查，分析状态执行过程中进入条件“满足、不满足、再次满足”等情况下状态执行的正确性",
            "故障检测是否有防虚警处理，防虚警处理是否会满足告警处置的实时性要求？",
            "输出控制状态的时机是否符合场景要求？",
            "故障项的检测逻辑是否合理，检测方式是否会对设备正常工作产生影响？",
            "对于关键控制或动作，是否有超时判断，以处理硬件状态长时间达不到控制要求的情况？"
        ],
        "safety_requirements": [
            "系统应对起落架全压缩信号和遥控接地信号的进入条件进行实时检查，确保在“满足、不满足、再次满足”情况下状态执行的正确性，并严格限制不做软化处理。",
            "系统在处理起落架全压缩信号或遥控接地信号时，应设置超时判断机制，避免因硬件状态长时间未达要求导致控制失效。",
            "系统在转入着陆滑跑段的逻辑检测中需验证检测方式的合理性，确保其不干扰设备正常工作流程。",
            "系统的故障检测应包含防虚警处理，同时保障防虚警机制不影响起落架全压缩信号或遥控接地信号为真时转入着陆滑跑段的实时性。",
            "系统需验证转入着陆滑跑段的控制状态时机与场景要求的匹配性，确保状态转换时机符合预设条件。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 337,
        "requirement": "d 项只需判断一次，其他项阶段转换必须连续 5 次满足相应条件时才进行",
        "original_safety_criterions": [
            "对软件状态空间中两两状态之间的转移条件进行检查，分析转移条件“未设置、始终满足、无法满足”等情况下状态转移的正确性",
            "对状态进入条件进行检查，分析状态执行过程中进入条件“满足、不满足、再次满足”等情况下状态执行的正确性",
            "同一个状态与其他多个状态之间存在转移关系，对同一个状态向多个状态转移以及多个状态向同一个状态转移的条件进行检查，分析多个状态转移条件同时满足时状态转移的正确性",
            "对功能的执行条件进行检查，分析功能执行过程中执行条件“不满足、再次满足”等情况下功能处理的正确性",
            "对于关键控制或动作，是否有超时判断，以处理硬件状态长时间达不到控制要求的情况？"
        ],
        "safety_requirements": [
            "系统应对功能执行条件进行检查，确保在条件‘不满足、再次满足’时正确处理，其中d项仅判断一次，其他项阶段转换需连续5次满足条件方可执行。",
            "系统应对状态进入条件进行检查，当条件‘满足、不满足、再次满足’时，确保状态转移正确执行，特别区分d项单次判断与其他项连续5次满足条件的要求。",
            "系统应对需连续5次满足条件的阶段转换设置超时判断机制，在硬件状态长时间未达控制要求时触发安全处理流程。",
            "系统在多个状态转移条件同时满足时，应优先处理冲突条件并确保转移正确性，尤其明确d项单次判断与其他项连续5次条件的执行顺序。",
            "系统应检查所有状态转移条件（包括未设置、始终满足、无法满足等情况），确保状态转移逻辑正确，重点验证d项单次判断与其他项连续5次条件的容错处理。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 338,
        "requirement": "若阶段标志为“飘落”则不进行阶段转换",
        "original_safety_criterions": [
            "若余度切换条件满足时，余度切换失败，软件是否有正确处理？",
            "人员操作是否有合理性判断，不符合当前场景或状态的指令不进行响应？"
        ],
        "safety_requirements": [
            "系统在阶段标志为‘飘落’时，应对人员操作指令进行合理性判断，仅响应符合当前场景或状态的指令，拒绝执行阶段转换操作。",
            "系统在余度切换条件满足但切换失败时，应确保阶段标志为‘飘落’状态下的软件逻辑正确处理，避免因切换失败导致异常行为。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    },
    {
        "id": 339,
        "requirement": "若复飞标志 3 选 2 结果为真，则飞机阶段转为爬升 2 段，并将空速控制积分器清零",
        "original_safety_criterions": [
            "对软件状态空间中两两状态之间的转移条件进行检查，分析转移条件“未设置、始终满足、无法满足”等情况下状态转移的正确性",
            "是否有基于回绕检测的故障处理，故障时状态上报策略是否合理？",
            "两个或多个状态之间不存在转移关系，对这些状态的进入条件进行检查，分析进入条件“同时满足、状态执行过程中满足”等情况下状态执行的正确性",
            "系统的掉电恢复或跑飞复位机制启动后，是否能恢复到正常工作状态？"
        ],
        "safety_requirements": [
            "系统在状态转移时，应对复飞标志 3 选 2 结果为真的转移条件进行验证，确保在条件‘未设置、始终满足、无法满足’等情况下，飞机阶段能正确转为爬升 2 段并清零空速控制积分器。",
            "系统应检查无直接转移关系的状态进入条件，确保在‘同时满足’或‘状态执行过程中满足’时，复飞标志 3 选 2 结果为真的情况下，状态转换与积分器清零操作正确执行。",
            "系统在掉电恢复或复位后，应确保能恢复至正常工作状态，并在复飞标志 3 选 2 结果为真时，准确完成飞机阶段转为爬升 2 段及空速控制积分器清零。",
            "系统应实现基于回绕检测的故障处理机制，当复飞标志 3 选 2 结果为真触发状态转移时，故障状态上报策略需确保操作可追溯且符合安全逻辑。"
        ],
        "全面性": 0,
        "一致性": 0,
        "可执行性": 0,
        "可读性": 0
    }
]