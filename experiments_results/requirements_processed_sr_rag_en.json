[
    {
        "id": 18,
        "requirement": "Determine which flight phase should be entered based on the aircraft's flight altitude, status, and other motion information at that time.",
        "original_safety_criterions": [
            "Does the timing of the output control status meet the scene requirements?",
            "When issuing dangerous control commands or actions, is there a rational judgment based on the equipment status?"
        ],
        "safety_requirements": [
            "When the system issues control commands or actions, it should make rationality judgments based on the aircraft's current flight altitude, status, and other motion information to ensure the Safety of the commands.",
            "The system should determine the flight phase based on the aircraft's current flight altitude, status, and other motion information, and ensure that the timing of output control states meets the scenario requirements.",
            "The system should monitor the aircraft's flight altitude, status, and other motion information in real time to ensure its accuracy and trigger a warning mechanism in case of abnormalities.",
            "The system should ensure that when determining the flight phase, it validates the validity of inputted flight altitude, status, and other motion information to prevent incorrect data from leading to erroneous flight phase judgments."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 19,
        "requirement": "When the flight altitude is greater than 150m, the landing gear compression signal is false, and the flight phase is not greater than the descent phase, all three conditions being met simultaneously will result in a phase transition based on the DH value.",
        "original_safety_criterions": [
            "There is no transition relationship between two or more states; check the entry conditions for these states and analyze the correctness of state execution under conditions such as \"all satisfied simultaneously, satisfied during state execution,\" etc.",
            "Check the transfer conditions between pairwise states in the software state space, analyze the correctness of state transitions under conditions where the transfer conditions are \"not set, always satisfied, cannot be satisfied,\" etc.",
            "There are transition relationships between the same state and other multiple states. Check the conditions for transitioning from the same state to multiple states and from multiple states to the same state. Analyze the correctness of state transitions when multiple state transition conditions are met simultaneously.",
            "Check the entry conditions for states and analyze the correctness of state execution during the process when the entry conditions are \"met, not met, met again,\" etc. Safety is a crucial concern in this analysis."
        ],
        "safety_requirements": [
            "The system should check the transition conditions between each pair of states in the software state space to ensure the correctness of state transitions under conditions such as 'not set, always satisfied, cannot be satisfied', especially when the flight altitude is greater than 150m, the landing gear compression signal is false, and the flight phase is not more than the descent phase, all three conditions being met simultaneously. The phase transition should occur based on the DH value.",
            "The system should check the state transition conditions when all three conditions are met simultaneously: the flight altitude is greater than 150m, the landing gear compression signal is false, and the flight phase is not more than the descent phase, ensuring the correctness of state transitions when multiple state transition conditions are met simultaneously.",
            "The system should check the conditions for entering a state to ensure that when the flight altitude is greater than 150m, the landing gear compression signal is false, and the flight phase is not greater than the descent phase, all three conditions are simultaneously met. It should also ensure the correctness of state execution during the process where the entry conditions are 'met, not met, met again', etc.",
            "The system should check for the absence of transition relationships between two or more states to ensure the correctness of state execution when these states' entry conditions are met simultaneously, or during the state execution process. This is especially important when the flight altitude is greater than 150m, the landing gear compression signal is false, and the flight phase is not greater than the descent phase, all three conditions being met at the same time, ensuring the correct phase transition based on the DH value."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 20,
        "requirement": "When DH>10m, transition to the descent segment and reset the airspeed control integrator to zero, setting the softening time limit to 2s.",
        "original_safety_criterions": [
            "Check the transition conditions between pairwise states in the software state space, analyze the correctness of state transitions under conditions where the transition conditions are \"not set, always satisfied, unsatisfiable,\" etc.",
            "Is the software correctly handling the situation where the redundancy switch takes too long?",
            "Does the timing of the output control status meet the scene requirements?",
            "Does the duration of the output state meet the constraint requirements?",
            "For critical control or actions, is there a timeout judgment to handle situations where the hardware status does not meet control requirements for an extended period?"
        ],
        "safety_requirements": [
            "The system should ensure the airspeed control integrator is reset to zero and the softening time limit is set to 2s when switching redundancy.",
            "The system should have a timeout judgment mechanism during critical control or actions to handle situations where the hardware status does not meet control requirements for an extended period. For example, when DH>10m, transition to the descent phase and reset the airspeed control integrator to zero, with a softened time limit set to 2s.",
            "When DH is greater than 10m, the system should check if the duration of the output status meets the 2-second softening time limit requirement when transitioning to the descent phase.",
            "When DH>10m, the system should ensure that the timing of output control status during the transition to the descent phase meets the scene requirements.",
            "The system should check the transfer conditions between each pair of states in the software state space to ensure the correctness of state transitions when DH>10m, especially for cases where the transfer condition to enter the descent phase is 'not set', 'always met', or 'cannot be met'."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 21,
        "requirement": "When DH<-10m, transition to climb segment 2 and reset the airspeed control integrator to zero, with a softened time limit set to 2s.",
        "original_safety_criterions": [
            "Check the transfer conditions between pairwise states in the software state space, analyze the correctness of state transitions under conditions where the transfer conditions are \"not set, always satisfied, cannot be satisfied,\" etc.",
            "Is there fault handling based on wrap-around detection, and is the status reporting strategy during faults reasonable?",
            "The control calculation process for functions varies under different states and working stages. Check the function inputs and analyze the correctness of function processing in scenarios such as \"not considering working stages, not considering working states\".",
            "Does the timing of output control status meet the scene requirements?",
            "For critical control or actions, is there a timeout judgment to handle situations where the hardware status does not meet control requirements for an extended period?"
        ],
        "safety_requirements": [
            "When the system is in DH<-10m, the correctness of the state transition conditions should be checked to ensure the correctness and Safety of state transitions in cases such as 'not set, always satisfied, cannot be satisfied'.",
            "The system should have a fault handling mechanism based on wrap-around detection when DH<-10m, ensuring a reasonable strategy of reporting status that transitions into climb segment 2, resets the airspeed control integrator, and sets the soft time limit to 2s.",
            "The system should check the correctness of functional inputs in different states and working phases to ensure proper function handling, especially in cases like 'unconsidered working phase, unconsidered working state', particularly when transitioning to Climb Segment 2 and resetting the airspeed control integrator when DH<-10m, and setting the soft time limit to 2s.",
            "The system should have a timeout judgment mechanism for critical control or actions to handle situations where the hardware status does not meet control requirements for an extended period. For example, when DH<-10m, it should switch to climb phase 2 and reset the airspeed control integrator, setting a soft limit of 2 seconds.",
            "The system should ensure that the transition to climb segment 2 and the control of airspeed timing meet the scenario requirements when DH<-10m, preventing Safety issues caused by improper timing."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 22,
        "requirement": "When -10m ≤ DH ≤ 10m, switch to the fixed altitude segment, reset the altitude control integrator to zero, and set the softening time limit to 2s.",
        "original_safety_criterions": [
            "The control calculation process for functions varies under different states and working phases. Check the function inputs and analyze the correctness of function processing in cases such as \"not considering working phases, not considering working states\".",
            "Check the transition conditions between pairwise states in the software state space, analyze the correctness of state transitions under conditions where the transition conditions are \"not set, always satisfied, impossible to satisfy,\" etc.",
            "Check and analyze the correctness of states and functions with different priorities set under transfer relationships between two or more states, including situations such as high priority switching to low priority and low priority switching to high priority.",
            "Check the entry conditions for states and analyze the correctness of state execution during the process when the entry conditions are \"met, not met, met again,\" etc."
        ],
        "safety_requirements": [
            "When the system transitions to the altitude hold segment at -10m ≤ DH ≤ 10m, it should check the switching between high-priority status and low-priority status to ensure the correctness of states and functions, especially when the altitude hold control integrator is reset to zero and the softening time limit is set to 2s.",
            "When the system transitions to the altitude hold segment at -10m ≤ DH ≤ 10m, it should check the conditions for entering this state to ensure the correctness of state execution during the process, especially when the conditions are 'met, not met, met again', etc. This is particularly important when the altitude control integrator is reset to zero and the softening time limit is set to 2 seconds.",
            "When the system transitions to the altitude hold segment at -10m ≤ DH ≤ 10m, it should check the transfer conditions between each pair of states to ensure the correctness of state transitions under conditions such as 'not set, always met, cannot be met', especially when the altitude hold control integrator is reset to zero and the softening time limit is set to 2s.",
            "When the system transitions to the altitude hold segment at -10m ≤ DH ≤ 10m, it should check the function inputs to ensure the correctness of the altitude control integrator reset and softening time limit settings under different states and working stages, especially when the working stages and states have not been considered."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 23,
        "requirement": "When the flight altitude is no more than 150m, phase transition processing is carried out based on the current phase marker and status information such as the current flight altitude, airspeed, etc.",
        "original_safety_criterions": [
            "Check the transfer conditions between pairwise states in the software state space, and analyze the correctness of state transitions under conditions such as \"not set, always satisfied, unsatisfiable,\" etc.",
            "There are transition relationships between the same state and other multiple states. Check the conditions for transitions from the same state to multiple states and from multiple states to the same state, and analyze the correctness of state transitions when multiple state transition conditions are met simultaneously.",
            "Check the entry conditions for states and analyze the correctness of state execution during the process when the entry conditions are \"met, not met, met again,\" etc."
        ],
        "safety_requirements": [
            "When the system's flight altitude is no more than 150m, it should check the transition relationships between the same state and other multiple states to ensure the accuracy of phase transition processing when multiple state transition conditions are met simultaneously.",
            "The system should check the phase transition conditions when the flight altitude is no more than 150m, ensuring the correctness of phase transition processing under various conditions during status execution, such as 'met, not met, met again'.",
            "The system should check the transition conditions between pairwise states in the flight status space to ensure the correctness of state transitions under conditions such as 'not set, always satisfied, cannot be satisfied', especially when the flight altitude is not more than 150m. It should handle phase transitions based on current phase flags, current flight altitude, airspeed, and other status information.",
            "The system should ensure the real-time and accuracy of phase transition processing when the flight altitude is no more than 150m, and trigger the early warning mechanism in case of abnormal conditions."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 24,
        "requirement": "During the phase transition processing in non-remote control mode, a series of phase transitions may occur until the flight phase appropriate to the current state is reached.",
        "original_safety_criterions": [
            "When the working state transfers, check the values of the functional interface data and analyze the correctness of the output in cases where \"the value changes or the value range changes\".",
            "Check the transition conditions between pairwise states in the software state space, analyze the correctness of state transitions under conditions where the transition conditions are \"not set, always satisfied, cannot be satisfied,\" etc.",
            "Two or more states with transfer relationships have the same function. Check the execution of this function before and after the state transition, and analyze the correctness of function processing in cases such as \"starting execution, maintaining execution, interrupting execution\" after the state transition.",
            "The control calculation process for functions varies under different states and working phases. Check the function inputs and analyze the correctness of function processing in scenarios such as \"without considering working phases, without considering working states\".",
            "Analyzing whether there are potential abnormal paths between non-migratable working modes that could cause a state transition?"
        ],
        "safety_requirements": [
            "The system should analyze whether there are potential abnormal paths between non-migratable working modes to ensure that state transitions do not occur between non-migratable working modes during the phase transition processing in non-remote control mode.",
            "The system should check the control calculation process of functions under different states and working phases to ensure the correctness of function processing in cases such as 'unconsidered working phases, unconsidered current states'.",
            "The system should check the execution of functions before and after the status transfer during the phase of non-remote control mode conversion processing to ensure the correctness of function handling in cases of 'starting execution, maintaining execution, interrupting execution', etc., after the status transfer.",
            "When the system's operating state shifts, it should check the function interface data values during the non-remote control mode phase transition processing to ensure the correctness of outputs in cases where the values or the range of values change.",
            "The system should check the transfer conditions between each pair of states during the phase transition processing in non-remote control mode, ensuring the correctness of state transitions in cases where the transfer conditions are 'not set, always met, cannot be met', etc."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 25,
        "requirement": "When the aircraft has already entered the descent phase, perform phase transition processing based on the current flight status.",
        "original_safety_criterions": [
            "Is there fault handling based on wrap-around detection, and is the status reporting strategy during faults reasonable?",
            "When issuing control commands or actions that are dangerous, is there a rational judgment based on the equipment status?"
        ],
        "safety_requirements": [
            "The system should perform fault handling based on wrap-around detection when the aircraft enters the approach phase, and report the fault status appropriately to ensure the correctness of state transition processing.",
            "The system should perform phase transition processing based on the current flight status when the aircraft enters the approach phase, and provide a reasonable status reporting strategy in case of failure.",
            "The system should issue control commands or actions based on the current flight status when the aircraft enters the approach phase, and make rational judgments according to the equipment status to ensure the correctness and Safety of the control commands.",
            "The system should monitor the equipment status in real time as the aircraft enters the approach phase, ensuring the rationality and Safety of control commands or actions, and trigger a warning mechanism in case of abnormalities."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 26,
        "requirement": "If the flight altitude is greater than the decision height (40m), then control the aircraft to enter the go-around procedure.",
        "original_safety_criterions": [
            "When issuing control commands or actions that are hazardous, is there a rational judgment based on the equipment status?",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\"."
        ],
        "safety_requirements": [
            "When the system is in different redundancy working states, it should check and ensure the correctness of controlling the aircraft to enter the go-around procedure.",
            "When the system issues a go-around control command, it should make a rational judgment based on the current flight altitude to ensure that the go-around procedure is correctly triggered when the flight altitude is greater than the decision height (40m).",
            "The system should provide integrity checks for go-around control commands to prevent incorrect instructions from affecting flight Safety.",
            "The system should monitor the flight altitude in real time to ensure that when the altitude exceeds the decision altitude, the go-around procedure is triggered promptly, and in abnormal situations, the warning mechanism is activated."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 27,
        "requirement": "If the flight altitude is not greater than the decision altitude, then phase transition processing is conducted based on the current phase marker and flight altitude.",
        "original_safety_criterions": [
            "Two or more states with transfer relationships have the same function. Check the execution of this function before and after the state transition, and analyze the correctness of function handling in cases such as \"starting execution, maintaining execution, interrupting execution\" after the state transition.",
            "Check the transfer conditions between pairwise states in the software state space, analyze the correctness of state transitions under conditions where the transfer conditions are \"not set, always satisfied, unsatisfiable,\" etc.",
            "Check the entry conditions for states and analyze the correctness of state execution during the process when the entry conditions are \"met, not met, met again,\" etc."
        ],
        "safety_requirements": [
            "The system should check the entry conditions for flight altitude to ensure the correctness of status execution when the decision altitude is 'met, not met, met again'.",
            "The system should check the transition conditions between pairwise states in the flight status space to ensure the correctness of state transitions when the transition conditions are 'not set, always met, or unmet', especially when the flight altitude is not greater than the decision altitude, ensuring the correct phase transition processing based on the current phase flag and flight altitude.",
            "The system should check the execution of flight altitude for two or more states with transfer relationships before and after the state transition, ensuring the correctness of function handling after the state transition in cases such as 'starting execution, maintaining execution, interrupting execution'.",
            "The system should ensure the accuracy and timeliness of phase transition processing based on the current phase indicators and flight altitude when the flight altitude is not greater than the decision altitude, and trigger a warning mechanism in case of abnormal conditions."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 28,
        "requirement": "Record the old values of the given attitude angles (roll, yaw, and pitch) before the switch as the softening starting point.",
        "original_safety_criterions": [
            "When the working state transitions, check the values of the functional interface data and analyze the correctness of the outputs in cases where \"the values change or the value ranges change.\"",
            "Is the software correctly handling the situation where the redundancy switch takes too long?",
            "Check the equivalence classes of the interface data, analyze the correctness of the output when data values switch between different output equivalence classes.",
            "Check the equivalence classes of interface data and analyze the correctness of the output when the values of interface data switch between different equivalence classes.",
            "When the working state transfers, check the values of the functional interface data and analyze the correctness of the output in cases such as \"values have not changed\"."
        ],
        "safety_requirements": [
            "When the system transitions to a working state, it should check the values of the given attitude angles (roll, yaw, and pitch) to ensure the correctness of the output when there are changes in 'value changes' or 'range changes'.",
            "When the system transitions to a working state, it should check the values of the given attitude angles (roll, yaw, and pitch) to ensure the correctness of the output if the values have not changed.",
            "The system should perform equivalence class checking on the given attitude angles (roll, yaw, and pitch) to ensure the correctness of the output when switching between different equivalence classes.",
            "The system should correctly handle the old values of the given attitude angles (roll, yaw, and pitch) before the redundancy switch takes too long, using them as the starting point for softening.",
            "The system should record the old values of the given attitude angles (roll, yaw, and pitch) before switching to ensure the accuracy of these as softening starting points and to provide data integrity verification."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 29,
        "requirement": "When switching between the remote control mode with and without the internal loop, record the old value of the rudder deflection command before switching, as the softening starting point.",
        "original_safety_criterions": [
            "Check the equivalence classes of the interface data, analyze the correctness of the output when the interface data values switch between different equivalence classes",
            "Is there a detection mechanism in the output circuit that can monitor the loop status without affecting normal output?",
            "Check the equivalence classes of the interface data and analyze the correctness of the output when data values switch between different output equivalence classes."
        ],
        "safety_requirements": [
            "When the system switches between the remote control mode without an inner loop, it should record the old rudder deflection command value before switching as the softening starting point to ensure the smoothness and Safety of the switching process.",
            "The system should have an output loop detection mechanism to check the loop status without affecting normal output, especially when switching between modes without internal loop remote control, ensuring the correctness and Safety of the output.",
            "The system should check the equivalence classes of interface data, analyze the correctness of outputs when the interface data values switch between different equivalence classes, especially when switching between modes without internal loop remote control, ensuring that the old value of the rudder deflection command before switching is recorded as the softening starting point.",
            "The system should ensure the correctness of output when switching interface data values between different output equivalence classes while transitioning between non-inner loop remote control modes, preventing data errors from impacting system Safety."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 30,
        "requirement": "When switching between the remote control mode with an inner loop, record the old values of the given attitude angles (roll, yaw, and pitch) before the switch as the softening starting point.",
        "original_safety_criterions": [
            "Check the transfer conditions between pairwise states in the software state space, analyze the correctness of state transitions under conditions where the transfer conditions are \"not set, always satisfied, unsatisfiable,\" etc.",
            "Two or more states that have a transfer relationship possess the same function. Check the execution of this function before and after the state transfer, analyzing the correctness of function processing in scenarios such as \"starting execution, maintaining execution, interrupting execution\" after the state transfer.",
            "Check the equivalence classes of the interface data, analyze the correctness of the output when data values switch between different output equivalence classes.",
            "Check the equivalence classes of the interface data and analyze the correctness of the output when the values of the interface data switch between different equivalence classes.",
            "When the working state transfers, check the values of the functional interface data and analyze the correctness of the output in cases such as \"values have not changed\"."
        ],
        "safety_requirements": [
            "When the system switches between remote control modes with in-band loops, it should check the equivalence classes of interface data to ensure that when switching between different equivalence classes, the old values of the given attitude angles (roll, yaw, and pitch) before the switch are correctly recorded as the softening starting point.",
            "When switching between the system and the remote control mode with an in-band loop, the transfer conditions between each pair of states in the software state space should be checked to ensure the correctness of state transitions under conditions such as 'not set, always satisfied, cannot be satisfied', and record the old values of the given attitude angles (roll, yaw, and pitch) before switching, as the softening starting point. Safety must be ensured throughout this process.",
            "The system should check the execution of functions before and after the state transition when switching between remote control mode and in-band loop, ensuring the correctness of function handling in cases such as 'start execution, maintain execution, interrupt execution' after the state transition. It should also record the old values of the given attitude angles (roll, yaw, and pitch) before the switch, to serve as the softening starting point.",
            "When the system switches between remote control mode and in-band loop, it should check the equivalence class of interface data to ensure the correctness of the output when data values switch between different output equivalence classes. It should also record the old values of the given attitude angles (roll, yaw, and pitch) before switching, as the starting point for softening.",
            "When the system switches between remote control mode and in-band loop, it should check the values of interface data to ensure the correctness of the output when the value has not changed, etc., and record the old values of the given attitude angles (roll, yaw, and pitch) before switching as the softening starting point."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 31,
        "requirement": "When switching between inner-loop remote control and non-inner-loop remote control modes, record the old value of the rudder deflection command before the switch as the softening starting point.",
        "original_safety_criterions": [
            "Check the equivalence classes of interface data and analyze the correctness of the output when the values of interface data switch between different equivalence classes.",
            "Is the software correctly handling the situation where the redundancy switch takes too long?",
            "Is there a detection mechanism in the output circuit that monitors the loop status without affecting normal output?"
        ],
        "safety_requirements": [
            "The system should have a detection mechanism when switching between in-band loop remote control and non-in-band loop remote control modes to ensure that loop status detection is performed without affecting normal output.",
            "When switching between the in-band loop remote control and the non-in-band loop remote control modes, the system should record the old value of the rudder deflection command before the switch as the softening starting point to ensure the smoothness and continuity of the switching process.",
            "When switching between the in-band loop remote control and the non-in-band loop remote control modes, the system should check the equivalence classes of interface data to ensure the correctness of outputs when the rudder deflection command values switch between different equivalence classes.",
            "The system should ensure that the switching time between in-band loop remote control and non-in-band loop remote control modes is within a reasonable range to prevent control abnormalities caused by excessively long switching times."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 32,
        "requirement": "When there is a phase transition or a control mode switch related to the remote control mode, record the old value of the throttle bias command before the conversion as the softening starting point.",
        "original_safety_criterions": [
            "When the working state transfers, check the values of the functional interface data and analyze the correctness of the output in cases such as \"values have not changed\".",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\".",
            "When the working state transitions, check the values of the functional interface data and analyze the correctness of the outputs in cases where \"values change or the range of values changes.\"",
            "Check the equivalence classes of the interface data, analyze the correctness of the output when data values switch between different output equivalence classes."
        ],
        "safety_requirements": [
            "The correctness of function implementation should be checked when the system is in different working states at different redundancy levels, especially during phase transitions or control mode switches related to remote control modes.",
            "When the system's working state transfers, it should check the values of functional interface data to ensure that 'values have not changed', and then record the old value of the throttle bias command before conversion as the softening starting point.",
            "When the system's operating state shifts, it should check the values of the functional interface data to ensure that in cases where 'values change' or 'value ranges change', the old value of the throttle bias command before conversion is recorded as the starting point for softening.",
            "When the system transitions from one working state to another, it should check the equivalence classes of interface data to ensure that when data values switch between different output equivalence classes, the old value of the throttle bias command before conversion is recorded as the softening starting point."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 37,
        "requirement": "FCC collects necessary aircraft motion information, compares it with the required motion to obtain the deviation between the actual and ideal motion of the aircraft. Then, based on this deviation, it calculates control laws to derive control signals, which are input into relevant actuators to make the control surfaces deflect according to certain rules, thereby achieving control over the aircraft's attitude and motion. Safety is a critical aspect throughout this process.",
        "original_safety_criterions": [
            "Check the values of discrete output data with different redundancy levels, and analyze the correctness of function implementation in cases such as 'inconsistent values' among two or more redundant outputs.",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as 'two or more redundancies being in different states'.",
            "Check the logical judgment conditions and logical branches of the function, analyze the correctness of function processing in cases such as 'logically always false, logically always true, incorrect logical judgment conditions, missing logical branches'."
        ],
        "safety_requirements": [
            "The system should check the logical judgment conditions and logical branches for processing the information collected by the FCC on aircraft motion, comparing deviations between actual and ideal motions, calculating control laws, generating control signals, and inputting them into relevant servos. This ensures the correctness of functional processing in cases such as 'logically always false, logically always true, incorrect logical judgment conditions, missing logical branches'. Safety is a priority in these checks.",
            "The system should check the values of discrete output data with different redundancies to ensure the correctness of the FCC's collection of aircraft motion information and calculation of control signals when there is inconsistency in the values of two or more redundant output data.",
            "The system should check the working status of different redundancies to ensure the correctness of FCC's functionality in collecting aircraft motion information, calculating control laws, and generating control signals when 'two or more redundancies are in different states'. Safety is a priority in this process.",
            "The system should ensure the real-time nature and accuracy of aircraft motion information collected by the FCC and the calculated control signals, and provide data integrity checks to prevent incorrect data from affecting the control of aircraft attitude and motion. Safety is a crucial aspect in this context.",
            "The system should perform real-time consistency checks on the control signals generated by the FCC to ensure that their deviation from the actual and ideal movements of the aircraft matches, and trigger a warning mechanism in case of anomalies."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 38,
        "requirement": "When the aircraft is in the ground waiting phase, the elevator deflection commands, aileron deflection commands, and rudder deflection commands are all set to 0°.",
        "original_safety_criterions": [
            "Check the transition conditions between pairwise states in the software state space, analyze the correctness of state transitions under conditions where the transition conditions are \"not set, always satisfied, impossible to satisfy,\" etc.",
            "There is no transition relationship between two or more states; check the entry conditions for these states and analyze the correctness of state execution under conditions such as \"satisfied simultaneously, satisfied during state execution.\"",
            "Check the conditions for state entry and analyze the correctness of state execution under scenarios where the entry conditions are \"met, not met, met again\" during the state execution process."
        ],
        "safety_requirements": [
            "The system should check the transfer conditions between each pair of states in the software state space to ensure that, under transfer conditions such as 'not set, always met, unmet', when the aircraft is in the ground waiting phase, the elevator deflection command, aileron deflection command, and rudder deflection command are all set to 0°.",
            "The system should check the entry conditions for the ground waiting phase to ensure that during the state execution process, under circumstances where the entry conditions are 'met, not met, met again', the elevator deflection command, aileron deflection command, and rudder deflection command are all set to 0°.",
            "The system should check for the absence of transition relationships between two or more states, ensuring that under conditions such as 'simultaneously met, met during state execution', when the aircraft is in the ground waiting phase, the elevator deflection command, aileron deflection command, and rudder deflection command are all set to 0°.",
            "The system should ensure that the elevator deflection commands, aileron deflection commands, and rudder deflection commands are all set to 0° when the aircraft enters the ground holding phase, and provide real-time monitoring and warning mechanisms to prevent abnormal commands. Safety is a priority in this process."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 40,
        "requirement": "The system should be capable of real-time collection and processing of aircraft motion information, including but not limited to data such as position, speed, attitude, etc.",
        "original_safety_criterions": [
            "Has the software made the corresponding judgment and handling when abnormal external factors occur, such as high sea conditions, adverse weather conditions, etc.?",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as 'two or more redundancies being in different states'."
        ],
        "safety_requirements": [
            "When the system operates in different redundancy states, it should check and ensure the correctness of the function for real-time acquisition and processing of aircraft motion information, including but not limited to position, speed, attitude data, etc.",
            "The system should be capable of real-time collection and processing of aircraft motion information, including but not limited to position, speed, and attitude data, when abnormal external factors such as high sea conditions or adverse weather occur, and make corresponding judgments and processing to ensure the accuracy and reliability of the data.",
            "The system should provide a real-time data integrity verification mechanism to ensure that the aircraft motion information collected is not altered or lost during transmission and processing.",
            "The system should have anomaly detection capabilities. When abnormal aircraft motion information is collected, it should be able to promptly trigger a warning mechanism and take corresponding actions."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 41,
        "requirement": "The system should be able to adjust control strategies and parameters according to different phases of flight, ensuring the stability and Safety of the aircraft at each stage.",
        "original_safety_criterions": [
            "Is the sequence and timing of system control coordinated with the hardware, and are the control conditions complete and consistent?",
            "The control calculation process for functions varies under different states and working stages. Check the function inputs and analyze the correctness of function processing in cases such as \"not considering working stages, not considering working states\".",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\".",
            "Does the timing of the output control status meet the scenario requirements?",
            "When issuing control commands or actions that are hazardous, is there a rational judgment based on the equipment status?"
        ],
        "safety_requirements": [
            "The system should ensure that the control sequence and timing are coordinated with the flight phases, and that control conditions are comprehensive and consistent before and after, to ensure the stability and Safety of the aircraft at all stages.",
            "The system should make a reasonable judgment based on the status of the current flight phase when issuing hazardous control commands or actions to prevent safety risks caused by misoperation.",
            "The system should check the operating status of different redundancies to ensure the correctness of control strategies and parameter adjustments when 'two or more redundancies are in different states'. This ensures the stability and Safety of the aircraft during all flight phases.",
            "The system should ensure that the timing of output control states meets the requirements of the flight phase, preventing control failures or errors caused by improper timing.",
            "The system should check the function inputs during different flight phases to ensure the correctness of function processing in cases such as 'flight phase not considered, flight status not considered', etc., to prevent incorrect inputs from affecting control effectiveness."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 42,
        "requirement": "Longitudinal control law: δz = KJ (J-Jg) + Kwz . wz",
        "original_safety_criterions": [
            "Check the results of functional control calculations and analyze the correctness of functional processing under conditions such as normal values, abnormal values, boundary values, maximum and minimum values."
        ],
        "safety_requirements": [
            "The system should check the solution results of the longitudinal control law to ensure that the calculation results of rudder deflection angle δz are correct under conditions where the solution results are 'normal values, abnormal values, boundary values, maximum and minimum values'.",
            "The system should provide real-time monitoring mechanisms to continuously oversee the calculation results of the longitudinal control laws, ensuring they remain within normal ranges and triggering warning mechanisms in case of abnormalities.",
            "The system should ensure the consistency between the calculation results of the longitudinal control law and the current flight status and target status parameters (J, Jg, wz, etc.), preventing incorrect data from affecting the rudder deflection angle calculation.",
            "The system should have a mechanism for handling outliers, performing anomaly detection and processing on the calculation results of longitudinal control laws to ensure the stability and Safety of the system."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 43,
        "requirement": "Lateral control law: δx = KY . (Y - Yg)",
        "original_safety_criterions": [
            "The control calculation process for functions varies under different states and working phases. Check the function inputs and analyze the correctness of function processing in scenarios such as \"not considering working phases, not considering working states\".",
            "Check the results of the function control calculations and analyze the correctness of the function processing under conditions such as normal values, abnormal values, boundary values, maximum and minimum values.",
            "The timing relationships, constraint relationships, concurrent relationships, and combinational relationships between the control logics of each functional point are correct.",
            "对不同余度所处的工作状态进行检查，分析“两个或多个余度处于不同状态”等情况下，功能实现的正确性"
        ],
        "safety_requirements": [
            "The system should ensure the correct timing, constraint, concurrency, and combination relationships between the lateral control law (δx = KY . (Y - Yg)) and the control logic of each functional point to prevent control failure caused by logical errors.",
            "The system should check the solution process of lateral control laws under different states and working stages to ensure the correctness of lateral control law processing in cases such as 'unconsidered working stages, unconsidered working states'.",
            "The system should check the operating status of different redundancies to ensure the correctness of the lateral control law (δx = KY . (Y - Yg)) function in cases such as 'two or more redundancies being in different states'.",
            "The system should check the calculation results of the lateral control laws to ensure the correctness of functional processing under conditions such as 'normal values, abnormal values, boundary values, maximum and minimum values', and trigger a warning mechanism in case of abnormalities."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 44,
        "requirement": "Lateral control law: δy = KyY . (Y - Yg) + Kywy . wy",
        "original_safety_criterions": [
            "The control calculation process for functions varies under different states and working stages. Check the function inputs and analyze the correctness of function processing in scenarios such as \"not considering working stages, not considering working states\".",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\".",
            "Check the results of the function's control calculations, analyzing the correctness of function processing under conditions such as normal values, abnormal values, boundary values, maximum and minimum values.",
            "The timing relationships, constraint relationships, concurrent relationships, and combinational relationships between the control logics of each functional point are correct."
        ],
        "safety_requirements": [
            "The system should ensure the timing relationships, constraint relationships, concurrent relationships, and combined relationships of the lateral control law (δy = KyY . (Y - Yg) + Kywy . wy) are correct.",
            "The system should check functional inputs under different states and working phases to ensure the correctness of lateral control law processing, especially in cases where working phases or states are not considered.",
            "The system should check the calculation results of the lateral directional control laws to ensure the correctness of functional processing under normal values, abnormal values, boundary values, maximum and minimum values, etc.",
            "The system should check the working status of different redundancies to ensure the correctness of lateral control laws when two or more redundancies are in different states."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 45,
        "requirement": "The system should be able to calculate the rudder deflection angles δz, δx, and δy based on the current flight status and target status.",
        "original_safety_criterions": [
            "The control calculation process for functions varies under different states and working stages. Check the function inputs and analyze the correctness of function processing in cases such as \"not considering working stages, not considering working states\".",
            "Check the loop condition of the function, analyze the correctness of function handling under conditions such as \"loop condition is always false, always true\".",
            "Check the logical conditions and branches of the function's logic, analyze the correctness of function handling in cases of \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\"."
        ],
        "safety_requirements": [
            "The system should check the flight status and target status to calculate the rudder deflection angles δz, δx, and δy in a loop judgment condition, ensuring the correctness of function processing in cases where the loop judgment condition is always false or always true.",
            "The system should check the working status of different redundancies to ensure the correctness of the rudder deflection angle δz, δx, and δy calculation results in cases such as 'two or more redundancies being in different states'.",
            "The system should check the control calculation process of rudder deflection angles δz, δx, and δy under different flight statuses and operation phases to ensure the correctness of functional processing in cases such as 'operation phases not considered, flight statuses not considered'.",
            "The system should check the logical conditions and branches for calculating the rudder deflection angles δz, δx, and δy based on the flight status and target status, ensuring the correctness of function handling in cases such as 'logical always false, logical always true, incorrect logical judgment conditions, missing logical branches'."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 47,
        "requirement": "The system needs to discretize using the bilinear transformation method based on the given pitch angle Jg and roll angle Yg as well as the rudder control amount yg, to calculate the values of δz (k), δx (k), and δy (k).",
        "original_safety_criterions": [
            "Check the logical judgment conditions and logical branches of the function, analyze the correctness of function handling in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\".",
            "Check the values of discrete interface data with different redundancies, and analyze the correctness of function implementation in cases such as \"value inconsistency\" among two or more redundant interface data.",
            "Check the values of discrete output data with different redundancies, and analyze the correctness of function implementation in cases such as \"inconsistent values\" among two or more redundant output data.",
            "Check the results of function control calculations and analyze the correctness of function processing under conditions such as normal values, abnormal values, boundary values, maximum and minimum values."
        ],
        "safety_requirements": [
            "The system should check the logical judgment conditions and logical branches of the functions to ensure correctness in calculating the values of δz (k), δx (k), and δy (k) through bilinear transformation for discretization given the pitch angle Jg, roll angle Yg, and rudder control amount yg, especially in cases of 'logical always false, logical always true, incorrect logical judgment conditions, omitted logical branches'.",
            "The system should check the operating status of different redundancies to ensure the correctness of the discretization calculation results of pitch angle Jg, roll angle Yg, and rudder control quantity yg in cases such as 'two or more redundancies being in different states'.",
            "The system should check the values of discrete output data with different redundancies to ensure the correctness of calculating the values of δz (k), δx (k), and δy (k) in cases such as 'inconsistent values' among two or more redundant output data.",
            "The system should check the value of discrete interface data with different redundancies to ensure that in cases such as 'inconsistent values' between two or more redundant interface data, the pitch angle Jg and roll angle Yg as well as the rudder control amount yg are correctly discretely calculated through bilinear transformation to obtain δz (k), δx (k), and δy (k).",
            "The system should check the control calculation results for rudder deflection angles δz (k), δx (k), and δy (k) to ensure the correctness of functional processing under conditions such as 'normal values, abnormal values, boundary values, maximum and minimum values'."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 48,
        "requirement": "The system needs to set different given attitude angles for different flight phases during takeoff and departure, specifically as follows: longitudinal Jg = 4.5°, lateral yg = 0°.",
        "original_safety_criterions": [
            "Check the logical judgment conditions and logical branches of the function, analyze the correctness of function processing in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "The timing relationships, constraint relationships, concurrent relationships, and combinational relationships between the control logics of each functional point are correct.",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\"."
        ],
        "safety_requirements": [
            "The system during the takeoff phase should check the logical judgment conditions and logical branches for setting the given attitude angle, ensuring the correctness of functional processing in cases such as 'logically always false, logically always true, incorrect logical judgment conditions, omitted logical branches'.",
            "The system should ensure the correct timing, constraint, concurrency, and combination relationships between the control logics of various functional points, especially during the takeoff departure phase, where different given attitude angles (such as longitudinal Jg = 4.5°, lateral yg = 0°) are set according to different flight phases.",
            "The system should check the working status of different redundancies to ensure that in cases such as 'two or more redundancies being in different states', the correct functionality is achieved according to different flight phases by setting different given attitude angles (such as longitudinal Jg = 4.5°, lateral yg = 0°).",
            "The system should provide real-time monitoring and early warning mechanisms to ensure the consistency and correctness of logical judgment and control logic at each functional point when setting the given attitude angle."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 49,
        "requirement": "The system needs to calculate the value of yg based on the side offset distance Dz, the side offset speed Dz, and Δy, using a formula.",
        "original_safety_criterions": [
            "Check the logical judgment conditions and logical branches of the function, analyze the correctness of function handling in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "Check multiple input data for the function, analyze the correctness of function processing under various input value combinations such as normal equivalent class, abnormal equivalent class, boundary values, initial values, Safety values, and default values.",
            "Check the values of discrete output data with different redundancies, and analyze the correctness of function implementation in cases such as \"inconsistent values\" among two or more redundancy outputs.",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\"."
        ],
        "safety_requirements": [
            "The system should check multiple input data such as lateral offset distance Dz, lateral offset speed Dz, and Δy when calculating the yg value, ensuring the correctness of the calculation results under combinations of normal value equivalence classes, abnormal value equivalence classes, boundary value combinations, initial value combinations, Safety value combinations, and default value combinations.",
            "The system should check the values of discrete output data with different redundancies to ensure the correctness of the function implementation of yg values calculated from Dz, the lateral offset distance, Dz, the lateral offset speed, and Δy in cases such as 'inconsistent values'.",
            "The system should check the logical conditions and logical branches for the lateral offset distance Dz and the lateral offset speed Dz as well as Δy, ensuring the correctness of the calculated yg value in cases of 'logically always false, logically always true, incorrect logical judgment conditions, missing logical branches'.",
            "The system should check the working status of different redundancies to ensure the correctness of the calculation results for side offset Dz, side offset speed Dz, and Δy in cases such as 'two or more redundancies being in different states'."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 52,
        "requirement": "The system should support modifying the throttle quantity through fine adjustments during takeoff departure segments, with the modification amplitude limit set to [-15%, 0%].",
        "original_safety_criterions": [
            "Check the duration of each task, analyze the correctness of functional processing in cases where the task duration exceeds the specified time.",
            "对功能的逻辑判断条件和逻辑分支进行检查，分析“逻辑恒假、逻辑恒真、逻辑判断条件错误、逻辑分支遗漏”等情况下功能处理的正确性",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\".",
            "Check the results of the control calculations for functions, and analyze the correctness of function processing under conditions such as normal values, abnormal values, boundary values, maximum and minimum values.",
            "The timing relationships, constraint relationships, concurrent relationships, and combinational relationships between the control logics of each functional point are correct."
        ],
        "safety_requirements": [
            "The system should check the control calculation results when adjusting the throttle quantity through minor changes during takeoff from the runway, ensuring the correctness of functional processing under normal values, abnormal values, boundary values, maximum and minimum values, etc.",
            "The system should check the logic conditions and logic branches for changes in the throttle valve fine adjustment amount, ensuring the correctness of function processing in cases such as logically always false, logically always true, incorrect logic judgment conditions, and missing logic branches.",
            "The system should check the duration of the idle air control valve fine adjustment change task to ensure the correctness of functional processing when the task duration exceeds the specified time.",
            "The system should check the operating status of different redundancies to ensure the correctness of the throttle fine adjustment modification function when two or more redundancies are in different states.",
            "The system should ensure the correctness of timing relationships, constraint relationships, concurrent relationships, and combinational relationships between control logics of various functional points, especially when adjusting the throttle quantity through fine-tuning during takeoff departure segments, ensuring the control logic for limiting the adjustment amplitude to [-15%, 0%] is correct."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 53,
        "requirement": "The system should support autonomous throttle control for climbing one segment.",
        "original_safety_criterions": [
            "Is the sequence and timing of system control coordinated with the hardware, and are the control conditions complete and consistent?",
            "Check the execution timing of different redundancies and analyze the correctness of function implementation in cases such as \"two or more redundancy execution timings are not synchronized.\"",
            "The control calculation process for functions varies under different states and working phases. Check the function inputs and analyze the correctness of function processing in cases such as \"not considering working phases, not considering working states\".",
            "Does the timing of the output control status meet the scene requirements?",
            "Check the duration of each task, analyze the correctness of functional processing in cases where the task duration exceeds the specified time."
        ],
        "safety_requirements": [
            "The system should ensure the correctness of the autonomous throttle control function when the execution timing of different redundancy levels is not synchronized, preventing control errors caused by unsynchronized timing.",
            "The system should ensure that the output timing for autonomous throttle control during Climb Segment 1 meets the requirements of this phase to prevent control failure due to improper timing.",
            "When the system performs autonomous throttle control during climb phase 1, it should ensure that the control sequence and timing are coordinated with the hardware, that control conditions are complete and consistent, and prevent system failures due to errors in control sequence or timing.",
            "The system should check the inputs of autonomous throttle control at different states and working stages to ensure the correctness of function processing without considering the working stage or status, preventing control failure due to input errors. Safety is a priority in this process.",
            "The system should check the duration of the autonomous throttle valve control task to ensure that the task duration does not exceed the specified time, preventing system abnormalities caused by task timeouts."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 54,
        "requirement": "The system should support adjusting the throttle valve quantity through fine-tuning during the climb phase, with the change limit set to [-15%, 0%].",
        "original_safety_criterions": [
            "Check the logical conditions and branches of the function's logic, analyzing the correctness of function handling in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\".",
            "The timing relationships, constraint relationships, concurrent relationships, and combinational relationships between the control logics of each functional point are correct.",
            "Check the results of functional control calculations and analyze the correctness of functional processing under conditions such as normal values, abnormal values, boundary values, maximum and minimum values."
        ],
        "safety_requirements": [
            "The system should check the control calculation results when adjusting the throttle amount through minor changes in the throttle valve while climbing one segment, ensuring the correctness of function processing under conditions such as normal values, abnormal values, boundary values, maximum and minimum values.",
            "The system should check the logic conditions and logic branches for adjusting the throttle valve fine-tuning quantity, ensuring the correctness of function processing in cases such as 'logic always false, logic always true, incorrect logic judgment conditions, missing logic branches'.",
            "The system should check the working status of different redundancies to ensure the correctness of the throttle valve fine adjustment modification function in cases such as 'two or more redundancies being in different states'.",
            "The system should ensure the correct timing relationships, constraint relationships, concurrent relationships, and combinational relationships between the control logics of each functional point, especially when adjusting the throttle valve quantity by changing the micro-adjustment amount through the throttle valve during the climb segment, ensuring the change limit amplitude is [-15%, 0%]."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 55,
        "requirement": "The system should support discretization calculations for longitudinal and lateral directions.",
        "original_safety_criterions": [
            "Check the data bits with discrete value ranges in the interface data, and analyze the correctness of the output when the data bit values are \"undefined abnormal values outside the valid value range\".",
            "Check the values of discrete interface data with different redundancies, and analyze the correctness of function implementation in cases such as \"value inconsistency\" among two or more redundant interface data.",
            "Check the values of discrete output data with different redundancy and analyze the correctness of function implementation in cases such as \"inconsistent values\" among two or more redundant output data. Safety considerations are integral to ensuring the reliability of these processes.",
            "Check the data bits with discrete value ranges in the interface data, and analyze the correctness of the output when the data bit values are \"each enumerated value of the valid value range\".",
            "Check the duration of each task, analyze the correctness of functional processing in cases where the task duration exceeds the specified time."
        ],
        "safety_requirements": [
            "The system should ensure the correctness of longitudinal and lateral discretization calculation functions when the discrete interface data values are inconsistent at different redundancies.",
            "The system should check the data bits with discrete value ranges in the interface data to ensure that the data bit values are within the valid enumerated values, preventing abnormal values from affecting the output of longitudinal and lateral discretization calculations.",
            "The system should check the duration of discretization calculations for longitudinal and lateral tasks to ensure they are completed within the specified time, preventing timeouts from affecting the correctness of functional processing.",
            "The system should ensure the accuracy of discretization calculation results in both longitudinal and lateral directions, check the data bits with discrete value ranges in the interface data, and ensure that the data bit values are enumeration values within valid domains.",
            "The system should check the discrete output data values for longitudinal and lateral directions to ensure that two or more discrete output data values are consistent, preventing inconsistencies from affecting the correctness of function implementation."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 56,
        "requirement": "The system should support the calculation of the given airspeed during climb",
        "original_safety_criterions": [
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as 'two or more redundancies being in different states'.",
            "Check the logical conditions and branches of the function's logic, analyzing the correctness of function handling in cases such as 'logically always false, logically always true, incorrect logical judgment conditions, missing logical branches'."
        ],
        "safety_requirements": [
            "The system should check the logical judgment conditions and logical branches when calculating the given airspeed during climb, ensuring the correctness of function processing in cases such as 'logically always false, logically always true, incorrect logical judgment conditions, missing logical branches'.",
            "The system should ensure the correctness of the given airspeed function calculation during climbs when different redundancies are in varying operational states, preventing calculation errors caused by inconsistent states.",
            "The system should provide real-time monitoring and early warning mechanisms to ensure that any logic errors or inconsistent states during the calculation of climb at the given airspeed are detected and handled promptly."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 57,
        "requirement": "The system should support the calculation and processing of heading deviation.",
        "original_safety_criterions": [
            "Has the software made corresponding judgments and processing in case of abnormal external factors (such as high sea conditions, adverse weather conditions, etc.)?"
        ],
        "safety_requirements": [
            "The system should calculate and process heading deviations when abnormal external factors (such as high sea conditions, adverse weather conditions, etc.) occur to ensure the stability and Safety of the system.",
            "The system should have the capability to monitor and process heading deviations in real-time under high sea conditions and severe weather, ensuring the accuracy and Safety of the flight status.",
            "The system should provide a mechanism for detecting abnormal external factors. When high sea conditions or adverse weather conditions are detected, it should automatically trigger the heading deviation calculation and processing procedure.",
            "The system should record and report the results of heading deviation handling under abnormal external factors to ensure traceability and subsequent analysis."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 58,
        "requirement": "Md2(k) = KvI . Md1(k)",
        "original_safety_criterions": [
            "Check the loop condition of the function, analyze the correctness of function processing under conditions such as \"loop condition is always false, always true\".",
            "Check and analyze the interface data of different redundancies to ensure the correctness of function implementation in cases of single redundancy failure, and all redundancies failing (such as data anomalies, timing faults, communication failures, destination device failures, etc.). Safety considerations are integral to this process.",
            "Check the execution sequence of tasks and analyze the correctness of functional processing when the task execution sequence is inconsistent with the specified sequence.",
            "Check the duration of each task, analyze the correctness of functional processing in cases where the task duration exceeds the specified time.",
            "Check the input data values for the execution conditions of each task, and analyze the correctness of functional processing when the input data values cause the task execution conditions to be met prematurely."
        ],
        "safety_requirements": [
            "The system should check the input data values for the Md2(k) = KvI . Md1(k) function to ensure the correctness of function processing when the input data values cause the task execution conditions to be met prematurely.",
            "The system should check the interface data of different redundancies to ensure the correctness of the Md2(k) = KvI . Md1(k) function implementation in cases of single redundancy failure or all redundancies failing (such as data anomalies, timing faults, communication failures, destination device failures, etc.). Safety is a crucial consideration in this process.",
            "The system should check the duration of the Md2(k) = KvI . Md1(k) function to ensure the correctness of function processing when the task duration is greater than the specified time.",
            "The system should check the timing of the Md2(k) = KvI . Md1(k) function execution to ensure the correctness of function processing when the task execution timing does not match the specified timing.",
            "The system should check the loop judgment condition of the Md2(k) = KvI . Md1(k) function to ensure correct functionality processing in cases where the loop judgment condition is always false or always true."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 59,
        "requirement": "Md 2(k ) amplitude limit [- XfSita, XfSita]",
        "original_safety_criterions": [
            "Check the values of continuous interface data with different redundancies, and analyze the correctness of function implementation in cases where \"the values of two or multiple redundancy interfaces are inconsistent, meaning the difference in values exceeds the specified threshold.\"",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\".",
            "The timing relationships, constraint relationships, concurrent relationships, and combinational relationships between the control logics of each functional point are correct.",
            "Check the results of functional control calculations and analyze the correctness of functional processing under conditions such as normal values, abnormal values, boundary values, maximum and minimum values."
        ],
        "safety_requirements": [
            "The system should check the amplitude limiting results of Md 2(k) to ensure the correctness of functional processing in cases of 'normal values, abnormal values, boundary values, maximum and minimum values'.",
            "The system should check the working status of different redundancies to ensure the correctness of the Md 2(k) amplitude limitation [- XfSita, XfSita] function when 'two or more redundancies are in different states'.",
            "The system should check the values of continuous interface data with different redundancies to ensure the correctness of the Md 2(k) amplitude limit [- XfSita, XfSita] function when there is inconsistency in values from two or more redundant interfaces, meaning the difference in values exceeds the specified threshold.",
            "The system should ensure the correctness of the timing relationship, constraint relationship, concurrent relationship, and combination relationship between the control logic of Md 2(k) limiting [- XfSita, XfSita] and the control logic of other functional points."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 60,
        "requirement": "Md 3(k ) = Kv . [vk (k ) -vg (k )] + Md 2(k )",
        "original_safety_criterions": [
            "When multiple functions are executed simultaneously, check and analyze the input and output data of these functions to verify the correctness of multi-function processing under conditions such as \"normal value equivalence class combination, abnormal value equivalence class combination\" for input/output data values.",
            "The control calculation process for functions varies under different states and working phases. Check the function inputs and analyze the correctness of function processing in cases such as \"not considering working phases, not considering working states\".",
            "Multiple functions performing read and write operations on the same data simultaneously; analyze the correctness of multi-function processing when data read/write conflicts occur. Safety considerations are paramount in ensuring reliable operation under these conditions.",
            "Check and analyze the interface data of different redundancy levels to ensure the correctness of function implementation under scenarios such as single redundancy failure, all redundancies failing (such as data anomalies, timing failures, communication failures, destination device failures, etc.). Safety considerations are integral to this analysis.",
            "Check the values of discrete output data with different redundancy, and analyze the correctness of function implementation in cases such as \"value inconsistency\" among two or more redundant output data."
        ],
        "safety_requirements": [
            "The system should check the interface data of different redundancies to ensure the correctness of the Md 3(k) = Kv . [vk (k) - vg (k)] + Md 2(k) function implementation in cases of 'single redundancy failure, all redundancies failing (such as data anomalies, timing faults, communication failures, destination device failures, etc.)'.",
            "The system should check the input and output data of multiple functions when they are executed simultaneously to ensure the correctness of multi-function processing under conditions such as normal value equivalence class combinations and abnormal value equivalence class combinations, especially the calculation result of Md 3(k) = Kv . [vk (k) - vg (k)] + Md 2(k).",
            "The system should check the functional inputs under different states and working phases to ensure the correctness of the function processing Md 3(k) = Kv . [vk (k) - vg (k)] + Md 2(k) in cases such as 'unconsidered working phases, unconsidered working states'.",
            "The system should analyze the correctness of multi-function processing when data read-write conflicts occur, especially during simultaneous read and write operations on the same data by multiple functions. This is particularly important for the calculation result of Md 3(k) = Kv . [vk (k) - vg (k)] + Md 2(k).",
            "The system should check the values of discrete output data with different redundancies to ensure the correctness of the Md 3(k) = Kv . [vk (k) - vg (k)] + Md 2(k) function in cases such as 'inconsistent values' among two or more redundant output data."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 61,
        "requirement": "Md 3(k) amplitude limit [- XfSita, XfSita]",
        "original_safety_criterions": [
            "Check and analyze the correctness of states and functions with different priorities set under transfer relationships, including situations where high priority switches to low priority and low priority switches to high priority.",
            "Check multiple input data for the function, analyze the correctness of function processing under various input value combinations such as normal equivalent class, abnormal equivalent class, boundary value, initial value, Safety value, and default value combinations.",
            "Two or more states with transfer relationships may have different execution requirements for the same function, where some states permit function execution while others do not. Analyze the correctness of states and functions under conditions such as \"continuing execution, interrupting execution\" before and after state transitions.",
            "Check the process of control function calculation, analyze the correctness of function handling in cases where the control calculation process times out (does not return results within the specified time).",
            "Check the results of functional control calculations and analyze the correctness of functional processing under conditions such as normal values, abnormal values, boundary values, maximum and minimum values."
        ],
        "safety_requirements": [
            "The system should check the control calculation process for Md 3(k) amplitude limitation [- XfSita, XfSita], ensuring the correctness of functional processing when a timeout occurs (does not return results within the specified time) during the control calculation process.",
            "The system should check the results of the Md 3(k) amplitude limitation to ensure the correctness of functional processing in cases where the limitation results are 'normal values, abnormal values, boundary values, maximum and minimum values'.",
            "The system should ensure that under two or more states with transfer relationships, the execution requirements of Md 3(k) clipping [- XfSita, XfSita] differ, where some states permit execution while others do not. Analyze the correctness of states and functions before and after state transitions, such as 'continue execution, interrupt execution', etc.",
            "The system should check different functions with set priorities under two or more states with transfer relationships to ensure the correctness of Md 3(k) amplitude limit [- XfSita, XfSita] in cases such as switching from high priority to low priority and from low priority to high priority.",
            "The system should check multiple input data for the Md 3(k) limiter function to ensure correct processing under conditions where multiple input data values are 'normal value equivalence class combinations, abnormal value equivalence class combinations, boundary value combinations, initial value combinations, Safety value combinations, default value combinations', etc."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 62,
        "requirement": "Jg (k ) = Md 3(k )",
        "original_safety_criterions": [
            "Check and analyze the correctness of function processing for multiple input data values categorized into combinations of normal equivalence classes, abnormal equivalence classes, boundary values, initial values, Safety value combinations, and default value combinations.",
            "Check the duration of each task, analyze the correctness of function processing in cases where the task duration is less than the specified time.",
            "Check the data processing of functions and analyze whether there is a division by zero in the data processing process.",
            "Check the duration of each task, analyze the correctness of functional processing in cases where the task duration exceeds the specified time.",
            "Check the input data values for the execution conditions of each task, and analyze the correctness of functional processing when input data values cause the task execution conditions to be met prematurely."
        ],
        "safety_requirements": [
            "The system should check multiple input data for the function Jg (k ) = Md 3(k ) to ensure correctness of function processing under combinations of normal value equivalence classes, abnormal value equivalence classes, boundary values, initial values, Safety values, and default values.",
            "The system should check the duration of each task for the Jg (k ) = Md 3(k ) function to ensure the correctness of function processing when the task duration exceeds the specified time.",
            "The system should check the duration of each task for the Jg (k ) = Md 3(k ) function to ensure the correctness of functional processing when the task duration is less than the specified time.",
            "The system should check the input data values for the task execution conditions of the Jg (k ) = Md 3(k ) function to ensure the correctness of functional processing when the input data values prematurely satisfy the task execution conditions.",
            "The system should check the data processing process for Jg (k ) = Md 3(k ) to ensure that there is no division by zero during data processing."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 63,
        "requirement": "δp (k) = 115%",
        "original_safety_criterions": [
            "Check the output data of different redundancies and analyze the correctness of function implementation in cases of \"single redundancy failure, multiple redundancies all failed\".",
            "Check the loop condition of the function, analyze the correctness of function handling in cases where the loop condition is always false or always true.",
            "The control calculation process for functions varies under different states and working stages. Check the function inputs and analyze the correctness of function processing in scenarios such as \"not considering working stages, not considering working states\".",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\".",
            "Check the duration of each task, analyze the correctness of functional processing in cases where the task duration exceeds the specified time."
        ],
        "safety_requirements": [
            "The system should check functional inputs at different states and working phases to ensure the correct processing of functions under 'unconsidered working phases, unconsidered working states', where δp (k) = 115%.",
            "The system should check the working status of different redundancies to ensure the correctness of the δp (k) = 115% function when 'two or more redundancies are in different states'.",
            "The system should check the duration of each task to ensure that when the task duration exceeds the specified time, the correctness of the function processing for δp (k) = 115% is guaranteed.",
            "The system should check the output data of different redundancies to ensure the correctness of the δp (k) = 115% function implementation in cases of 'single redundancy failure, multiple redundancies all fail'.",
            "The system should check the rudder deflection angle δp (k) = 115% loop judgment condition to ensure the correctness of function processing in cases such as the loop judgment condition being always false, always true, etc."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 64,
        "requirement": "Md1(k) = Kg1 . Dz(k)",
        "original_safety_criterions": [
            "Check the logical conditions and branches of the function, analyze the correctness of function processing in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\" etc.",
            "Check the input data values for the execution conditions of each task, and analyze the correctness of functional processing when the input data values cause delays in meeting the task execution conditions.",
            "Check the execution sequence of tasks and analyze the correctness of function processing when the execution sequence does not match the specified sequence.",
            "Check the duration of each task, analyze the correctness of functional processing in cases where the task duration exceeds the specified time.",
            "Check the input data values for the execution conditions of each task, and analyze the correctness of function processing when the input data values cause the task execution conditions to be met prematurely."
        ],
        "safety_requirements": [
            "The system should check the logical judgment conditions and logical branches of Md1(k) = Kg1 . Dz(k) to ensure the correctness of functional processing in cases such as 'logically always false, logically always true, incorrect logical judgment conditions, missing logical branches'.",
            "The system should check the input data values for the execution conditions of the task Md1(k) = Kg1 . Dz(k), ensuring the correctness of functional processing when the input data values cause the task execution conditions to be met prematurely.",
            "The system should check the duration of the task Md1(k) = Kg1 . Dz(k) to ensure the correctness of functional processing when the task duration exceeds the specified time.",
            "The system should check the input data values for the execution conditions of Md1(k) = Kg1 . Dz(k) to ensure the correctness of function processing when the input data values cause a delay in meeting the task execution conditions.",
            "The system should check the sequence of execution for the task Md1(k) = Kg1 . Dz(k) to ensure that the functional processing is correct when the sequence of task execution does not match the specified sequence."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 65,
        "requirement": "Md1(k) amplitude limit [-XfCs, +XfCs]",
        "original_safety_criterions": [
            "Check the values of continuous interface data with different redundancies, and analyze the correctness of function implementation in cases where \"values are inconsistent, meaning the difference in values exceeds the specified threshold\" for two or more redundant interface data.",
            "Check the logical judgment conditions and logical branches of the function, analyze the correctness of function processing in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "Check the values of continuous output data with different redundancies, and analyze the correctness of function implementation in cases where \"the values of two or multiple redundancy outputs are inconsistent, meaning the difference in values exceeds the specified threshold.\"",
            "Check the results of the function control calculations and analyze the correctness of the function processing under conditions such as normal values, abnormal values, boundary values, maximum and minimum values.",
            "The timing relationships, constraint relationships, concurrent relationships, and组合 relationships between the control logics of each functional point are correct."
        ],
        "safety_requirements": [
            "The system should check the values of continuous interface data with different redundancies to ensure the correctness of the Md1(k) amplitude limit [- XfCs, +XfCs] function when values are inconsistent, meaning the difference in values exceeds the specified threshold.",
            "The system should check the values of continuous output data with different redundancies to ensure the correctness of the Md1(k) amplitude limit [- XfCs, +XfCs] function when the values are inconsistent, meaning the difference between the values exceeds the specified threshold.",
            "The system should check the control calculation results of Md1(k) to ensure the correctness of function processing in cases of 'normal values, abnormal values, boundary values, maximum and minimum values'.",
            "The system should check the logic judgment conditions and logical branches for the Md1(k) amplitude limit [- XfCs, +XfCs] to ensure the correctness of function handling in cases of 'logic always false, logic always true, incorrect logic judgment conditions, missing logical branches'.",
            "The system should ensure the timing, constraint, concurrency, and combination relationships between the Md1(k) amplitude limiting [- XfCs,+XfCs] control logic and other functional point control logics are correct and error-free."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 66,
        "requirement": "Md 2(k ) = D&Z  (k ) + Md1(k ) . Kg 2",
        "original_safety_criterions": [
            "Check the logical judgment conditions and logical branches of the function, analyze the correctness of function handling in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "Check the output data of different redundancies and analyze the correctness of function implementation in cases of \"single redundancy failure, multiple redundancies all failed\".",
            "Check multiple input data for the function, analyze the correctness of function processing under various input value combinations such as normal value equivalence class, abnormal value equivalence class, boundary value combination, initial value combination, Safety value combination, default value combination, etc.",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\"."
        ],
        "safety_requirements": [
            "The system should check the output data of different redundancies to ensure the correctness of the Md 2(k) = D&Z(k) + Md1(k) . Kg 2 function in case of 'single redundancy failure' or 'multiple redundancies failure'.",
            "The system should check multiple input data of the function to ensure correctness of the Md 2(k) = D&Z(k) + Md1(k) . Kg 2 function processing under combinations of normal value equivalence classes, abnormal value equivalence classes, boundary values, initial values, Safety values, and default values.",
            "The system should check the logical judgment conditions and logical branches of the functions to ensure the correct handling of Md 2(k) = D&Z(k) + Md1(k) . Kg 2 under circumstances such as logically always false, logically always true, incorrect logical judgment conditions, and missing logical branches.",
            "The system should check the operating status of different redundancies to ensure the correctness of the Md 2(k) = D&Z(k) + Md1(k) . Kg 2 function in cases such as 'two or more redundancies being in different states'."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 67,
        "requirement": "Md 2(k ) amplitude limit [-XfGama, +XfGama]",
        "original_safety_criterions": [
            "Check the values of continuous interface data with different redundancies, and analyze the correctness of function implementation in cases where \"values are inconsistent, meaning the difference in values exceeds the specified threshold\" for two or more redundant interface data.",
            "Check the logical conditions and branches of the function's logic, analyzing the correctness of function handling in cases of \"logical always false, logical always true, incorrect logical judgment conditions, missing logical branches\".",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\".",
            "Check the values of continuous output data with different redundancies and analyze the correctness of function implementation in cases where \"the values of two or multiple redundancy outputs are inconsistent, meaning the difference in values exceeds the specified threshold.\"",
            "The timing relationships, constraint relationships, concurrent relationships, and combination relationships between the control logics of each functional point are correct."
        ],
        "safety_requirements": [
            "The system should check the values of continuous output data with different redundancies to ensure the correctness of the Md 2(k) amplitude limit [-XfGama, +XfGama] function when the values are inconsistent, meaning the difference in values exceeds the specified threshold.",
            "The system should check the values of continuous interface data with different redundancies to ensure the correctness of the Md 2(k) amplitude limiting [-XfGama, +XfGama] function when the values are inconsistent, meaning the difference in values exceeds the specified threshold.",
            "The system should check the logic judgment conditions and logical branches for the Md 2(k) amplitude limit [-XfGama, +XfGama] to ensure the correctness of function handling in cases such as 'logic always false, logic always true, incorrect logic judgment conditions, missing logical branches'.",
            "The system should check the operating status of different redundancies to ensure the correctness of the Md 2(k) amplitude limiting [-XfGama, +XfGama] function when 'two or more redundancies are in different states'.",
            "The system should ensure the timing, constraint, concurrency, and combination relationships between the Md 2(k) limiting [-XfGama, +XfGama] control logic and other functional point control logics are correct to prevent logical conflicts and errors."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 68,
        "requirement": "Md3(k) = ((2 - T)Md3(k - 1) + T.Md 2(k) + T.Md 2(k - 1)) /(T + 2)",
        "original_safety_criterions": [
            "Check and analyze the correctness of function processing for multiple input data values, including combinations of normal value equivalence classes, abnormal value equivalence classes, boundary value combinations, initial value combinations, Safety value combinations, and default value combinations.",
            "Check and analyze the interface data of different redundancies to ensure the correctness of function implementation in cases of single redundancy failure, and all redundancies failing (such as data anomalies, timing faults, communication failures, destination device failures, etc.). Safety is a crucial concern throughout this process.",
            "Check the input data values for the execution conditions of each task, and analyze the correctness of functional processing when the input data values cause delays in meeting the task execution conditions.",
            "Check the execution sequence of tasks and analyze the correctness of function processing when the task execution sequence is inconsistent with the specified sequence.",
            "Check the input data values for the execution conditions of each task, and analyze the correctness of functional processing when the input data values cause the task execution conditions to be met prematurely."
        ],
        "safety_requirements": [
            "The system should check the input data values of Md3(k) = ((2 - T)Md3(k - 1) + T.Md 2(k) + T.Md 2(k - 1)) /(T + 2) to ensure the correctness of functional processing when the conditions for task execution are delayed.",
            "The system should check the input data values of Md3(k) = ((2 - T)Md3(k - 1) + T.Md 2(k) + T.Md 2(k - 1)) /(T + 2) to ensure the correctness of function processing when the task execution conditions are met in advance.",
            "The system should check the interface data of different redundancies to ensure the correctness of the Md3(k) = ((2 - T)Md3(k - 1) + T.Md 2(k) + T.Md 2(k - 1)) /(T + 2) calculation results in cases of single redundancy failure or all redundancies failing (such as abnormal data, timing failures, communication failures, destination device failures, etc.).",
            "The system should check the execution sequence of all tasks to ensure the correctness of the calculation Md3(k) = ((2 - T)Md3(k - 1) + T.Md 2(k) + T.Md 2(k - 1)) /(T + 2) when the task execution sequence does not match the specified sequence.",
            "The system should check multiple input data values for Md3(k) = ((2 - T)Md3(k - 1) + T.Md 2(k) + T.Md 2(k - 1)) /(T + 2), ensuring the correctness of functional processing under combinations of normal value equivalence classes, abnormal value equivalence classes, boundary values, initial values, Safety values, and default values."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 69,
        "requirement": "Heading control: yg = 0°",
        "original_safety_criterions": [
            "Check the output data of different redundancies and analyze the correctness of function implementation in cases of \"single redundancy failure\" and \"multiple redundancies all failing\".",
            "Check the values of the same input data received by different redundancies, and analyze the correctness of function implementation when the values of the same input data received by two or more redundancies are inconsistent. Ensure Safety.",
            "Check the values of discrete output data with different redundancy and analyze the correctness of function implementation in cases such as \"inconsistent values\" among two or more redundant output data. Safety considerations are integral to ensuring reliable function implementation.",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\"."
        ],
        "safety_requirements": [
            "The system should check the working status of different redundancies to ensure the correctness of the heading control (yg = 0°) function when 'two or more redundancies are in different states'.",
            "The system should check the values of discrete output data with different redundancies to ensure the correctness of the heading control function when 'two or more redundancy output data values are inconsistent'.",
            "The system should check the same heading control input data received from different redundancies (such as yg = 0°) to ensure the correctness of function implementation when the values of the same input data received by two or more redundancies are inconsistent.",
            "The system should check the heading control output data of different redundancies to ensure the correctness of the heading control function in cases of 'single redundancy failure, multiple redundancies all failed'."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 70,
        "requirement": "δp = 100%",
        "original_safety_criterions": [
            "Check the output data of different redundancies and analyze the correctness of function implementation under the conditions of \"single redundancy failure, multiple redundancies all fail\".",
            "Check the logical judgment conditions and logical branches of the function, analyze the correctness of function handling in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "Check the data processing of the functions and analyze whether there is a division by zero in the data processing process.",
            "Check and analyze the interface data of different redundancy levels to ensure the correctness of function implementation under conditions of single redundancy failure and all redundancies failing (such as data anomalies, timing faults, communication failures, destination device failures, etc.). Safety considerations are paramount in this process.",
            "Check the execution sequence of tasks and analyze the correctness of function processing when the task execution sequence is inconsistent with the specified sequence."
        ],
        "safety_requirements": [
            "The system should check the output data of different redundancies to ensure the correct implementation of the δp = 100% function in case of 'single redundancy failure' or 'multiple redundancies failure'.",
            "The system should check the interface data of different redundancies to ensure the correct implementation of the δp = 100% function in cases of 'single redundancy failure' or 'all redundancies failing (such as data anomalies, timing failures, communication failures, destination device failures, etc.)'.",
            "The system should check the logical judgment conditions and logical branches for the rudder angle δp to ensure the correctness of functional processing in cases such as 'logically always false, logically always true, incorrect logical judgment conditions, missing logical branches'.",
            "The system should provide real-time monitoring and early warning mechanisms to ensure the stability and reliability of the δp = 100% function under various redundancy fault conditions."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 71,
        "requirement": "During this phase, adjustments can be made through fine-tuning the air valve.",
        "original_safety_criterions": [
            "Check and analyze the correctness of states and functions with different priorities set under transfer relationships, including situations such as high priority switching to low priority and low priority switching to high priority.",
            "Check the transfer conditions between pairwise states in the software state space, analyze the correctness of state transitions under conditions where the transfer conditions are \"not set, always satisfied, cannot be satisfied,\" etc.",
            "Check the entry conditions for states and analyze the correctness of state execution under scenarios where the entry conditions are \"met, not met, met again\" during the state execution process.",
            "The control calculation process for functions varies under different states and working phases. Check the function inputs and analyze the correctness of function processing in scenarios such as \"not considering working phases, not considering working states\".",
            "Does the timing of output control status meet the scene requirements?"
        ],
        "safety_requirements": [
            "The system should check the correctness of the throttle fine adjustment function when there are transfer relationships between two or more states, including situations where high priority switches to low priority and low priority switches to high priority.",
            "The system should ensure that the output control timing for the throttle valve fine adjustment meets the scenario requirements, preventing system abnormalities caused by improper timing.",
            "The system should check the correctness of the throttle fine adjustment under conditions such as satisfaction, dissatisfaction, and resatisfaction of state entry conditions during state execution.",
            "The system should check the transfer conditions between each pair of states in the software state space, analyze the correctness of state transitions under conditions where transfer conditions are not set, always satisfied, or never satisfied, especially during adjustments made through minor modifications of the throttle valve.",
            "The system should check functional inputs at different states and working stages to ensure the correctness of function processing when factors such as working stages and throttle fine-tuning amounts are not considered."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 72,
        "requirement": "Change the clamping value to [-10%, 0%]",
        "original_safety_criterions": [
            "Check the output data of different redundancies and analyze the correctness of function implementation in cases of \"single redundancy failure\" and \"multiple redundancies all failing\".",
            "Is the software handling the long redundancy switch time correctly?",
            "Check the data processing of the functions, analyze whether there is a division by zero in the data processing process."
        ],
        "safety_requirements": [
            "The system should correctly handle the saturation value of [-10%, 0%] when the redundancy switch takes too long, ensuring the correctness and Safety of the function.",
            "The system should check the output data of different redundancies to ensure that the function with a limit value of [-10%, 0%] is correctly implemented in case of 'single redundancy failure' or 'multiple redundancies failing', preventing incorrect data from affecting system operation. Safety is a priority in this process.",
            "The system should check the data processing of amplitude-limited values to ensure there is no division by zero during the process, preventing system abnormalities or crashes."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 73,
        "requirement": "Md1(k) = Kg1 * Dz(k), Md1(k) is limited to the range [- XfCs, XfCs]",
        "original_safety_criterions": [
            "Check the values of continuous interface data with different redundancies, and analyze the correctness of function implementation in cases where \"values are inconsistent, meaning the difference in values exceeds the specified threshold\" for two or more redundant interface data.",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\".",
            "Check the values of discrete interface data with different redundancy, and analyze the correctness of function implementation in cases such as \"inconsistent values\" among two or more redundant interface data.",
            "Check the values of continuous output data with different redundancies, and analyze the correctness of function implementation in cases where \"the values of two or more redundant outputs are inconsistent, meaning the difference in values exceeds the specified threshold.\"",
            "Check the values of discrete output data with different redundancy, and analyze the correctness of function implementation in cases such as \"inconsistent values\" among two or more redundant output data. Safety considerations are integral to ensuring reliable outcomes in such analyses."
        ],
        "safety_requirements": [
            "The system should check the values of continuous interface data with different redundancies to ensure the correctness of the Md1(k) = Kg1 * Dz(k) function implementation when values are inconsistent (the difference between values exceeds the specified threshold), and ensure that Md1(k) is limited within the range [- XfCs, XfCs]. Safety must be considered throughout this process.",
            "The system should check the values of discrete output data with different redundancies to ensure the correctness of the Md1(k) = Kg1 * Dz(k) function when the values are inconsistent, and ensure that Md1(k) is limited within the range [- XfCs, XfCs].",
            "The system should check the values of continuous output data with different redundancies to ensure the correctness of the Md1(k) = Kg1 * Dz(k) function when the values are inconsistent (the difference between the values exceeds the specified threshold), and ensure that Md1(k) is limited within the range [- XfCs, XfCs].",
            "The system should check the values of discrete interface data with different redundancies to ensure the correctness of the Md1(k) = Kg1 * Dz(k) function implementation in case of inconsistent values.",
            "The system should check the operating status of different redundancies to ensure the correctness of the Md1(k) = Kg1 * Dz(k) function implementation when two or more redundancies are in different states."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 74,
        "requirement": "Md2(k) clipping [- XfGama, XfGama]",
        "original_safety_criterions": [
            "Check the execution conditions for functions that have mutually exclusive or cannot simultaneously output multiple functional data values. Analyze the correctness of multi-function outputs when concurrent execution occurs due to the simultaneous satisfaction of execution conditions for multiple functions.",
            "Can the system recover to its normal operating state after the power failure recovery or runaway reset mechanism is activated?",
            "Check and analyze the interface data of different redundancies, examining the correctness of function implementation under scenarios of \"single redundancy failure, all redundancies failing (such as data anomalies, timing faults, communication faults, destination device failures, etc.)\". Safety considerations are integral to ensuring reliable function performance in these failure conditions.",
            "Check the results of the function control calculations and analyze the correctness of the function processing under conditions such as normal values, abnormal values, boundary values, maximum and minimum values.",
            "Check the execution conditions of the function and analyze the correctness of function processing when the execution conditions are \"not met, met again\" during the execution process."
        ],
        "safety_requirements": [
            "The system should check the control calculation results of Md2(k) to ensure the correctness of functional processing under normal values, abnormal values, boundary values, and extreme maximum and minimum values.",
            "The system should recover to its normal operating state after power failure recovery or the reset mechanism due to runaway is initiated, and it must ensure the correctness of the Md2(k) limit [- XfGama, XfGama].",
            "The system should check the mutual exclusivity of the value outputs from multiple functions to ensure correctness of the Md2(k) amplitude limitation [- XfGama, XfGama] output when execution conditions for multiple functions are met concurrently.",
            "The system should check the interface data of different redundancies to ensure the correctness of the Md2(k) amplitude limitation [- XfGama, XfGama] function implementation in cases of 'single redundancy failure, all redundancies failing (such as data anomalies, timing faults, communication failures, destination device failures, etc.)'. Safety is a crucial aspect of this process.",
            "The system should check the execution conditions for the Md2(k) amplitude limiting function to ensure correctness in function processing when conditions are 'not met, met again', etc., during the execution process."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 75,
        "requirement": "Yg(k) = -Md3(k)",
        "original_safety_criterions": [
            "Check the output data of different redundancies and analyze the correctness of function implementation under the conditions of \"single redundancy failure, multiple redundancies all fail\".",
            "Check multiple input data for the function, analyze the correctness of function processing under various input value combinations including \"normal value equivalence class, abnormal value equivalence class, boundary value combination, initial value combination, Safety value combination, default value combination\".",
            "Check the execution sequence of tasks and analyze the correctness of functional processing when the task execution sequence is inconsistent with the specified sequence.",
            "Check the duration of each task, analyze the correctness of functional processing in cases where the task duration exceeds the specified time.",
            "Check the input data values for the execution conditions of each task, analyze the correctness of functional processing when the input data values cause the task execution conditions to be met prematurely."
        ],
        "safety_requirements": [
            "The system should check the execution timing of tasks to ensure that the timing is consistent with the specified timing, thereby ensuring the correctness of the Yg(k) = -Md3(k) function processing.",
            "The system should check multiple input data for the Yg(k) = -Md3(k) function to ensure correct processing under combinations of normal value equivalence classes, abnormal value equivalence classes, boundary values, initial values, Safety values, and default values.",
            "The system should check the duration of the task to ensure that it does not exceed the specified time, to guarantee the correctness of the Yg(k) = -Md3(k) function processing.",
            "The system should check the output data of different redundancies to ensure the correctness of the Yg(k) = -Md3(k) function implementation in cases of 'single redundancy failure' and 'multiple redundancies failure'. Safety must be guaranteed throughout this process.",
            "The system should check the input data values in the task execution conditions to ensure that the input data values do not prematurely satisfy the task execution conditions, thereby ensuring the correctness of the Yg(k) = -Md3(k) function processing."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 76,
        "requirement": "yg(k) = 0°",
        "original_safety_criterions": [
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\".",
            "Check the values of continuous output data with different redundancies, analyze the correctness of function implementation in cases where \"the values of two or multiple redundancy outputs are inconsistent, i.e., the difference in values exceeds the specified threshold.\"",
            "Check the values of discrete output data with different redundancy, and analyze the correctness of function implementation in cases such as \"inconsistent values\" among two or more redundant output data.",
            "Check the data processing of the functions and analyze whether there is a division by zero in the data processing process.",
            "Check the input data values for the execution conditions of each task, and analyze the correctness of functional processing when the input data values cause the task execution conditions to be met prematurely."
        ],
        "safety_requirements": [
            "The system should check the working status of different redundancies to ensure the correctness of achieving the target state parameter yg(k) = 0° when 'two or more redundancies are in different states'.",
            "The system should check the data processing of the functional response to ensure that there is no division by zero when calculating yg(k) = 0°.",
            "The system should check the values of continuous output data with different redundancies to ensure the correctness of achieving the target state parameter yg(k) = 0° when the values are inconsistent, meaning the difference in values exceeds the specified threshold.",
            "The system should check the values of discrete output data with different redundancies to ensure the correctness of achieving the target state parameter yg(k) = 0° function when there is a 'value inconsistency'.",
            "The system should check the input data values for the execution conditions of each task to ensure the correctness of functional processing when the input data values cause the task execution conditions to be met early, especially when the target state parameter yg(k) = 0°."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 77,
        "requirement": "delta p(k) = 100%",
        "original_safety_criterions": [
            "Check the input data values for the execution conditions of each task, and analyze the correctness of functional processing when the input data values never satisfy the execution conditions (i.e., the task can never be executed).",
            "Check the loop condition of the function, analyze the correctness of function handling in cases where the loop condition is always false or always true.",
            "Check and analyze the interface data of different redundancy levels to ensure the correctness of function implementation under scenarios of single redundancy failure and all redundancies failing (such as data anomalies, timing failures, communication failures, destination device failures, etc.). Focus on Safety.",
            "Check the duration of each task, analyze the correctness of functional processing in cases where the task duration is less than the specified time.",
            "Check the data processing of the functions, analyze whether there is a division by zero in the data processing process."
        ],
        "safety_requirements": [
            "The system should check the duration of each task to ensure that when the task duration is less than the specified time, the correctness of the functional processing for δp(k) = 100% is guaranteed.",
            "The system should check the cyclic judgment condition for δp(k) = 100%, ensuring the correctness of function processing in cases such as the cyclic judgment condition being always false or always true.",
            "The system should check the interface data of different redundancies to ensure the correctness of the δp(k) = 100% function under conditions such as single redundancy failure, all redundancies failing (including data anomalies, timing faults, communication failures, destination device failures, etc.).",
            "The system should check the data processing for δp(k) to ensure that there is no division by zero during the process.",
            "The system should check the input data values for the rudder angle δp(k) to ensure that when the input data values never make the execution conditions true (i.e., the task can never be executed), the correctness of the functional processing is maintained."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 78,
        "requirement": "The underlined parts are both limited to the range [- XfSita, XfSita]",
        "original_safety_criterions": [
            "Check the logical conditions and branches of the function, analyze the correctness of function handling in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\" etc.",
            "Check the results of functional control calculations and analyze the correctness of functional processing under conditions such as normal values, abnormal values, boundary values, maximum and minimum values.",
            "The timing relationships, constraint relationships, concurrent relationships, and combinational relationships between the control logics of each functional point are correct.",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\"."
        ],
        "safety_requirements": [
            "The system should check the working status of different redundancies to ensure the correctness of the amplitude limitation [- XfSita, XfSita] function implementation when 'two or more redundancies are in different states'.",
            "The system should ensure the correct timing, constraint, concurrency, and combination relationships between the control logics of each functional point, especially that the limit values [- XfSita, XfSita] are consistent and correctly applied in all relevant functional points.",
            "The system should check the control calculation results of the functional response to ensure correctness of the amplitude limits [- XfSita, XfSita] in cases of 'normal values, abnormal values, boundary values, maximum and minimum values'.",
            "The system should check the logical judgment conditions and logical branches of the function to ensure correctness in handling amplitude limitation [- XfSita, XfSita] under circumstances such as logically always false, logically always true, incorrect logical judgment conditions, and omitted logical branches."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 79,
        "requirement": "hg is the given height, taken from the target waypoint altitude",
        "original_safety_criterions": [
            "Check the values of continuous output data with different redundancies, analyze the correctness of function implementation in cases where \"values of two or more redundancy outputs are inconsistent, i.e., the difference in values exceeds the specified threshold.\"",
            "Check the values of continuous interface data with different redundancies, and analyze the correctness of function implementation in cases where \"the values of two or multiple redundancy interfaces are inconsistent, meaning the difference in values exceeds the specified threshold.\"",
            "Check the values of discrete output data with different redundancy, and analyze the correctness of function implementation in cases such as \"value inconsistency\" among two or more redundant output data.",
            "Check the operating conditions of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\"."
        ],
        "safety_requirements": [
            "The system should check the values of continuous output data with different redundancies to ensure the correctness of the function for target waypoint height hg when the values are inconsistent, meaning the difference in values exceeds the specified threshold. Safety considerations must be integrated into this process.",
            "The system should check the values of discrete output data with different redundancies to ensure the correctness of the function for target waypoint height hg in case of 'inconsistent values'.",
            "The system should check the values of continuous interface data with different redundancies to ensure the correctness of the function for target waypoint height hg when the values are inconsistent, meaning the difference in values exceeds the specified threshold.",
            "The system should check the operating status of different redundancies to ensure the correctness of the target waypoint altitude hg when 'two or more redundancies are in different states'."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 80,
        "requirement": "ug is the given airspeed for a fixed altitude, calculated based on the aircraft's flight performance; refer to the appendix for data and apply amplitude limits to boundary points.",
        "original_safety_criterions": [
            "Check the values of continuous interface data with different redundancies, and analyze the correctness of function implementation in cases where \"values are inconsistent, meaning the difference in values exceeds the specified threshold\" for two or more redundant interface data.",
            "Check the values of continuous output data with different redundancies, and analyze the correctness of function implementation in cases where \"values are inconsistent, meaning the difference in values exceeds the specified threshold\" for two or more redundant outputs.",
            "Check the values of discrete output data with different redundancies, and analyze the correctness of function implementation in cases such as \"inconsistent values\" among two or more redundant output data. Safety considerations are integral to ensuring reliable outcomes in these scenarios.",
            "The timing relationships, constraint relationships, concurrent relationships, and combinational relationships between the control logics of each functional point are correct.",
            "Check the results of functional control calculations and analyze the correctness of functional processing under conditions such as normal values, abnormal values, boundary values, maximum and minimum values."
        ],
        "safety_requirements": [
            "The system should ensure the correct timing relationships, constraint relationships, concurrent relationships, and combinational relationships between the control logics of various functional points, especially the calculation of the given airspeed ug during altitude hold and the boundary point amplitude limiting processing.",
            "The system should check the values of continuous interface data with different redundancies to ensure the correctness of ug (given airspeed during altitude hold) calculation and limiting function when two or more redundancy interface data values are inconsistent (i.e., the difference in values exceeds the specified threshold).",
            "The system should check the values of continuous output data with different redundancies to ensure the correctness of the ug (given airspeed during altitude hold) function when two or more redundant output data values are inconsistent (i.e., the difference in values exceeds the specified threshold).",
            "The system should check the control calculation results for ug (given airspeed at a fixed altitude) to ensure the correctness of functional processing under normal values, abnormal values, boundary values, maximum and minimum values, etc.",
            "The system should check the values of discrete output data with different redundancies to ensure the correctness of ug (given airspeed during altitude hold) calculation and limiting function when two or more redundant output data values are inconsistent."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 81,
        "requirement": "δp amplitude limitation: The default minimum throttle amplitude values for altitudes of 5000, 6000, 7000, and 8000 meters are 12.5%, 27.5%, 42.5%, and 57.5% respectively, with linear interpolation in between; the maximum throttle amplitude is 100%.",
        "original_safety_criterions": [
            "Check the default values of the interface data and analyze the correctness of the output in cases such as \"default values being out-of-range异常 values\".",
            "Check multiple input data for the function, analyze the correctness of function processing under various input value combinations such as \"normal value equivalence class, abnormal value equivalence class, boundary value combination, initial value combination, Safety value combination, default value combination\", etc.",
            "Check the logical conditions and branches of the function, analyze the correctness of function processing in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\" etc.",
            "Check the results of functional control calculations and analyze the correctness of functional processing under conditions such as normal values, abnormal values, boundary values, maximum and minimum values.",
            "Check the input data values for the execution conditions of each task, analyze the correctness of function processing when the input data values cause the task execution conditions to be met prematurely."
        ],
        "safety_requirements": [
            "The system should check the input data values in the execution conditions of each task to ensure the correctness of δp limiting processing when the input data values prematurely satisfy the task execution conditions, especially for the default minimum throttle limit values at altitudes of 5000, 6000, 7000, and 8000 meters being 12.5%, 27.5%, 42.5%, and 57.5% respectively, with linear interpolation in between; the maximum throttle limit is 100%.",
            "The system should check the default values of interface data to ensure the correctness of the output from δp limiting processing when the default value is an abnormal value outside the range of values, especially for the minimum throttle valve limit values at altitudes of 5000, 6000, 7000, and 8000 meters which are: 12.5%, 27.5%, 42.5%, and 57.5% respectively, with linear interpolation in between; the maximum throttle valve limit is 100%.",
            "The system should check the logic conditions and branches for handling the δp limit to ensure correctness in functional processing under circumstances such as logically always false, logically always true, incorrect logic conditions, and missing logic branches.",
            "The system should check the results of the δp limit processing to ensure the correctness of functional processing under normal values, abnormal values, boundary values, maximum and minimum values, etc.",
            "The system should check multiple input data for response to δp amplitude limitation processing to ensure the correctness of functional handling under various combinations of input values, including normal value equivalence classes, abnormal value equivalence classes, boundary values, initial values, Safety values, and default values."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 82,
        "requirement": "The amplitude can be changed by micro-adjusting the throttle valve; above 5000 meters, the change range is [0%, 40%]; below 5000 meters, it cannot be changed.",
        "original_safety_criterions": [
            "Check the logical conditions and branches of the function's logic, analyze the correctness of function handling in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "The timing relationships, constraint relationships, concurrent relationships, and combinational relationships between the control logics of each function point are correct.",
            "Check the duration of each task, analyze the correctness of functional processing in cases where the task duration exceeds the specified time.",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\"."
        ],
        "safety_requirements": [
            "The system should check the duration of each task to ensure that when the task duration exceeds the specified time, the function for adjusting the throttle fine-tuning quantity handles it correctly.",
            "The system should check the working status of different redundancies to ensure that, in cases where 'two or more redundancies are in different states', the correctness of the amplitude adjustment through the micro-adjustment function of the throttle valve is achieved.",
            "The system should ensure the correct timing relationships, constraint relationships, concurrent relationships, and combinational relationships among the control logics of various functional points, especially above 5000 meters, the amplitude can be adjusted by changing the micro-adjustment amount of the throttle valve, with the change amount being [0%, 40%]; below 5000 meters, no changes can be made.",
            "The system should check the judgment conditions and logical branches of the amplitude adjustment logic to ensure the correctness of function processing in cases such as 'logic always false, logic always true, incorrect logic judgment conditions, missing logic branches'."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 83,
        "requirement": "Md2(k) = KhdI . Md1(k), Md2(k) is limited to the range [-XfSita, XfSita]",
        "original_safety_criterions": [
            "Check the values of continuous output data with different redundancies, and analyze the correctness of function implementation in cases where the values of two or multiple redundancy outputs are inconsistent, meaning the difference in values exceeds the specified threshold.",
            "Check the output data of different redundancies and analyze the correctness of function implementation in cases of \"single redundancy failure\" and \"multiple redundancies all failing\".",
            "Check the values of discrete output data with different redundancy, and analyze the correctness of function implementation in cases such as \"value inconsistency\" among two or more redundant output data.",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\"."
        ],
        "safety_requirements": [
            "The system should check the values of discrete output data with different redundancies to ensure the correctness of the Md2(k) = KhdI . Md1(k) function implementation when there is a 'value inconsistency' in two or more redundant output data, and ensure that Md2(k) is limited within the range of [-XfSita, XfSita].",
            "The system should check the values of continuous output data with different redundancies to ensure the correctness of the Md2(k) = KhdI . Md1(k) function when there is inconsistency in the values of two or multiple redundancy outputs, meaning the difference in values exceeds the specified threshold. It must also ensure that Md2(k) is limited within the range of [-XfSita, XfSita].",
            "The system should check the output data of different redundancies (such as Md2(k)) to ensure the correctness of function implementation in cases of 'single redundancy failure, multiple redundancies all failing'.",
            "The system should check the operating status of different redundancies to ensure the correctness of the Md2(k) = KhdI . Md1(k) function when 'two or more redundancies are in different states', and ensure that Md2(k) is limited within the range of [-XfSita, XfSita]."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 84,
        "requirement": "Md3(k) = Khd . [h(k) - hg(k)] + Md2(k), Md3(k) is limited to the range [-XfSita, XfSita]",
        "original_safety_criterions": [
            "Check and analyze the interface data of different redundancies to ensure the correctness of function implementation in cases of single redundancy failure, and all redundancies failing (such as data anomalies, timing faults, communication failures, destination device failures, etc.). Safety is a crucial concern in these analyses.",
            "Check the output data of different redundancies and analyze the correctness of function implementation in cases of \"single redundancy failure, multiple redundancies all failed\".",
            "Check the values of the same input data received by different redundancies, and analyze the correctness of the function implementation when the values of the same input data received by two or more redundancies are inconsistent.",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\"."
        ],
        "safety_requirements": [
            "The system should check the values of the same input data received by different redundancies to ensure that when the values of the same input data received by two or more redundancies are inconsistent, the calculation result of Md3(k) = Khd . [h(k) - hg(k)] + Md2(k) is correct, and ensure that Md3(k) is limited within the range of [-XfSita, XfSita].",
            "The system should check the operating status of different redundancies to ensure the correctness of the Md3(k) = Khd . [h(k) - hg(k)] + Md2(k) function when two or more redundancies are in different states, and ensure that Md3(k) is limited within the range of [-XfSita, XfSita].",
            "The system should check the interface data of different redundancies to ensure that the calculation result of Md3(k) = Khd . [h(k) - hg(k)] + Md2(k) is correct under conditions of single redundancy failure, or all redundancies failing (such as abnormal data, timing faults, communication failures, destination device failures, etc.). It must also ensure that Md3(k) is limited within the range [-XfSita, XfSita].",
            "The system should check the output data of different redundancies to ensure the correctness of the Md3(k) = Khd . [h(k) - hg(k)] + Md2(k) function in cases of single redundancy failure and multiple redundancies failing, and ensure that Md3(k) is limited within the range of [-XfSita, XfSita]."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 85,
        "requirement": "Jg(k) = -Md3(k)",
        "original_safety_criterions": [
            "Check multiple input data of the function, analyze the correctness of function processing under various input value combinations such as \"normal value equivalence class, abnormal value equivalence class, boundary value combination, initial value combination, Safety value combination, default value combination\", etc.",
            "Check the duration of each task, analyze the correctness of functional processing in cases where the task duration is less than the specified time.",
            "Check the execution sequence of tasks and analyze the correctness of functional processing when the task execution sequence is inconsistent with the specified sequence.",
            "Check the duration of each task, analyze the correctness of functional processing in cases where the task duration exceeds the specified time.",
            "Check the input data values for the execution conditions of each task, and analyze the correctness of function processing when the input data values cause the task execution conditions to be met prematurely."
        ],
        "safety_requirements": [
            "The system should check multiple input data for the function Jg(k) = -Md3(k) to ensure the correctness of function processing under combinations of normal value equivalence classes, abnormal value equivalence classes, boundary values, initial values, Safety values, and default values.",
            "The system should check the duration of each task to ensure the correctness of the Jg(k) = -Md3(k) function processing when the task duration exceeds the specified time.",
            "The system should check the duration of each task to ensure the correctness of the Jg(k) = -Md3(k) function processing when the task duration is less than the specified time.",
            "The system should check the input data values for task execution conditions to ensure the correctness of the Jg(k) = -Md3(k) function processing when the input data values prematurely satisfy the task execution conditions.",
            "The system should check the execution sequence of tasks to ensure the correctness of the Jg(k) = -Md3(k) function processing when the task execution sequence does not match the specified sequence."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 86,
        "requirement": "When |DH|>50m, the flight phase transitions from the constant altitude segment to climb 2 or descent segment.",
        "original_safety_criterions": [
            "Check and analyze the correctness of states and functions with different priorities set under transfer relationships, including scenarios such as high-priority switching to low-priority and low-priority switching to high-priority.",
            "Check the transfer conditions between pairwise states in the software state space, analyze the correctness of state transitions under conditions where the transfer conditions are \"not set, always satisfied, cannot be satisfied,\" etc.",
            "Is there fault handling based on wrap-around detection, and is the status reporting strategy during faults reasonable?",
            "There are transition relationships between the same state and other multiple states. Check the conditions for transitioning from the same state to multiple states and from multiple states to the same state, and analyze the correctness of state transitions when multiple state transition conditions are met simultaneously.",
            "There is no transition relationship between two or more states; check the entry conditions for these states and analyze the correctness of state execution under conditions such as \"satisfied simultaneously, satisfied during state execution.\""
        ],
        "safety_requirements": [
            "The system should check the transfer conditions between the constant altitude segments and the climb or descent segments to ensure the correctness of state transitions in cases where the transfer conditions are 'not set, always met, cannot be met', etc.",
            "The system should check the conditions for transitioning from a fixed-height segment to a climb or descent segment when |DH|>50m, ensuring the correctness of state transitions when multiple state transition conditions are met simultaneously.",
            "The system should check different functions with set priorities during two or more flight phases that have transfer relationships, ensuring the correctness of states and functions in cases such as high priority switching to low priority and low priority switching to high priority, especially when |DH|>50m, during the transition of flight phases from constant altitude segments to climb 2 or descent segments.",
            "The system should have a fault handling mechanism based on wrap-around detection and ensure that the status reporting strategy during faults is reasonable, especially when |DH|>50m, during the flight phase transition from a fixed height segment to climb 2 or descent segment."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 87,
        "requirement": "Md2(k) = Kp1I . Md1(k), Md2(k) is limited to the range [Xf, Xfx]",
        "original_safety_criterions": [
            "Check the values of continuous interface data with different redundancies, and analyze the correctness of function implementation in cases where \"the values differ beyond the specified threshold\" among two or more redundant interface data. Safety considerations are paramount in ensuring these functions operate correctly under such conditions.",
            "Check the output data of different redundancies and analyze the correctness of function implementation under the conditions of \"single redundancy failure, multiple redundancies all fail\".",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\".",
            "Check the values of discrete interface data with different redundancies, and analyze the correctness of function implementation in cases such as \"inconsistent values\" among two or more redundant interface data.",
            "Check the values of continuous output data with different redundancies and analyze the correctness of function implementation in cases where \"the values differ, i.e., the difference in values exceeds the specified threshold\" among two or more redundant output data."
        ],
        "safety_requirements": [
            "The system should check the output data of different redundancies to ensure the correctness of the Md2(k) = Kp1I . Md1(k) function implementation in cases of 'single redundancy failure and multiple redundancies failing'. It should also ensure that Md2(k) is limited within the range [Xf, Xfx].",
            "The system should check the working status of different redundancies to ensure the correctness of the Md2(k) = Kp1I . Md1(k) function implementation when 'two or more redundancies are in different states', and ensure the accuracy of the Md2(k) amplitude limit [Xf, Xfx].",
            "The system should check the values of continuous interface data with different redundancies to ensure the correctness of the Md2(k) = Kp1I . Md1(k) function implementation when 'inconsistent values, i.e., the difference in values exceeds the specified threshold' occur, and to ensure the accuracy of the Md2(k) amplitude limitation [Xf, Xfx].",
            "The system should check the values of discrete interface data with different redundancies to ensure the correctness of the Md2(k) = Kp1I . Md1(k) function implementation in cases of 'inconsistent values', and ensure the accuracy of the Md2(k) amplitude limitation [Xf, Xfx].",
            "The system should check the values of continuous output data with different redundancies to ensure the correctness of the Md2(k) = Kp1I . Md1(k) function implementation when there is inconsistency in values, i.e., the difference in values exceeds the specified threshold, and to ensure the accuracy of the Md2(k) amplitude limit [Xf, Xfx]."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 88,
        "requirement": "The situation during flight on the five-sided route, longitudinally: the upper and lower underlined parts are both limited to the range [-XfSita, XfSita]",
        "original_safety_criterions": [
            "Check the transfer conditions between pairwise states in the software state space, analyze the correctness of state transitions under conditions where the transfer conditions are \"not set, always satisfied, cannot be satisfied,\" etc.",
            "Is there fault handling based on wrap-around detection, and is the status reporting strategy during faults reasonable?",
            "Check the entry conditions for states and analyze the correctness of state execution under scenarios where the entry conditions are \"met, not met, met again\" during the state execution process."
        ],
        "safety_requirements": [
            "The system should check the transition conditions between each pair of states in the longitudinal state space while flying the five-side course, ensuring the correctness of state transitions in cases such as 'not set, always satisfied, cannot be satisfied'.",
            "The system should have a fault handling mechanism based on wrap-around detection to ensure that the reporting strategy for flight status, such as longitudinal limits [-XfSita, XfSita], is reasonable during faults, and faults are reported and handled in a timely manner.",
            "The system should check the entry conditions for the five-side approach flight status to ensure the correctness of status execution when the entry conditions are 'met, not met, met again' during the execution process.",
            "The system should ensure that during the final approach and landing phase, the longitudinal limit [-XfSita, XfSita] remains effective to prevent flight risks caused by exceeding the limit range."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 90,
        "requirement": "The system should be able to calculate and provide the speed solution relationship for a flight at 200m altitude on the five-sided approach path.",
        "original_safety_criterions": [
            "Check multiple input data for the function, analyze the correctness of function processing under various input value combinations such as normal value equivalence class, abnormal value equivalence class, boundary value combination, initial value combination, Safety value combination, and default value combination.",
            "The control calculation process for functions varies under different states and working phases. Check the function inputs and analyze the correctness of function processing in scenarios such as \"not considering working phases, not considering working states\".",
            "Check the process of control calculation for functions, analyze the correctness of functional handling in cases such as timeouts in the control calculation process (where results are not returned within the specified time).",
            "Check the execution sequence of tasks and analyze the correctness of functional processing when the task execution sequence is inconsistent with the specified sequence.",
            "Check the results of functional control calculations and analyze the correctness of functional processing under conditions such as normal values, abnormal values, boundary values, maximum and minimum values."
        ],
        "safety_requirements": [
            "The system should check multiple input data for the speed calculation relationship at a flight altitude of 200m on the five-sided approach to ensure the correctness of the speed calculation under combinations of normal value equivalence classes, abnormal value equivalence classes, boundary value combinations, initial value combinations, Safety value combinations, and default value combinations.",
            "The system should check the input data for the speed calculation relationship at a flight altitude of 200m on the five-side approach to ensure the correctness of the speed calculation relationship in cases such as 'regardless of working phase, regardless of working condition'.",
            "The system should check the speed calculation process for flights at an altitude of 200m on the five-side approach, ensuring correct functional handling in cases such as timeouts (where results are not returned within the specified time).",
            "The system should check the timing of the speed calculation task execution for flights at an altitude of 200m on the five-side approach, ensuring that the task execution timing is consistent with the specified timing and that the speed calculation relationship is correct.",
            "The system should check the speed calculation results for flights at a height of 200m on the five-sided approach to ensure the correctness of speed calculations under normal values, abnormal values, boundary values, and extreme maximum and minimum values."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 91,
        "requirement": "The system should be able to achieve lateral control, the same as for climb segment 2.",
        "original_safety_criterions": [
            "Check the execution timing of different redundancies and analyze the correctness of function implementation in situations such as 'two or more redundancy execution timings are not synchronized'.",
            "The control calculation process for functions varies under different states and working stages. Check the function inputs and analyze the correctness of function processing in cases such as 'not considering working stages, not considering working states'.",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as 'two or more redundancies being in different states'."
        ],
        "safety_requirements": [
            "The system should check functional inputs at different states and working phases to ensure the correctness of lateral control processing, especially in cases where working phases or states are not considered.",
            "The system should check the execution timing of different redundancies to ensure the correctness of the lateral control function when the execution timing of two or more redundancies is not synchronized.",
            "The system should check the working status of different redundancies to ensure the correctness of the lateral control function when two or more redundancies are in different states.",
            "The system should ensure the correct calculation process of lateral control under different states and working phases, providing real-time monitoring and early warning mechanisms to prevent control failure due to input errors or inconsistent states."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 92,
        "requirement": "The system should be capable of achieving throttle airspeed closed-loop control, where the specified airspeed ug is calculated from the aircraft's flight performance. Refer to the approach speed data in the appendix.",
        "original_safety_criterions": [
            "Check and analyze the interface data of different redundancy levels to ensure the correctness of function implementation under conditions of single redundancy failure, and all redundancies failing (such as data anomalies, timing faults, communication failures, destination device failures, etc.). Safety is a crucial concern in this process.",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as 'two or more redundancies being in different states'."
        ],
        "safety_requirements": [
            "The system should ensure the correctness of the throttle airspeed closed-loop control function when a single redundancy fault occurs in the interface data with different redundancies, preventing control effects from being influenced by data anomalies, timing faults, communication faults, or destination device failures. Safety is a priority in this context.",
            "The system should ensure the correctness of the throttle airspeed closed-loop control function when all redundancy of interface data at different redundancies fails, providing fault detection and switching mechanisms to ensure the Safety of system operation.",
            "The system should ensure the correctness of the throttle airspeed closed-loop control function when two or more redundancies are in different operating states, preventing control failure caused by inconsistent states.",
            "The system should monitor in real-time the data integrity of the throttle valve airspeed closed-loop control to ensure the accuracy and consistency of the given airspeed ug, preventing incorrect data from affecting control performance."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 93,
        "requirement": "The system should be capable of performing discretization calculations, including the computation of Md2(k), Md3(k), and Jg(k), and it should also perform amplitude limiting on Md2(k) and Md3(k).",
        "original_safety_criterions": [
            "Check multiple input data for the function, analyze the correctness of function processing under various input value combinations such as normal value equivalence class, abnormal value equivalence class, boundary value combination, initial value combination, Safety value combination, default value combination, etc.",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\".",
            "Check the values of discrete output data with different redundancy and analyze the correctness of function implementation in cases such as \"inconsistent values\" among two or more redundant output data. Safety considerations are integral to ensuring the reliability of these processes.",
            "Check the values of discrete interface data with different redundancies, and analyze the correctness of function implementation in cases such as \"value inconsistency\" among two or more redundant interface data."
        ],
        "safety_requirements": [
            "When the system performs discretization calculations, it should check the values of multiple input data to ensure that the amplitude limiting processing of Md2(k) and Md3(k) is correct under combinations of equivalent classes of normal values, abnormal values, boundary values, initial values, Safety values, and default values.",
            "When the system is in different redundancy working states, the correctness of discretization calculations (including the calculation of Md2(k), Md3(k), and Jg(k), and amplitude limitation processing for Md2(k) and Md3(k)) should be checked.",
            "When the system has inconsistent values in discrete interface data at different redundancy levels, the correctness of discretization calculations (including the calculations of Md2(k), Md3(k), and Jg(k), and the amplitude limitation processing of Md2(k) and Md3(k)) should be checked.",
            "When the system's discrete output data values are inconsistent at different redundancies, the correctness of the discretization calculations (including the calculations of Md2(k), Md3(k), and Jg(k), and performing amplitude limiting on Md2(k) and Md3(k)) should be checked.",
            "The system should ensure the consistency and integrity of input and output data for discretization calculations, prevent incorrect data from affecting the calculation results, and trigger a warning mechanism in abnormal situations."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 94,
        "requirement": "The system should be able to achieve longitudinal control during the descent phase, similar to segment 1 of the climb, where the given airspeed ug is calculated from the aircraft's flight performance, and the boundary points are limited.",
        "original_safety_criterions": [
            "Check the control calculation results of the function, analyze the correctness of functional processing under conditions such as 'normal values, abnormal values, boundary values, maximum and minimum values'.",
            "Check and analyze the interface data of different redundancy levels to ensure the correctness of function implementation under conditions of single redundancy failure, and all redundancies failing (such as data anomalies, timing faults, communication failures, destination device failures, etc.). Focus on Safety.",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as 'two or more redundancies being in different states'."
        ],
        "safety_requirements": [
            "During the longitudinal control process of the system in the descent phase, the calculation results should be checked to ensure the correctness of functional processing under conditions such as normal values, abnormal values, boundary values, maximum and minimum values.",
            "The system should check for the condition of 'two or more redundancies being in different states' under various working states of different redundancies to ensure the correct implementation of the descent segment longitudinal control function.",
            "The system should check for 'single redundancy failure, all redundancies failing (such as data anomalies, timing faults, communication failures, destination device failures, etc.)' in interface data of different redundancies to ensure the correct implementation of the descent phase longitudinal control function.",
            "The system should ensure that the specified airspeed ug for longitudinal control during descent is calculated based on the aircraft's flight performance, and limit the boundary points to prevent exceeding the Safety range.",
            "The system should provide real-time monitoring and early warning mechanisms to ensure that during the descent segment longitudinal control process, any abnormal conditions can be detected and handled in a timely manner."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 95,
        "requirement": "The system should be able to achieve lateral directional control during the descent phase, the same as for climb segment 2.",
        "original_safety_criterions": [
            "Check the output data of different redundancies and analyze the correctness of function implementation under the conditions of \"single redundancy failure, multiple redundancies all fail\".",
            "Is the sequence and timing of control by the system coordinated with the hardware, and are the control conditions complete and consistent?",
            "Check the execution timing of different redundancies and analyze the correctness of function implementation in cases such as \"two or more redundancy execution timings are not synchronized\".",
            "Check the operating status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\"."
        ],
        "safety_requirements": [
            "When the system implements lateral control during the descent phase, it should check the output data of different redundancies to ensure the correctness of the control function in cases of 'single redundancy failure' or 'multiple redundancies failure'. Safety is a critical concern in this process.",
            "When the system implements lateral control during the descent phase, it should check the execution timing of different redundancies to ensure the correctness of the control function in cases where 'the execution timing of two or more redundancies is not synchronized'.",
            "The system should ensure that the sequence and timing of lateral control during the descent phase are coordinated with the hardware, and that control conditions are comprehensive and consistent.",
            "When the system implements lateral control during the descent phase, it should check the operating status of different redundancies to ensure the correctness of the control function when 'two or more redundancies are in different states'."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 96,
        "requirement": "The system should be capable of achieving fixed throttle control, adjusting the throttle by the minimum throttle limit value, which can be changed through throttle fine-tuning. The default values should be provided at altitudes of 5000, 6000, 7000, and 8000 meters, with linear interpolation in between. Above 5000 meters, the change rate during descent is -10%.",
        "original_safety_criterions": [
            "Check the default values of the interface data and analyze the correctness of the output in cases such as \"default value being an outlier outside the range of values.\"",
            "Check the logical judgment conditions and logical branches of the function, analyze the correctness of function handling in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "Check the default values of the interface data and analyze the correctness of the output in cases such as \"default value not set\".",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\"."
        ],
        "safety_requirements": [
            "The system should check the operating status of different redundancies to ensure the correctness of the fixed vane control function when 'two or more redundancies are in different states'.",
            "The system should check the logical judgment conditions and logical branches of the fixed-section damper control to ensure the correctness of function processing in cases such as 'logically always false, logically always true, incorrect logical judgment conditions, omitted logical branches'.",
            "The system should check the default values of interface data to ensure the correctness of throttle valve control output when the default value is an outlier outside the range, especially the minimum throttle valve amplitude limit should be provided at altitudes of 5000, 6000, 7000, and 8000 meters, with linear interpolation between them. Above 5000 meters, the change rate during descent should be -10%.",
            "The system should check the default values of interface data to ensure the correctness of the damper control output when 'default values are not set', especially the correct minimum damper limit values at altitudes of 5000, 6000, 7000, and 8000 meters and their linear interpolation processing.",
            "The system should ensure the correctness and consistency of the fixed vane control function under different operating conditions, especially during high variations. The linear interpolation processing of the minimum vane limit value must be accurate."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 97,
        "requirement": "Flight phase determination function requirement: Automatically determine the current flight phase based on the aircraft's position information and motion parameter information.",
        "original_safety_criterions": [
            "The control calculation process for functions varies under different states and working phases. It is necessary to check the function inputs and analyze the correctness of function processing in scenarios such as \"not considering working phases, not considering working states,\" etc.",
            "Check the logical judgment conditions and logical branches of the function, analyze the correctness of function processing in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "Have the system Safety requirements that may be related to software been adequately and accurately implemented in the software requirements or design documents?",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\".",
            "Check the duration of each task, analyze the correctness of functional processing in cases where the task duration exceeds the specified time."
        ],
        "safety_requirements": [
            "The system should check the working status of different redundancies to ensure the correctness of the flight phase determination function when 'two or more redundancies are in different states'.",
            "The system should check the logical judgment conditions and logical branches of the flight phase determination function, ensuring the correctness of function processing in cases such as 'logically always false, logically always true, incorrect logical judgment conditions, omitted logical branches'.",
            "The system shall ensure that the Safety requirements associated with the functions determined for the flight phase are adequately and accurately implemented in the software requirements or design documents.",
            "The system should check the inputs to the flight phase determination function to ensure correct processing in cases such as 'flight phase not considered, flight status not considered'."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 99,
        "requirement": "Ground holding phase: before takeoff and after complete landing, the aircraft is in a stationary state.",
        "original_safety_criterions": [
            "There is no transition relationship between two or more states; check the entry conditions for these states and analyze the correctness of state execution under conditions such as \"satisfied simultaneously, satisfied during state execution.\"",
            "Check the transfer conditions between pairwise states in the software state space, analyze the correctness of state transitions under conditions where the transfer conditions are \"not set, always satisfied, cannot be satisfied,\" etc.",
            "Are the entry and exit conditions for each mode consistent?",
            "Check the entry conditions for states and analyze the correctness of state execution during the process when the entry conditions are \"met, not met, met again,\" etc."
        ],
        "safety_requirements": [
            "During the ground waiting phase, the system should check the transition conditions between each pair of states to ensure the correctness of state transitions in cases such as 'not set, always met, cannot be met'.",
            "The system should check the entry conditions for states that do not have a transition relationship between two or more states during the ground waiting phase, ensuring the correctness of state execution when conditions such as 'simultaneously met, met during state execution' occur.",
            "The system checks the entry conditions during the ground waiting phase to ensure the correctness of state execution when the entry conditions are met, not met, or met again during the process.",
            "The system should ensure that all status entry and transfer condition checks during the ground waiting phase are accurate, and trigger a warning mechanism in case of abnormalities."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 100,
        "requirement": "Takeoff ground segment (takeoff run segment): Control the aircraft's lateral deviation and yaw angle relative to the runway centerline through differential braking and rudder deflection, and control the aircraft longitudinally according to the given pitch angle.",
        "original_safety_criterions": [
            "The control calculation process for functions varies under different states and working phases. Check the function inputs and analyze the correctness of function processing in cases such as \"not considering working phases, not considering working states\".",
            "Check the execution sequence of tasks and analyze the correctness of functional processing when the execution sequence does not match the specified sequence.",
            "Check the logical judgment conditions and logical branches of the function, and analyze the correctness of function handling in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\"."
        ],
        "safety_requirements": [
            "During the takeoff ground segment (takeoff roll segment) task execution, the system should check the sequence of task execution to ensure that it is consistent with the specified sequence. This ensures correct control of the aircraft's lateral deviation and yaw angle relative to the runway centerline, as well as longitudinal control of the aircraft according to the given pitch angle.",
            "The system should check functional inputs at different states and operational phases to ensure that during the takeoff ground segment (takeoff run segment), the control of the aircraft's lateral deviation and yaw angle relative to the runway centerline, as well as the longitudinal control of the aircraft at a given pitch angle, are correct in cases where the operational phase and state have not been considered.",
            "The system should check the working status of each redundancy at different redundancy levels to ensure correctness in achieving functions such as controlling the aircraft's lateral deviation and yaw angle relative to the runway centerline during the takeoff ground segment (takeoff run segment) by using differential braking and deflecting the rudder when 'two or more redundancies are in different states', as well as controlling the aircraft longitudinally according to the given pitch angle. Safety must be ensured throughout these operations.",
            "The system should check the logical judgment conditions and logical branches for the takeoff ground segment (takeoff run segment) to ensure the correctness of functional processing in cases such as 'logical always false, logical always true, incorrect logical judgment conditions, missing logical branches'."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 101,
        "requirement": "Takeoff departure segment: from achieving a certain altitude and airspeed to Safety altitude, primarily controlling the aircraft to climb at a specific pitch angle.",
        "original_safety_criterions": [
            "Check the logical judgment conditions and logical branches of the function, analyze the correctness of function processing in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "Check the execution sequence of tasks and analyze the correctness of functional processing when the execution sequence does not match the specified sequence.",
            "Check the results of the control calculations for the function, analyze the correctness of the function processing under conditions where the control calculation results are \"normal values, abnormal values, boundary values, maximum and minimum values\".",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\"."
        ],
        "safety_requirements": [
            "The system should check the control calculation results during the takeoff departure phase to ensure that under conditions such as normal values, abnormal values, boundary values, and extreme maximum and minimum values, the control function processing for the aircraft to climb at a certain pitch angle is correct.",
            "The system should check logical judgment conditions and logical branches during the takeoff departure phase to ensure that in cases of 'logical always false, logical always true, incorrect logical judgment conditions, omitted logical branches', the control function for the aircraft to climb at a certain pitch angle is handled correctly.",
            "The system should check the operating status of different redundancies during the takeoff departure phase to ensure that in situations such as 'two or more redundancies being in different states', the aircraft's control function for climbing at a certain pitch angle is correctly achieved.",
            "The system should check the sequence of task execution during the take-off phase to ensure that the aircraft's pitch angle control function handles the tasks correctly when the execution sequence does not match the specified sequence."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 102,
        "requirement": "Climb segment 1: Starting from the Safety altitude (80m) to the stage where flaps are retracted, mainly controlling the aircraft to continue climbing, transitioning longitudinally to airspeed control, and sequentially retracting the landing gear and flaps.",
        "original_safety_criterions": [
            "Check the results of the control calculations for the function, analyze the correctness of the function handling under conditions where the control calculation results are 'normal values, abnormal values, boundary values, maximum and minimum values'.",
            "Check the execution sequence of tasks and analyze the correctness of functional processing when the task execution sequence is inconsistent with the specified sequence.",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as 'two or more redundancies being in different states'."
        ],
        "safety_requirements": [
            "During the climb phase, the system should check the operating status of different redundancies to ensure that in cases where 'two or more redundancies are in different states', the aircraft continues to climb from the Safety altitude (80m) to the stage where the flaps are retracted. It should switch to airspeed control longitudinally and correctly implement the functions of retracting the landing gear and flaps sequentially.",
            "During the process of climbing one segment, the system should check the control calculation results to ensure their correctness under conditions of 'normal values, abnormal values, boundary values, maximum and minimum values', preventing incorrect control commands from affecting the aircraft's climb and flap retraction. Safety is a priority in this process.",
            "During the process of climbing one segment, the system should check the sequence of task execution to ensure that it is consistent with the specified sequence, preventing functional processing errors caused by inconsistent sequences. It must ensure that from the safety height (80m) to the stage where the flaps are retracted, the aircraft continues to climb and transitions longitudinally to airspeed control, correctly implementing the functions of retracting the landing gear and flaps in sequence."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 103,
        "requirement": "Climb phase 2: from flap retraction to reaching the required cruise altitude, or from one altitude to a higher altitude, longitudinally controlled at a given airspeed, and laterally controlled to keep the aircraft on the pre-programmed route.",
        "original_safety_criterions": [
            "There is no transition relationship between two or more states; check the entry conditions for these states and analyze the correctness of state execution under conditions such as \"satisfied simultaneously, satisfied during state execution.\"",
            "Check and analyze the correctness of states and functions with different priorities set under transfer relationships between two or more states, including situations such as high priority switching to low priority and low priority switching to high priority.",
            "Check the transition conditions between pairwise states in the software state space, analyze the correctness of state transitions under conditions where the transition conditions are \"not set, always satisfied, cannot be satisfied,\" etc.",
            "Check the entry conditions for states and analyze the correctness of state execution during the process when the entry conditions are \"met, not met, met again,\" etc."
        ],
        "safety_requirements": [
            "The system should check the transition conditions between each pair of states in the 2-segment state space climb to ensure the correctness of state transitions in cases such as 'not set, always satisfied, cannot be satisfied'.",
            "The system should check the entry conditions when entering the 2nd stage climbing state to ensure the correctness of state execution during the process, whether the entry conditions are met, not met, or met again.",
            "The system should check the transfer conditions when transitioning between the climbing two segments state and other states, ensuring the correctness of status and functions in situations such as 'from flap retraction to reaching the required cruise altitude, from one altitude climbing to another higher altitude'.",
            "The system should check the entry conditions for these states when there is no transition relationship between two or more states, ensuring the correctness of climbing two levels of state execution under conditions such as 'simultaneously met, met during state execution'."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 104,
        "requirement": "Constant altitude phase: longitudinally control the aircraft's altitude and airspeed, and laterally perform side deviation control to ensure the aircraft flies at the required altitude and airspeed.",
        "original_safety_criterions": [
            "Check the entry conditions for states and analyze the correctness of state execution during the process when the entry conditions are \"met, not met, met again,\" etc.",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\"."
        ],
        "safety_requirements": [
            "The system should check the operating status of different redundancies during the fixed height phase to ensure that, in cases where 'two or more redundancies are in different states', the functions of controlling the aircraft's altitude and airspeed longitudinally and managing lateral deviation correctly are achieved.",
            "The system should check the entry conditions during the fixed-height phase to ensure the correctness of state execution when the entry conditions are 'met, not met, met again,' etc.",
            "The system should ensure the stability and consistency of longitudinal control and lateral control functions during different redundancy states in the altitude-holding phase, preventing control failure caused by inconsistent redundancy states.",
            "The system should provide real-time monitoring and validation mechanisms for the conditions to enter the altitude-holding phase, ensuring that when entry conditions change, the system can respond promptly and maintain the correctness of control functions."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 105,
        "requirement": "When descending below 5000 meters, the throttle limit is no less than 6%, and the change amount is [-6.5%, 10%].",
        "original_safety_criterions": [
            "Check the logical conditions and branches of the function, analyze the correctness of function processing in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\" etc.",
            "Check the results of the control calculations for the function, analyze the correctness of the function processing under conditions such as \"normal values, abnormal values, boundary values, maximum and minimum values\"."
        ],
        "safety_requirements": [
            "When the system descends below 5000 meters, the throttle limit logic judgment conditions and logic branches should be checked to ensure the correctness of the throttle limit function processing in cases such as 'logic always false, logic always true, incorrect logic judgment conditions, missing logic branches'.",
            "When the system descends below 5000 meters, the throttle limit control calculation results should be checked to ensure correctness under conditions of 'normal values, abnormal values, boundary values, maximum and minimum values'.",
            "The system should ensure that when descending below 5000 meters, the throttle limit is no less than 6%, and the change amount is [-6.5%, 10%]. It should also provide data integrity checks to prevent incorrect data from affecting throttle control.",
            "The system should perform real-time consistency checks on the throttle valve limit control calculation results to ensure they match the current flight status, and trigger a warning mechanism in case of anomalies."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 106,
        "requirement": "When the aircraft crosses an altitude of 5000 meters, the throttle adjustment is linearly reduced to zero at a rate of 5%/s.",
        "original_safety_criterions": [
            "Check the transition conditions between pairwise states in the software state space, analyze the correctness of state transitions under conditions where the transition criteria are \"not set, always satisfied, impossible to satisfy,\" etc.",
            "Is there fault handling based on wrap-around detection, and is the reporting strategy for status during faults reasonable?",
            "Check the entry conditions for states and analyze the correctness of state execution during the process when the entry conditions are \"met, not met, met again,\" etc.",
            "When issuing dangerous control commands or actions, is there a rational judgment based on the equipment status?",
            "Check the data processing of the functions, and analyze whether there is a division by zero in the data processing process."
        ],
        "safety_requirements": [
            "The system should have a fault handling mechanism based on wrap-around detection to ensure that when the aircraft crosses an altitude of 5000 meters, the strategy for reporting the state of linearly reducing the throttle fine-tuning amount to zero is reasonable.",
            "The system should check the status entry conditions when the aircraft crosses an altitude of 5000 meters, ensuring that the throttle fine-tuning decreases linearly to zero at a rate of 5%/s under scenarios such as 'met, not met, met again'.",
            "When the system issues control commands or actions, it should make rationality judgments based on the aircraft's status (such as altitude) to ensure that the command to linearly reduce the throttle fine-tuning amount to zero at a rate of 5%/s is reasonable when the aircraft crosses an altitude of 5000 meters.",
            "The system should check the transfer conditions between each pair of states in the software state space to ensure that state transitions are correct under conditions such as 'not set, always satisfied, cannot be satisfied', especially when the aircraft crosses an altitude of 5000 meters, ensuring that the condition for linearly reducing the throttle fine-tuning amount to zero at a rate of 5%/s is correct.",
            "The system should check the data processing of the micro adjustment amount of the throttle valve to ensure that there is no division by zero during the data processing, preventing calculation errors."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 107,
        "requirement": "The descent segment of longitudinal control is the same as the five-edge altitude fixing, with the given height referring to the glide path handling section in Volume Six.",
        "original_safety_criterions": [
            "Check the logical conditions and branches of the function's logic, analyze the correctness of function processing in cases of \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "Check the process of control calculation for functions, and analyze the correctness of function handling in cases where the control calculation process times out (does not return results within the specified time)."
        ],
        "safety_requirements": [
            "When the system performs the logic check for segment 1 descent longitudinal control and the five-side altitude fix, it should examine the logic judgment conditions and logic branches to ensure the correctness of functional processing in cases such as 'logic always false, logic always true, incorrect logic judgment conditions, missing logic branches'.",
            "The system should ensure that the functional logic judgment conditions and logical branches of segment 1 longitudinal control during approach are complete and identical to those for fixing the height on the final approach, preventing safety issues caused by logical errors.",
            "The system should perform real-time monitoring of the functional logic for the longitudinal control of segment 1 of the approach and the height fixing on the final approach to ensure the accuracy and consistency of logical judgment, and trigger a warning mechanism in case of anomalies."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 108,
        "requirement": "The lateral control during descent segment 1 is the same as during climb segment 2.",
        "original_safety_criterions": [
            "Check the execution sequence of tasks and analyze the correctness of function processing when the task execution sequence is inconsistent with the specified sequence.",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as 'two or more redundancies being in different states'.",
            "Check the loop condition of the function, analyze the correctness of function processing under conditions such as 'loop condition is always false, always true'."
        ],
        "safety_requirements": [
            "The system should check the operating status of different redundancies to ensure the correctness of the lateral control function during a segment descent when 'two or more redundancies are in different states'.",
            "The system should check the execution timing of tasks to ensure the correctness of lateral and climb control function processing when the task execution timing does not match the specified timing.",
            "The system should check the loop judgment conditions for lateral directional control and climbing functions, ensuring the correctness of function processing in cases such as 'loop judgment conditions always false, always true'.",
            "The system should ensure the consistency and correctness of the lateral control during descent segment 1 and the control function of climb segment 2 to prevent control errors caused by inconsistent states."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 109,
        "requirement": "The closed-loop control formula for the angle of attack speed during the approach phase is δp = Kp (vg - vk), with δp limited to [12.5%, 100%]. The specified approach speed is detailed in the appendix.",
        "original_safety_criterions": [
            "Check the logical judgment conditions and logical branches of the function, analyze the correctness of function handling in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "Check the loop condition of the function, and analyze the correctness of function handling under conditions such as the loop condition being always false or always true.",
            "The control calculation process for functions varies under different states and working phases. It is necessary to check the function inputs and analyze the correctness of function processing in cases such as \"not considering working phases, not considering working states\".",
            "Check the control calculation results of the function, analyze the correctness of function processing under conditions such as normal values, abnormal values, boundary values, maximum and minimum values.",
            "The timing relationships, constraint relationships, concurrent relationships, and combinational relationships between the control logics of each functional point are correct."
        ],
        "safety_requirements": [
            "The system should check the logical judgment conditions and logical branches of the closed-loop control formula for the wind door airspeed in section 1 of the slide. It must ensure the correctness of functional processing in cases such as 'logically always false, logically always true, incorrect logical judgment conditions, missing logical branches'.",
            "The system should check the control solution process of the closed-loop control formula for the segment vane airspeed under different statuses and working phases, ensuring the correctness of functional processing in cases where 'working phases are not considered, working statuses are not considered', etc.",
            "The system should check the control calculation results of the closed-loop control formula for segment 1 wind door airspeed to ensure correctness in functional processing under conditions such as normal values, abnormal values, boundary values, and maximum/minimum values.",
            "The system should ensure the timing, constraint, concurrency, and combination relationships of the downwind flap airspeed closed-loop control formula δp = Kp (vg - vk) are correct, ensuring that δp is limited within the range of [12.5%, 100%]. Safety must be a priority throughout this process.",
            "The system should check the loop judgment conditions of the closed-loop control formula for the airspeed of the wind door in section 1 of the approach to ensure the correctness of functional processing in cases where the loop judgment condition is always false or always true."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 110,
        "requirement": "The downslide 2 segment longitudinal control is the same as downslide 1 segment.",
        "original_safety_criterions": [
            "Check the execution sequence of tasks and analyze the correctness of functional processing when the task execution sequence is inconsistent with the specified sequence.",
            "Check the duration of each task, analyze the correctness of function processing in cases where the task duration exceeds the specified time.",
            "Check the duration of each task, analyze the correctness of functional processing in cases where the task duration is less than the specified time."
        ],
        "safety_requirements": [
            "The system should check the duration of the two-segment longitudinal control task for the glide path to ensure the correctness of the control function processing when the task duration is less than the specified time.",
            "The system should check the duration of the two-segment longitudinal control task for descent to ensure the correctness of the control function processing when the task duration exceeds the specified time.",
            "The system should check the timing of executing the two-segment longitudinal control task to ensure that the execution timing is consistent with the specified timing, thereby ensuring the correctness of function processing.",
            "The system should provide real-time monitoring mechanisms for task duration and execution timing to ensure that warning mechanisms are triggered in case of anomalies."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 111,
        "requirement": "The structure of the lateral and directional control during the glide slope is shown in Figure 3-6, the heading control formula is yg = - (Kyz .Δy + KyzI∫ Kys .Δydt + Kyzd . wy), where the underlined part has a limit amplitude [- XfFxd , XfFxd].",
        "original_safety_criterions": [
            "Check the logical conditions and branches of the function, analyze the correctness of function processing in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\" etc.",
            "Check the results of the control calculations for functions, and analyze the correctness of function processing under conditions such as normal values, abnormal values, boundary values, maximum and minimum values.",
            "The timing relationships, constraint relationships, concurrent relationships, and combinational relationships between the control logics of each functional point are correct.",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\"."
        ],
        "safety_requirements": [
            "The system should check the solution results of the heading control formula to ensure that under conditions such as 'normal values, abnormal values, boundary values, maximum and minimum values', the output of the heading control formula yg = - (Kyz .Δy + KyzI∫ Kys .Δydt + Kyzd . wy) is within the limit range [- XfFxd , XfFxd].",
            "The system should check the logical judgment conditions and logical branches of the heading control formula to ensure correctness of the limit amplitude [- XfFxd , XfFxd] for the heading control formula yg = - (Kyz .Δy + KyzI∫ Kys .Δydt + Kyzd . wy) in cases of 'logical contradiction, logical tautology, incorrect logical judgment conditions, missing logical branches'.",
            "The system should ensure the timing relationship, constraint relationship, concurrent relationship, and combination relationship of the control logic among various functional points in the formula for heading control, yg = - (Kyz .Δy + KyzI∫ Kys .Δydt + Kyzd . wy), within the structure of the downwind 2 segment lateral roll control are correct.",
            "The system should check the working status of different redundancies to ensure the correctness of the heading control formula yg = - (Kyz .Δy + KyzI∫ Kys .Δydt + Kyzd . wy) in situations such as 'two or more redundancies being in different states', with the underline indicating limits [- XfFxd , XfFxd]."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 112,
        "requirement": "The closed-loop control of the airspeed of the wind door in segment 2 during the approach is the same as in segment 1.",
        "original_safety_criterions": [
            "Is the detection logic for fault items reasonable, and will the detection method affect the normal operation of the equipment?"
        ],
        "safety_requirements": [
            "The system should ensure the rationality of the fault detection logic to avoid affecting the normal operation of the closed-loop control of the approach 2 segment flap airspeed.",
            "The system should provide a fault detection mechanism to ensure timely response and action when faults are detected, preventing the impact of faults from affecting the stability of the two-stage wind door airspeed closed-loop control.",
            "The system should record detailed information about fault detection, including the type of fault, occurrence time, and handling results, for subsequent analysis and maintenance.",
            "The system should have a fault recovery mechanism to ensure it can quickly return to normal operation after troubleshooting, without affecting the continuity of the downwind 2 segment flap airspeed closed-loop control."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 113,
        "requirement": "The discretization formula is Md2(k) = KxzI . Md1(k), with Md2(k) limited to the range [- XfGama / 0.6, + XfGama].",
        "original_safety_criterions": [
            "Check the output data of different redundancies and analyze the correctness of function implementation in cases of \"single redundancy failure, multiple redundancies all failing\".",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\".",
            "Check the values of discrete output data with different redundancies and analyze the correctness of function implementation in cases such as \"inconsistent values\" among two or more redundancy outputs. Safety considerations are integral to ensuring reliable outcomes in these scenarios.",
            "Check the values of discrete interface data with different redundancies, and analyze the correctness of function implementation in cases such as \"value inconsistency\" among two or more redundant interface data."
        ],
        "safety_requirements": [
            "When the system is in different working states due to varying redundancy, the correctness of the discretization formula Md2(k) = KxzI . Md1(k) should be checked to ensure that Md2(k) is limited within the range of [- XfGama / 0.6, + XfGama].",
            "When the system has inconsistent values for discrete interface data at different redundancy levels, the discretization formula Md2(k) = KxzI . Md1(k) should be checked for correctness to ensure that Md2(k) is limited within the range of [- XfGama / 0.6, + XfGama].",
            "When the system's discrete output data values are inconsistent at different redundancies, the discretization formula Md2(k) = KxzI . Md1(k) should be checked for correctness to ensure that Md2(k) is limited within the range [- XfGama / 0.6, + XfGama].",
            "The system should check the output limit of the discretization formula Md2(k) = KxzI . Md1(k) when there is a single redundancy failure or multiple redundancies fail, ensuring that Md2(k) is limited within the range [- XfGama / 0.6, + XfGama]."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 114,
        "requirement": "Calculate Md3(k) = Kxz * Dz(k)",
        "original_safety_criterions": [
            "Check the output data of different redundancies and analyze the correctness of function implementation under the conditions of \"single redundancy failure, multiple redundancies all fail\".",
            "Check the logical conditions and branches of the function, analyze the correctness of function handling in cases of \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\" etc.",
            "Check the input data values for the execution conditions of each task, and analyze the correctness of functional processing when the input data values cause delays in meeting the execution conditions.",
            "Check the duration of each task, analyze the correctness of function processing in cases where the task duration exceeds the specified time.",
            "Check the input data values for the execution conditions of each task, and analyze the correctness of functional processing when the input data values cause the task execution conditions to be met prematurely."
        ],
        "safety_requirements": [
            "The system should check the duration for the task of calculating Md3(k) = Kxz * Dz(k) to ensure the correctness of the calculation results if the task duration exceeds the specified time.",
            "The system should check the input data values in the task execution conditions for calculating Md3(k) = Kxz * Dz(k), ensuring the correctness of functional processing when the input data values cause the task execution conditions to be met prematurely.",
            "The system should check the logical judgment conditions and logical branches for calculating Md3(k) = Kxz * Dz(k), ensuring the correctness of function processing in cases such as 'logically always false, logically always true, incorrect logical judgment conditions, missing logical branches'.",
            "The system should check the output data of different redundancies to ensure the correctness of the Md3(k) = Kxz * Dz(k) calculation results in cases of 'single redundancy failure, multiple redundancies all failed'.",
            "The system should check the input data values for calculating Md3(k) = Kxz * Dz(k) to ensure the correctness of functional processing when the input data values cause a delay in meeting the task execution conditions."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 115,
        "requirement": "Calculate Md4(k) = Md2(k) + Md3(k) + Kxzd * Dz(k)",
        "original_safety_criterions": [
            "Check the output data of different redundancies and analyze the correctness of function implementation in cases of \"single redundancy failure\" and \"multiple redundancies failure\".",
            "Check multiple input data for the function, analyze the correctness of function processing under various input value combinations such as normal value equivalence class, abnormal value equivalence class, boundary value combination, initial value combination, Safety value combination, default value combination, etc.",
            "Check the logical judgment conditions and logical branches of the function, analyze the correctness of function handling in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "Check the input data values for the execution conditions of each task, analyze the correctness of functional processing when the input data values cause delays in meeting the task execution conditions.",
            "Check the input data values for the execution conditions of each task, and analyze the correctness of functional processing when input data values cause the task execution conditions to be met prematurely."
        ],
        "safety_requirements": [
            "The system should check the input data values when calculating Md4(k) = Md2(k) + Md3(k) + Kxzd * Dz(k) to ensure the correctness of function processing if there is a delay in meeting the task execution conditions.",
            "The system should check the logical judgment conditions and logical branches when calculating Md4(k) = Md2(k) + Md3(k) + Kxzd * Dz(k) to ensure the correctness of function handling in cases such as 'logical always false, logical always true, incorrect logical judgment conditions, missing logical branches'.",
            "When the system calculates Md4(k) = Md2(k) + Md3(k) + Kxzd * Dz(k), it should check multiple input data values to ensure correctness of function processing under combinations of normal value equivalence classes, abnormal value equivalence classes, boundary values, initial values, Safety values, and default values.",
            "The system should check the output data of different redundancies when calculating Md4(k) = Md2(k) + Md3(k) + Kxzd * Dz(k), ensuring the correctness of functional processing in cases of 'single redundancy failure and multiple redundancies failure'.",
            "The system should check the input data values in the task execution conditions when calculating Md4(k) = Md2(k) + Md3(k) + Kxzd * Dz(k), ensuring the correctness of functional processing if the task execution conditions are met in advance."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 116,
        "requirement": "Limit the amplitude of Md5(k) within the range of [-XfGama, XfGama]",
        "original_safety_criterions": [
            "Check the logical judgment conditions and logical branches of the function, analyze the correctness of function handling in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "Check the loop condition of the function, analyze the correctness of function processing under conditions such as \"loop condition is always false, always true\".",
            "Check the results of the control calculations for functions, analyze the correctness of function processing under conditions where the control calculation results are \"normal values, abnormal values, boundary values, maximum and minimum values\".",
            "Check the process of control calculation for functions, and analyze the correctness of functional handling in cases such as timeouts in the control calculation process (where results are not returned within the specified time)."
        ],
        "safety_requirements": [
            "The system should check the loop judgment condition for the limiting process of Md5(k) to ensure the correctness of the limiting process under conditions such as 'loop judgment condition is always false, always true'.",
            "The system should check the clamping process of Md5(k) and ensure the correctness of the clamping function handling in case of a timeout (when results are not returned within the specified time).",
            "The system should check the logic conditions and logical branches for the amplitude limiting processing of Md5(k) to ensure correctness in cases such as 'logically always false, logically always true, incorrect logic judgment conditions, missing logical branches'.",
            "The system should check the limiting processing result of Md5(k) to ensure the correctness of functional processing under conditions where the limiting processing result is 'normal value, abnormal value, boundary value, maximum or minimum value'."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 117,
        "requirement": "Calculate yg(k) = -Md5(k)",
        "original_safety_criterions": [
            "Check the output data of different redundancies and analyze the correctness of function implementation under the conditions of \"single redundancy failure, multiple redundancies all fail\".",
            "Check and analyze the correctness of function processing for multiple input data values categorized as combinations of normal equivalent classes, abnormal equivalent classes, boundary values, initial values, Safety values, and default values.",
            "Check the logical conditions and branches of the function, and analyze the correctness of function handling in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "Check the input data values for the execution conditions of each task, analyze the correctness of functional processing when the input data values cause delays in meeting the task execution conditions.",
            "Check the input data values for the execution conditions of each task, and analyze the correctness of functional processing when the input data values cause the task execution conditions to be met prematurely."
        ],
        "safety_requirements": [
            "The system should check the logical conditions and branches for calculating yg(k) = -Md5(k), ensuring the correctness of function handling in cases such as 'logically always false, logically always true, incorrect logical judgment conditions, missing logical branches'.",
            "The system should check multiple input data for calculating yg(k) = -Md5(k), ensuring the correctness of the calculation results under combinations of normal value equivalence classes, abnormal value equivalence classes, boundary values, initial values, Safety values, and default values.",
            "The system should check the input data values for calculating yg(k) = -Md5(k) to ensure the correctness of function processing when the input data values cause a delay in meeting the task execution conditions.",
            "The system should check the output data of different redundancies to ensure the correctness of calculating yg(k) = -Md5(k) in cases of 'single redundancy failure, multiple redundancies all fail'. Safety",
            "The system should check the input data values in the task execution conditions for calculating yg(k) = -Md5(k), ensuring the correctness of function processing when the input data values cause the task execution conditions to be met prematurely."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 118,
        "requirement": "Calculate Md2(k) = KyzI * Md1(k)",
        "original_safety_criterions": [
            "Check the output data of different redundancies and analyze the correctness of function implementation in cases of \"single redundancy failure\" and \"multiple redundancies all fail\".",
            "Check and analyze the correctness of function processing for multiple input data values in cases such as \"normal value equivalence class combination, abnormal value equivalence class combination, boundary value combination, initial value combination, Safety value combination, default value combination\", etc.",
            "Check the logical conditions and branches of the function, analyze the correctness of function handling in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "Check the input data values for the execution conditions of each task, and analyze the correctness of functional processing when the input data values cause delays in meeting the task execution conditions.",
            "Check the input data values for the execution conditions of each task, and analyze the correctness of functional processing when the input data values cause the task execution conditions to be met prematurely."
        ],
        "safety_requirements": [
            "The system should check the input data values when calculating Md2(k) = KyzI * Md1(k) to ensure the correctness of function processing if the conditions for task execution are delayed.",
            "The system should check multiple input data values when calculating Md2(k) = KyzI * Md1(k) to ensure the correctness of function processing under combinations of normal values, abnormal values, boundary values, initial values, Safety values, and default values.",
            "The system should check the logical judgment conditions and logical branches when calculating Md2(k) = KyzI * Md1(k), ensuring the correctness of functional processing in cases of logically false, logically true, incorrect logical judgment conditions, and omitted logical branches.",
            "The system should check the output data of different redundancies when calculating Md2(k) = KyzI * Md1(k) to ensure the correctness of the calculation results in cases of single redundancy failure and multiple redundancies failures.",
            "The system should check the input data values when calculating Md2(k) = KyzI * Md1(k) to ensure the correctness of function processing if the conditions for task execution are met in advance."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 119,
        "requirement": "Limit the amplitude of Md2(k) within the range of [-XfFxd, XfFxd]",
        "original_safety_criterions": [
            "Check the logical conditions and branches of the function's logic, analyze the correctness of function handling in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "Check the loop condition of the function, analyze the correctness of function processing under conditions such as \"loop condition is always false, always true\".",
            "Check the process of control calculation for functions, analyze the correctness of function handling in cases where the control calculation process times out (does not return results within the specified time).",
            "The timing relationships, constraint relationships, concurrent relationships, and组合 relationships between the control logics of each function point are correct.",
            "Check the results of functional control calculations and analyze the correctness of functional processing under conditions such as normal values, abnormal values, boundary values, maximum and minimum values."
        ],
        "safety_requirements": [
            "The system should check the logic judgment conditions and logical branches for the amplitude limiting processing of Md2(k) to ensure correctness in amplitude limiting under circumstances such as 'logically always false, logically always true, incorrect logic judgment conditions, missing logical branches'.",
            "The system should check the limiting processing loop judgment conditions for Md2(k) to ensure the correctness of the limiting processing under conditions such as 'loop judgment condition always false, always true'.",
            "The system should ensure the timing, constraint, concurrency, and combinational relationships between the limiting processing control logic of Md2(k) and the control logic of other functional points are correct to prevent logical conflicts.",
            "The system should check the results of the amplitude limiting processing for Md2(k) to ensure the correctness of functional processing in cases of 'normal values, abnormal values, boundary values, maximum and minimum values'.",
            "The system should check the control calculation process of Md2(k) to ensure that in cases such as timeout (not returning results within the specified time), the correctness of functional processing is maintained."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 120,
        "requirement": "Calculate Md3(k) = Kyz * Δy(k) + Md2(k) + Kyzd * wy(k)",
        "original_safety_criterions": [
            "Check the output data of different redundancies and analyze the correctness of function implementation in cases of \"single redundancy failure\" and \"multiple redundancies all failing\".",
            "Check multiple input data for the function, analyze the correctness of function processing under conditions where multiple input data values are combinations of normal equivalent classes, abnormal equivalent classes, boundary values, initial values, Safety value combinations, and default value combinations.",
            "Check the logical judgment conditions and logical branches of the function, analyze the correctness of function processing in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "Check the results of the control calculations for functions, and analyze the correctness of function processing under conditions such as normal values, abnormal values, boundary values, maximum and minimum values.",
            "Check the input data values for the execution conditions of each task, and analyze the correctness of functional processing when the input data values cause the task execution conditions to be met prematurely."
        ],
        "safety_requirements": [
            "The system should check multiple input data for the calculation of Md3(k) = Kyz * Δy(k) + Md2(k) + Kyzd * wy(k) to ensure the correctness of the calculation results under combinations of normal value equivalence classes, abnormal value equivalence classes, boundary value combinations, initial value combinations, Safety value combinations, and default value combinations.",
            "The system should check the control calculation results to ensure correctness of calculating Md3(k) = Kyz * Δy(k) + Md2(k) + Kyzd * wy(k) under conditions such as normal values, abnormal values, boundary values, and extreme maximum and minimum values.",
            "The system should check the input data values for the task execution condition of calculating Md3(k) = Kyz * Δy(k) + Md2(k) + Kyzd * wy(k) to ensure the correctness of functional processing when the input data values prematurely satisfy the task execution conditions.",
            "The system should check the output data of different redundancies to ensure the correctness of calculating Md3(k) = Kyz * Δy(k) + Md2(k) + Kyzd * wy(k) in cases of 'single redundancy failure, multiple redundancies all failing'.",
            "The system should check the logical judgment conditions and logical branches for calculating Md3(k) = Kyz * Δy(k) + Md2(k) + Kyzd * wy(k), ensuring the correctness of function processing in cases such as 'logically always false, logically always true, incorrect logical judgment conditions, missing logical branches'."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 121,
        "requirement": "Limit the amplitude of Md3(k), with the limiting range being [-XfFxd, XfFxd]",
        "original_safety_criterions": [
            "Check the logical judgment conditions and logical branches of the function, analyze the correctness of function handling in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "Check the loop condition of the function, analyze the correctness of function processing under conditions such as \"loop condition is always false, always true\".",
            "The timing relationships, constraint relationships, concurrent relationships, and combinational relationships between the control logics of each functional point are correct.",
            "Check the results of the control calculations for the function, and analyze the correctness of the function processing under conditions such as normal values, abnormal values, boundary values, maximum and minimum values.",
            "Check the execution conditions of the function, analyze the correctness of function handling in cases where the execution conditions are \"not met, met again\" during the function execution process."
        ],
        "safety_requirements": [
            "The system should check the loop judgment conditions for the amplitude limiting processing of Md3(k) to ensure the correctness of the amplitude limiting processing in cases such as 'loop judgment condition is always false, always true'.",
            "The system should check the logic judgment conditions and logical branches for the amplitude limiting processing of Md3(k), ensuring the correctness of amplitude limiting processing in cases of 'logically always false, logically always true, incorrect logic judgment conditions, missing logical branches'.",
            "The system should check the amplitude limiting processing conditions for Md3(k) to ensure the correctness of functional processing in cases such as 'not meeting, meeting again' the limiting conditions.",
            "The system should check the results of the amplitude limiting processing for Md3(k) to ensure the correctness of functional processing in cases where the results are 'normal values, abnormal values, boundary values, maximum and minimum values'.",
            "When the system performs amplitude limiting on Md3(k), it should check the timing relationships, constraint relationships, concurrent relationships, and combinational relationships between its control logic and each functional point to ensure they are correct."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 122,
        "requirement": "Calculate yg(k) = -Md3(k)",
        "original_safety_criterions": [
            "Check the output data of different redundancies and analyze the correctness of function implementation under the conditions of single redundancy failure and multiple redundancies failing simultaneously.",
            "Check multiple input data for the function, analyze the correctness of function processing under various input value combinations such as normal equivalent class, abnormal equivalent class, boundary values, initial values, Safety values, and default values.",
            "Check the logical judgment conditions and logical branches of the function, analyze the correctness of function processing in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "Check the input data values for the execution conditions of each task, and analyze the correctness of functional processing when the input data values cause delays in meeting the task execution conditions.",
            "Check the input data values for the execution conditions of each task, and analyze the correctness of functional processing when the input data values cause the task execution conditions to be met prematurely."
        ],
        "safety_requirements": [
            "The system should check the input data values when calculating yg(k) = -Md3(k) to ensure the correctness of function processing if the task execution conditions are met in advance.",
            "The system should check multiple input data values when calculating yg(k) = -Md3(k), ensuring the correctness of the calculation results under combinations of normal values, abnormal values, boundary values, initial values, Safety values, and default values.",
            "The system should check the logical judgment conditions and logical branches when calculating yg(k) = -Md3(k) to ensure the correctness of function handling in cases such as logically always false, logically always true, incorrect logical judgment conditions, and missing logical branches.",
            "The system should check the output data of different redundancies when calculating yg(k) = -Md3(k), ensuring the correctness of the calculation results in cases of single redundancy failure or multiple redundancies failing.",
            "The system should check the input data values when calculating yg(k) = -Md3(k) to ensure the correctness of function processing if the task execution conditions are delayed."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 123,
        "requirement": "In the longitudinal control during the flare segment, h& is calculated as the rate of change of radio altitude after compensation for inertial navigation vertical acceleration.",
        "original_safety_criterions": [
            "Check the logical conditions and branches of the function's logic, analyzing the correctness of function handling in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "The control calculation process for functions varies under different states and working stages. Check the function inputs and analyze the correctness of function processing in scenarios such as \"not considering working stages, not considering working states\".",
            "Check the values of continuous output data with different redundancies, and analyze the correctness of function implementation in cases where the values of two or multiple redundancy outputs are inconsistent, meaning the difference in values exceeds the specified threshold.",
            "Check the process of control calculation for functions, and analyze the correctness of functional handling in cases where the control calculation process times out (does not return results within the specified time).",
            "Check the results of the control calculations for functions, and analyze the correctness of function processing under conditions where the control calculation results are \"normal values, abnormal values, boundary values, maximum and minimum values\"."
        ],
        "safety_requirements": [
            "The system should check the logical judgment conditions and logical branches for calculating h& in the longitudinal control during the flattening segment, ensuring the correctness of functional processing in cases such as 'logically always false, logically always true, incorrect logical judgment conditions, omitted logical branches'.",
            "The system should check the computational results during the longitudinal control in the flattening segment to ensure the correctness of the computational results under conditions such as normal values, abnormal values, boundary values, maximum and minimum values.",
            "The system should check the calculation process during the longitudinal control in the flattening phase to ensure the correctness of functional processing when situations such as timeout (not returning results within the specified time) occur during the calculation process.",
            "The system should check the functional inputs under different states and working phases to ensure the correctness of the h& calculation in longitudinal control when in 'unconsidered working phases, unconsidered working states', etc. Safety is a crucial aspect that must be ensured throughout these processes.",
            "The system checks the continuous output data values at different redundancies to ensure that in cases where the data values from two or multiple redundancies are inconsistent, i.e., the difference in values exceeds the specified threshold, the calculation of h& as the rate of change of radio altitude after inertial navigation vertical acceleration compensation is correct."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 124,
        "requirement": "In the longitudinal control during the flare phase, calculate vyg as the given rate of climb, vyg = vyt + (h - ht)(vyf - vyt)",
        "original_safety_criterions": [
            "Check the values of the same input data received by different redundancies, and analyze the correctness of the function implementation when the values of the same input data received by two or more redundancies are inconsistent.",
            "Check the logical conditions and branches of the function's logic, analyzing the correctness of function handling in cases of \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "The control calculation process for functions varies under different states and working stages. Check the function inputs and analyze the correctness of function processing in scenarios such as \"not considering working stages, not considering working states\".",
            "Check the results of functional control calculations and analyze the correctness of functional processing under conditions such as normal values, abnormal values, boundary values, maximum and minimum values.",
            "The timing relationships, constraint relationships, concurrent relationships, and combinational relationships between the control logics of each functional point are correct."
        ],
        "safety_requirements": [
            "In the longitudinal control during the flattening segment, the system should check the values of the same input data received by different redundancies to ensure the correctness of calculating vyg for a given rate of climb or descent when the values of the same input data received by two or more redundancies are inconsistent, where vyg = vyt + (h - ht)(vyf - vyt).",
            "The system should check the logical judgment conditions and logical branches in the longitudinal control of the flattening segment, ensuring the correctness of functional processing in cases such as 'logically always false, logically always true, incorrect logical judgment conditions, missing logical branches'.",
            "The system should check the functional inputs of different states and working phases in the longitudinal control of the flattening segment to ensure the correctness of vyg calculation in cases such as 'not considering the working phase, not considering the working state'.",
            "The system should ensure the timing, constraint, concurrent, and combination relationships between the control logic for calculating vyg as the given升降 speed in the longitudinal control of the flare segment and the control logic of other functional points are correct. \n\nNote: The term \"升降\" seems to be a placeholder or error in the original text, as it translates to \"elevation\" or \"lift\" which doesn't fit perfectly in context. If it's meant to be vertical speed or similar, consider revising to \"vertical speed\".",
            "The system should check the calculation results of the longitudinal control during the flattening phase to ensure the correctness of functional processing in cases of 'normal values, abnormal values, boundary values, maximum and minimum values'."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 125,
        "requirement": "In the longitudinal control during the flare phase, calculate vygSemi as the automatic correction for a given rate of climb or descent.",
        "original_safety_criterions": [
            "Check the logical judgment conditions and logical branches of the function, analyze the correctness of function handling in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "The control calculation process for functions varies under different states and working stages. It involves checking the function inputs and analyzing the correctness of function processing in scenarios such as \"not considering working stages, not considering working states\".",
            "Check the process of control calculation for functions, and analyze the correctness of functional handling in cases such as timeouts in the control calculation process (not returning results within the specified time).",
            "The timing relationships, constraint relationships, concurrent relationships, and组合 relationships between the control logics of each function point are correct.",
            "Check the results of the control calculations for the function, and analyze the correctness of the function processing under conditions such as normal values, abnormal values, boundary values, maximum and minimum values."
        ],
        "safety_requirements": [
            "In the longitudinal control of the flattening segment, the system should check the process of calculating vygSemi (the automatic correction amount for the given升降 speed) to ensure the correctness of functional processing in case of calculation timeout (failure to return results within the specified time). \n\nNote: The term \"升降\" seems out of context in English as it directly translates to 'ascending and descending'. It might be a placeholder or specific term used in the original document. For a more accurate translation, clarification on this term would be helpful. However, following the instruction strictly, I've kept it as '升降'.",
            "In the longitudinal control during the flattening segment, the system should check the calculated vygSemi (automatic correction amount for given升降 speed) to ensure the correctness of functional processing when the control calculation results are 'normal values, abnormal values, boundary values, maximum or minimum values'.",
            "The system should check the input data in the longitudinal control during the flattening segment to ensure the correctness of calculating vygSemi as the automatic correction amount for the given升降 speed, especially in cases such as 'phases not considered, states not considered'.",
            "In the longitudinal control of the flattening segment, the system should check the logical conditions and branches for calculating vygSemi as the automatic correction amount for the given升降 speed, ensuring the correctness of functional processing in cases such as 'logic always false, logic always true, incorrect logical judgment conditions, omitted logical branches'.",
            "The system should ensure the correctness of timing relationships, constraint relationships, concurrent relationships, and combinational relationships between control logic points when calculating vygSemi as the automatic correction for the given rate of climb or descent during the flattening segment of longitudinal control."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 126,
        "requirement": "In the longitudinal control during the flare phase, calculate duy for the given pitch acceleration",
        "original_safety_criterions": [
            "The control calculation process for functions varies under different states and working stages. It is necessary to check the function inputs and analyze the correctness of function processing in scenarios such as \"not considering working stages, not considering working states\".",
            "Check the process of control calculation for functions, and analyze the correctness of functional handling in cases such as timeouts in the control calculation process (where results are not returned within the specified time).",
            "Check the logical judgment conditions and logical branches of the function, analyze the correctness of function processing in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "Check the operating states of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\"."
        ],
        "safety_requirements": [
            "The system should check the input data in the longitudinal control during the flattening segment to ensure the correct processing of the function that calculates the elevator acceleration duy, especially in cases of 'unconsidered working phase' or 'unconsidered working condition'.",
            "The system should check the calculation process during the longitudinal control in the flattening segment to ensure the correctness of functional processing when a timeout occurs (results are not returned within the specified time).",
            "In the longitudinal control of the flattening segment, the system should check the logical judgment conditions and logic branches for calculating the升降acceleration duy, ensuring the correctness of functional processing in cases of 'logic always false', 'logic always true', 'incorrect logical judgment conditions', or 'omitted logic branches'. \n\nNote: The term '升降' could not be accurately translated due to ambiguity. It may refer to 'ascending and descending' or similar terms depending on context.",
            "In the longitudinal control during the flattening segment, the system should check the operating status of different redundancies to ensure the correctness of the function calculating the acceleration duy when 'two or more redundancies are in different states'."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 127,
        "requirement": "When the flight altitude is less than 2.1 meters, the given ascent and descent speed automatic correction value vygSemi begins to be applied, and it is calculated based on the aircraft's pitch angle using the following formula, then limited to the range [-2, 2].",
        "original_safety_criterions": [
            "Check the logical conditions and branches of the function, analyze the correctness of function handling in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\" etc.",
            "Check the process of control function calculation, analyze the correctness of function handling in cases where the control calculation process times out (does not return results within the specified time).",
            "Check the values of discrete output data with different redundancies and analyze the correctness of function implementation in cases such as \"value inconsistency\" among two or more redundant output data. Safety considerations are integral to ensuring reliable outcomes in these scenarios.",
            "Check the duration of each task, analyze the correctness of function processing in cases where the task duration is less than the specified time.",
            "Check the results of functional control calculations and analyze the correctness of functional processing under conditions such as normal values, abnormal values, boundary values, maximum and minimum values."
        ],
        "safety_requirements": [
            "The system should check for timeouts in the control calculation process when the flight altitude is less than 2.1 meters, ensuring results are returned within the specified time; otherwise, trigger the exception handling mechanism.",
            "The system should check the discrete output data values of different redundancies when the flight altitude is less than 2.1 meters, ensuring that two or more redundancy output data are consistent; otherwise, trigger the exception handling mechanism.",
            "The system should check the control calculation results of the automatic correction amount vygSemi for ascent and descent speeds when the flight altitude is less than 2.1 meters, ensuring the correctness of functional processing under normal values, abnormal values, boundary values, maximum and minimum values, etc.",
            "The system should check the logical judgment conditions and logical branches when the flight altitude is less than 2.1 meters, ensuring the correctness of the automatic correction amount vygSemi calculation and amplitude limitation processing for ascent and descent speeds in cases of logically always false, logically always true, incorrect logical judgment conditions, and omitted logical branches.",
            "The system should check the duration of each task when the flight altitude is less than 2.1 meters, ensuring the task duration is within the specified range; otherwise, trigger the exception handling mechanism."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 128,
        "requirement": "If the INS acceleration is invalid at this time, the feedback of vertical acceleration will not be added.",
        "original_safety_criterions": [
            "Is the detection logic for fault items reasonable, and will the detection method affect the normal operation of the equipment?",
            "Are there specified requirements for handling responses to incorrect or invalid operations?",
            "Is there a judgment on the rationality of personnel operations? Instructions that do not conform to the current scene or status are not responded to."
        ],
        "safety_requirements": [
            "The system should clearly specify the response handling requirements when the inertial navigation acceleration is invalid, ensuring that the feedback of ascending and descending acceleration is not included.",
            "The system should reasonably detect logic when the inertial navigation acceleration is invalid, ensuring that the detection method does not affect the normal operation of the equipment.",
            "The system should have the capability to judge the rationality of human operation, ensuring that feedback from elevation acceleration is not included when the inertial navigation acceleration is invalid.",
            "The system should provide an exception handling mechanism for invalid inertial navigation acceleration to ensure system stability and Safety."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 129,
        "requirement": "δp = Kp (vg - vk) + f(J), δp is limited to [3%, 100 %]",
        "original_safety_criterions": [
            "Check the values of continuous output data with different redundancies, and analyze the correctness of function implementation in cases where two or more redundancy outputs have inconsistent values, meaning the difference in values exceeds the specified threshold.",
            "Check the logical judgment conditions and logical branches of the function, analyze the correctness of function processing in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "Check multiple input data for the function, analyze the correctness of function processing under various input value combinations including \"normal value equivalence class, abnormal value equivalence class, boundary value combination, initial value combination, Safety value combination, default value combination\" and so on.",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\"."
        ],
        "safety_requirements": [
            "The system should check the working status of different redundancies to ensure the correctness of the δp = Kp (vg - vk) + f(J) function when 'two or more redundancies are in different states', and ensure that δp is limited to [3%, 100 %].",
            "The system should check multiple input data for δp calculation to ensure the correctness of δp calculation processing under combinations of normal value equivalence classes, abnormal value equivalence classes, boundary values, initial values, Safety values, and default values, and ensure that the δp limit is [3%, 100%].",
            "The system should check the values of continuous output data with different redundancies to ensure the correctness of the δp = Kp (vg - vk) + f(J) function when there is inconsistency in values, meaning the difference exceeds the specified threshold, and ensure that δp is limited to [3%, 100%]. Safety must be ensured throughout this process.",
            "The system should check the logical judgment conditions and logical branches of the function to ensure correctness in calculating δp = Kp (vg - vk) + f(J) under circumstances such as 'logically always false, logically always true, incorrect logical judgment conditions, omitted logical branches', and ensure that δp is limited to [3%, 100 %]."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 130,
        "requirement": "vg = Vt + (h - ht)(Vs - Vt) / (hf - ht)",
        "original_safety_criterions": [
            "Check the output data of different redundancies and analyze the correctness of function implementation under the conditions of \"single redundancy failure, multiple redundancies all fail\".",
            "Check multiple input data for the function, analyze the correctness of function processing under various input value combinations including \"normal value equivalence class, abnormal value equivalence class, boundary value combination, initial value combination, Safety value combination, default value combination\".",
            "Check the logical conditions and branches of the function, and analyze the correctness of function handling in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "The control calculation process for functions varies under different states and working stages. Check the function inputs and analyze the correctness of function processing in scenarios such as \"not considering working stages, not considering working states.\"",
            "Check the loop condition of the function, analyze the correctness of function handling in cases where the loop condition is always false or always true."
        ],
        "safety_requirements": [
            "The system should check the logical judgment conditions and logical branches of vg = Vt + (h - ht)(Vs - Vt) / (hf - ht) to ensure the correctness of the calculation results in cases such as 'logically always false, logically always true, incorrect logical judgment conditions, missing logical branches'.",
            "The system should check the output data of different redundancy vg = Vt + (h - ht)(Vs - Vt) / (hf - ht) to ensure the correctness of the calculation results in cases of 'single redundancy failure and multiple redundancies all failing'.",
            "The system should check the loop judgment condition for vg = Vt + (h - ht)(Vs - Vt) / (hf - ht) to ensure the correctness of function handling in cases such as when the loop judgment condition is always false or always true.",
            "The system should check multiple input data for vg = Vt + (h - ht)(Vs - Vt) / (hf - ht) to ensure the correctness of the calculation results under combinations of normal value equivalence classes, abnormal value equivalence classes, boundary value combinations, initial value combinations, Safety value combinations, and default value combinations.",
            "The system should check the control calculation process of vg = Vt + (h - ht)(Vs - Vt) / (hf - ht) for different states and working stages to ensure the correctness of function handling in cases such as 'without considering working stages, without considering working conditions'."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 131,
        "requirement": "If a situation occurs where J < 3.5 in the calculation of the automatic correction amount vygSemi for the lifting speed, then the throttle valve quantity δp is set to zero.",
        "original_safety_criterions": [
            "Check the output data of different redundancies and analyze the correctness of function implementation in cases of \"single redundancy failure, multiple redundancies all fail\".",
            "Check the logical judgment conditions and logical branches of the function, analyze the correctness of function handling in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "Check the process of control function calculation, analyze the correctness of function handling in cases where the control calculation process times out (does not return results within the specified time).",
            "Check the values of discrete output data with different redundancy, and analyze the correctness of function implementation in cases such as \"inconsistent values\" among two or more redundant output data. Safety considerations are integral to ensuring the reliability of these processes.",
            "Check the data processing of the functions, analyze whether there is a division by zero in the data processing process."
        ],
        "safety_requirements": [
            "The system should check the calculation logic for the automatic correction amount of lifting speed vygSemi, ensuring that in cases of 'logical constant false, logical constant true, incorrect logical judgment conditions, missing logical branches', if J < 3.5 occurs, the throttle valve quantity δp can correctly be set to zero.",
            "The system should check the control calculation process for the automatic correction amount of lifting speed vygSemi, ensuring that in case of a timeout in the control calculation process (no result returned within the specified time), if J < 3.5, the throttle valve quantity δp can correctly be reduced to zero.",
            "The system should check the output data of different redundancies to ensure that in cases of 'single redundancy failure or multiple redundancies failing', if a situation where J < 3.5 occurs, the throttle valve quantity δp can correctly be reduced to zero.",
            "The system should check the calculation process of the automatic correction amount for the lifting speed vygSemi to ensure there is no division by zero during the calculation, preventing miscalculation that could lead to incorrect operation of the throttle valve δp."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 132,
        "requirement": "Lateral control and approach are the same as segment 2.",
        "original_safety_criterions": [
            "Check the duration of each task, analyze the correctness of function processing in cases where the task duration exceeds the specified time.",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\"."
        ],
        "safety_requirements": [
            "The system should check the operating status of different redundancies to ensure the correctness of the lateral control and glide path function segment 2 when 'two or more redundancies are in different states'.",
            "The system should check the duration of the cross-track and downrange two-segment tasks to ensure the correctness of function processing when the task duration exceeds the specified time.",
            "The system should provide real-time monitoring mechanisms to ensure the stability and consistency of lateral control and glide path function under different redundancy states.",
            "The system should have an exception handling mechanism that can trigger warnings and take appropriate actions promptly when the task duration exceeds the specified time."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 133,
        "requirement": "Discretization vyg",
        "original_safety_criterions": [
            "Check the data bits with discrete value ranges in the interface data, and analyze the correctness of the output when the data values change between two adjacent cycles.",
            "Check the data bits with discrete value ranges in the interface data, and analyze the correctness of the output when the data bit values are \"undefined abnormal values outside the valid value range\".",
            "Check the values of discrete interface data with different redundancy, and analyze the correctness of function implementation in cases such as \"inconsistent values\" among two or more redundant interface data.",
            "Check the values of discrete output data with different redundancies, and analyze the correctness of function implementation in cases such as \"value inconsistency\" among two or more redundant output data.",
            "Check the data bits with discrete value ranges in the interface data, and analyze the correctness of the output when the data bit values are \"each enumerated value of the valid value range\"."
        ],
        "safety_requirements": [
            "The system should check the values of discrete interface data with different redundancies to ensure the correctness of the discretized vyg function implementation when there is an 'inconsistent value' in two or more redundant interface data. Safety must be a priority in this process.",
            "The system should check the vyg data bits with discrete value ranges in the interface data to ensure the correctness of the output when the data bit takes an 'undefined abnormal value outside the valid range'.",
            "The system should check the discrete vyg output data values of different redundancies to ensure the correctness of function implementation when there is an 'inconsistent value' in two or more redundancy output data.",
            "The system should check the vyg data bits with discrete value ranges in the interface data to ensure the correctness of the output when the data bit values are 'each enumerated value of the valid value range'.",
            "The system should check the vyg data bits with discrete value ranges in the interface data to ensure the correctness of the output when the data values change abruptly between two consecutive cycles."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 134,
        "requirement": "Calculation(k) = vyt + (h(k) - ht )(vyf - vyt) / (hf - ht)",
        "original_safety_criterions": [
            "Check the output data of different redundancies and analyze the correctness of function implementation under the conditions of \"single redundancy failure, multiple redundancies all fail\".",
            "Check and analyze the correctness of function processing for multiple input data values categorized into \"normal value equivalence class combination, abnormal value equivalence class combination, boundary value combination, initial value combination, Safety value combination, default value combination\", etc.",
            "Multiple functions or states share the same interface data, but different functions/states have different requirements for the input initial values. Check the initial values of this interface data and analyze the correctness of the outputs when the initial values are \"greater than the function/state requirements, less than the function/state requirements,\" etc.",
            "Check the logical conditions and branches of the function, and analyze the correctness of function processing in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "Check the input data values for the execution conditions of each task, and analyze the correctness of functional processing when input data values cause the task execution conditions to be met prematurely."
        ],
        "safety_requirements": [
            "The system should check multiple input data for the calculation (k) = vyt + (h(k) - ht )(vyf - vyt ) /(hf - ht ) to ensure the correctness of functional processing under combinations of normal value equivalence classes, abnormal value equivalence classes, boundary value combinations, initial value combinations, Safety value combinations, and default value combinations.",
            "The system should check the output data of different redundancies to ensure the correctness of the calculation (k) = vyt + (h(k) - ht )(vyf - vyt) / (hf - ht) in cases of 'single redundancy failure and multiple redundancies failure'.",
            "The system should check for situations where multiple functions or multiple states have the same interface data, ensuring the correctness of outputs when the initial value of interface data is 'greater than or less than the function/state requirements'. This ensures the accuracy of the calculation (k) = vyt + (h(k) - ht )(vyf - vyt) / (hf - ht).",
            "The system should check the input data values for the calculation of (k) = vyt + (h(k) - ht )(vyf - vyt) /(hf - ht ) to ensure the correctness of functional processing when the input data values cause the task execution conditions to be met prematurely.",
            "The system should check the logical conditions and branches of the calculation (k) = vyt + (h(k) - ht )(vyf - vyt) / (hf - ht), ensuring the correctness of function handling in cases such as 'logically always false, logically always true, incorrect logical judgment conditions, missing logical branches'."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 135,
        "requirement": "Md 2(k ) = KLI . Md 1(k )",
        "original_safety_criterions": [
            "Check the execution sequence of tasks and analyze the correctness of function processing when the task execution sequence is inconsistent with the specified sequence.",
            "Check the output data of different redundancies and analyze the correctness of function implementation in cases of \"single redundancy failure\" and \"multiple redundancies failure\".",
            "Multiple functions are executed in series, where the output data of the preceding function serves as the input data for the subsequent function. The output data of the preceding function is checked to analyze the correctness of multi-function processing under conditions such as \"normal value equivalence class combination, abnormal value equivalence class combination\".",
            "Check the operating conditions of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\"."
        ],
        "safety_requirements": [
            "When multiple functions are executed in series in the system, the output data from the preceding function (such as Md 1(k)) should be checked to ensure that the data values fall into 'normal equivalence class combinations' or 'abnormal equivalence class combinations', thus ensuring the correctness of multi-function processing.",
            "The system should check the output data of different redundancies to ensure the correctness of the Md 2(k) = KLI . Md 1(k) function implementation in cases of 'single redundancy failure' or 'multiple redundancies failing'. Safety is a crucial consideration in this process.",
            "The system should check the working status of different redundancies to ensure the correctness of the Md 2(k) = KLI . Md 1(k) function implementation when 'two or more redundancies are in different states'.",
            "The system should check the execution sequence of tasks to ensure the correctness of the Md 2(k) = KLI . Md 1(k) function processing when the task execution sequence does not match the specified sequence.",
            "The system should ensure the integrity and accuracy of the input data Md 1(k) for the function Md 2(k) = KLI . Md 1(k), and trigger a warning mechanism in case of abnormalities."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 136,
        "requirement": "Md 2(k) amplitude limit [-XfSitaF, XfSitaF]",
        "original_safety_criterions": [
            "Check the values of continuous interface data with different redundancies, and analyze the correctness of function implementation in cases where \"the values of two or multiple redundancy interfaces are inconsistent, meaning the difference in values exceeds the specified threshold.\"",
            "Check and analyze the correctness of function processing for multiple input data values under combinations such as normal value equivalence classes, abnormal value equivalence classes, boundary value combinations, initial value combinations, Safety value combinations, and default value combinations.",
            "Check the values of continuous output data with different redundancies and analyze the correctness of function implementation in cases where \"the values differ, i.e., the difference in values exceeds the specified threshold\" among two or more redundant output data.",
            "Check the results of the function control calculations and analyze the correctness of function processing under conditions such as normal values, abnormal values, boundary values, maximum and minimum values.",
            "The timing relationships, constraint relationships, concurrent relationships, and combinational relationships between the control logics of each functional point are correct."
        ],
        "safety_requirements": [
            "The system should check multiple input data of Md 2(k) to ensure correctness in processing the amplitude limit [-XfSitaF, XfSitaF] under combinations of normal value equivalence classes, abnormal value equivalence classes, boundary values, initial values, Safety values, and default values.",
            "The system should check the values of continuous output data with different redundancies to ensure the correctness of the Md 2(k) amplitude limitation [-XfSitaF, XfSitaF] function in cases such as 'inconsistent values, where the difference in values exceeds the specified threshold'.",
            "The system should check the control calculation results of Md 2(k) to ensure the correctness of functional processing under various conditions including normal values, abnormal values, boundary values, and extreme maximum and minimum values.",
            "The system should ensure the correct timing, constraint, concurrency, and combination relationships between the Md 2(k) limiting [-XfSitaF, XfSitaF] control logic and the control logic of other functional points.",
            "The system should check the values of continuous interface data with different redundancies to ensure the correctness of the Md 2(k) amplitude limitation [-XfSitaF, XfSitaF] function in cases where 'values are inconsistent, i.e., the difference in values exceeds the specified threshold'."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 137,
        "requirement": "dvyg (k) = h&(k)(vyf - vyt) / (hf - ht)",
        "original_safety_criterions": [
            "Check the logical judgment conditions and logical branches of the function, analyze the correctness of function processing in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "Check the output data of different redundancies and analyze the correctness of function implementation under the conditions of \"single redundancy failure, multiple redundancies all fail\".",
            "Check multiple input data for the function, analyze the correctness of function processing under various input value combinations such as normal value equivalence class, abnormal value equivalence class, boundary value combination, initial value combination, Safety value combination, default value combination, etc.",
            "Check the operating status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\"."
        ],
        "safety_requirements": [
            "The system should check the output data of different redundancies to ensure that the calculation result of dvyg (k) = h&(k)(vyf - vyt) / (hf - ht) is correct in cases of 'single redundancy failure, multiple redundancies all fail'.",
            "The system should check the logical judgment conditions and logical branches of the function to ensure that in cases of 'logical always false, logical always true, incorrect logical judgment conditions, missing logical branches', the function handling of dvyg (k) = h&(k)(vyf - vyt) / (hf - ht) is correct.",
            "The system should check the working status of different redundancies to ensure that in cases where 'two or more redundancies are in different states', the calculation result of dvyg (k) = h&(k)(vyf - vyt) / (hf - ht) is correct.",
            "The system should check multiple input data to ensure that under combinations of normal value equivalence classes, abnormal value equivalence classes, boundary values, initial values, Safety values, and default values, the function processing of dvyg (k) = h&(k)(vyf - vyt) / (hf - ht) is correct."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 138,
        "requirement": "Md3(k) = Md2(k) + KL . [vyg(k) - h&(k)] + KLd . [dvyg(k) - &(k)]",
        "original_safety_criterions": [
            "Check the output data of different redundancies and analyze the correctness of function implementation in cases of \"single redundancy failure, multiple redundancies all fail\".",
            "Check and analyze the interface data of different redundancies to ensure the correctness of function implementation under conditions of single redundancy failure, and all redundancies failing (such as data anomalies, timing faults, communication failures, destination device failures, etc.). Safety is a crucial concern in this process.",
            "Check the values of discrete output data with different redundancies and analyze the correctness of function implementation in cases such as \"inconsistent values\" among two or more redundant output data. Safety considerations are integral to ensuring reliable functionality.",
            "Multiple functions output data to the same interface simultaneously. The values of the data output by these functions are checked and analyzed, especially when different functions produce different values for the same interface data, to ensure the correctness of multi-function processing.",
            "Check the input data values for the execution conditions of each task, and analyze the correctness of functional processing when input data values cause the task execution conditions to be met prematurely."
        ],
        "safety_requirements": [
            "The system should check the interface data of different redundancies to ensure the correctness of the Md3(k) = Md2(k) + KL . [vyg(k) - h&(k)] + KLd . [dvyg(k) - &(k)] function implementation in cases of 'single redundancy failure' or 'all redundancies failing' (such as data anomalies, timing faults, communication failures, destination device failures, etc.).",
            "The system should check the input data values in the task execution conditions to ensure that when the input data values prematurely satisfy the task execution conditions, the correctness of the functional processing Md3(k) = Md2(k) + KL . [vyg(k) - h&(k)] + KLd . [dvyg(k) - &(k)] is guaranteed.",
            "The system should check the values of discrete output data with different redundancies to ensure the correctness of the Md3(k) = Md2(k) + KL . [vyg(k) - h&(k)] + KLd . [dvyg(k) - &(k)] function in cases where the values of two or more redundancy outputs are inconsistent.",
            "The system should check the situation where multiple functions output data to the same interface simultaneously, ensuring the correctness of multi-function processing when different values are taken from the same interface data by multiple functions, especially the calculation result of Md3(k) = Md2(k) + KL . [vyg(k) - h&(k)] + KLd . [dvyg(k) - &(k)].",
            "The system should check the output data of different redundancies to ensure the correctness of the Md3(k) = Md2(k) + KL . [vyg(k) - h&(k)] + KLd . [dvyg(k) - &(k)] function in the case of 'single redundancy failure' or 'multiple redundancies failure'."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 139,
        "requirement": "Md 4(k ) = [(22.0 - T). Md 4(k - 1) + (T + 4). Md 3(k ) + (T - 4). Md 3(k - 1)]/(22.0 + T)",
        "original_safety_criterions": [
            "Check multiple input data of the function, analyze the correctness of function processing under conditions where multiple input data values are combinations of normal value equivalence classes, abnormal value equivalence classes, boundary value combinations, initial value combinations, Safety value combinations, default value combinations, etc.",
            "Check the values of discrete interface data with different redundancy, and analyze the correctness of function implementation in cases such as \"inconsistent values\" among two or more redundant interface data.",
            "Check and analyze the interface data of different redundancies to ensure the correctness of function implementation under conditions of single redundancy failure and all redundancies failing (such as data anomalies, timing faults, communication failures, destination device failures, etc.). Focus on Safety.",
            "Check the values of discrete output data with different redundancies and analyze the correctness of function implementation in cases such as \"inconsistent values\" among two or more redundancy outputs.",
            "Check the input data values for the execution conditions of each task, and analyze the correctness of function processing when the input data values cause the task execution conditions to be met prematurely."
        ],
        "safety_requirements": [
            "The system should check the value of discrete interface data with different redundancies to ensure the correctness of the function Md 4(k) = [(22.0 - T). Md 4(k - 1) + (T + 4). Md 3(k) + (T - 4). Md 3(k - 1)]/(22.0 + T) when there is an 'inconsistent value'.",
            "The system should check the values of discrete output data with different redundancies to ensure the correctness of the function Md 4(k) = [(22.0 - T). Md 4(k - 1) + (T + 4). Md 3(k) + (T - 4). Md 3(k - 1)]/(22.0 + T) in case of 'inconsistent values'.",
            "The system should check the input data values of Md 4(k) = [(22.0 - T). Md 4(k - 1) + (T + 4). Md 3(k) + (T - 4). Md 3(k - 1)]/(22.0 + T) to ensure the correctness of function processing when the conditions for task execution are met in advance.",
            "The system should check the interface data of different redundancies to ensure the correctness of the function Md 4(k) = [(22.0 - T). Md 4(k - 1) + (T + 4). Md 3(k) + (T - 4). Md 3(k - 1)]/(22.0 + T) implementation in cases of 'single redundancy failure, all redundancies failure (such as data anomalies, timing faults, communication failures, destination device failures, etc.)'.",
            "The system should check multiple input data values for Md 4(k) = [(22.0 - T). Md 4(k - 1) + (T + 4). Md 3(k) + (T - 4). Md 3(k - 1)]/(22.0 + T) to ensure the correctness of function processing under combinations of normal value equivalence classes, abnormal value equivalence classes, boundary value combinations, initial value combinations, Safety value combinations, and default value combinations."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 140,
        "requirement": "Md 4(k) amplitude limit [- XfSitaF, XfSitaF]",
        "original_safety_criterions": [
            "Check multiple input data of the function, analyze the correctness of function processing under various input value combinations such as normal value equivalence class, abnormal value equivalence class, boundary value combination, initial value combination, Safety value combination, default value combination, etc.",
            "Check the logical conditions and branches of the function, analyze the correctness of function processing under conditions such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "Check the values of continuous output data with different redundancies and analyze the correctness of function implementation in cases where \"the values of two or more redundancy outputs are inconsistent, meaning the difference in values exceeds the specified threshold.\"",
            "Check the results of the control calculations for the function, analyze the correctness of the function processing under conditions such as \"normal values, abnormal values, boundary values, maximum and minimum values\".",
            "The timing relationships, constraint relationships, concurrent relationships, and combination relationships between the control logics of each function point are correct."
        ],
        "safety_requirements": [
            "The system should check the logic judgment conditions and logical branches of the Md 4(k) limiter [- XfSitaF , XfSitaF ] to ensure the correctness of functional processing in cases such as 'logical always false, logical always true, incorrect logic judgment conditions, missing logical branches'.",
            "The system should check the values of continuous output data with different redundancies to ensure the correctness of the amplitude limitation [- XfSitaF ,  XfSitaF ] function in cases where the values of two or more redundant output data are inconsistent, meaning the difference in values exceeds the specified threshold.",
            "The system should check the limiting results of Md 4(k) to ensure the correctness of functional processing in cases where the limiting results are 'normal values, abnormal values, boundary values, maximum and minimum values'.",
            "The system should check multiple input data of the function to ensure the correctness of amplitude limitation [- XfSitaF , XfSitaF ] processing under various combinations of input values including normal value equivalence classes, abnormal value equivalence classes, boundary value combinations, initial value combinations, Safety value combinations, and default value combinations.",
            "The system should ensure the timing, constraint, concurrency, and combination relationships between the Md 4(k) amplitude limiting [- XfSitaF ,  XfSitaF ] control logic and other functional point control logics are correct to prevent logical conflicts or timing errors."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 141,
        "requirement": "Jg (k ) = Md 4(k )",
        "original_safety_criterions": [
            "Check and analyze the correctness of function processing for multiple input data under various conditions including \"normal value equivalence class combination, abnormal value equivalence class combination, boundary value combination, initial value combination, Safety value combination, default value combination\" and so on.",
            "Check the duration of each task, analyze the correctness of functional processing in cases where the task duration is less than the specified time.",
            "Check the data processing of the functions, analyze whether there is a division by zero in the data processing process.",
            "Check the duration of each task, analyze the correctness of functional processing in cases where the task duration exceeds the specified time.",
            "Check the input data values for the execution conditions of each task, and analyze the correctness of functional processing when the input data values cause the task execution conditions to be met prematurely."
        ],
        "safety_requirements": [
            "The system should check the input data values for task execution conditions to ensure the correctness of the Jg (k) = Md 4(k ) function processing when the input data values prematurely satisfy the task execution conditions.",
            "The system should check the data processing for Jg (k ) = Md 4(k ) to ensure that there is no division by zero during the process.",
            "The system should check the duration of each task to ensure that when the task duration exceeds the specified time, the correctness of the Jg (k ) = Md 4(k ) function processing is maintained.",
            "The system should check the duration of each task to ensure the correctness of the Jg (k ) = Md 4(k ) function processing when the task duration is less than the specified time.",
            "The system should check multiple input data for the function to ensure correctness of the Jg (k ) = Md 4(k ) function processing under various conditions including normal value equivalence class combinations, abnormal value equivalence class combinations, boundary value combinations, initial value combinations, Safety value combinations, and default value combinations."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 142,
        "requirement": "δp (k ) = Kp (vg (k ) -vk (k ))+ f (J(k ))",
        "original_safety_criterions": [
            "Check multiple input data for the function, analyze the correctness of function processing under various input value combinations such as normal value equivalence classes, abnormal value equivalence classes, boundary value combinations, initial value combinations, Safety value combinations, and default value combinations.",
            "Check the logical conditions and branches of the function's logic, analyzing the correctness of function handling in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "Check the values of continuous output data with different redundancies, and analyze the correctness of function implementation in cases where \"the values of two or multiple redundancy outputs are inconsistent, meaning the difference in values exceeds the specified threshold.\"",
            "Check the input data values for the execution conditions of each task, and analyze the correctness of functional processing when the input data values cause delays in meeting the task execution conditions.",
            "Check the values of discrete output data with different redundancies, and analyze the correctness of function implementation in cases such as \"inconsistent values\" among two or more redundant output data."
        ],
        "safety_requirements": [
            "The system should check the values of discrete output data with different redundancies to ensure the correctness of the δp (k ) = Kp (vg (k ) -vk (k ))+ f (J(k )) function in cases where the values of two or more redundant output data are 'inconsistent'.",
            "The system should check the input data values in the task execution conditions to ensure the correctness of the function processing δp (k ) = Kp (vg (k ) -vk (k ))+ f (J(k )) when the input data values cause a delay in satisfying the task execution conditions.",
            "The system should check the logical conditions and branches of δp (k ) = Kp (vg (k ) -vk (k ))+ f (J(k )), ensuring the correctness of functional processing in cases such as 'logically always false, logically always true, incorrect logical judgment conditions, missing logical branches'.",
            "The system should check the values of continuous output data with different redundancies to ensure the correctness of the δp (k ) = Kp (vg (k ) -vk (k ))+ f (J(k )) function in cases where the values of two or more redundant output data are inconsistent, meaning the difference in values exceeds the specified threshold.",
            "The system should check multiple input data values to ensure the correctness of the function processing δp (k ) = Kp (vg (k ) -vk (k ))+ f (J(k )) under various combinations of input data values, including normal value equivalence class combinations, abnormal value equivalence class combinations, boundary value combinations, initial value combinations, Safety value combinations, and default value combinations."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 143,
        "requirement": "δp (k ) amplitude limit [3%, 100 % ]",
        "original_safety_criterions": [
            "Check the values of continuous interface data with different redundancies, and analyze the correctness of function implementation in cases where \"the values differ beyond the specified threshold\" among two or more redundant interface data values.",
            "Check multiple input data of the function, analyze the correctness of function processing under various input data values such as \"normal value equivalence class combination, abnormal value equivalence class combination, boundary value combination, initial value combination, Safety value combination, default value combination\", etc.",
            "Check the logical conditions and branches of the function's logic, analyzing the correctness of function handling in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "Check the operating status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\".",
            "Check the values of continuous output data with different redundancies, and analyze the correctness of function implementation in cases where \"values are inconsistent, i.e., the difference in values exceeds the specified threshold\" among two or more redundant output data."
        ],
        "safety_requirements": [
            "The system should check the values of continuous output data with different redundancies to ensure the correctness of the δp (k) amplitude limiting [3%, 100%] function when the values are inconsistent, meaning the difference in values exceeds the specified threshold.",
            "The system should check the operating status of different redundancies to ensure the correctness of the δp (k) amplitude limit [3%, 100%] function when 'two or more redundancies are in different states'.",
            "The system should check the logic conditions and logic branches for the amplitude limit of δp (k) [3%, 100%], ensuring the correctness of function processing in cases such as 'logic always false, logic always true, incorrect logic conditions, missing logic branches'.",
            "The system should check multiple input data of δp (k) to ensure the correctness of function processing under various conditions including normal value equivalence class combinations, abnormal value equivalence class combinations, boundary value combinations, initial value combinations, Safety value combinations, and default value combinations.",
            "The system should check the values of continuous interface data with different redundancies to ensure the correctness of the δp (k) amplitude limiting [3%, 100%] function when values are inconsistent, meaning their difference exceeds the specified threshold."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 144,
        "requirement": "f (J(k )) = 3J(k )",
        "original_safety_criterions": [
            "Check multiple input data of the function, analyze the correctness of function processing under various input value combinations such as \"normal equivalent class combination, abnormal equivalent class combination, boundary value combination, initial value combination, Safety value combination, default value combination\", etc.",
            "Check the loop condition of the function, and analyze the correctness of function processing under conditions such as \"loop condition is always false, always true\".",
            "Check the duration of each task, analyze the correctness of function processing in cases where the task duration is less than the specified time.",
            "Check the duration of each task, analyze the correctness of function processing in cases where the task duration exceeds the specified time.",
            "Check the input data values for the execution conditions of each task, analyze the correctness of function processing when the input data values cause the task execution conditions to be met prematurely."
        ],
        "safety_requirements": [
            "The system should check the value of the input data J(k) to ensure that when the input data causes the task execution conditions to be met prematurely, the calculation result of the formula f(J(k)) = 3J(k) is correct.",
            "The system should check the duration of the task to ensure that when the task duration is less than the specified time, the processing of the formula f(J(k)) = 3J(k) is correct.",
            "The system should check the duration of the task to ensure that, when the task duration exceeds the specified time, the processing of the formula f(J(k)) = 3J(k) is correct.",
            "The system should check multiple input data of the flight status parameter J(k) to ensure that under combinations of normal value equivalence classes, abnormal value equivalence classes, boundary values, initial values, Safety values, and default values, the processing of the formula f(J(k)) = 3J(k) is correct.",
            "The system should check the loop condition of the function to ensure that the processing of the formula f(J(k)) = 3J(k) is correct in cases where the loop condition is always false or always true."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 148,
        "requirement": "At the end of the flare segment, the system needs to calculate the ground deflection command for the aileron loop based on δx 0.",
        "original_safety_criterions": [
            "Check the logical conditions and branches of the function, analyze the correctness of function processing in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\" etc.",
            "Check the loop condition of the function, analyze the correctness of function handling in cases where the loop condition is always false or always true.",
            "Check the duration of each task, analyze the correctness of functional processing in cases where the task duration is less than the specified time.",
            "Check the data processing of the function, analyze whether there is a division by zero in the data processing process.",
            "Check the duration of each task, analyze the correctness of function processing in cases where the task duration exceeds the specified time."
        ],
        "safety_requirements": [
            "At the end of the flattening segment, the system should check the ground deflection command calculation loop condition for the aileron control surface feedback loop, ensuring the correctness of function processing in cases where the loop condition is always false or always true.",
            "The system should check the logic conditions and logic branches of the calculation for ground deflection commands in the aileron loop, ensuring the correctness of functional processing in cases of 'logic always false, logic always true, incorrect logic conditions, or missing logic branches'.",
            "The system should check the calculation process of the ground deflection commands in the aileron servo loop to ensure there is no division by zero during the calculation.",
            "The system should check the duration of each task to ensure the correctness of the ground deflection command calculation for the aileron control loop when the task duration is less than or greater than the specified time.",
            "The system should ensure the accuracy and real-time nature of the aileron deflection command calculation at the end of the flare segment, and trigger a warning mechanism in case of abnormalities."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 149,
        "requirement": "The system needs to calculate the yg value, with the formula yg = - (Kyz .Δy + KyzI∫ Kys .Δydt + Kyzd . wy), and the yg value must be limited within the range of [- XfFxd , XfFxd].",
        "original_safety_criterions": [
            "Check the logical conditions and branches of the function's logic, analyzing the correctness of function handling in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "Check the input data values for the execution conditions of each task, analyze the correctness of functional processing when the input data values cause delays in meeting the task execution conditions.",
            "Check the input data values for the execution conditions of each task, and analyze the correctness of functional processing when the input data values cause the task execution conditions to be met prematurely.",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\"."
        ],
        "safety_requirements": [
            "The system should check the input data values when the conditions for task execution are met in advance to ensure the correctness of calculating the yg value (yg = - (Kyz .Δy + KyzI∫ Kys .Δydt + Kyzd . wy)) and ensure that the yg value is limited within the range [- XfFxd , XfFxd].",
            "The system should check the input data values when the task execution conditions are delayed to ensure the correctness of calculating the yg value (yg = - (Kyz .Δy + KyzI∫ Kys .Δydt + Kyzd . wy)), and ensure that the yg value is limited within the range [- XfFxd , XfFxd].",
            "The system should check the operating status when two or more redundancies are in different states, ensuring the correctness of calculating the yg value (yg = - (Kyz .Δy + KyzI∫ Kys .Δydt + Kyzd . wy)), and ensure that the yg value is limited within the range [- XfFxd , XfFxd].",
            "The system should check the logical judgment conditions and logical branches for calculating the yg value to ensure the correctness of function handling in cases such as logically always false, logically always true, incorrect logical judgment conditions, and missing logical branches. It must also ensure that the yg value is limited within the range [- XfFxd , XfFxd]."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 150,
        "requirement": "The throttle airspeed closed-loop control during the flare segment should be the same as the flare segment.",
        "original_safety_criterions": [
            "Check the execution sequence of tasks and analyze the correctness of function processing when the execution sequence does not match the specified sequence.",
            "The timing relationships, constraint relationships, concurrent relationships, and组合 relationships between the control logics of each function point are correct.",
            "Is the sequence and timing of control by the system coordinated with the hardware, and are the control conditions complete and consistent?",
            "Check the execution timing of different redundancies and analyze the correctness of function implementation in cases such as \"two or more redundancy execution timings are not synchronized\"."
        ],
        "safety_requirements": [
            "During the flare segment of the throttle airspeed closed-loop control, the system should ensure that the control sequence and timing are coordinated with the hardware, and that the control conditions are comprehensive and consistent.",
            "The system should check the task execution timing of the throttle valve airspeed closed-loop control during the flare segment to ensure that the task execution timing is consistent with the specified timing and that the function processing is correct.",
            "The system should check the execution timing of different redundancies to ensure the correctness of the throttle airspeed closed-loop control function during the flare segment when 'two or more redundancy execution timings are not synchronized'.",
            "The system should ensure that the throttle and airspeed closed-loop control during the flare segment correctly handles the timing, constraint, concurrency, and combination relationships with the flare segment's sequence to prevent functional failures caused by timing errors."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 151,
        "requirement": "During the discretization process, Md 2(k) = KyzI . Md1(k), and Md 2(k) must be limited within the range [- XfFxd , XfFxd].",
        "original_safety_criterions": [
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\".",
            "Check the values of discrete interface data with different redundancy, and analyze the correctness of function implementation in cases such as \"inconsistent values\" among two or more redundant interface data.",
            "Check the values of discrete output data with different redundancies and analyze the correctness of function implementation in cases such as \"inconsistent values\" among two or more redundant outputs.",
            "Check the duration of each task and analyze the correctness of function processing in cases where the task duration is less than the specified time.",
            "Check the duration of each task, analyze the correctness of functional processing in cases where the task duration exceeds the specified time."
        ],
        "safety_requirements": [
            "When the system is in inconsistent working states at different redundancy levels, the calculation results of Md2(k) = KyzI . Md1(k) during discretization and its amplitude limitation within the range [-XfFxd, XfFxd] should be checked.",
            "When the system has inconsistent values in discrete interface data of different redundancy, it should check the correct implementation of the function Md 2(k) = KyzI . Md1(k) and ensure that Md 2(k) is limited within the range [- XfFxd , XfFxd] during the discretization process.",
            "When the task duration in the discretization process of the system is less than the specified time, it should ensure the correctness of the calculation and limiting of Md 2(k) = KyzI . Md1(k) within the range [- XfFxd , XfFxd].",
            "When the system has inconsistent discrete output data values at different redundancy levels, it should check the correct implementation of the function Md 2(k) = KyzI . Md1(k) and ensure that Md 2(k) is limited within the range [- XfFxd , XfFxd] during the discretization process.",
            "The system should ensure the correctness of Md 2(k) being limited within the range [- XfFxd , XfFxd] when the duration of Md 2(k) during discretization is greater than the specified time."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 152,
        "requirement": "During the discretization process, Md 3(k) = Kyz . Δy(k) + Md 2(k) + Kyzd . wy (k), and Md 3(k) must be limited within the range [- XfFxd , XfFxd].",
        "original_safety_criterions": [
            "The control calculation process for functions varies under different states and working phases. Check the function inputs and analyze the correctness of function processing in cases such as \"not considering working phases, not considering working states\".",
            "Check the values of discrete output data with different redundancies and analyze the correctness of function implementation in cases such as \"inconsistent values\" among two or more redundant output data. Safety considerations are integral to ensuring reliable function performance under these conditions.",
            "Check the values of discrete interface data with different redundancies, and analyze the correctness of function implementation in cases such as \"inconsistent values\" among two or more redundant interface data."
        ],
        "safety_requirements": [
            "The system should check functional inputs at different states and working stages to ensure the correctness of Md 3(k) = Kyz . Δy(k) + Md 2(k) + Kyzd . wy (k) during the discretization process, and ensure that Md 3(k) is limited within the range [- XfFxd , XfFxd].",
            "The system should check the values of discrete output data with different redundancies to ensure that in cases where two or more redundant output data values are 'inconsistent', the discretization process Md 3(k) = Kyz . Δy(k) + Md 2(k) + Kyzd . wy (k) and Md 3(k) is limited within the range [- XfFxd , XfFxd] is correctly implemented.",
            "The system should check the values of discrete interface data with different redundancies to ensure that in cases where the values of two or multiple redundancy interfaces are 'inconsistent', the calculation result of Md 3(k) = Kyz . Δy(k) + Md 2(k) + Kyzd . wy (k) during the discretization process is correct, and ensure that Md 3(k) is limited within the range [- XfFxd , XfFxd]."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 153,
        "requirement": "During the discretization process, yg (k) = -Md 3(k).",
        "original_safety_criterions": [
            "Check the data bits with discrete value ranges in the interface data, and analyze the correctness of the output when the data bit values are \"each enumerated value of the valid value range\".",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\".",
            "Check the values of discrete output data with different redundancy, and analyze the correctness of function implementation in cases such as \"inconsistent values\" among two or more redundant output data. Safety considerations are integral to ensuring reliable functionality.",
            "Check the values of discrete interface data with different redundancies, and analyze the correctness of function implementation in cases such as \"inconsistent values\" among two or more redundant interface data."
        ],
        "safety_requirements": [
            "The system should check the values of discrete interfaces with different redundancies during discretization to ensure the correctness of the yg (k) = -Md 3(k) function implementation in cases of 'inconsistent values'.",
            "During the discretization process, the system should check the values of discrete output data with different redundancies to ensure the correctness of the yg (k) = -Md 3(k) function implementation in cases of 'inconsistent values'.",
            "During the discretization process, the system should check the data bits in the interface data that have discrete value ranges to ensure the correctness of yg(k) = -Md 3(k) when the data bit values are 'each enumerated value of the valid domain'.",
            "During the discretization process, the system should check the working states of different redundancies to ensure the correctness of the yg (k) = -Md 3(k) function implementation when 'two or more redundancies are in different states'."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 154,
        "requirement": "The landing rollout longitudinal control is the same as the takeoff ground segment.",
        "original_safety_criterions": [
            "Check the execution timing of different redundancies and analyze the correctness of function implementation in cases such as \"two or more redundancy execution timings are not synchronized\".",
            "The control calculation process for functions varies under different states and working stages. It checks the function inputs and analyzes the correctness of function processing in cases such as \"not considering working stages, not considering working states\".",
            "Check the loop condition of the function, analyze the correctness of function handling in cases where the loop condition is always false or always true.",
            "Check the duration of each task, analyze the correctness of function processing in cases where the task duration is less than the specified time.",
            "Check the results of functional control calculations and analyze the correctness of functional processing under conditions such as normal values, abnormal values, boundary values, maximum and minimum values."
        ],
        "safety_requirements": [
            "The system should check functional inputs under different states and working phases to ensure the correctness of landing rollout longitudinal control and takeoff ground segment function processing, especially in cases where working phases or working states are not considered.",
            "The system should check the execution timing of different redundancies to ensure the correct implementation of the landing rollout longitudinal control function when the execution timing of two or more redundancies is not synchronized.",
            "The system should check the duration of the longitudinal control task during landing rollout to ensure that the task duration complies with regulations, thereby ensuring the correctness of functional processing."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 155,
        "requirement": "During the landing rollout lateral control, yg linearly decreases from -δx 0 / Ky to 0 within 2 seconds.",
        "original_safety_criterions": [
            "The control calculation process for functions varies under different states and working stages. It is necessary to check the function inputs and analyze the correctness of function processing in scenarios such as \"not considering working stages, not considering working states\".",
            "Check the loop condition of the function, and analyze the correctness of function processing under conditions such as the loop condition being always false or always true.",
            "Check the duration of each task, analyze the correctness of functional processing in cases where the task duration is less than the specified time.",
            "Check the data processing of the functions, analyze whether there is a division by zero in the data processing process.",
            "Check the results of functional control calculations and analyze the correctness of functional processing under conditions such as normal values, abnormal values, boundary values, maximum and minimum values."
        ],
        "safety_requirements": [
            "The system should check the task duration for lateral control during landing rollout and ensure the correctness of function processing when the task duration is less than 2 seconds.",
            "The system should check the functional inputs at different states and working phases to ensure that, in cases where the working phase or state is not considered, yg linearly decreases from -δx 0 / Ky to 0 within 2 seconds. Safety considerations must be integrated into this process.",
            "The system should inspect the data processing for lateral control to ensure there is no division by zero during the process, especially when yg linearly decreases from -δx 0 / Ky to 0 within 2 seconds.",
            "The system should check the loop judgment conditions for lateral control to ensure the correctness of function processing when the loop judgment conditions are always false or always true.",
            "The system should check the lateral control calculation results to ensure the correctness of functional processing under normal values, abnormal values, boundary values, maximum and minimum values, etc."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 156,
        "requirement": "In the lateral control during landing rollout, yg (k) = Kyg (Kz . Dz (k) + Kz . Dz (k) - K . Δy(k) - K . wy (k)) + 0.5yg 0, where yg 0 is the rudder channel outer loop control amount at the end of the roll leveling segment.",
        "original_safety_criterions": [
            "Check the logical judgment conditions and logical branches of the function, analyze the correctness of function processing in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "The control calculation process for functions varies under different states and working phases. Check the function inputs and analyze the correctness of function processing in cases such as \"not considering working phases, not considering working states\".",
            "Check the values of discrete output data with different redundancies and analyze the correctness of function implementation in cases such as \"inconsistent values\" among two or more redundancy outputs. Safety considerations are integral to ensuring reliable outcomes in these scenarios.",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\"."
        ],
        "safety_requirements": [
            "The system should check the values of discrete output data with different redundancies to ensure the correctness of the landing rollout lateral control function in cases of 'inconsistent values'.",
            "The system should check the working status of different redundancies to ensure the correctness of the landing rollout lateral control function when 'two or more redundancies are in different states'. This ensures the accurate calculation of yg (k) = Kyg (Kz . Dz (k) + Kz . Dz (k) - K . Δy(k) - K . wy (k)) + 0.5yg 0, where yg 0 is the rudder channel outer loop control amount at the end of the roll leveling segment.",
            "The system should check the lateral control logic conditions and logic branches during landing rollout to ensure the correctness of function handling in cases such as 'logic always false, logic always true, incorrect logic judgment conditions, omitted logic branches'.",
            "The system should inspect the solution process of lateral control during landing rollout under different states and working phases, ensuring the correctness of function processing in cases such as 'not considering working phases, not considering working conditions'."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 157,
        "requirement": "During the in-flight engine start process, the throttle control follows the start procedure. After a successful in-flight engine start, the aircraft exits the drop phase and transitions to the corresponding phase, with the throttle control following the corresponding phase control; if the in-flight engine start fails, the throttle position is set to 0%.",
        "original_safety_criterions": [
            "The control calculation process for functions varies under different states and working phases. Check the function inputs and analyze the correctness of function processing in cases such as \"not considering working phases, not considering working states\".",
            "The timing relationships, constraint relationships, concurrent relationships, and combinational relationships between the control logics of each function point are correct.",
            "Check the logical judgment conditions and logical branches of the function, analyze the correctness of function handling in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\"."
        ],
        "safety_requirements": [
            "The system should check the logical judgment conditions and logical branches during in-flight engine start to ensure the correctness of function handling in cases such as 'logic always false, logic always true, incorrect logical judgment conditions, missing logical branches'.",
            "The system should check the control calculations for in-flight engine starts under different states and operational phases to ensure the correctness of functional processing in scenarios such as 'not considering operational phases, not considering operational states'.",
            "The system should check the operating conditions of different redundancies to ensure the correctness of throttle control during in-flight engine start when 'two or more redundancies are in different states'.",
            "The system should ensure the timing, constraint, concurrency, and combination relationships between the throttle control logic and the start process control during an in-flight engine start are correct; after a successful in-flight engine start, the aircraft exits the descent and transitions into the corresponding phase, ensuring the timing, constraint, concurrency, and combination relationships between the throttle control logic and the controls of the corresponding phase are correct; if the in-flight engine start fails, the throttle position should be set to 0%, and the relevant control logic is correct.",
            "The system should provide real-time monitoring and early warning mechanisms to ensure that any abnormal conditions during in-flight engine start can be detected and handled promptly."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 158,
        "requirement": "When autonomous control does not achieve satisfactory control effects, manual correction control can be used to make minor adjustments to the autonomous control. The correction amount is input into the flight control computer through three remote control joystick channels (elevator control amount, aileron control amount, rudder control amount) and airspeed correction combined commands, and after corresponding proportional conversion, it enters the control law, thereby achieving the purpose of correcting the control effect. The significance of correction items varies at different flight stages.",
        "original_safety_criterions": [
            "The control calculation process for functions varies under different states and working phases. Check the function inputs and analyze the correctness of function processing in scenarios such as \"without considering working phases, without considering working states\".",
            "Check the logical judgment conditions and logical branches of the function, analyze the correctness of function handling in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "Check the control calculation process of the function, analyze the correctness of functional handling in cases such as timeout in the control calculation process (not returning results within the specified time).",
            "The timing relationships, constraint relationships, concurrent relationships, and combinational relationships between the control logics of each function point are correct.",
            "Check the execution conditions of the function and analyze the correctness of function handling in cases where the execution conditions are \"not met, met again\" during the function execution process."
        ],
        "safety_requirements": [
            "The system should check the judgment conditions and logical branches of the autonomous control correction logic to ensure the correctness of functional processing in cases such as 'logic always false, logic always true, incorrect logic judgment conditions, missing logic branches'.",
            "The system should check the execution conditions for the autonomous control correction function to ensure that during the execution of the function, the correctness of function handling is maintained in cases where the execution conditions are 'not met, met again', etc.",
            "The system should ensure the correct timing, constraint, concurrency, and combination relationships between autonomous control and manual correction controls, especially the correct meaning of corrections at different flight phases.",
            "The system should check the functional control calculation process under different states and working phases to ensure the correctness of control correction amounts (such as elevator control amount, aileron control amount, rudder control amount, and airspeed correction combined commands) processing in cases where 'working phases are not considered, working states are not considered', etc. Safety is a crucial aspect that must be ensured throughout these processes.",
            "The system should inspect the control calculation process to ensure the correctness of functional processing in cases such as timeouts (not returning results within the specified time), especially when manual correction control is processed correctly if autonomous control does not achieve satisfactory results. This includes the correct processing of entering the flight control computer through three remote control joystick channels (elevator control amount, aileron control amount, rudder control amount) and airspeed correction combined commands, and after corresponding proportional conversion, entering the control law."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 161,
        "requirement": "Different manual corrections are required for the control corresponding to each phase of flight, and the relationship between manual corrections and control inputs is linear.",
        "original_safety_criterions": [
            "Check the execution sequence of tasks and analyze the correctness of functional processing when the task execution sequence is inconsistent with the specified sequence.",
            "Check the system status, operational phase, or software status corresponding to system tasks, and analyze the correctness of status execution in cases such as \"no corresponding software status exists, software inconsistency with the system\" etc.",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\"."
        ],
        "safety_requirements": [
            "When the system is in different redundancy working states, it should check the correspondence between manual correction amounts and control amounts to ensure their correctness.",
            "When the timing of control tasks execution by the system in each flight phase is inconsistent with the specified timing, the correspondence between manual correction amounts and control quantities should be checked to ensure its correctness.",
            "The system should ensure that the relationship between manual correction amounts and control inputs remains linear across different flight phases, and provide real-time verification to prevent incorrect correction amounts from affecting flight control.",
            "The system should monitor in real-time the working status of different redundancies and the task execution sequence, ensuring that warning mechanisms are triggered in case of abnormalities to prevent incorrect manual corrections from affecting flight Safety."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 162,
        "requirement": "Manual correction control uses the same control laws as automatic control (Equation 2-1, Equation 2-2, Equation 2-3), with only the correction amount added to the corresponding control quantities.",
        "original_safety_criterions": [
            "Check the logical conditions and branches of the function's logic, analyzing the correctness of function handling in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "Check the process of control calculation for functions, and analyze the correctness of functional handling in cases such as timeout in the control calculation process (not returning results within the specified time).",
            "Check the results of function control calculations and analyze the correctness of function processing under conditions such as normal values, abnormal values, boundary values, maximum and minimum values."
        ],
        "safety_requirements": [
            "The system should check if the calculation process returns results within the specified time during the manual correction control, ensuring the correctness of function handling in case of timeout.",
            "The system should check for the existence of 'logical always false, logical always true, incorrect logical judgment conditions, omitted logical branches' in the logic judgment conditions and logical branches of manual correction control to ensure the correctness of function processing.",
            "The system should check the results of manual correction control calculations to determine if they are 'normal values, abnormal values, boundary values, maximum or minimum values', etc., ensuring the correctness of functional processing in various situations.",
            "The system should ensure that the results of人工修正 control calculations are consistent with automatic control rules, and trigger a warning mechanism in case of anomalies."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 163,
        "requirement": "Command control mode is a control mode where the aircraft, during cruising, needs to change its flight status or position based on actual circumstances through command control.",
        "original_safety_criterions": [
            "Check and analyze the correctness of states and functions with set priorities in scenarios involving transitions between two or more states, including situations where high priority switches to low priority and low priority switches to high priority.",
            "Check the transfer conditions between pairwise states in the software state space, analyze the correctness of state transitions under conditions where the transfer conditions are \"not set, always satisfied, unsatisfiable,\" etc.",
            "Check the conditions for state entry and analyze the correctness of state execution under scenarios where the entry conditions are \"met, not met, met again\" during the state execution process."
        ],
        "safety_requirements": [
            "The system should check the fulfillment of entry conditions when they change for entering the command control mode, ensuring the correctness of state execution in cases such as 'fulfilled, unfulfilled, fulfilled again', etc.",
            "The system should check the different instruction control modes with set priorities when there are two or more states with transfer relationships, ensuring the correctness of status and functions in cases such as switching from high priority to low priority or from low priority to high priority.",
            "In command control mode, the system should check the transition conditions between each pair of states to ensure the correctness of state transitions in cases such as 'not set, always satisfied, cannot be met'.",
            "The system should provide real-time monitoring and logging functions for instruction control modes to ensure that the correctness of state execution can be traced and analyzed when there is a state transition or condition change."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 164,
        "requirement": "The command control mode does not alter the control law structure under autonomous control mode.",
        "original_safety_criterions": [
            "The control calculation process for functions varies under different states and working phases. Check the function inputs and analyze the correctness of function processing in scenarios such as \"without considering working phases, without considering working states\".",
            "There is no transition relationship between two or more states; check the entry conditions for these states and analyze the correctness of state execution under conditions such as \"all satisfied simultaneously, satisfied during state execution.\"",
            "Is the sequence and timing of system control coordinated with the hardware, and are the control conditions complete and consistent?"
        ],
        "safety_requirements": [
            "In command control mode, the system should ensure that the sequence and timing of control are coordinated with the hardware. The command control mode does not alter the control law structure under autonomous control mode; the control conditions are complete and consistent before and after.",
            "The system should check the entry conditions between two or more states to ensure the correctness of state execution when the entry conditions are 'simultaneously met' or 'met during state execution', preventing the control law structure under autonomous control mode from being altered by command control mode.",
            "The system should ensure that the control law structure in the command control mode remains consistent with that in the autonomous control mode, preventing Safety hazards caused by changes in the control law structure.",
            "The system should perform real-time monitoring of the control law structure under command control mode to ensure that warning mechanisms can be triggered in time under abnormal conditions."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 165,
        "requirement": "The instruction control category instructions have lateral.",
        "original_safety_criterions": [
            "Check the logical conditions and branches of the function, analyze the correctness of function handling in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\" etc."
        ],
        "safety_requirements": [
            "The system should check the logical judgment conditions and logical branches of instruction control functions to ensure the correctness and Safety of instruction processing in cases of 'logical always false, logical always true, incorrect logical judgment conditions, omitted logical branches'.",
            "The system should provide a logical validation mechanism for instruction control functions to ensure all logic branches are correctly handled, preventing system abnormalities caused by logic errors.",
            "The system should perform real-time monitoring of the logical judgment conditions for responding to lateral commands to ensure that the execution of commands meets expectations and to prevent control failure due to logic errors.",
            "The system should log the execution of command control functions to facilitate traceability and analysis in case of anomalies."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 166,
        "requirement": "Supports command control modes such as \"left orbit\", \"right orbit\", \"figure-eight flight\", \"temporary waypoints\", and longitudinal \"fixed altitude\", \"altitude setting\", as well as speed control with \"fixed speed\" and \"speed setting\".",
        "original_safety_criterions": [
            "Is the sequence and timing of system control coordinated with the hardware, and are the control conditions complete and consistent?",
            "Check the logical conditions and branches of the function, and analyze the correctness of function processing in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "Check the results of the function control calculations and analyze the correctness of function processing under conditions such as normal values, abnormal values, boundary values, maximum and minimum values.",
            "If multiple function points can be executed simultaneously, analyze whether these function points might operate the same actuator.",
            "The timing relationships, constraint relationships, concurrent relationships, and combination relationships between the control logics of each functional point are correct."
        ],
        "safety_requirements": [
            "The system should check the logical judgment conditions and logical branches of the instruction control modes to ensure correct execution of commands such as 'left turn', 'right turn', 'figure-eight flight', 'temporary waypoint', and longitudinal 'fixed altitude', 'altitude setting', as well as speed control 'fixed speed', 'speed setting' in cases of 'logical always false, logical always true, incorrect logical judgment conditions, missing logical branches'.",
            "The system should analyze multiple command control modes (such as 'left turn', 'right turn', 'figure-eight flight', 'temporary waypoint', and longitudinal 'fixed altitude', 'altitude setting', as well as speed control's 'fixed speed', 'speed setting', etc.) to determine if they might operate on the same actuator, ensuring Safety and correctness of the operations.",
            "The system should ensure the correct temporal relationships, constraint relationships, concurrent relationships, and combination relationships between various command control modes (such as 'left circling', 'right circling', 'figure-eight flying', 'temporary waypoints', and longitudinal 'fixed altitude', 'altitude setting', as well as speed control's 'fixed speed', 'speed setting', etc.), preventing conflicts and errors.",
            "The system should ensure that the sequence and timing of controls are coordinated with the hardware, and that control conditions are comprehensive and consistent, especially when executing commands such as 'left turn', 'right turn', 'figure-eight flight', 'temporary waypoints', and longitudinal 'fixed altitude', 'altitude setting', as well as speed control modes like 'fixed speed' and 'speed setting'.",
            "The system should check the results of the instruction control mode decoding to ensure that under conditions such as 'normal values, abnormal values, boundary values, maximum and minimum values', the functional processing is correct and Safety."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 167,
        "requirement": "In either autonomous control or command control mode, sending any of the commands mentioned above during the segment from climb phase 2 to the final approach segment (exclusive) can switch the system to command control mode.",
        "original_safety_criterions": [
            "There is no transition relationship between two or more states; check the entry conditions for these states and analyze the correctness of state execution under conditions such as \"satisfied simultaneously, satisfied during state execution.\"",
            "The control calculation process for functions varies under different states and working phases. It is necessary to check the function inputs and analyze the correctness of function processing in cases such as \"not considering working phases, not considering working states\".",
            "Check the transition conditions between pairwise states in the software state space, analyze the correctness of state transitions under conditions where the transition conditions are \"not set, always satisfied, unsatisfiable,\" etc.",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\"."
        ],
        "safety_requirements": [
            "The system should check the correctness of the function that sends commands to switch to command control mode during segments from climb 2 to final approach (exclusive) when it is in different states at different redundancies.",
            "The system should check the transfer conditions between each pair of states in the software state space to ensure that, under autonomous control or command control mode, the transfer conditions are correct when sending commands to switch to command control mode during the segment from climb phase 2 to the final approach segment (exclusive) of the flight path.",
            "The system should check the functional inputs under different states and working phases to ensure the correctness of the functional processing that transfers control mode instructions from climbing segment 2 to the final approach segment (exclusive) of the flight path.",
            "When there is no transition relationship between two or more states, the entry conditions of these states should be checked to ensure their correctness when sending commands to switch to command control mode from climb segment 2 to the final approach course (exclusive) under both autonomous control and command control modes."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 168,
        "requirement": "In segment 1 of the climb, only the \"constant speed\" and \"airspeed setting\" commands are valid; all other commands are invalid.",
        "original_safety_criterions": [
            "Check the transfer conditions between pairwise states in the software state space, analyze the correctness of state transitions under conditions where the transfer conditions are \"not set, always satisfied, cannot be satisfied,\" etc.",
            "Two or more states with transfer relationships may have different requirements for executing the same function, where some states permit function execution while others do not. Analyze the correctness of states and functions under conditions such as \"continuing execution, interrupting execution\" before and after state transitions.",
            "Is there a validity check for parameters set by personnel, and do abnormal parameters trigger a warning or receive no response?",
            "Are the response handling requirements for incorrect operations or invalid operations specified?",
            "Is there a judgment on the rationality of personnel operations? Commands that do not conform to the current scenario or status are not responded to."
        ],
        "safety_requirements": [
            "During the climb 1 segment, the system should only respond to 'set speed' and 'airspeed setting' commands; all other commands are invalid, and it should either prompt or not respond when receiving an invalid command.",
            "The system should check the transition conditions between the climbing stage and other states to ensure the correctness of state transitions in cases such as 'not set, always met, cannot be met'.",
            "During the climb phase 1, the system should validate the parameters set by personnel; only the 'constant speed' and 'airspeed setting' commands are valid, other commands are invalid. The system should prompt or not respond to abnormal parameters.",
            "The system should ensure the validity of the 'fixed speed' and 'airspeed setting' commands before and after the state transition, and the invalidity of the rest of the commands, ensuring the correctness of the state and function.",
            "During the climb phase 1, the system should evaluate the rationality of personnel operations, only responding to 'constant speed' and 'airspeed setting' commands, while ignoring other commands."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 169,
        "requirement": "In command control mode, the same type of command can be resent, and the new command will replace the old one.",
        "original_safety_criterions": [
            "Two or more states with a transfer relationship have the same function. The execution of this function before and after the state transfer is checked, analyzing the correctness of function handling in cases such as \"starting execution, maintaining execution, interrupting execution\" after the state transfer.",
            "Check the system status, operational phase, or software status corresponding to system tasks, and analyze the correctness of status execution in cases such as \"no corresponding software status exists, software inconsistency with the system\" etc. Ensure Safety.",
            "Check the transfer conditions between pairwise states in the software state space, analyze the correctness of state transitions under conditions where the transfer conditions are \"not set, always satisfied, unsatisfiable,\" etc."
        ],
        "safety_requirements": [
            "In command control mode, the system should check the system status, working phase, or software status corresponding to the system tasks, ensuring that under circumstances where 'there is no corresponding software status or inconsistency between software and system', new commands can correctly replace old commands.",
            "The system should check the execution of functions before and after state transitions when in command control mode, ensuring that after a state transition, new commands are correctly processed in cases of 'starting execution, maintaining execution, interrupting execution', etc.",
            "The system should check the transition conditions between each pair of states under the instruction control mode to ensure the correctness of state transitions and the reliability of command processing when the transition conditions are not set, always met, or cannot be met.",
            "The system should provide a status transition log under instruction control mode, recording the conditions and outcomes of each status transition for easier troubleshooting and auditing."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 170,
        "requirement": "During the \"fixed altitude\" command control, the specified altitude in the flight control law is taken as the flight altitude at the moment the \"fixed altitude\" command is received.",
        "original_safety_criterions": [
            "The control calculation process for functions varies under different states and working phases. Check the function inputs and analyze the correctness of function processing in scenarios such as \"not considering working phases, not considering working states\".",
            "Check the process of control function calculation, analyze the correctness of function handling in cases where the control calculation process times out (does not return results within the specified time).",
            "Is there a judgment on the rationality of personnel operations, where commands not fitting the current scene or status are not responded to?"
        ],
        "safety_requirements": [
            "When the system is under 'fixed altitude' command control, it should check the given altitude control calculation process in the flight control law to ensure the correctness of functional processing if a timeout occurs during the control calculation process (does not return results within the specified time).",
            "When the system is under 'fixed altitude' command control, it should evaluate the rationality of personnel operations. Commands that do not conform to the current flight altitude or status should not be responded to.",
            "The system should check functional inputs at different states and working phases to ensure that in cases of 'unconsidered working phases' or 'unconsidered working states', the specified altitude in the flight control law is taken as the flight altitude at the moment the 'fixed altitude' command is received.",
            "The system should ensure that during 'altitude hold' command control, the specified altitude in the flight control law is taken as the flight altitude at the moment the 'altitude hold' command is received, and it should provide real-time monitoring and early warning mechanisms to prevent erroneous commands from affecting flight Safety."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 171,
        "requirement": "When controlled by the \"altitude setting\" command, the specified altitude in the flight control law is taken as the set altitude value.",
        "original_safety_criterions": [
            "Check the values of continuous interface data with different redundancies, and analyze the correctness of function implementation in cases where \"the values of two or multiple redundancy interfaces are inconsistent, meaning the difference in values exceeds the specified threshold.\"",
            "When the working state transfers, check the values of the functional interface data and analyze the correctness of the output in cases such as \"values change or the range of values changes\".",
            "Check the values of continuous output data with different redundancies, and analyze the correctness of function implementation in cases where the values of two or multiple redundancy outputs are inconsistent, meaning the difference in values exceeds the specified threshold.",
            "Check the control calculation results of the function, analyze the correctness of functional processing under conditions such as \"normal values, abnormal values, boundary values, maximum and minimum values\".",
            "Check the input data values for the execution conditions of each task, and analyze the correctness of functional processing when the input data values cause the task execution conditions to be met prematurely."
        ],
        "safety_requirements": [
            "When the system is under the control of the 'altitude setting' command, it should check the continuous interface data values of different redundancies to ensure the correctness of the altitude setting command control function when the values are inconsistent, i.e., the difference in values exceeds the specified threshold.",
            "When controlled by the 'altitude setting' command, the system should check the output data values of different redundancy altitude setting commands to ensure the correctness of function implementation in cases where the values are inconsistent, i.e., the difference in values exceeds the specified threshold.",
            "The system should check the control calculation results of the 'altitude setting' command to ensure the correctness of function processing under normal values, abnormal values, boundary values, maximum and minimum values, etc.",
            "The system should check the input data values for the 'high setting' command to ensure that when the input data values cause the task execution conditions to be met early, the processing of the given altitude values in the flight control law is correct.",
            "When the system transitions to a working state, it should check the values of functional interface data to ensure that in cases where 'values change or the range of values changes', the specified altitude in the flight control law is set to the configured altitude value."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 172,
        "requirement": "The given altitude in autonomous control mode is the target waypoint's altitude.",
        "original_safety_criterions": [
            "Check the entry conditions for states and analyze the correctness of state execution during the process when the entry conditions are \"met, not met, met again,\" etc.",
            "Does the timing of output control status meet the scene requirements?",
            "Has the software made corresponding judgments and processing in case of abnormal external factors (such as high sea conditions, adverse weather conditions, etc.)?",
            "When issuing control commands or actions that are dangerous, is there a rational judgment based on the equipment status?",
            "There is no transition relationship between two or more states; check the entry conditions for these states and analyze the correctness of state execution under conditions such as \"satisfied simultaneously, satisfied during state execution.\""
        ],
        "safety_requirements": [
            "The system should make corresponding judgments and adjustments when encountering abnormal external factors such as high sea conditions or adverse weather conditions to ensure that the given altitude in autonomous control mode is the height of the target waypoint. Safety must be prioritized during these operations.",
            "The system should check the entry conditions for states under autonomous control mode to ensure the correctness of state execution during the process when the entry conditions are 'met, not met, met again', etc.",
            "The system should ensure that the timing of output control status in autonomous control mode meets the requirements of the target waypoint altitude.",
            "The system should check for the absence of transition relationships between two or more states, ensuring the correctness of state execution when entering conditions are met simultaneously or during the state execution process, especially for the autonomous control mode where the given altitude is the target waypoint's altitude.",
            "The system should make a rational judgment based on the current equipment status (such as the given height being the target waypoint height in autonomous control mode) when issuing dangerous control commands or actions. Safety is a crucial consideration in this process."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 173,
        "requirement": "In the command control mode, the navigation algorithm or waypoint switching method can vary according to the command, but the control law is the same as that of autonomous control.",
        "original_safety_criterions": [
            "Check and analyze the correctness of states and functions with different priorities set under transfer relationships between two or more states, including situations such as high priority switching to low priority and low priority switching to high priority.",
            "When the working state transitions, check the values of the functional interface data and analyze the correctness of the outputs in cases where \"the values change or the range of values changes\".",
            "Check the entry conditions for states and analyze the correctness of state execution during the process when the entry conditions are \"met, not met, met again,\" etc.",
            "The control calculation process for functions varies under different states and working phases. Check the function inputs and analyze the correctness of function processing in scenarios such as \"not considering working phases, not considering working states\".",
            "When issuing dangerous control commands or actions, is there a rational judgment based on the equipment status?"
        ],
        "safety_requirements": [
            "The system should check the status entry conditions under command control mode to ensure the correctness of status execution during the process, whether the entry conditions are met, not met, or met again.",
            "The system should check functional inputs under command control mode to ensure the correctness of function processing in cases such as 'unconsidered working phase, unconsidered working status'.",
            "In the command control mode, the system should check two or more states with transfer relationships, where different command control modes have been set with priorities. This ensures the correctness of status and functions in cases such as switching from high priority to low priority, and from low priority to high priority.",
            "When the system transitions to a working state, it should check the functional interface data values under command control mode to ensure correctness of the output when there are changes in value or changes in the range of values."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 174,
        "requirement": "The specified airspeed in the flight control law is taken as the airspeed value at the moment the \"constant speed\" command is received when under \"constant speed\" command control.",
        "original_safety_criterions": [
            "Check the timing of data acquisition for the interface, analyze the correctness of the output when the input acquisition timing is \"too early to stop, too late to stop\", etc.",
            "Check the timing of data acquisition for the interface, analyze the correctness of the output when the input timing is at \"maximum, minimum\" values, etc.",
            "Check the values of continuous output data with different redundancies, and analyze the correctness of function implementation in cases where the values of two or more redundancy outputs are inconsistent, meaning the difference in values exceeds the specified threshold.",
            "Check the values of discrete output data with different redundancies, and analyze the correctness of function implementation in cases such as \"value inconsistency\" among two or more redundancy outputs.",
            "The timing relationships, constraint relationships, concurrent relationships, and combinational relationships between the control logics of each functional point are correct."
        ],
        "safety_requirements": [
            "When the system has inconsistent discrete output data values at different redundancies, it should ensure the correctness of the specified airspeed in the flight control law taking the airspeed value at the moment the 'constant speed' command is received when controlled by a 'constant speed' command.",
            "When the continuous output data values of the system at different redundancies are inconsistent, that is, the difference in values exceeds the specified threshold, the correctness of the commanded airspeed in the flight control law should be ensured to be the airspeed value at the moment the 'constant speed' command is received when under 'constant speed' command control.",
            "The system should ensure the correctness of the specified airspeed in the flight control law, which should be the airspeed value at the moment the 'constant speed' command is received, when the interface data values are at their maximum or minimum.",
            "The system should ensure the correctness of the commanded airspeed in the flight control law, which takes the airspeed value at the moment when the 'constant speed' command is received, if the interface data acquisition stops too early or too late.",
            "When the system sets the given airspeed in the flight control law to the airspeed value at the moment the 'constant speed' command is received during 'constant speed' command control, it should ensure the correctness of the timing relationships, constraint relationships, concurrent relationships, and combinational relationships between each functional point control logic.",
            "The system should provide real-time monitoring and early warning mechanisms to ensure timely detection and handling when there are inconsistencies in redundant data values or anomalies in the timing of value acquisition, thus ensuring the stability and Safety of the flight control laws."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 175,
        "requirement": "The specified airspeed in the flight control law is taken as the set airspeed value when \"Speed Setting\" is configured.",
        "original_safety_criterions": [
            "Check multiple input data for the function, analyze the correctness of function processing under various input value combinations including \"normal equivalence class, abnormal equivalence class, boundary value, initial value, Safety value, default value\" combinations.",
            "Check the values of the same input data received by different redundancy channels, and analyze the correctness of function implementation when the values of the same input data received by two or more redundancy channels are inconsistent. Safety considerations are integral to ensuring reliable system performance under such conditions.",
            "Check the values of continuous output data with different redundancies, and analyze the correctness of function implementation in cases where \"the values of two or more redundancy outputs are inconsistent, meaning the difference in values exceeds the specified threshold.\"",
            "Check the values of discrete output data with different redundancies, and analyze the correctness of function implementation in cases such as \"value inconsistency\" among two or more redundant output data.",
            "The timing relationships, constraint relationships, concurrent relationships, and combinational relationships between the control logics of each functional point are correct."
        ],
        "safety_requirements": [
            "The system should ensure that the given airspeed in the flight control law is taken as the set airspeed value when 'speed setting' is performed, and its timing relationships, constraint relationships, concurrent relationships, and combinational relationships are accurate.",
            "The system should check the values of discrete output data with different redundancies to ensure that in cases where two or more redundancy output data values are 'inconsistent', the given airspeed in the flight control law is correctly set to the specified airspeed value during 'speed setting'.",
            "The system should check the values of continuous output data with different redundancies to ensure that when there is inconsistency in values among two or multiple redundant outputs, i.e., the difference in values exceeds the specified threshold, the given airspeed in the flight control law is correctly set to the configured airspeed value during 'speed setting'.",
            "The system should check the given airspeed input data in the flight control laws to ensure correctness of functional processing under multiple input data values including 'normal value equivalence class combination, abnormal value equivalence class combination, boundary value combination, initial value combination, Safety value combination, default value combination', etc."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 176,
        "requirement": "The specified airspeed in the flight control law is a value stored in the flight control computer, calculated based on flight performance during autonomous control.",
        "original_safety_criterions": [
            "Check the output data of different redundancies and analyze the correctness of function implementation under the conditions of \"single redundancy failure and multiple redundancies all failed\".",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\".",
            "Check the values of continuous output data with different redundancies, and analyze the correctness of function implementation in cases where the values of two or multiple redundancy outputs are inconsistent, meaning the difference in values exceeds the specified threshold.",
            "Check the values of discrete output data with different redundancy and analyze the correctness of function implementation in cases such as \"inconsistent values\" among two or more redundant output data. Safety considerations are integral to ensuring reliable functionality.",
            "Check the results of functional control calculations and analyze the correctness of functional processing under conditions such as normal values, abnormal values, boundary values, maximum and minimum values."
        ],
        "safety_requirements": [
            "The system should check the values of discrete output data with different redundancies to ensure that the calculation and storage of given airspeed in the flight control law are correct when there is an inconsistency in the values of two or more redundant output data.",
            "The system should check the values of continuous output data from different redundancies to ensure that in cases where the values of two or more redundancy outputs are inconsistent, i.e., the difference in values exceeds the specified threshold, the calculation and storage functions of the given airspeed in the flight control law are correctly implemented.",
            "The system should check the given airspeed in the flight control laws to ensure the correctness of flight control processing under conditions where the given airspeed is 'normal, abnormal, boundary, maximum and minimum values'.",
            "The system should check the output data of different redundancies to ensure that the calculation and storage of given airspeed in the flight control laws are correct under the conditions of single redundancy failure and multiple redundancies failure. Safety is a priority in this process.",
            "The system should check the operating status of different redundancies to ensure that, in cases where 'two or more redundancies are in different states', the calculation and storage of the given airspeed in the flight control laws are correct."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 177,
        "requirement": "The airspeed setting limit is (25m/s, 65m/s)",
        "original_safety_criterions": [
            "Check the duration of each task, analyze the correctness of function processing in cases where the task duration exceeds the specified time.",
            "Check the logical conditions and branches of the function, analyze the correctness of function handling in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\" etc.",
            "Check the duration of each task, analyze the correctness of functional processing in cases where the task duration is less than the specified time.",
            "Check the execution sequence of tasks and analyze the correctness of functional processing when the task execution sequence is inconsistent with the specified sequence.",
            "The timing relationships, constraint relationships, concurrent relationships, and combinational relationships between the control logics of each functional point are correct."
        ],
        "safety_requirements": [
            "The system should check the timing of executing the task to limit the airspeed setting, ensuring that the execution timing is consistent with the specified timing, preventing timing inconsistencies from causing functional processing errors.",
            "The system should check the duration of the airspeed setting limit values (25m/s, 65m/s) to ensure that the mission duration does not exceed the specified time, preventing timeouts from causing functional processing errors.",
            "The system should check the duration of the airspeed setting limit values (25m/s, 65m/s) to ensure that the mission duration is no less than the specified time, preventing too short a time from causing functional processing errors.",
            "The system should check the logic judgment conditions and logical branches for the amplitude limit value of airspeed settings, ensuring the correctness of function processing in cases such as 'logic always false, logic always true, incorrect logic judgment conditions, missing logical branches'.",
            "The system should ensure the timing, constraint, concurrency, and combination relationships between control logics of various functional points are correct when the airspeed setting limit values are (25m/s, 65m/s), preventing logical errors from causing functional failure."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 178,
        "requirement": "When sending the \"cancel altitude hold\" command, exit from the control of \"altitude hold\" or \"altitude setting\" commands, and the given altitude is taken as the target waypoint's altitude.",
        "original_safety_criterions": [
            "When the working state transfers, check the values of the functional interface data and analyze the correctness of the outputs in cases such as \"values change or the range of values changes\".",
            "Check the transition conditions between pairwise states in the software state space, analyze the correctness of state transitions under conditions where the transition conditions are \"not set, always satisfied, cannot be satisfied,\" etc.",
            "The control calculation process for functions varies under different states and working stages. Check the function inputs and analyze the correctness of function processing in cases such as \"not considering working stages, not considering working states\".",
            "Are the entry and exit conditions for each mode consistent?",
            "When issuing dangerous control commands or actions, is there a rational judgment based on the equipment status?"
        ],
        "safety_requirements": [
            "When the system sends a 'cancel altitude hold' command, it should check the values of the functional interface data to ensure that it exits from the 'altitude hold' or 'altitude setting' command control and sets the height to the target waypoint's altitude in cases where 'values change' or 'value ranges change'.",
            "The system should check the consistency of entry and exit conditions when sending a 'cancel altitude hold' command, ensuring that the given altitude is set as the target waypoint's altitude.",
            "The system should check the transfer conditions between 'fixed height' and 'height setting' states, and analyze the correctness of state transitions under conditions such as 'not set', 'always met', 'cannot be met', etc.",
            "The system should check functional inputs under different states and operational phases, analyzing the correctness of function processing in scenarios such as 'unconsidered operational phase, unconsidered operational state', especially when sending a 'cancel altitude hold' command. It should exit from 'altitude hold' or 'altitude setting' command control, setting the given altitude to the target waypoint's altitude.",
            "When the system issues a 'cancel set altitude' command, it should make a rational judgment based on the current device status to ensure the correctness and Safety of the command."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 179,
        "requirement": "When the \"cancel constant speed\" command is sent, it exits from the control of \"constant speed\" or \"speed setting\" commands, and the given speed value is the same as that of autonomous control.",
        "original_safety_criterions": [
            "When the working state transitions, check the values of the functional interface data and analyze the correctness of the outputs in situations where \"values change or the range of values changes\".",
            "Check the input data values for the execution conditions of each task, analyze the correctness of functional processing when the input data values cause delays in meeting the task execution conditions.",
            "Check the timing of data acquisition for the interface, analyze the correctness of the output when the input timing is \"too early to stop, too late to stop\", etc.",
            "Check the input data values for the execution conditions of each task, and analyze the correctness of functional processing when the input data values cause the task execution conditions to be met prematurely."
        ],
        "safety_requirements": [
            "The system should check the input data values when sending a 'cancel speed setting' command to ensure the correctness of function processing if the task execution conditions are met in advance, especially when exiting from 'speed setting' or 'speed configuration' command control, where the given speed value is the same as that of autonomous control.",
            "When the system sends a 'cancel speed setting' command, it should check the input data values to ensure the correctness of function processing when task execution conditions are delayed.",
            "When the system transitions to a working state, it should check the values of functional interface data to ensure that in cases where 'values change' or 'value ranges change', it exits from 'fixed speed' or 'speed setting' command control. The given speed value should be the same as autonomous control.",
            "When the system sends a 'cancel set speed' command, it should check the input sampling time to ensure the correctness of function processing in cases such as 'too early stop' or 'too late stop'."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 180,
        "requirement": "When sending the \"resume route\" command, exit from the lateral command control and cut into the original route from the current position to the point.",
        "original_safety_criterions": [
            "When the redundancy switching conditions are met, will it cause the output value of the currently running function to become abnormal?",
            "Check the logical judgment conditions and logical branches of the function, analyze the correctness of function processing under conditions such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "The control calculation process for functions varies under different states and working phases. It is necessary to check the function inputs and analyze the correctness of function processing in scenarios such as \"not considering working phases, not considering working states,\" etc.",
            "Check the duration of each task, analyze the correctness of functional processing in cases where the task duration is less than the specified time.",
            "Check the duration of each task, analyze the correctness of functional processing in cases where the task duration exceeds the specified time."
        ],
        "safety_requirements": [
            "The system should check the mission duration when sending the 'resume course' command to ensure that, if the mission duration exceeds the specified time, it correctly handles the function of exiting from lateral command control and rejoining the original course from the current position.",
            "The system should ensure that the functional output values do not exhibit abnormalities when sending the 'resume course' command upon meeting the redundancy switch conditions. Safety must be prioritized in this process.",
            "The system should check the mission duration when sending the 'resume course' command to ensure that the function handles correctly if the mission duration is less than the specified time.",
            "The system should check functional inputs at different states and working stages to ensure that when the 'resume course' command is sent without considering the working stage or status, it correctly handles the function of exiting lateral command control and resuming the original course from the current position to the point.",
            "The system should check the logical judgment conditions and logical branches when sending the 'resume course' command to ensure correct function handling in cases of logically false, logically true, incorrect logical judgment conditions, or omitted logical branches."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 181,
        "requirement": "The \"Cancel Altitude Hold\", \"Cancel Speed Hold\", and \"Resume Route\" commands are only effective in the command control mode after the corresponding commands to enter instruction control have been sent.",
        "original_safety_criterions": [
            "Check the entry conditions for states and analyze the correctness of state execution under scenarios where the entry conditions are \"met, not met, met again\" during the state execution process.",
            "Is the sequence and timing of system control coordinated with the hardware, and are the control conditions complete and consistent?",
            "The control calculation process for functions varies under different states and working phases. Check the function inputs and analyze the correctness of function processing in cases such as \"not considering working phases, not considering working states\".",
            "Does the timing of the output control status meet the scene requirements?",
            "When issuing control commands or actions that are dangerous, is there a rational judgment based on the equipment status?"
        ],
        "safety_requirements": [
            "The system should check the functional inputs at different states and working phases to ensure that the 'cancel altitude hold', 'cancel speed hold', and 'resume route' commands are invalid when the working phase or working state is not considered. Safety is a priority in this process.",
            "The system should check the entry conditions for the status under instruction control mode to ensure the validity of 'cancel altitude hold', 'cancel speed hold', and 'resume route' commands when the entry conditions are 'met, not met, met again' during the status execution process.",
            "The system should make reasonable judgments based on the equipment status when issuing control commands or actions such as 'cancel altitude hold', 'cancel speed hold', and 'resume route', ensuring the correctness and Safety of the commands.",
            "The system should check the timing of output control status for the 'cancel altitude hold', 'cancel speed hold', and 'resume route' commands under instruction control mode to ensure it meets the scenario requirements.",
            "The system should coordinate with the hardware in the sequence and timing of control, especially ensuring that the 'cancel altitude hold', 'cancel speed hold', and 'resume route' commands are only effective under instruction control mode after the corresponding entry instruction control commands have been sent. This ensures that control conditions are fully met and consistent."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 182,
        "requirement": "After effectively processing the \"cancel altitude hold\", \"cancel speed hold\", and \"resume route\" commands, the control mode only switches back to autonomous control when the command control state has exited in terms of longitudinal, lateral, and speed aspects. Otherwise, it remains in the command control mode.",
        "original_safety_criterions": [
            "Is the sequence and timing of system control coordinated with the hardware, and are the control conditions complete and consistent?",
            "Are the entry and exit conditions for each mode consistent?",
            "Does the timing of the output control status meet the scenario requirements?",
            "When issuing control commands or actions that are dangerous, is there a rational judgment based on the equipment status?",
            "For critical control or actions, is there a timeout judgment to handle situations where the hardware status does not meet control requirements for an extended period?"
        ],
        "safety_requirements": [
            "After effectively processing the commands of 'cancel altitude hold', 'cancel speed hold', and 'resume route', the system should ensure that it exits the command control state in terms of longitudinal, lateral, and speed aspects before the control mode can revert to autonomous control. Otherwise, it should remain in the command control mode. Safety is a priority throughout this process.",
            "When the system issues commands to 'cancel altitude hold', 'cancel speed hold', and 'resume route', it should make rational judgments based on the equipment status. It must ensure that in terms of longitudinal, lateral, and speed aspects, the command control state is exited before the control mode can revert to autonomous control. Otherwise, the command control mode should be maintained.",
            "The system should ensure that the entry and exit conditions of each mode are consistent, especially after the 'cancel altitude hold', 'cancel speed hold', and 'resume route' commands are effectively processed. The control mode only returns to autonomous control when all commands in the longitudinal, lateral, and speed aspects have exited the command control state. Otherwise, it remains in the command control mode.",
            "The system should make a timeout judgment on the commands of 'cancel altitude hold', 'cancel speed hold', and 'resume route' to handle situations where the hardware status does not meet control requirements for a long time.",
            "The system should ensure that the timing of restoring the control mode to autonomous control after effectively processing the 'cancel altitude hold', 'cancel speed hold', and 'resume route' commands meets the scenario requirements. The control mode only switches back to autonomous control when the command control has been exited in all three aspects: longitudinal, lateral, and speed. Otherwise, it remains in command control mode."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 183,
        "requirement": "The remote control mode is divided into two types: one with an inner loop remote control and one without an inner loop remote control.",
        "original_safety_criterions": [
            "Is there a detection mechanism in the output circuit to monitor the loop status without affecting normal output?"
        ],
        "safety_requirements": [
            "The system should have an output loop detection mechanism to ensure the correctness and reliability of the loop status in both inner loop remote control and non-inner loop remote control modes.",
            "The system should monitor the loop status in real time under in-band loop remote control mode to ensure the accuracy and integrity of the output signal.",
            "The system should periodically check the loop status when operating without an internal loop remote control mode to ensure the stability and consistency of the loop status during mode switching.",
            "The system should provide loop status abnormality detection and alarm mechanisms to ensure that operators are promptly notified when a loop fault is detected, allowing for appropriate measures to be taken."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 184,
        "requirement": "Remote control directly operates the control surfaces (elevator, ailerons, and rudder) without an internal feedback loop, converting the remote control inputs into appropriate proportional outputs.",
        "original_safety_criterions": [
            "Check the logical judgment conditions and logical branches of the function, analyze the correctness of function processing in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "The timing relationships, constraint relationships, concurrent relationships, and combinational relationships between the control logics of each functional point are correct.",
            "The control calculation process for functions varies under different states and working phases. Check the function inputs and analyze the correctness of function processing in scenarios such as \"not considering working phases, not considering working states\".",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\"."
        ],
        "safety_requirements": [
            "The system should check the operating status of different redundancies to ensure the correctness of the remote direct control surface function (such as elevators, ailerons, and rudder) when 'two or more redundancies are in different states'.",
            "The system should ensure the correct timing, constraint, concurrency, and combination relationships between the control logics of various functional points, especially when remote control directly operates the control surfaces without internal feedback loops, the logic for proportionally converting the remote control inputs should be correct.",
            "The system should check the logical conditions and branches for the remote control direct operation of control surfaces (such as elevators, ailerons, and rudders) to ensure the correctness of functional processing in cases of 'logical always false, logical always true, incorrect logical judgment conditions, missing logical branches'.",
            "The system should check the remote control inputs to ensure the correctness of function control calculations under different states and working stages, especially the correctness of function processing in cases such as 'unconsidered working stages, unconsidered working states'."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 185,
        "requirement": "The inner-loop remote control converts the remote control input into the corresponding specified attitude angle, and through the autonomous control laws (Equations (2-1), (2-2), and (2-3)), it calculates the corresponding rudder deflection control commands to control the control surfaces.",
        "original_safety_criterions": [
            "The control calculation process for functions varies under different states and working phases. Check the function inputs and analyze the correctness of function processing in scenarios such as \"not considering working phases, not considering working states.\"",
            "Check the logical conditions and branches of the function, analyze the correctness of function handling in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\" etc.",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\".",
            "The timing relationships, constraint relationships, concurrent relationships, and combinational relationships between the control logics of each functional point are correct.",
            "Check the results of the function control calculations and analyze the correctness of function processing under conditions such as normal values, abnormal values, boundary values, maximum and minimum values."
        ],
        "safety_requirements": [
            "When the system's operating state changes at different redundancies, it should check the in-band loop remote control to convert the remote control operation quantity into the corresponding specified attitude angle, and through autonomous control laws (Equation (2-1), Equation (2-2), and Equation (2-3)), calculate the corresponding rudder deflection control commands to correctly control the surfaces.",
            "The system should check the logical judgment conditions and logical branches for in-band loop remote control to ensure the correctness of function handling in cases such as 'logically always false, logically always true, incorrect logical judgment conditions, missing logical branches'.",
            "The system should check the input of remote control manipulation and specified attitude angles to ensure the correctness of function processing in situations such as 'unconsidered working phase, unconsidered working condition'.",
            "The system should ensure the correct timing, constraint, concurrency, and combination relationships between the in-band loop remote control logic and the autonomous control laws (equations (2-1), (2-2), and (2-3)), preventing logical errors from causing functional failure.",
            "The system should check the control resolution results of in-band loop remote control to ensure the correctness of function processing under conditions such as 'normal values, abnormal values, boundary values, maximum and minimum values', and trigger a warning mechanism in case of abnormalities."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 186,
        "requirement": "In both remote control modes, the remote control of the throttle valve is the same.",
        "original_safety_criterions": [
            "Two or more states that have a transfer relationship possess the same function. The execution of this function before and after the state transition is inspected, analyzing the correctness of function handling under conditions such as \"starting execution, maintaining execution, interrupting execution\" after the state transition.",
            "The control calculation process for functions varies under different states and working phases. Check the function inputs and analyze the correctness of function processing in scenarios such as \"not considering working phases, not considering working states\".",
            "There is no transition relationship between two or more states; check the entry conditions for these states and analyze the correctness of state execution under conditions such as \"all met simultaneously, met during state execution.\""
        ],
        "safety_requirements": [
            "The system should check the remote control status of the throttle valve under two remote control modes to ensure the correctness of the throttle valve's remote control status execution when the entry conditions are 'met simultaneously' or 'met during the process'.",
            "The system should check the remote control function of the throttle valve in two remote control modes to ensure the correctness of the throttle valve remote control function processing in cases such as 'start execution', 'continue execution', or 'interrupt execution' after mode switching.",
            "The system should ensure the consistency of the remote control status and functions of the throttle under two remote control modes, preventing incorrect operations caused by mode switching.",
            "The system should provide real-time monitoring mechanisms to ensure the correctness and consistency of the throttle's remote control status and functions under two remote control modes, and trigger a warning mechanism in case of abnormalities."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 187,
        "requirement": "Remote control has the highest control authority and can switch to remote control mode at any time and under any circumstances.",
        "original_safety_criterions": [
            "Check and analyze the correctness of states and functions with set priorities in cases of transfer relationships between two or more states, including situations where high priority switches to low priority and low priority switches to high priority.",
            "Is the software correctly handling the situation where the redundancy switch takes too long?",
            "The control calculation process for functions varies under different states and working stages. Check the function inputs and analyze the correctness of function processing in scenarios such as \"not considering working stages, not considering working states\".",
            "For critical control or actions, is there a timeout judgment to handle situations where the hardware status does not meet control requirements for an extended period?"
        ],
        "safety_requirements": [
            "The system should check functional inputs at different states and working phases to ensure the correctness of remote control mode switching in cases of 'unconsidered working phases' or 'unconsidered working states'.",
            "The system should ensure that at any time and under any circumstances, it can correctly process and switch to remote control mode within the specified time to prevent control failure due to excessive redundancy switching time.",
            "The system should check the transition between remote control mode and other states, ensuring the correctness of status and functions when switching 'from other states to remote control mode' and 'from remote control mode to other states'.",
            "The system should provide real-time monitoring mechanisms to ensure data integrity and consistency during the switching process of remote control modes, preventing incorrect data from affecting control performance."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 188,
        "requirement": "The in-loop remote control, when the aircraft is in a ground state, uses the following formula to calculate the rudder deflection angle command: δy = KyY . Y + [Kyg (K . (-yg) + Ky . wy)] + Kywy . wy.",
        "original_safety_criterions": [
            "The control calculation process for functions varies under different states and working stages. Check the function inputs and analyze the correctness of function processing in scenarios such as \"not considering working stages, not considering working states\".",
            "Check the output data of different redundancies and analyze the correctness of function implementation in cases of \"single redundancy failure\" and \"multiple redundancies all failing\".",
            "Check the values of discrete output data with different redundancy and analyze the correctness of function implementation in cases such as \"inconsistent values\" among two or more redundant output data. Safety considerations are integral to ensuring reliable functionality.",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\"."
        ],
        "safety_requirements": [
            "The system should check the inputs to the rudder angle command calculation in different states and working phases to ensure the correctness of the rudder angle command calculation when the 'working phase is not considered' or the 'working state is not considered'.",
            "The system should check the operating status of different redundancies to ensure the correctness of the rudder deflection command calculation formula when 'two or more redundancies are in different states'.",
            "The system should check the calculation results of rudder angle commands from different redundancies to ensure the correctness of rudder angle command calculations when 'two or more redundancy outputs have inconsistent data values'.",
            "The system should check the output data of different redundancies to ensure the correctness of the rudder angle command calculation formula in cases of 'single redundancy failure' or 'multiple redundancies failure'. Safety is a crucial concern in this process."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 189,
        "requirement": "Given the linear correspondence relationship between the attitude angles, the throttle bias δp, and the remote control operation amount.",
        "original_safety_criterions": [
            "The control calculation process for functions varies under different states and working stages. Check the function inputs and analyze the correctness of function processing in scenarios such as 'not considering working stages, not considering working states'.",
            "Check the operating status of different redundancies and analyze the correctness of function implementation in situations such as 'two or more redundancies being in different states'.",
            "Check the logical judgment conditions and logical branches of the function, analyze the correctness of function processing under conditions such as 'logically always false, logically always true, incorrect logical judgment conditions, missing logical branches'."
        ],
        "safety_requirements": [
            "The system should check the logical judgment conditions and logical branches of the linear correspondence between attitude angles, throttle valve bias δp, and remote control operation quantities, ensuring the correctness of functional processing in cases such as 'logically always false, logically always true, incorrect logical judgment conditions, missing logical branches'.",
            "The system should check the working status of different redundancies to ensure the correctness of the linear correspondence between the given attitude angle and throttle deflection δp and the remote control operation quantity in cases such as 'two or more redundancies being in different states'.",
            "The system should check the functional control calculation process under different states and working phases to ensure the correctness of input processing for attitude angles and throttle valve bias δp in cases such as 'unconsidered working phase, unconsidered working state'.",
            "The system should ensure the real-time consistency of the linear correspondence between attitude angles and throttle valve bias δp and remote control inputs under different operating conditions and stages, prevent incorrect data from affecting function processing, and trigger a warning mechanism in abnormal situations. Safety is a priority throughout these operations."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 190,
        "requirement": "The system should be capable of flying along the pre-programmed flight path.",
        "original_safety_criterions": [
            "Check the loop condition of the function, analyze the correctness of function handling in cases where the loop condition is always false, always true, etc.",
            "Check the execution sequence of tasks and analyze the correctness of functional processing when the task execution sequence is inconsistent with the specified sequence.",
            "Check the execution timing of different redundancies and analyze the correctness of function implementation in cases such as \"two or more redundancy execution timings are not synchronized.\""
        ],
        "safety_requirements": [
            "The system should ensure the correctness of the function to fly along the pre-programmed route when executed with different redundancies and out-of-sync timing.",
            "The system should ensure correct handling of the function to fly along the pre-installed route when the sequence of task execution does not match the specified sequence.",
            "The system should check the loop judgment conditions for route flight to ensure correct handling of route flight functions in cases where the loop judgment conditions are always false or always true.",
            "The system should provide real-time monitoring mechanisms to ensure the synchronization of execution timing for different redundancies, and trigger warning mechanisms in case of abnormalities.",
            "The system should ensure the correctness of task execution timing to prevent timing inconsistencies from affecting the implementation of flight path functions.",
            "The system should ensure the correctness of the loop judgment conditions for route flight to prevent functional failure due to abnormal conditions."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 191,
        "requirement": "The system should control the aircraft to maintain a constant altitude during the final approach segment and report the flight phase as the final approach when the navigation mode is set to final approach navigation, using the same control method as the constant altitude segment.",
        "original_safety_criterions": [
            "The control calculation process for functions varies under different states and working phases. Check the function inputs and analyze the correctness of function processing in scenarios such as \"not considering working phases, not considering working states\".",
            "There is no transition relationship between two or more states; check the entry conditions for these states and analyze the correctness of state execution under conditions such as \"all met simultaneously, met during state execution,\" etc.",
            "Is the sequence and timing of control by the system coordinated with the hardware, and are the control conditions complete and consistent?",
            "Check the operating status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\"."
        ],
        "safety_requirements": [
            "When the system performs control during the final approach phase, it should ensure that the control sequence and timing are coordinated with the hardware, and that the control conditions are comprehensive and consistent.",
            "The system should check the conditions for entering the final approach segment during control in that segment, ensuring the correctness of the final approach segment's altitude-holding flight status execution when the conditions are 'met simultaneously' or 'met during the status execution'.",
            "The system should check the function inputs during the final approach segment to ensure the correctness of the final approach segment altitude hold control processing in cases of 'unconsidered operating phase' or 'unconsidered operating condition'.",
            "During the final approach segment, the system should check the operating status of different redundancies to ensure the correctness of the altitude-holding flight control function when 'two or more redundancies are in different states'."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 192,
        "requirement": "The system should control the aircraft to follow the pre-set glide path at the given airspeed from the final approach altitude down to the end altitude of 100m for segment 1. Longitudinally, it controls the aircraft to track the glide path height, and laterally it eliminates the side deviation relative to the airport axis. In case of crosswinds, the aircraft should have no sideslip angle.",
        "original_safety_criterions": [
            "Is the sequence and timing of system control coordinated with the hardware, and are the control conditions complete and consistent?",
            "Check the logical conditions and branches of the function, analyze the correctness of function handling in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "The control calculation process for functions varies under different states and working phases. Check the function inputs and analyze the correctness of function processing in scenarios such as \"not considering working phases, not considering working states\".",
            "Check the operating status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\".",
            "The timing relationships, constraint relationships, concurrent relationships, and组合 relationships between the control logics of each functional point are correct."
        ],
        "safety_requirements": [
            "The system should check the logical judgment conditions and logical branches of segment 1 descent to ensure the correctness of functional processing in cases such as 'logically always false, logically always true, incorrect logical judgment conditions, missing logical branches'. It must ensure that the aircraft descends along the pre-set glide path at the given airspeed from the final approach altitude to the end altitude of segment 1 descent, which is 100m. Longitudinally, it controls the aircraft to track the glide path height, and laterally it eliminates the side deviation distance of the aircraft relative to the airport axis. In case of crosswinds, the aircraft should have no sideslip angle.",
            "The system should ensure the correct timing, constraint, concurrency, and combination relationships between the control logics of various functional points, especially during the descent segment where it controls the aircraft to follow a pre-set glide path at a given airspeed from the final approach altitude down to the end altitude of 100m for the first segment of the descent. Longitudinally, it controls the aircraft to track the glide path height, and laterally it eliminates the aircraft's side deviation from the airport axis. In the presence of crosswinds, the aircraft should have no sideslip angle.",
            "The system should ensure the aircraft follows the pre-set glide path at the given airspeed from the final approach altitude down to the end altitude of 100m for segment 1. It must guarantee longitudinal control to track the glide path height and lateral control to eliminate any cross-track deviation relative to the airport axis. In case of crosswinds, the aircraft should have no sideslip angle. The sequence and timing of controls should be coordinated with the hardware, and control conditions should be comprehensive and consistent. Safety is a priority throughout this process.",
            "The system should check the operating status of different redundancies to ensure that in situations such as 'two or more redundancies being in different states', the system controls the aircraft to descend along the pre-set glide path at the given airspeed from the final approach altitude to the end altitude of segment 1, which is 100m. Longitudinally, it controls the aircraft to track the glide path height and laterally eliminates the side deviation distance of the aircraft relative to the airport axis. In case of crosswinds, it ensures the correct implementation of the function that the aircraft has no sideslip angle.",
            "The system should check the control calculation process of functions under different states and working phases to ensure that in cases such as 'unconsidered working phase, unconsidered working state', the system correctly handles the function of guiding the aircraft along the preset glide path at the given airspeed from the final approach altitude down to the end altitude of 100m for segment 1 of the descent. It should longitudinally control the aircraft to track the glide path height and eliminate lateral deviation relative to the airport axis during crosswind conditions, ensuring there is no sideslip angle. This ensures the Safety and accuracy of the operation."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 193,
        "requirement": "The system should control the aircraft to descend from the end height of 100m at the end of segment 1 to the flare height of 17m in segment 2, ensuring the aircraft descends in a steady sideslip manner.",
        "original_safety_criterions": [
            "Check the transition conditions between pairwise states in the software state space, analyze the correctness of state transitions under conditions where the transition criteria are \"not set, always satisfied, impossible to satisfy,\" etc.",
            "Is the sequence and timing of control by the system coordinated with the hardware, and are the control conditions complete and consistent?",
            "Check external devices (such as sensors, NVM, databases, other systems, etc.), and analyze the correctness of outputs from source devices in situations like \"degraded, maintenance,\" etc.",
            "Does the timing of the output control status meet the scene requirements?",
            "When issuing dangerous control commands or actions, is there a rational judgment based on the equipment status?"
        ],
        "safety_requirements": [
            "The system should ensure that the timing of output control status meets the scenario requirements when controlling the aircraft from the end of glide path segment 1 at an altitude of 100m to the flare altitude of 17m during the second segment of the glide path.",
            "The system should check external equipment (such as sensors, NVM, databases, other systems, etc.) when controlling the aircraft from the end of glide segment 1 at a height of 100m to the flare altitude of 17m, ensuring the correctness of control outputs when the source equipment is in conditions like 'degraded, maintenance', etc.",
            "The system, during the transition from glide segment 1 end height of 100m to flare altitude of 17m, should ensure that before issuing hazardous control commands or actions, it conducts a rationality check based on the current glide state of the aircraft (such as from an altitude of 100m to flare altitude of 17m).",
            "When the system controls the aircraft to descend from the end height of 100m at the end of segment 1 to the flare height of 17m during the descent in segment 2, it should check the transfer conditions between each pair of states in the software state space. It must ensure the correctness of state transitions under conditions such as 'not set, always satisfied, cannot be satisfied', especially ensuring that the aircraft descends in a steady sideslip manner.",
            "The system, when controlling the aircraft from the end of the glide slope segment 1 at a height of 100m to the flare altitude of 17m during the glide slope segment 2, should ensure that the control sequence and timing are coordinated with the hardware, and that the control conditions are complete and consistent."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 194,
        "requirement": "The system should level the aircraft's trajectory angle during the flattening phase, allowing the aircraft to land with a small descent speed. The lateral control method is the same as that of the post-descent segment.",
        "original_safety_criterions": [
            "Check the transition conditions between pairwise states in the software state space, analyze the correctness of state transitions under conditions where the transition conditions are \"not set, always satisfied, unsatisfiable,\" etc.",
            "Is the sequence and timing of control by the system coordinated with the hardware, and are the control conditions complete and consistent?",
            "The control calculation process for functions varies under different states and working stages. Check the function inputs and analyze the correctness of function processing in cases such as \"not considering working stages, not considering working states\".",
            "Does the timing of output control status meet the scene requirements?",
            "When issuing dangerous control commands or actions, is there a rational judgment based on the equipment status?"
        ],
        "safety_requirements": [
            "The system should ensure that the timing of output control status during the flare phase meets the scenario requirements, leveling the aircraft's trajectory angle to land with a low descent rate. The lateral control method is the same as that of the latter part of the glide phase.",
            "When the system issues control commands or actions during the flattening phase, it should make a rational judgment based on the current state of the aircraft to prevent issuing hazardous control commands. Safety is a priority in this process.",
            "The system should check the transfer conditions between the flattening phase and other states to ensure the correctness of state transitions under conditions such as 'not set, always met, cannot be met'.",
            "During the flare phase, the system should ensure that the control sequence and timing are coordinated with the hardware, that control conditions are comprehensive and consistent, to level the aircraft's trajectory angle for landing with a low descent rate, and the lateral control method is the same as in the latter part of the glide.",
            "The system should check the functional inputs during control calculations in different states and working phases to ensure the correctness of the aircraft trajectory angle leveling and lateral directional control during the leveling phase under conditions such as 'unconsidered working phase, unconsidered working state'."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 195,
        "requirement": "The system should transition from a roll-to-level height of 1.5m during the roll-to-level phase to meet the conditions for switching to the landing rollout segment.",
        "original_safety_criterions": [
            "There is no transition relationship between two or more states; check the entry conditions for these states and analyze the correctness of state execution under conditions such as \"satisfied simultaneously, satisfied during state execution.\"",
            "Check the transfer conditions between pairwise states in the software state space, analyze the correctness of state transitions under conditions where the transfer conditions are \"not set, always satisfied, cannot be satisfied,\" etc.",
            "Check the entry conditions for states and analyze the correctness of state execution during the process when the entry conditions are \"met, not met, met again,\" etc."
        ],
        "safety_requirements": [
            "The system should check the entry conditions during the roll-to-level phase to ensure the correctness of state execution when the entry conditions are 'met, not met, met again' during the state execution.",
            "The system should check the transfer conditions between the roll-to-level phase and the landing rollout segment to ensure the correctness of state transitions when the transfer conditions are 'not set, always met, cannot be met'.",
            "The system should transition from the roll-to-level height of 1.5m to meet the conditions for switching to the landing rollout phase, ensuring the correctness of state execution under the condition that 'all requirements are met simultaneously and during the state execution process'.",
            "The system should provide real-time monitoring and early warning mechanisms for state transitions, ensuring that during the transition from the roll-to-level phase to the landing rollout segment, any abnormal conditions can be detected and handled promptly."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 196,
        "requirement": "The system should receive a remote control ground contact signal or a full compression signal of the landing gear, or enter the landing rollout phase 75 beats after a link abnormality. It should use the rudder and brakes to correct the aircraft's lateral deviation and yaw angle relative to the runway axis during the landing rollout.",
        "original_safety_criterions": [
            "Check the logical judgment conditions and logical branches of the function, and analyze the correctness of function processing in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "The control calculation process for functions varies under different states and working phases. Check the function inputs and analyze the correctness of function processing in cases such as \"not considering working phases, not considering working states\".",
            "Check the duration of each task, analyze the correctness of function processing in cases where the task duration is less than the specified time.",
            "Check the execution sequence of tasks and analyze the correctness of function processing when the task execution sequence is inconsistent with the specified sequence.",
            "Check the duration of each task, analyze the correctness of functional processing in cases where the task duration exceeds the specified time."
        ],
        "safety_requirements": [
            "The system should check logical judgment conditions and logical branches during the landing rollout phase to ensure that in cases of 'logical always false, logical always true, incorrect logical judgment conditions, omitted logical branches', it correctly enters the landing rollout phase 75 beats after receiving a remote control ground contact signal, or a full compression signal of the landing gear, or a link abnormality. It should use the rudder and brakes to correct the aircraft's lateral deviation and yaw angle relative to the runway centerline.",
            "The system should check the mission duration during the landing roll phase to ensure that, in cases where the mission duration is longer or shorter than the specified time, it correctly enters the landing roll phase 75 beats after receiving a remote control ground signal, a full compression signal of the landing gear, or a link anomaly. It should use the rudder and brakes to correct the aircraft's lateral deviation and yaw angle relative to the runway axis.",
            "The system should check the sequence of task execution during the landing rollout phase to ensure that, in case the task execution sequence does not match the specified sequence, it correctly enters the landing rollout phase 75 beats after receiving a remote control ground signal, or a full compression signal of the landing gear, or a link anomaly. It should use the rudder and brakes to correct the lateral deviation and yaw angle of the aircraft relative to the runway axis.",
            "The system should check functional inputs during the landing rollout phase to ensure that, in cases such as 'unconsidered operating phases, unconsidered operating conditions,' it correctly enters the landing rollout segment after receiving a remote ground signal or a full compression signal of the landing gear or 75 beats after a link anomaly. It should use the rudder and brakes to correct the aircraft's lateral deviation and yaw angle relative to the runway centerline.",
            "The system should ensure the correct calculation of rudder and brake control during the landing rollout phase, especially under different states and operational stages, upon receiving a remote ground contact signal or a fully compressed landing gear signal, or 75 beats after a link anomaly, to correctly enter the landing rollout phase and use the rudder and brakes to correct the aircraft's lateral deviation and yaw angle relative to the runway centerline. Safety is a crucial consideration throughout this process."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 197,
        "requirement": "The system should control the aircraft to enter the gliding phase after engine shutdown in the air.",
        "original_safety_criterions": [
            "After performing hardware control, is there monitoring and judgment of the match between the hardware status and the control requirements?",
            "After system recovery, does the critical state recorded still meet the real-time requirements?",
            "Can the system recover to its normal operating state after the power failure recovery or runaway reset mechanism is activated?"
        ],
        "safety_requirements": [
            "After recovery, the system should ensure that the critical states of the recorded fall phase still meet real-time requirements to prevent data delays from affecting control performance.",
            "The system should recover to normal operating conditions after power loss recovery or the initiation of a runaway reset mechanism, especially controlling the aircraft to enter the gliding phase after an in-air engine shutdown during the gliding stage, ensuring Safety.",
            "After the system performs hardware control, it should monitor and determine the match between the hardware status and control requirements when the aircraft enters the descent phase after an in-flight shutdown, ensuring the correct execution of control commands.",
            "The system should provide real-time monitoring and early warning mechanisms during the drifting phase to ensure that any abnormal conditions can be detected and handled promptly when controlling the aircraft entering this phase."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 198,
        "requirement": "The remote control operation quantities correspond to the deflection angle commands of the control surfaces and the throttle valve bias commands. The linear correspondence between the rudder deflection angles and throttle valve commands and the remote control operation quantities is as follows: δz (-28º to +28º), δx (-20º to +20º), δy (-25º to +25º), δp (0 to 115%). The amplitude limit is [-30°, +20°].",
        "original_safety_criterions": [
            "Check the output data of different redundancies and analyze the correctness of function implementation under the conditions of \"single redundancy failure, multiple redundancies all fail\".",
            "Is the sensor's collection range clearly defined (upper and lower limits), and does it report a sensor failure when the values exceed the collection range?",
            "Check the control calculation process of the function, analyze the correctness of function handling in cases where the control calculation process times out (does not return results within the specified time).",
            "Multiple functions are executed serially, with the output data of the preceding function serving as the input data for the subsequent function. The output data of the preceding function is checked, analyzing the data values for cases such as \"boundary value combinations, initial value combinations, Safety value combinations, default value combinations,\" etc., to ensure the correctness of multi-function processing.",
            "Check the results of functional control calculations and analyze the correctness of functional processing under conditions such as normal values, abnormal values, boundary values, maximum and minimum values."
        ],
        "safety_requirements": [
            "The system should check the linear correspondence between remote control manipulation quantities and surface deflection commands and throttle bias commands (δz (-28º to +28º), δx (-20º to +20º), δy (-25º to +25º), δp (0 to 115%)) and amplitude limits ([ -30°, +20°]) for correctness, ensuring the accuracy of multi-function processing under combinations of boundary values, initial values, Safety values, and default values.",
            "The system should check the output data of different redundancies to ensure the correctness of remote control manipulation corresponding to rudder deflection commands and throttle valve bias commands under single redundancy failure or multiple redundancy failures, especially the linear correspondence and limit accuracy of rudder deflections δz (-28º to +28º), δx (-20º to +20º), δy (-25º to +25º), δp (0 to 115%) and the limit amplitude [-30°, +20°].",
            "The system should check the control calculation results of the surface deflection commands and throttle bias commands corresponding to remote control operations, ensuring the correctness of functional processing under normal values, abnormal values, boundary values, maximum and minimum values, especially for rudder deflections δz (-28º to +28º), δx (-20º to +20º), δy (-25º to +25º), δp (0 to 115%), and amplitude limitations of [-30°, +20°].",
            "The system should check the control calculation process for the deflection angle commands of the control surfaces and the throttle valve bias commands corresponding to the remote operation quantities, ensuring the correctness of functional handling in cases such as timeouts in the control calculation process (not returning results within the specified time).",
            "The system should clearly define the sensor acquisition range (upper and lower limits) to ensure that sensor failures are reported when values exceed these limits. The specific ranges are: δz (-28º to +28º), δx (-20º to +20º), δy (-25º to +25º), δp (0 to 115%). The amplitude limit is [-30°, +20°]."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 199,
        "requirement": "Elevator control amount (0~255), aileron control amount (0~255), rudder control amount (0~255), throttle control amount (0~255).",
        "original_safety_criterions": [
            "The timing relationships, constraint relationships, concurrent relationships, and combinational relationships between the control logics of each functional point are correct.",
            "Check the logical conditions and branches of the function, analyze the correctness of function processing under conditions such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "Check the results of the function's control calculations and analyze the correctness of function processing under conditions such as normal values, abnormal values, boundary values, maximum and minimum values.",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\"."
        ],
        "safety_requirements": [
            "The system should check the logical conditions and logic branches of elevator, aileron, rudder, and throttle control quantities to ensure the correctness of function processing in cases such as 'logic always false, logic always true, incorrect logical judgment conditions, missing logic branches'.",
            "The system should check the control quantities (0-255) of the elevator, ailerons, rudder, and throttle to ensure the correctness of functional processing under various conditions including normal values, abnormal values, boundary values, maximum and minimum values.",
            "The system should ensure the correct timing, constraint, concurrency, and combination relationships between elevator control input, aileron control input, rudder control input, and throttle control input to prevent functional failures due to incorrect relationships. Safety is a critical concern in this context.",
            "The system should inspect the working status of different redundancies to ensure correctness in functionality of elevator control quantity (0～255), aileron control quantity (0～255), rudder control quantity (0～255), and throttle control quantity (0～255) when situations like 'two or more redundancies are in different states' occur."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 200,
        "requirement": "By using the remote control switch command, the deflection of the ailerons and elevators is reduced to two-thirds of the aforementioned values, thus the corresponding relationship becomes: δz (-20º~+20º), δx (-13º~+13º), δy (-25º~+25º), δp (0～115%).",
        "original_safety_criterions": [
            "Check the values of continuous output data with different redundancies, analyze the correctness of function implementation in cases where two or more redundancy output data values are inconsistent, meaning the difference in values exceeds the specified threshold.",
            "Check the values of the same input data received by different redundancies, and analyze the correctness of function implementation when the values of the same input data received by two or more redundancies are inconsistent. Ensure Safety.",
            "The timing relationships, constraint relationships, concurrent relationships, and组合 relationships between the control logics of each functional point are correct.",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as 'two or more redundancies being in different states'."
        ],
        "safety_requirements": [
            "The system should ensure the correct relationship of δz (-20º to +20º), δx (-13º to +13º), δy (-25º to +25º), δp (0 to 115%) when the aileron and elevator deflections are respectively attenuated to two-thirds of the aforementioned values through remote control switch commands. The timing relationships, constraint relationships, concurrent relationships, and combinational relationships between the control logics of each functional point must be accurate.",
            "The system should check the values of continuous output data with different redundancies to ensure the correctness of the aileron and elevator deflection attenuation functions when the values are inconsistent, meaning the difference in values exceeds the specified threshold.",
            "The system should check the values of the same input data received from different redundancies to ensure the correctness of the aileron and elevator deflection attenuation functions in case of 'value inconsistency'.",
            "The system should check the operating status of different redundancies to ensure the correctness of the aileron and elevator deflection attenuation function when 'two or more redundancies are in different states'."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 202,
        "requirement": "The control range and precision requirements for elevator control (0 to 255), aileron control (0 to 255), rudder control (0 to 255), and throttle control (0 to 255)",
        "original_safety_criterions": [
            "Check the results of the function's control calculations, analyzing the correctness of function processing under conditions such as normal values, abnormal values, boundary values, maximum and minimum values."
        ],
        "safety_requirements": [
            "The system should check the control calculation results for elevator control inputs (0 to 255), aileron control inputs (0 to 255), rudder control inputs (0 to 255), and throttle control inputs (0 to 255) to ensure correctness of the control calculation results under conditions such as normal values, abnormal values, boundary values, and extreme maximum and minimum values.",
            "The system should ensure that the control range and precision requirements for elevator control, aileron control, rudder control, and throttle control are strictly adhered to, preventing commands exceeding the control range from causing system failures.",
            "The system should immediately trigger a warning mechanism and take corresponding Safety measures when it detects abnormal control calculation results, ensuring stable system operation.",
            "The system should provide real-time monitoring and logging functions to record changes in control calculation results, facilitating troubleshooting and Safety audits."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 203,
        "requirement": "The implementation of five flight control modes: autonomous control, manual correction control, command control, attitude remote control, and surface remote control.",
        "original_safety_criterions": [
            "The possible hazards that various control functions may cause during the switching process of different operating scenarios of the system?",
            "Are the entry conditions, exit conditions, and constraints for each mode sufficient and accurate?",
            "Is the sequence and timing of control by the system coordinated with the hardware, and are the control conditions complete and consistent?",
            "The timing relationships, constraint relationships, concurrent relationships, and combinational relationships between the control logics of each functional point are correct."
        ],
        "safety_requirements": [
            "The system should ensure the correct timing, constraint, concurrency, and combination relationships between the five flight control modes: autonomous control, manual correction control, command control, attitude remote control, and surface remote control.",
            "The system should ensure the Safety of all control functions during the switching process of the five flight control modes: autonomous control, manual correction control, command control, attitude remote control, and surface remote control, to prevent hazards.",
            "The system should ensure that the entry conditions, exit conditions, and constraint conditions for the five flight control modes - autonomous control, manual correction control, command control, attitude remote control, and surface remote control - are fully and accurately met.",
            "The system should ensure that the control sequence and timing of the five flight control modes - autonomous control, manual correction control, command control, attitude remote control, and surface remote control - are coordinated with the hardware. The control conditions should be complete and consistent throughout."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 204,
        "requirement": "Special handling during control mode switching",
        "original_safety_criterions": [
            "Two or more states with transfer relationships have the same function. Check the execution of this function before and after the state transition, and analyze the correctness of function processing in cases such as \"starting execution, maintaining execution, interrupting execution\" after the state transition.",
            "When the working state transitions, check the values of the functional interface data and analyze the correctness of the outputs in cases where \"values change or the range of values changes.\"",
            "Check the transfer conditions between pairwise states in the software state space, analyze the correctness of state transitions under conditions where the transfer conditions are \"not set, always satisfied, unsatisfiable,\" etc."
        ],
        "safety_requirements": [
            "The system should check the execution of functions before and after switching control modes to ensure correctness in handling situations such as 'start execution, maintain execution, interrupt execution'.",
            "The system should check the transfer conditions between each pair of states when switching control modes, ensuring the correctness of state transitions in cases such as 'not set, always satisfied, cannot be satisfied'.",
            "The system should check the values of functional interface data during control mode switching to ensure correctness of the output when there are changes in values or changes in the range of values.",
            "The system should ensure the integrity and consistency of functional interface data during control mode transitions, preventing incorrect data from affecting the proper execution of functions.",
            "The system should provide an abnormality detection mechanism during control mode switching to ensure that warnings are triggered promptly and appropriate measures are taken in case of anomalies."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 205,
        "requirement": "In autonomous control mode, sending any of the commands described in 3.2.4 during the phase from climb segment 2 (inclusive) to completing the route and entering the final approach segment (exclusive) can switch to command control mode.",
        "original_safety_criterions": [
            "Check the transmission and reception cycles of the interface data, analyzing whether the transmission and reception cycles match."
        ],
        "safety_requirements": [
            "The system should check the transmission and reception command cycle during the phase from climbing segment 2 (inclusive) to completing the route and cutting into the final approach segment (exclusive) while in autonomous control mode, ensuring that the transmission and reception cycles match when sending any of the commands described in 3.2.4.",
            "The system, in autonomous control mode, from climbing phase 2 (inclusive) to the completion of the route before entering the final approach segment (exclusive), should ensure the real-time and accurate transmission and reception of commands to prevent control mode switch failures due to mismatched cycles.",
            "The system should provide mechanisms to ensure the integrity and consistency of command sending and receiving during the phase from climb segment 2 (inclusive) to completing the route before cutting into the final approach segment (exclusive) under autonomous control mode, preventing data loss or errors.",
            "The system, in autonomous control mode, from climbing phase 2 (inclusive) to the completion of the route before entering the final approach segment (exclusive), should have an anomaly detection and handling mechanism to ensure timely alarms and appropriate measures are taken when there is a mismatch in the transmission and reception cycle. Safety must be ensured throughout this process."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 206,
        "requirement": "In command control mode, issuing an \"autonomous control\" command can switch back to autonomous control mode.",
        "original_safety_criterions": [
            "The control calculation process for functions varies under different states and working stages. Check the function inputs and analyze the correctness of function processing in scenarios such as \"without considering working stages, without considering working states\".",
            "During the state execution process, if the software restarts due to a power loss, check the state after restart and analyze the correctness of state execution in scenarios such as \"state not recovered, incorrect recovery,\" etc. Safety concerns must be addressed in this process."
        ],
        "safety_requirements": [
            "The system should check functional inputs at different states and working phases to ensure the correctness of command control mode switching in cases of 'unconsidered working phase' or 'unconsidered command control mode'.",
            "The system, under command control mode, should ensure that when an 'autonomous control' command is issued, it can correctly switch back to autonomous control mode and perform status confirmation.",
            "The system should provide real-time monitoring and logging of instruction control mode switches to ensure traceability of the switching process.",
            "The system should verify the current status and working phase when switching in command control mode to prevent illegal or unsafe mode transitions. Safety is a crucial concern in this process."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 207,
        "requirement": "The switch between autonomous control and command control does not alter the control law and does not require softening treatment.",
        "original_safety_criterions": [
            "Does the timing of the output control status meet the scene requirements?",
            "The control calculation process for functions varies under different states and working phases. Check the function inputs and analyze the correctness of function processing in scenarios such as \"not considering working phases, not considering working states\".",
            "For critical control or actions, is there a timeout judgment to handle situations where the hardware status does not meet control requirements for an extended period?"
        ],
        "safety_requirements": [
            "When the system switches between autonomous control and command control, it should ensure that the timing of the switch meets the scenario requirements, does not alter the control law, and does not require softening processing.",
            "The system should check functional inputs at different states and working stages to ensure the correctness of switching between autonomous control and command control in cases of 'unconsidered working stages' or 'unconsidered working states'.",
            "The system should ensure a smooth transition between autonomous control and command control, preventing improper switching from causing changes in control laws or instability in the system.",
            "The system should perform real-time monitoring of the switching process between autonomous control and command control, ensuring the correctness and timeliness of the switching operation, and trigger a warning mechanism in case of abnormalities."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 208,
        "requirement": "In autonomous control mode, issuing a \"manual correction\" command can switch to manual correction mode.",
        "original_safety_criterions": [
            "The possible hazards that various control functions may cause during the switching process of different operating scenarios of the system?",
            "The control calculation process for functions varies under different states and working phases. It is necessary to check the function inputs and analyze the correctness of function processing in cases such as \"not considering working phases, not considering working states\".",
            "Check and analyze the correctness of states and functions with different priorities set under transfer relationships between two or more states, including situations like high priority switching to low priority and low priority switching to high priority."
        ],
        "safety_requirements": [
            "The system should check functional inputs in autonomous control mode to ensure it can correctly switch to manual correction mode when a 'manual correction' command is issued, avoiding functional processing errors due to failure to consider the working phase or working status.",
            "The system should ensure the Safety of all control functions during the switching process between autonomous control mode and manual correction mode, preventing hazards caused by functional abnormalities during the switching process.",
            "The system should check the correctness of high-priority functions switching to low-priority functions and vice versa when there is a transition relationship between autonomous control mode and manual correction mode, ensuring the correctness and Safety of states and functions.",
            "The system should provide real-time monitoring and early warning mechanisms to ensure that during the switching process between autonomous control mode and manual correction mode, any abnormal situations can be detected and handled in a timely manner."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 209,
        "requirement": "When switching from manual correction to autonomous control, the manual correction amount is removed from the control law without requiring any softening treatment.",
        "original_safety_criterions": [
            "Does the timing of output control status meet the scene requirements?",
            "Check the transfer conditions between pairwise states in the software state space, analyze the correctness of state transitions under conditions where the transfer conditions are \"not set, always satisfied, unsatisfiable,\" etc.",
            "Does the fault detection have anti-false alarm processing, and will this processing meet the real-time requirements for alarm handling?"
        ],
        "safety_requirements": [
            "The system should ensure that the timing of output control status when switching from manual correction to autonomous control meets the scenario requirements, preventing control abnormalities caused by switching too early or too late.",
            "The system should check the state transition conditions when switching from manual correction to autonomous control, ensuring the correctness and Safety of state transitions in cases such as 'not set, always met, cannot be met'.",
            "The system should monitor and record the state transition conditions in real time when switching from manual correction to autonomous control, ensuring traceability of the state transition process.",
            "The system should provide an anomaly detection mechanism when switching from manual correction to autonomous control, ensuring that warnings are triggered in time and appropriate measures are taken if the state transition conditions are not met."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 210,
        "requirement": "When autonomously switching control to attitude remote control, the control law structure changes, requiring the specified attitude angles to be softened, with a softening time of 2 seconds. Additionally, throttle commands need to be softened, also with a softening time of 2 seconds.",
        "original_safety_criterions": [
            "The control calculation process for functions varies under different states and working stages. Check the function inputs and analyze the correctness of function processing in scenarios such as \"not considering working stages, not considering working states\".",
            "Check the transfer conditions between pairwise states in the software state space, analyze the correctness of state transitions under conditions where the transfer conditions are \"not set, always satisfied, impossible to satisfy,\" etc.",
            "For critical control or actions, is there a timeout judgment to handle situations where the hardware status does not meet control requirements for an extended period?"
        ],
        "safety_requirements": [
            "The system should check the status transfer conditions when autonomously switching from automatic control to attitude remote control, ensuring the correctness and Safety of the status transfer under situations such as 'not set, always satisfied, cannot be met'.",
            "The system should check the function inputs when autonomously switching from automatic control to attitude remote control, ensuring the correctness of control law structure changes and the softening handling of attitude angles and throttle commands in cases such as 'unconsidered working phases, unconsidered working states'.",
            "The system should perform a timeout judgment when autonomously switching control to attitude remote control, to handle situations where the hardware status does not meet control requirements for an extended period, ensuring that the system can take Safety measures after a timeout.",
            "The system should ensure that the softening processing of attitude angles and throttle commands is smoothly completed within 2 seconds when autonomously switching to attitude remote control, preventing system instability caused by sudden changes."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 211,
        "requirement": "When switching from attitude remote control to autonomous control, the control law structure changes, requiring the commanded attitude angles to be softened, with a softening time of 2 seconds. If the aircraft is cruising (climbing 2, maintaining altitude, or descending), it will change from the target latitude and longitude to the current position's latitude and longitude of the aircraft, guiding the aircraft to fly towards the original target point. Throttle command softening is required, with a softening time of 2 seconds.",
        "original_safety_criterions": [
            "Check and analyze the correctness of states and functions with different priorities set under transfer relationships between two or more states, including situations such as high priority switching to low priority and low priority switching to high priority.",
            "Check the transfer conditions between pairwise states in the software state space, analyze the correctness of state transitions under conditions where the transfer conditions are \"not set, always satisfied, cannot be satisfied,\" etc.",
            "The possible hazards that various control functions may cause during the switching process of different operating scenarios of the system?",
            "Is the software correctly handling the situation where the redundancy switch takes too long?",
            "For critical control or actions, is there a timeout judgment to handle situations where the hardware status does not meet control requirements for an extended period?"
        ],
        "safety_requirements": [
            "The system should ensure that the redundancy switching time does not exceed 2 seconds when switching from attitude remote control to autonomous control, and correctly handle the changes in control law structure. The given attitude angle should be softened, with a softening time of 2 seconds.",
            "When the system switches from attitude remote control to autonomous control, if the aircraft is cruising (climbing 2, maintaining altitude, or descending), it should change the target point's latitude and longitude to the current position's latitude and longitude of the aircraft. This guides the aircraft to fly towards the original target point and performs a softening of the throttle commands, with a softening time of 2 seconds.",
            "During the process of switching from attitude remote control to autonomous control, the system should analyze potential hazards caused by changes in the control law structure, ensuring that the softening processing of given attitude angles and throttle commands is correct, with a softening time of 2 seconds.",
            "The system should have a timeout judgment mechanism when switching from attitude remote control to autonomous control, to handle situations where the hardware status does not meet the control requirements for a long time.",
            "When the system switches between attitude remote control mode and autonomous control mode, the correctness of the status and functions should be checked, especially when the control law structure changes, to ensure that the soft processing of the given attitude angles and throttle commands is correct, with a softening time of 2 seconds.",
            "When the system switches from attitude remote control to autonomous control, it should check the correctness of the state transition conditions. It must ensure that during situations such as 'not set, always satisfied, cannot be satisfied', when the control law structure changes, the softening process of the given attitude angles and throttle commands (softening time is 2 seconds) is correct."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 212,
        "requirement": "When switching from autonomous control to rudder surface remote control, it changes to direct rudder surface control, and the rudder deflection command is softened with a softening time of 2 seconds. Additionally, the throttle command needs to be softened, with a softening time of 2 seconds.",
        "original_safety_criterions": [
            "Is the detection logic for fault items reasonable, and will the detection method affect the normal operation of the equipment?",
            "Check the system status, operational phase, or software status corresponding to system tasks, and analyze the correctness of status execution in cases such as \"no corresponding software status exists\" or \"software is inconsistent with the system.\"",
            "Check the interface data communication upon software power loss and restart, analyzing the correctness of outputs in scenarios such as \"interruption, reconnection, unable to recover\"."
        ],
        "safety_requirements": [
            "When the system switches from autonomous control to rudder surface remote control, it should ensure that the rudder deflection commands and throttle commands are softened. The softening time is 2 seconds to prevent sudden changes from causing shocks to the equipment.",
            "The system should check the correctness of interface data communication when the software restarts after a power loss, ensuring that in cases of 'interruption, reconnection, and irrecoverable errors', it can autonomously control the switch to rudder remote control. During this switch, the system should soften the rudder deflection commands and throttle commands, with a softening time of 2 seconds.",
            "When the system switches from autonomous control to rudder surface remote control, it should check the system status, operational phase, or software status corresponding to the system task to ensure that in cases where there is no corresponding software status or inconsistency between the software and the system, it switches to direct rudder surface control and softens the rudder deflection commands and throttle commands. The softening time is 2 seconds.",
            "The system should check the logic's validity when autonomously switching control to rudder surface remote control, ensuring that the detection method does not affect the normal operation of the equipment, especially during the softening process of rudder deflection commands and throttle commands (the softening time is 2 seconds).",
            "The system should provide real-time monitoring and early warning mechanisms to ensure that when autonomous control switches to rudder remote control, the softening processing of rudder deflection commands and throttle commands (with a softening time of 2 seconds) can proceed smoothly, preventing abnormal conditions from causing equipment failure."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 213,
        "requirement": "When switching from rudder surface remote control to autonomous control, specific operations are required, but the document does not describe this in detail. It is recommended to further clarify the specific changes in control laws and softening treatment.",
        "original_safety_criterions": [
            "Check the transition conditions between pairwise states in the software state space, analyze the correctness of state transitions under conditions where the transition conditions are \"not set, always satisfied, cannot be satisfied,\" etc.",
            "If the redundancy switch fails when the conditions for redundancy switching are met, has the software handled it correctly?",
            "Is the software correctly handling the situation where the redundancy switch time is too long?",
            "When issuing control commands or actions that are hazardous, is there a rational judgment based on the equipment status?",
            "Is there a reasonable range for the rate of change of parameters (upper and lower limits of slope), and is the handling strategy for data exceeding the slope limit clearly defined?"
        ],
        "safety_requirements": [
            "The system should ensure that the redundancy switch time when switching from rudder surface remote control to autonomous control is within a reasonable range, and take correct handling measures if the switch time is too long, ensuring system stability.",
            "The system should check if the parameter change rate is within a reasonable range (upper and lower limits of slope) when switching from rudder surface remote control to autonomous control, and clearly process the data exceeding the slope limit to ensure the accuracy of the data.",
            "When the system switches from rudder surface remote control to autonomous control, if the redundancy switch fails, appropriate measures should be taken to ensure the system can return to a Safety state.",
            "The system should check the status transfer conditions when switching from rudder surface remote control to autonomous control, ensuring the correctness of status transfer in cases such as 'not set, always met, cannot be met', and trigger a warning mechanism in abnormal situations."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 214,
        "requirement": "Issuing the \"autonomous control\" command can achieve this transition, exiting direct surface control and softening the rudder deflection commands, with a softening time set to 2s. If the aircraft is cruising (climbing 2, maintaining altitude, or descending) at this moment, it will change from the point latitude and longitude to the current position's latitude and longitude of the aircraft, guiding the aircraft to fly towards the original arrival point. Throttle command softening needs to be performed, with a softening time set to 2s.",
        "original_safety_criterions": [
            "Is the sequence and timing of system control coordinated with the hardware, and are the control conditions complete and consistent?",
            "Check the logical conditions and branches of the function, and analyze the correctness of function processing under scenarios such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "Is the software correctly handling the situation where the redundancy switch takes too long?",
            "Check the process of control calculation for functions, analyze the correctness of function handling in cases where the control calculation process times out (does not return results within the specified time).",
            "The timing relationships, constraint relationships, concurrent relationships, and combinational relationships between the control logics of each function point are correct."
        ],
        "safety_requirements": [
            "The system should correctly handle the softening of rudder deflection commands and throttle commands when the redundancy switch time is too long, with the softening time set to 2 seconds. It must ensure that during cruising (climb 2, level flight, and descent), the经纬度of the target point is changed to the current geographical coordinates of the aircraft to guide it towards the original target point. \n\nNote: The term \"经纬度\" was used twice in the original text, which directly translates to \"geographical coordinates\" or \"latitude and longitude\". For clarity, I've translated it as such in the second instance.",
            "When the system issues 'autonomous control' commands, it should ensure that the control sequence and timing are coordinated with the hardware, that control conditions are comprehensive and consistent, including setting the softening time for rudder deflection commands and throttle commands to 2s, and during cruising (climb 2, level flight, and descent) states, changing the reference latitude and longitude to the current position's latitude and longitude of the aircraft.",
            "The system should check the logical judgment conditions and logical branches for autonomous control commands to ensure the correctness of function processing in cases such as 'logical always false, logical always true, incorrect logical judgment conditions, missing logical branches', especially the correctness of logic during the switch between direct surface control and throttle command softening process.",
            "The system should check the control decoding process of autonomous control commands to ensure the correctness of functional handling when issues such as timeouts (not returning results within the specified time) occur during the control decoding process. It should ensure that the softening processing of rudder deflection commands and throttle commands is completed within the softening time (2s).",
            "The system should ensure the correct timing, constraint, concurrency, and combination relationships between the control logics of various functional points, especially when issuing 'autonomous control' commands. It must ensure that the softening time for rudder deflection commands and throttle commands during the switching process is set to 2s. Additionally, it should ensure the logic is correct for changing from point latitude and longitude to the aircraft's current position latitude and longitude during cruising (climbing 2, maintaining altitude, and descending) states."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 215,
        "requirement": "Issuing the \"surface remote control\" command can achieve this switch, transitioning to direct surface control, and softening the rudder deflection commands, with the softening time set to 2s.",
        "original_safety_criterions": [
            "Check the logical judgment conditions and logical branches of the function, analyze the correctness of function processing in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "Check the duration of each task, analyze the correctness of functional processing in cases where the task duration is less than the specified time.",
            "The timing relationships, constraint relationships, concurrent relationships, and combinational relationships between the control logics of each functional point are correct.",
            "The control calculation process for functions varies under different states and working stages. Check the function inputs and analyze the correctness of function processing in scenarios such as \"not considering working stages, not considering working states\"."
        ],
        "safety_requirements": [
            "When the system issues 'surface remote control' commands, it should check the duration of the surface remote control command to ensure the correctness of functional processing when the duration is less than 2 seconds.",
            "The system should check functional inputs at different states and working stages to ensure the correctness of rudder deflection command processing without considering the working stage or the working state.",
            "When the system issues a 'surface remote control' command to switch to direct surface control, it should ensure the correct timing, constraint, concurrency, and combination relationships between the control logics of each functional point, especially when the rudder deflection command is softened with a softening time set to 2 seconds.",
            "The system should check the logical judgment conditions and logical branches for the remote control commands of the control surfaces, ensuring the correctness of functional processing in cases where the logic is always false, always true, the logical judgment conditions are incorrect, or the logical branches are omitted."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 216,
        "requirement": "Issuing a \"posture remote control\" command can achieve this transition, exiting the direct surface control and softening the rudder deflection commands, with the softening time set to 2 seconds.",
        "original_safety_criterions": [
            "Check the logical conditions and branches of the function's logic, analyze the correctness of function handling in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "Are the entry and exit conditions for each mode consistent?",
            "The timing relationships, constraint relationships, concurrent relationships, and combinational relationships between the control logics of each functional point are correct.",
            "Check the duration of each task, analyze the correctness of functional processing in cases where the task duration exceeds the specified time."
        ],
        "safety_requirements": [
            "When the system receives a 'posture remote control' command, it should check the logical judgment conditions and logical branches to ensure the correctness of function handling in cases such as 'logically always false, logically always true, incorrect logical judgment conditions, missing logical branches'.",
            "The system should check the timing, constraint, concurrency, and combination relationships between 'attitude remote control' commands and direct surface control to ensure the correctness of functional processing when command switching and softening time are set to 2s.",
            "The system should check the duration of each task to ensure the correctness of functional processing when the task duration exceeds the specified time (such as 2s).",
            "The system should ensure that when exiting direct surface control, the softening time for rudder deflection commands is set to 2 seconds, and a smooth transition occurs during this period to prevent sudden changes from affecting the flight status. Safety is a priority in this process.",
            "The system should provide real-time monitoring mechanisms to ensure the correctness and consistency of rudder deflection commands during the switching and softening process of 'attitude remote control' instructions."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 217,
        "requirement": "Issuing a \"posture remote control\" command can achieve this switching, softening the given attitude angle, with the softening time set to 2s. Throttle command softening is required, with the softening time set to 2s.",
        "original_safety_criterions": [
            "Check the logical judgment conditions and logical branches of the function, analyze the correctness of function processing in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "The timing relationships, constraint relationships, concurrent relationships, and combinational relationships between the control logics of each functional point are correct.",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\"."
        ],
        "safety_requirements": [
            "The system should check the logical judgment conditions and logical branches for attitude remote control commands to ensure correctness in processing these commands under circumstances such as 'logically always false, logically always true, incorrect logical judgment conditions, missing logical branches'.",
            "The system should check the working status of different redundancies to ensure the correctness of the attitude telecontrol command and throttle command softening function implementation in cases such as 'two or more redundancies being in different states'.",
            "The system should ensure the correctness of the control logic and timing relationships, constraint relationships, concurrent relationships, and combinational relationships of attitude teleoperation commands, especially during the softening process of attitude angles and throttle commands (the softening time is set to 2s). Safety must be a priority throughout these processes.",
            "The system should perform real-time monitoring of the softening process in response to attitude remote control commands and throttle commands, ensuring the softening time is set to 2s, and trigger a warning mechanism in case of abnormalities."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 218,
        "requirement": "Issuing the \"surface remote control\" command can achieve this switch, softening the rudder deflection commands, with the softening time set to 2 seconds. The throttle command needs to be softened, with the softening time also set to 2 seconds.",
        "original_safety_criterions": [
            "Check the logical judgment conditions and logical branches of the function, analyze the correctness of function processing in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "The timing relationships, constraint relationships, concurrent relationships, and combinational relationships between the control logics of each functional point are correct.",
            "Check the duration of each task, analyze the correctness of functional processing in cases where the task duration exceeds the specified time.",
            "Check the duration of each task, analyze the correctness of functional processing in cases where the task duration is less than the specified time."
        ],
        "safety_requirements": [
            "When the system issues 'surface remote control' commands, it should check the logical judgment conditions and logical branches of the surface remote control commands and throttle commands to ensure the correctness of functional processing in cases such as 'logically always false, logically always true, incorrect logical judgment conditions, missing logical branches'.",
            "The system should ensure the correct timing, constraint, concurrency, and combination relationships between the control logics of various functional points, especially when issuing 'surface remote control' commands. The system should soften the rudder deflection commands and throttle commands, with a softening time set to 2s.",
            "The system should check the softening time for rudder surface remote control commands and throttle commands to ensure the correctness of functional processing when the softening time is less than 2s.",
            "The system should check the softening time of rudder surface remote control commands and throttle commands to ensure the correctness of functional processing when the mission duration exceeds the specified time (such as a softening time of 2s for rudder surface remote control commands or a softening time of 2s for throttle commands).",
            "The system should ensure that when issuing 'surface remote control' commands, it softens the rudder deflection commands and throttle commands, with a softening time set to 2 seconds. It should also provide real-time monitoring and anomaly handling mechanisms to prevent erroneous commands from affecting system Safety."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 219,
        "requirement": "Issuing a \"posture remote control\" command can achieve this switch, softening the given posture angle, with the softening time set to 2s. Throttle command softening needs to be performed, with the softening time set to 2s.",
        "original_safety_criterions": [
            "Check the logical judgment conditions and logical branches of the function, analyze the correctness of function handling in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "The timing relationships, constraint relationships, concurrent relationships, and combinational relationships between the control logics of each functional point are correct.",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as 'two or more redundancies being in different states'."
        ],
        "safety_requirements": [
            "The system should check logical judgment conditions and logical branches when processing attitude remote control commands to ensure the correctness of function handling in cases such as 'logical always false, logical always true, incorrect logical judgment conditions, missing logical branches'.",
            "The system should ensure the correct timing, constraint, concurrency, and combination relationships between attitude telecontrol commands and throttle commands to prevent safety issues caused by command conflicts or incorrect sequences.",
            "When the system is in different working states at different redundancies, the implementation of attitude telecommand instructions and throttle instructions softening function should be checked to ensure the correctness and consistency of the instruction softening function when 'two or more redundancies are in different states'.",
            "When the system issues 'attitude remote control' commands, it should ensure that the softening times for the given attitude angles and throttle commands are both 2 seconds, and provide real-time monitoring and anomaly detection mechanisms to prevent safety risks caused by incorrect softening time settings."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 220,
        "requirement": "Issuing the \"surface remote control\" command can achieve this switch, softening the rudder deflection commands, with the softening time set to 2 seconds.",
        "original_safety_criterions": [
            "Check the logical judgment conditions and logical branches of the function, analyze the correctness of function handling in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "The timing relationships, constraint relationships, concurrent relationships, and combinational relationships between the control logics of each functional point are correct.",
            "Check the duration of each task and analyze the correctness of functional processing in cases where the task duration exceeds the specified time.",
            "Check the duration of each task, analyze the correctness of function processing in cases where the task duration is less than the specified time."
        ],
        "safety_requirements": [
            "When the system issues 'surface remote control' commands, it should ensure that the rudder deflection command softening time is set to 2s, and check the timing relationships, constraint relationships, concurrent relationships, and combination relationships between the control logics of each functional point for correctness.",
            "The system should check the duration of the remote control commands for the control surfaces to ensure the correctness of rudder deflection command processing when the duration is less than 2s.",
            "The system should check the logical judgment conditions and logical branches for the rudder surface remote control commands to ensure the correctness of rudder deflection command processing in cases such as 'logically always false, logically always true, incorrect logical judgment conditions, omitted logical branches'.",
            "The system should check the duration of the remote control commands for the control surfaces to ensure the correctness of rudder deflection command processing when the duration is greater than 2 seconds."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 221,
        "requirement": "Issuing the \"surface remote control\" command can achieve this switch, softening the rudder deflection commands, with the softening time set to 2s.",
        "original_safety_criterions": [
            "Check the logical judgment conditions and logical branches of the function, analyze the correctness of function processing in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "The timing relationships, constraint relationships, concurrent relationships, and combinational relationships between the control logics of each function point are correct.",
            "Check the duration of each task and analyze the correctness of functional processing in cases where the task duration exceeds the specified time.",
            "Check the duration of each task, analyze the correctness of functional processing in cases where the task duration is less than the specified time."
        ],
        "safety_requirements": [
            "When the system issues 'surface remote control' commands, it should ensure that the softening time for rudder deflection commands is set to 2 seconds, and that the processing of rudder deflection commands during the softening time is correct.",
            "The system should check the timing, constraint, concurrency, and combination relationships between the remote control commands for the control surfaces and the softening of rudder deflection commands to ensure their correctness.",
            "The system should check the duration of the rudder surface remote control commands to ensure that the processing of rudder deflection commands is correct when the softening time is less than 2s.",
            "The system should check the duration of the rudder surface remote control commands to ensure that the processing of rudder deflection commands is correct when the softening time is greater than 2 seconds.",
            "The system should check the logical judgment conditions and logical branches for the rudder surface remote control commands, ensuring the correctness of the soft handling of rudder deflection commands in cases such as 'logical always false, logical always true, incorrect logical judgment conditions, missing logical branches'.",
            "The system should provide real-time monitoring and anomaly detection mechanisms for the softening processing of remote control commands and rudder deflection commands to ensure that warning mechanisms are triggered in case of anomalies."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 222,
        "requirement": "The throttle valve command needs to be softened, with the softening time set to 2s.",
        "original_safety_criterions": [
            "Check the logical conditions and branches of the function, analyze the correctness of function processing under conditions such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "The timing relationships, constraint relationships, concurrent relationships, and combinational relationships between the control logics of each function point are correct."
        ],
        "safety_requirements": [
            "The system should ensure the correct timing, constraint, concurrency, and combination relationships between the softening control logic and other functional point control logics when performing softening of the throttle valve command.",
            "The system should check the judgment conditions and logical branches of the softening logic for the throttle valve command, ensuring the correctness of function processing in cases such as 'logic always false, logic always true, incorrect logic judgment conditions, missing logical branches'.",
            "The system should ensure that the softening time for the throttle valve command is set to 2 seconds, and provide real-time monitoring during the softening process to prevent abnormal conditions from affecting system operation.",
            "The system should perform integrity checks on the data during the softening process of the throttle valve command to ensure the correctness and consistency of the softening logic."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 223,
        "requirement": "The softening priority during control mode switching is higher than that of phase transition. Therefore, if a phase transition accompanies a mode switch, only the softening for the mode switch is performed.",
        "original_safety_criterions": [
            "The control calculation process for functions varies under different states and working phases. It is necessary to check the function inputs and analyze the correctness of function processing in scenarios such as \"not considering working phases, not considering working states,\" etc.",
            "Check the transfer conditions between pairwise states in the software state space, analyze the correctness of state transitions under conditions where the transfer conditions are \"not set, always satisfied, unsatisfiable,\" etc.",
            "Check and analyze the correctness of states and functions with different priorities set under transfer relationships between two or more states, including situations such as high priority switching to low priority and low priority switching to high priority."
        ],
        "safety_requirements": [
            "The system should prioritize the softening of mode switching when transitioning between control modes, ensuring that only the softening of mode switching occurs during phase transitions, guaranteeing the correctness of status and functions.",
            "The system should check the state transition conditions between control modes and phases to ensure the correctness of state transitions in cases where the transition conditions are 'not set, always met, cannot be met', etc.",
            "When the system switches control modes during different states and working phases, it should check the control mode inputs to ensure the correctness of control mode processing in cases such as 'not considering the working phase, not considering the work status', etc.",
            "The system should provide real-time monitoring and early warning mechanisms to ensure the correctness and Safety of state transitions during control mode switching and phase transitions."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 224,
        "requirement": "When switching from command control to autonomous control, if the aircraft is in a fixed altitude state, it will exit fixed altitude; if the aircraft is in a fixed speed state, it will exit fixed speed; if the aircraft is in left turn, right turn, figure-eight flight, or flying towards a temporary waypoint, it will resume the route and perform general navigation.",
        "original_safety_criterions": [
            "Check and analyze the correctness of states and functions with different priorities set under transfer relationships between two or more states, including situations like high priority switching to low priority and low priority switching to high priority.",
            "Check the entry conditions for states and analyze the correctness of state execution during the process when the entry conditions are \"met, not met, met again,\" etc. Safety is a crucial concern in this analysis."
        ],
        "safety_requirements": [
            "The system should check the status entry conditions when switching from command control to autonomous control, ensuring the correctness of status execution in scenarios such as 'met, not met, met again', especially for correct switching and recovery of navigation under various flight statuses including maintaining altitude, maintaining speed, left turn, right turn, figure-eight flight, flying towards temporary waypoints, etc.",
            "The system should ensure the correctness of status and functions when switching from command control to autonomous control, especially in cases such as switching from high priority to low priority and vice versa. This includes correct switching and recovery of general navigation functions under conditions like maintaining altitude, maintaining speed, left turn, right turn, figure-eight flight, and flying towards temporary waypoints.",
            "When the system switches from command control to autonomous control, it should ensure correct exit from altitude hold while in this state and correct exit from speed hold while in this state. It should also resume the route for general navigation during left turn, right turn, figure-eight flight, and flight towards a temporary waypoint.",
            "The system should provide real-time monitoring and log recording when switching from command control to autonomous control, ensuring the switching process is traceable and auditable under different flight statuses."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 225,
        "requirement": "When switching from autonomous and command control to remote control, if the navigation calculation flag is set to no navigation calculation (0), then update the from and to points to the five sides 6 and 7 points; when switching from command control to remote control, set the lateral control to general navigation, the longitudinal control to normal, and the constant speed control to normal. If the lateral control is flying towards a temporary waypoint, then update the to point to the original to point.",
        "original_safety_criterions": [
            "Check the transition conditions between pairwise states in the software state space, analyze the correctness of state transitions under conditions where the transition criteria are \"not set, always satisfied, impossible to satisfy,\" etc.",
            "Check the process of functional control calculation, analyze the correctness of functional processing under conditions such as timeout in control calculation (not returning results within the specified time).",
            "Check the results of the control calculations for functions, and analyze the correctness of function processing under conditions such as normal values, abnormal values, boundary values, maximum and minimum values."
        ],
        "safety_requirements": [
            "When switching from autonomous and command control to remote control, the system should check the control calculation results to ensure correctness in updating from and to points and control settings under conditions of 'normal values, abnormal values, boundary values, maximum and minimum values', especially when the navigation calculation flag is set to no navigation calculation (0), updating from and to points to five edges 6, 7 points; when switching from command control to remote control, lateral control is set to general navigation, longitudinal control is set to normal, and speed control is set to normal. If lateral control involves flying towards a temporary waypoint, then the to point update remains as the original to point.",
            "When switching from autonomous and command control to remote control, the system should check the control calculation process to ensure the correctness of updates from and to points and control settings in cases such as timeouts (no results returned within the specified time), especially when the navigation calculation flag is set to no navigation calculation (0), updating from and to points to five sides 6, 7 points; when switching from command control to remote control, lateral control is set to general navigation, longitudinal control is set to normal, and speed control is set to normal. If the lateral control is flying towards a temporary waypoint, then the to point update remains the original to point.",
            "When the system switches from autonomous and command control to remote control, it should check the status transition conditions to ensure correctness in updating from and to points and control settings, especially under conditions of 'not set, always met, cannot be met', etc. Particularly, when the navigation calculation flag is set to no navigation calculation (0), the from and to points update to sides 6 and 7. When switching from command control to remote control, lateral control is set to general navigation, longitudinal control is set to normal, and speed control is set to normal. If lateral control is for flying towards a temporary waypoint, the to point updates to the original to point. Safety must be ensured throughout these processes."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 226,
        "requirement": "To smooth the data and prevent sudden jumps, the data needs to be softened (faded in and out).",
        "original_safety_criterions": [
            "Check multiple input data for the function, analyze the correctness of function processing under various input value combinations such as normal value equivalence class, abnormal value equivalence class, boundary value combination, initial value combination, Safety value combination, default value combination, etc.",
            "Check the logical judgment conditions and logical branches of the function, analyze the correctness of function processing in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "Check the input data values for the execution conditions of each task, and analyze the correctness of functional processing when the input data values cause delays in meeting the task execution conditions.",
            "Check the process of control calculation for functions, and analyze the correctness of functional handling in cases where the control calculation process times out (does not return results within the specified time).",
            "Check the input data values for the execution conditions of each task, and analyze the correctness of function processing when the input data values cause the task execution conditions to be met prematurely."
        ],
        "safety_requirements": [
            "The system should check the logical conditions and branches of data softening processing to ensure the correctness of data processing in cases such as 'logically always false, logically always true, incorrect logical judgment conditions, missing logical branches'.",
            "The system should check the input data values to ensure the correctness of data softening (fade-in and fade-out) processing when the conditions for task execution are delayed.",
            "The system should check the control calculation process of data softening (fading) to ensure the correctness of functional handling in cases such as timeouts in the control calculation process (not returning results within the specified time).",
            "The system should check the input data values to ensure the correctness of data softening (fading in and out) processing when the conditions for task execution are met in advance.",
            "The system should check multiple input data values to ensure the correctness of data softening (fade-in and fade-out) processing under combinations of normal value equivalence classes, abnormal value equivalence classes, boundary value combinations, initial value combinations, Safety value combinations, and default value combinations."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 229,
        "requirement": "During the softening time, both the old value and the new value are weighted to obtain the softened value: softened value = old value × (1 - t / softening time) + new value × t / softening time",
        "original_safety_criterions": [
            "Check the input data values for the execution conditions of each task, and analyze the correctness of functional processing when the input data values cause delays in meeting the task execution conditions.",
            "Check the values of discrete output data with different redundancies and analyze the correctness of function implementation in cases such as \"inconsistent values\" among two or more redundancy outputs. Safety considerations are integral to ensuring reliable function performance under these conditions.",
            "Check the duration of each task, analyze the correctness of function processing in cases where the task duration is less than the specified time.",
            "Check the duration of each task, analyze the correctness of functional processing in cases where the task duration exceeds the specified time.",
            "Check the input data values for the execution conditions of each task, and analyze the correctness of function processing when the input data values cause the task execution conditions to be met prematurely."
        ],
        "safety_requirements": [
            "The system should check the input data values in the task execution conditions to ensure that when the input data values cause a delay in meeting the task execution conditions, the calculation results of the softened processing are accurate. That is, the softened value = old value × (1 - t / softening time limit) + new value × t / softening time limit.",
            "The system should check the duration of the task to ensure that when the task duration is less than the softening time limit, the calculation result of the softening process is correct, that is, the softened value = old value × (1 - t / softening time limit) + new value × t / softening time limit.",
            "The system should check the values of discrete output data with different redundancies to ensure that in cases where two or more redundant output data values are 'inconsistent', the softened value is correctly calculated as follows: softened value = old value × (1 - t / softening time) + new value × t / softening time.",
            "The system should check the input data values in the task execution conditions to ensure that when the input data values prematurely satisfy the task execution conditions, the calculation results of the softened processing are correct, that is, the softened value = old value × (1 - t / softening time limit) + new value × t / softening time limit.",
            "The system should check the duration of the task to ensure that when the task duration exceeds the specified time, the calculation result of the softened processing is correct, that is, the softened value = old value × (1 - t / softening period) + new value × t / softening period."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 230,
        "requirement": "The softening method of the integrator initial value, specifically used for switching phases with an integrator in the control law to soften the given attitude angles (Jg, Yg, yg) and throttle commands.",
        "original_safety_criterions": [
            "Check the values of continuous interface data with different redundancies, and analyze the correctness of function implementation in cases where \"the values of two or more redundant interfaces are inconsistent, meaning the difference in values exceeds the specified threshold.\"",
            "Check the logical conditions and branches of the function, analyze the correctness of function processing under circumstances such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\" etc.",
            "The control calculation process for functions varies under different states and working phases. Check the function inputs and analyze the correctness of function processing in scenarios such as \"not considering working phases, not considering working states\".",
            "Check the process of control calculation for functions, and analyze the correctness of function handling in cases where the control calculation process times out (does not return results within the specified time).",
            "Check the values of discrete output data with different redundancies and analyze the correctness of function implementation in cases such as \"inconsistent values\" among two or more redundancy outputs."
        ],
        "safety_requirements": [
            "When the system has inconsistent discrete output data values at different redundancy levels, it should ensure the correctness of the softening processing for attitude angles (Jg, Yg, yg) and throttle commands through the method of softening the initial value of the integrator.",
            "The system should check the logical conditions and branches in the control law with integrators to ensure the correctness of functional processing in cases such as logically always false, logically always true, incorrect logical conditions, or missing logical branches.",
            "The system should check functional inputs under different states and working phases to ensure the softening treatment of attitude angles (Jg, Yg, yg) and throttle commands is correct when not considering the working phase or working state.",
            "When the system has inconsistent values in continuous interface data of different redundancies (the difference in values exceeds the specified threshold), it should ensure the correctness of the softening processing of attitude angles (Jg, Yg, yg) and throttle commands through the method of softening the initial value of the integrator.",
            "The system should check the control solution process during phase switching when the control law contains an integrator, ensuring the correctness of functional processing in cases such as the control solution process timing out (not returning results within the specified time)."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 231,
        "requirement": "When switching to a control law with an integrator, to ensure a smooth transition of the corresponding commanded attitude angle Jg or Yg or yg, the initial value of the integrator for the next phase of the control law is not simply set to zero. Instead, the initial value of the integrator is calculated by setting the commanded attitude angle of the next phase equal to that of the previous phase.",
        "original_safety_criterions": [
            "The control calculation process for functions varies under different states and working stages. Check the function inputs and analyze the correctness of function processing in scenarios such as \"not considering working stages, not considering working states\".",
            "Check the results of the control calculations for the function, analyze the correctness of the function processing under conditions where the control calculation results are \"normal values, abnormal values, boundary values, maximum and minimum values\".",
            "Check the logical conditions and branches of the function, analyze the correctness of function processing in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\" etc.",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\"."
        ],
        "safety_requirements": [
            "The system should check the correctness of achieving smooth transition functions for the given attitude angles Jg, Yg, or yg when control laws switch at different redundancy states.",
            "The system should check functional inputs at different states and working phases to ensure a smooth transition when switching to control laws with integrators. This is achieved by setting the initial value of the integrator so that the specified attitude angle for the next phase equals the specified attitude angle from the previous phase.",
            "The system should check the control calculation results when switching control laws to ensure the correctness of functional processing in cases such as 'normal values, abnormal values, boundary values, maximum and minimum values', especially when switching to control laws with integrators. Ensure a smooth transition for the given attitude angles Jg, Yg or yg by calculating the initial value of the integrator so that the given attitude angle in the next stage equals the given attitude angle from the previous stage.",
            "When the system switches control laws, it should check the logical judgment conditions and logical branches to ensure the correctness of functional processing in cases such as 'logical always false, logical always true, incorrect logical judgment conditions, omitted logical branches'. It must ensure smooth transitions when switching to control laws with integrators, by calculating the initial value of the integrator so that the specified attitude angle Jg or Yg or yg for the next phase equals the specified attitude angle from the previous phase."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 232,
        "requirement": "When switching from the takeoff departure segment to the climb 1 segment, let the given pitch angle calculated just before the takeoff departure segment transitions to climb 1 be Jg, and the initial value of the airspeed integrator be x, then x is calculated as: x = Jg - Kv [nk (k) - ng (k)] / K vI",
        "original_safety_criterions": [
            "Check the transition conditions between pairwise states in the software state space, analyze the correctness of state transitions under conditions where the transition criteria are \"not set, always satisfied, cannot be satisfied,\" etc.",
            "Check and analyze the correctness of states and functions with different priorities set under transfer relationships between two or more states, including situations such as high priority switching to low priority and low priority switching to high priority.",
            "There is no transition relationship between two or more states; check the entry conditions for these states and analyze the correctness of state execution under conditions such as \"satisfied simultaneously, satisfied during state execution.\"",
            "Check the equivalence classes of the interface data and analyze the correctness of the output when data values switch between different output equivalence classes."
        ],
        "safety_requirements": [
            "The system should check the equivalence classes of interface data when switching from the takeoff departure segment to climb segment 1, ensuring that the calculated given pitch angle Jg and airspeed integrator initial value x are correct as data values switch between different output equivalence classes.",
            "The system should analyze the correctness of the calculation results for the given pitch angle Jg and initial value x of the airspeed integrator during the transition from the takeoff departure segment to the climb 1 segment, including scenarios of 'high priority switching to low priority, low priority switching to high priority', to ensure the correctness of status and function. Safety must be ensured throughout this process.",
            "The system should check the status transition conditions when switching from the takeoff departure segment to the climb 1 segment, ensuring the correctness of the status transition in cases such as 'not set, always met, cannot be met'.",
            "The system should check the entry conditions for these two states when switching from the takeoff departure segment to the climb segment, ensuring the correctness of state execution under conditions such as 'simultaneously met, met during state execution'."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 233,
        "requirement": "Softening of data between two altitude types during type switching.",
        "original_safety_criterions": [
            "Check and analyze the correctness of states and functions with different priorities set under transfer relationships between two or more states, including situations such as high priority switching to low priority and low priority switching to high priority.",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\".",
            "Check the equivalence classes of interface data and analyze the correctness of output when data values switch between different output equivalence classes."
        ],
        "safety_requirements": [
            "The system should check the equivalence class of interface data during high-level type switching to ensure that the softening results of high-level type data are correct when switching between different output equivalence classes.",
            "The system should check the operating status of different redundancies during high-type switching to ensure the correctness of height type data softening when 'two or more redundancies are in different states'. Safety is a priority in this process.",
            "When the system switches between high-level types, priorities should be set, and functions of different priorities should be checked to ensure correctness of status and functions in cases such as 'high priority switching to low priority, low priority switching to high priority'.",
            "The system should ensure that high-type data provides data integrity verification during the softening process, preventing incorrect data from affecting the correctness of high-type switching.",
            "The system should monitor the switching process of height types in real time to ensure that the warning mechanism is triggered in case of abnormalities."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 234,
        "requirement": "Softening of the rudder deflection commands and throttle bias commands when switching to surface remote control.",
        "original_safety_criterions": [
            "Check the equivalence classes of interface data and analyze the correctness of the output when the interface data values switch between different equivalence classes.",
            "The timing relationships, constraint relationships, concurrent relationships, and组合 relationships between the control logics of each functional point are correct.",
            "Check the logical judgment conditions and logical branches of the function, analyze the correctness of function processing in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "Check the equivalence classes of the interface data and analyze the correctness of the output when data values switch between different output equivalence classes."
        ],
        "safety_requirements": [
            "The system should check the equivalence classes of interface data when switching between remote control and autopilot to ensure the correctness of rudder deflection commands and throttle position commands as they switch between different output equivalence classes.",
            "The system should check the equivalence class of interface data when switching between remote control and surface control, ensuring the correctness of outputs when switching rudder deflection commands and throttle deflection commands between different equivalence classes.",
            "When switching between the system and remote control of the rudder surfaces, it should ensure the correct timing, constraint, concurrency, and combination relationships between the soft control logic of rudder deflection commands and throttle deflection commands.",
            "The system should check the logical judgment conditions and logical branches of rudder deflection commands and throttle deflection commands when switching between remote control and surface control, ensuring the correctness of function handling in cases such as 'logical always false, logical always true, incorrect logical judgment conditions, omitted logical branches'."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 235,
        "requirement": "The softening of the given attitude angles (Jg, Yg, yg) when switching from autonomous attitude remote control to remote attitude control and back to autonomous.",
        "original_safety_criterions": [
            "Two or more states with transfer relationships have the same function. Check the execution of the function before and after the state transition, and analyze the correctness of function processing in cases such as \"starting execution, maintaining execution, interrupting execution\" after the state transition.",
            "Check the transition conditions between pairwise states in the software state space, analyze the correctness of state transitions under conditions where the transition criteria are \"not set, always satisfied, impossible to satisfy,\" etc.",
            "The control calculation process for functions varies under different states and working phases. Check the function inputs and analyze the correctness of function processing in scenarios such as \"not considering working phases, not considering working states\".",
            "There are transition relationships between the same state and other multiple states. Check the conditions for transitioning from the same state to multiple states and from multiple states to the same state, and analyze the correctness of state transitions when multiple state transition conditions are met simultaneously."
        ],
        "safety_requirements": [
            "The system should check the softening treatment of the given attitude angles (Jg, Yg, yg) when autonomously switching from remote attitude control to autonomous control and vice versa, ensuring the correctness of function handling in cases such as 'start execution, maintain execution, interrupt execution' after the state transition.",
            "The system should check the input of the given attitude angles (Jg, Yg, yg) under different states and working phases to ensure the correctness of functional processing in cases such as 'without considering the working phase, without considering the working state'.",
            "The system should check the transfer conditions between autonomous attitude remote control and attitude remote control to autonomous, ensuring the correctness of state transitions in cases where the transfer conditions are 'not set, always met, cannot be met', etc.",
            "The system should check the softening conditions of the given attitude angles (Jg, Yg, yg) when autonomously switching from remote control to attitude remote control and back. This ensures the correctness of state transitions when multiple state transition conditions are met simultaneously."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 236,
        "requirement": "The softening of the given attitude angles (Jg, Yg, yg) during the turning landing rollout segment, and the softening of the given attitude angles (Yg, yg) and throttle deflection commands during transitions in other phases.",
        "original_safety_criterions": [
            "Check and analyze the correctness of states and functions with different priorities set under transfer relationships, including scenarios such as high priority switching to low priority and low priority switching to high priority.",
            "Check the transfer conditions between pairwise states in the software state space, analyze the correctness of state transitions under conditions where the transfer conditions are \"not set, always satisfied, unsatisfiable,\" etc.",
            "Check the entry conditions for states and analyze the correctness of state execution under scenarios where the entry conditions are \"met, not met, met again\" during the state execution process.",
            "Two or more states that have a transfer relationship possess the same function. The execution of this function is checked before and after the state transition, analyzing the correctness of function handling in cases where the function \"begins execution, maintains execution, interrupts execution,\" etc., after the state transition.",
            "The control calculation process for functions varies under different states and working stages. Check the function inputs and analyze the correctness of function processing in cases such as \"not considering working stages, not considering working states\"."
        ],
        "safety_requirements": [
            "The system should check the status entry conditions during the transition to the landing rollout phase to ensure that the softening treatment of the given attitude angles (Jg, Yg, yg) is correct in cases of 'met, not met, met again'.",
            "The system should check the state entry conditions during the execution of the state to ensure that the softening processing of the given attitude angles (Yg, yg) and throttle valve bias commands is correct when transitioning between other phases under conditions such as 'met, not met, met again'.",
            "The system, when in two or more states with transfer relationships, should check functions with different priorities to ensure that during situations such as 'high priority switching to low priority, low priority switching to high priority', the softening handling of the given attitude angles (Jg, Yg, yg) during the transition to landing rollout segment is correct.",
            "The system should check functions with different priorities when it is in two or more states with transfer relationships, ensuring that during situations such as 'high priority switching to low priority, low priority switching to high priority', the softening processing of the given attitude angles (Yg, yg) and throttle bias commands is correct for other phase transitions.",
            "The system should check the transition conditions between each pair of states in the software state space to ensure that during the landing rollout phase, the softening treatment of the given attitude angles (Jg, Yg, yg) is correct under conditions such as 'not set, always satisfied, unsatisfiable'.",
            "The system should check the transition conditions between each pair of states in the software state space to ensure that, in cases such as 'not set, always satisfied, cannot be satisfied', the softening processing of given attitude angles (Yg, yg) and throttle bias commands during other phase transitions is correct.",
            "The system should check the execution of functions before and after state transitions to ensure that the softening processing of given attitude angles (Jg, Yg, yg) and throttle bias commands is correct in cases such as starting execution, maintaining execution, and interrupting execution.",
            "The system should check functional inputs at different states and working phases to ensure that the softening treatment of given attitude angles (such as Jg, Yg, yg) and throttle bias commands is correct in cases like 'unconsidered working phase, unconsidered working state'."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 237,
        "requirement": "Softening of the specified pitch angle during the transition to the phase with an integrator in the longitudinal control law.",
        "original_safety_criterions": [
            "When the redundancy switch conditions are met, will it cause the output value of the currently running function to become abnormal?",
            "The control calculation process for functions varies under different states and working phases. Check the function inputs and analyze the correctness of function processing in cases such as \"not considering working phases, not considering working states\".",
            "Check the equivalence classes of the interface data, analyze the correctness of the output when data values switch between different output equivalence classes.",
            "Check the equivalence classes of the interface data and analyze the correctness of the output when the interface data values switch between different equivalence classes.",
            "Is there a reasonable range for the rate of change of parameters (upper and lower limits of slope), and is the handling strategy for data exceeding the slope limit clearly defined?"
        ],
        "safety_requirements": [
            "When the system switches to the phase with an integrator in the longitudinal control law, it should check the equivalence classes of the interface data to ensure that the softening process output of the given pitch angle is correct when switching between different equivalence classes.",
            "During the softening process of the system at the pitch angle, it should ensure that the rate of parameter change is within a reasonable range (upper and lower limits of slope) and clearly define the handling strategy for data exceeding the slope limit.",
            "The system should check functional inputs at different states and operational phases to ensure that the softening treatment of the given pitch angle is correct when switching to the longitudinal control law with an integrator, without considering the operational phase or state.",
            "The system should check the equivalence class of the interface data when switching to the phase with an integrator in the longitudinal control law, ensuring that the softening process output for the given pitch angle is correct when switching between different output equivalence classes.",
            "The system should ensure that when the redundancy switching conditions are met, the phase transition of the currently running longitudinal control law with an integrator does not result in abnormal soft output values for the specified pitch angle during the switch."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 238,
        "requirement": "The softening of the throttle deflection command during climb-to-level-off and descent-to-level-off. During climb-to-level-off, the initial value of the throttle control integrator is directly set to 100.0, and during descent-to-level-off, the integrator's initial value is directly set to 50.0.",
        "original_safety_criterions": [
            "Check the logical conditions and branches of the function's logic, analyze the correctness of function processing in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "The control calculation process for functions varies under different states and working phases. Check the function inputs and analyze the correctness of function processing in scenarios such as \"not considering working phases, not considering working states\".",
            "Check the input data values for the execution conditions of each task, analyze the correctness of function processing when the input data values cause the task execution conditions to be met prematurely.",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\"."
        ],
        "safety_requirements": [
            "The system should check the logical judgment conditions and logical branches for throttle bias commands when transitioning from climbing to fixed altitude and from descending to fixed altitude, ensuring the correctness of functional processing in cases such as 'logically always false, logically always true, incorrect logical judgment conditions, missing logical branches'.",
            "The system should check the input data values for throttle bias instructions during the transition from climb to constant altitude and from descent to constant altitude, ensuring the correctness of functional processing when the input data values cause the task execution conditions to be met prematurely.",
            "The system should check the operating status of different redundancies to ensure the correctness of softening the throttle deflection command during the transition from climb to level flight and from descent to level flight when 'two or more redundancies are in different states'. It must ensure that during the transition from climb to level flight, the initial value of the throttle control integrator is directly set to 100.0, and during the transition from descent to level flight, the integrator's initial value is directly set to 50.0.",
            "The system should inspect the control calculation process of functions under different states and working phases to ensure the correctness of throttle valve bias command softening during the transition from climbing to fixed altitude and descending to fixed altitude when 'working phases are not considered, working states are not considered'."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 239,
        "requirement": "When switching from attitude remote control to autonomous mode, the longitudinal control integrator is reset to zero. If it is in the altitude hold phase, the initial value of the throttle control integrator is directly set to 50.0.",
        "original_safety_criterions": [
            "Is the sequence and timing of system control coordinated with the hardware, and are the control conditions complete and consistent?",
            "The control calculation process for functions varies under different states and working phases. Check the function inputs and analyze the correctness of function processing in scenarios such as \"not considering working phases, not considering working states\".",
            "Does the timing of the output control status meet the scene requirements?",
            "Is the detection logic for fault items reasonable, and will the detection method affect the normal operation of the equipment?",
            "For critical control or actions, is there a timeout judgment to handle situations where the hardware status does not meet control requirements for an extended period?"
        ],
        "safety_requirements": [
            "When the system switches from attitude remote control to autonomous mode, it should ensure that the longitudinal control integrator is reset to zero, and during the altitude hold phase, the throttle control integrator initial value should be directly set to 50.0. Check if the timing for inspecting the output control status meets the scenario requirements.",
            "When the system switches from attitude remote control to autonomous mode, it should reasonably detect the logic of resetting the longitudinal control integrator to zero, ensuring that the detection method does not affect the normal operation of the equipment; during the altitude holding phase, it should reasonably detect the logic of directly setting the initial value of the throttle control integrator to 50.0, ensuring that the detection method does not affect the normal operation of the equipment.",
            "When the system transitions from attitude remote control to autonomous mode, it should ensure that the longitudinal control integrator is reset to zero, and during the altitude hold phase, the throttle control integrator initial value should be directly set to 50.0. The control sequence and timing should be coordinated with the hardware, and the control conditions should be complete and consistent before and after.",
            "The system should check the functional inputs at different states and working phases to ensure that when switching from attitude remote control to autonomous mode without considering the working phase or status, the longitudinal control integrator is reset to zero, and during the altitude holding phase, the initial value of the throttle control integrator is directly set to 50.0.",
            "The system should have a timeout judgment mechanism when performing critical control or actions, such as resetting the longitudinal control integrator during attitude remote control to autonomous transition or assigning initial values to the throttle control integrator during altitude hold phases, to handle situations where hardware status does not meet control requirements for an extended period."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 240,
        "requirement": "The softening of the pitch trim command during the transition from climb to constant altitude uses both softening methods simultaneously, while the softening of the pitch trim command during the transition from descent to constant altitude only adopts the integrator initial value softening method.",
        "original_safety_criterions": [
            "Check the logical conditions and branches of the function's logic, analyze the correctness of function processing under circumstances such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "Check the execution sequence of tasks and analyze the correctness of functional processing when the execution sequence does not match the specified sequence.",
            "Check the execution timing of different redundancies and analyze the correctness of function implementation in cases such as \"two or more redundancy execution timings are not synchronized\".",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\"."
        ],
        "safety_requirements": [
            "During the softening process of the throttle bias command when the system transitions from climbing to constant altitude and from descending to constant altitude, the sequence of task execution should be checked for consistency with the specified sequence to ensure the correctness of function processing.",
            "The system should check the softening methods of throttle bias commands during the transition from climb to constant altitude and from descent to constant altitude, ensuring the correctness of function processing in cases such as 'logic always false, logic always true, error in logical judgment conditions, omission of logical branches'.",
            "The system should check the execution timing of different redundancies to ensure the correctness of the softening function of throttle bias commands during climb and descent transitions to level flight when 'two or more redundancy execution timings are not synchronized'.",
            "The system should check the operating status of different redundancies to ensure the correctness of the softening methods for throttle deflection commands during climb-to-level-off and descent-to-level-off when 'two or more redundancies are in different states'."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 241,
        "requirement": "To suppress noise in the sensors and interference with the sensor output data from external sources, it is necessary to perform filtering on some of the input sensor data.",
        "original_safety_criterions": [
            "Check the input data values for the execution conditions of each task, and analyze the correctness of functional processing when the input data values cause delays in meeting the execution conditions.",
            "Was filtering and anti-shaking processing performed during data acquisition to shield against interference data?",
            "Check the input data values for the execution conditions of each task, analyze the correctness of function processing when the input data values cause the task execution conditions to be met prematurely.",
            "Has the diagnosis and handling of specific failures of the sensor been carried out based on the working principle of the sensor?"
        ],
        "safety_requirements": [
            "The system should ensure the correctness of filtering processing when the input data values meet the task execution conditions ahead of time, preventing incorrect data from affecting task execution.",
            "The system should perform diagnosis and handling of specific sensor failures, including filtering of partial sensor input data to suppress noise and external interference.",
            "The system should ensure the correctness of filtering processing when the input data values are delayed in meeting the task execution conditions, preventing incorrect data from affecting task execution.",
            "The system should perform filtering when collecting sensor data to suppress noise and external interference, ensuring the accuracy and reliability of the data."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 242,
        "requirement": "A pre-filter is used to filter the input data, with the filter's cutoff frequency wc. After applying the Tustin bilinear transformation, the filtering formula becomes y(k) = a0y(k-1) + a1[x(k)+x(k-1)], where a0 and a1 take different values depending on wc.",
        "original_safety_criterions": [
            "Check the values of continuous interface data with different redundancies, and analyze the correctness of function implementation in cases where \"the values of two or more redundant interfaces are inconsistent, meaning the difference in values exceeds the specified threshold.\"",
            "Check the values of the same input data received by different redundancies, and analyze the correctness of the function implementation when the values of the same input data received by two or more redundancies are inconsistent.",
            "Check multiple input data for the function, analyze the correctness of function processing under various input value combinations such as normal value equivalence class, abnormal value equivalence class, boundary value combination, initial value combination, Safety value combination, default value combination, etc.",
            "Check the values of continuous output data with different redundancies, analyze the correctness of function implementation in cases where two or more redundancy output data values are inconsistent, meaning the difference in values exceeds the specified threshold.",
            "Check the values of discrete output data with different redundancy, and analyze the correctness of function implementation in cases such as \"inconsistent values\" among two or more redundant output data."
        ],
        "safety_requirements": [
            "The system should check multiple input data of the filter to ensure the correctness of filtering processing under various combinations including normal value equivalence classes, abnormal value equivalence classes, boundary values, initial values, Safety values, and default values.",
            "The system should check the values of continuous interface data with different redundancies to ensure the correctness of the filter function implementation in cases where 'inconsistent values, i.e., the difference in values exceeds the specified threshold.'",
            "The system should check the values of filtering output data with different redundancies to ensure the correctness of the filtering function when there is an 'inconsistent value'.",
            "The system should check the values of the same input data received from different redundancies to ensure the correctness of the filter function in case of 'inconsistent values'."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 243,
        "requirement": "Different wc values are selected for different sensor data, and the corresponding a0 and a1 values also differ; see Table 3-21 for specific parameters.",
        "original_safety_criterions": [
            "Check the output data of different redundancies and analyze the correctness of function implementation in cases of \"single redundancy failure\" and \"multiple redundancies all failing\".",
            "Check the values of discrete output data with different redundancy, and analyze the correctness of function implementation in cases such as \"inconsistent values\" among two or more redundant output data. Safety considerations are integral to ensuring reliable function implementation.",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\"."
        ],
        "safety_requirements": [
            "The system should check the functionality of selecting different wc, and the corresponding a0 and a1 parameters from sensor data when the working states of different redundancies change, ensuring the accuracy of parameter selection when 'two or more redundancies are in different states'. This ensures Safety.",
            "The system should check the correctness of the function that selects sensor data using different wc and the corresponding a0 and a1 parameters in the case of a single redundancy failure or multiple redundancies failing, ensuring the reliability and Safety of the function.",
            "The system should check the discrete output data values of different sensor data to ensure the correctness and consistency of function implementation when 'two or more sensor output data values are inconsistent'.",
            "The system should provide a redundancy check mechanism for sensor data to ensure data integrity and consistency when single or multiple redundancies fail, preventing erroneous data from affecting system functionality."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 244,
        "requirement": "The vertical acceleration from the inertial navigation system is used to compensate for the rate of climb and descent from the radio altimeter and the atmospheric machine, to improve their accuracy.",
        "original_safety_criterions": [
            "Check the values of continuous output data with different redundancies, and analyze the correctness of function implementation in cases where \"the values of two or multiple redundancy outputs are inconsistent, meaning the difference in values exceeds the specified threshold.\"",
            "Check the logical conditions and branches of the function's logic, analyzing the correctness of function handling in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "Check the execution timing of different redundancies and analyze the correctness of function implementation in cases such as \"two or more redundancy execution timings are not synchronized\".",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\"."
        ],
        "safety_requirements": [
            "The system should check the working status of different redundancies to ensure that in cases where 'two or more redundancies are in different states', the compensation function of inertial navigation vertical acceleration for the radio altimeter's rate of climb and descent and the atmospheric computer's rate of climb and descent is correctly implemented.",
            "The system should check the judgment conditions and logic branches of the inertial navigation vertical acceleration compensation logic to ensure the correctness of function processing in cases such as 'logic always false, logic always true, incorrect logic judgment conditions, missing logic branches'.",
            "The system should check the values of continuous output data from different redundancies to ensure that in cases where 'two or more redundancy output data values are inconsistent, i.e., the difference in values exceeds the specified threshold,' the functionality for compensating the radio altimeter's rate of climb and the atmospheric machine's rate of climb using inertial navigation vertical acceleration is implemented correctly.",
            "The system should check the execution timing of different redundancies to ensure the correctness of the INS vertical acceleration compensation function for the radio altimeter's rate of climb and descent and the atmospheric computer's rate of climb and descent when 'two or more redundancy execution timings are not synchronized'.",
            "The system should ensure that the INS vertical acceleration compensation function for the radio altimeter's rate of climb and descent and the atmospheric data computer's rate of climb and descent is correctly executed in all operating states, and provide data integrity checks to prevent incorrect data from affecting the accuracy of compensation. Safety measures are also essential to maintain overall system reliability.",
            "The system should perform real-time consistency checks on the function of vertical acceleration compensation for inertial navigation to ensure it matches the flight status, and trigger a warning mechanism in case of anomalies."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 245,
        "requirement": "The method of achieving combined filtering includes reading the vertical acceleration data from the inertial navigation system and applying it to the compensation calculations for the radio altimeter and atmospheric pressure altitude rates.",
        "original_safety_criterions": [
            "Check the output data of different redundancies and analyze the correctness of function implementation in cases of \"single redundancy failure\" and \"multiple redundancies all fail\".",
            "Check multiple input data for functions, analyze the correctness of function processing under various input value combinations such as \"normal value equivalence class, abnormal value equivalence class, boundary value combination, initial value combination, Safety value combination, default value combination\".",
            "Check the values of discrete interface data with different redundancies, and analyze the correctness of function implementation in cases such as \"value inconsistency\" among two or more redundant interface data.",
            "Check the values of continuous output data with different redundancies, and analyze the correctness of function implementation in cases where \"values are inconsistent, i.e., the difference in values exceeds the specified threshold\" for two or more redundant outputs.",
            "Check the values of discrete output data with different redundancies, and analyze the correctness of function implementation in cases such as \"value inconsistency\" among two or more redundancy outputs."
        ],
        "safety_requirements": [
            "The system should check multiple input data for the combined filtering function to ensure correct processing under combinations of normal value equivalence classes, abnormal value equivalence classes, boundary values, initial values, Safety values, and default values.",
            "The system should check the values of vertically redundant inertial navigation acceleration data to ensure the correctness of the combined filtering method in cases such as 'inconsistent values'.",
            "The system should check the output data of different redundancies to ensure the correctness of the combined filtering method in cases of 'single redundancy failure and multiple redundancies failure', including reading the vertical acceleration data from the inertial navigation system and applying it to the compensation calculations for radio altimeter and atmospheric pressure rate of climb. Safety considerations are integral to these processes.",
            "The system should check the vertical acceleration data values from inertial navigation systems of different redundancies to ensure the correctness of the combined filtering method in cases where inconsistencies occur, such as differences in values exceeding the specified threshold.",
            "The system should check the values of discrete output data with different redundancies to ensure the correctness of the combined filtering method in cases such as 'inconsistent values'."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 246,
        "requirement": "The system needs to compensate for the atmospheric machine's rate of climb or descent based on vertical acceleration.",
        "original_safety_criterions": [
            "Check the execution sequence of tasks and analyze the correctness of functional processing when the task execution sequence is inconsistent with the specified sequence.",
            "Check the duration of each task, analyze the correctness of function processing in cases where the task duration exceeds the specified time.",
            "Check the execution timing of different redundancies and analyze the correctness of function implementation in cases such as \"two or more redundancy execution timings are not synchronized\".",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\"."
        ],
        "safety_requirements": [
            "When the system is in different redundancy working states, the implementation of the vertical acceleration compensation function for the atmospheric machine's rate of climb and descent should be checked to ensure its correctness.",
            "The system should check the duration of the atmospheric machine's ascent and descent speed compensation task to ensure the correctness of functional processing if the task duration exceeds the specified time.",
            "When the system executes at different redundancy levels and the timing is not synchronized, it should check the implementation of the vertical acceleration compensation function for the atmospheric machine's ascent and descent speed to ensure its correctness.",
            "The system should check the execution sequence of all tasks to ensure that when the task execution sequence does not match the specified sequence, the processing correctness of the atmospheric machine's vertical acceleration for ascent and descent speed compensation function is maintained.",
            "The system should ensure the real-time and accuracy of the vertical acceleration for atmospheric machine climb and descent speed compensation function, preventing functional failure due to data errors or timing issues."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 247,
        "requirement": "The system needs to compensate for the rate of climb and descent of the radio altimeter based on vertical acceleration.",
        "original_safety_criterions": [
            "Check the execution sequence of tasks and analyze the correctness of functional processing when the execution sequence does not match the specified sequence.",
            "Check the duration of each task, analyze the correctness of functional processing in cases where the task duration exceeds the specified time.",
            "Check the operating conditions of different redundancies and analyze the correctness of function implementation in situations such as 'two or more redundancies being in different states'."
        ],
        "safety_requirements": [
            "The system should ensure the correct processing of the radio altimeter's rate of climb and descent compensation function when the duration of the vertical acceleration compensation task exceeds the specified time, preventing the accumulation of compensation errors.",
            "The system should ensure the correct implementation of vertical acceleration compensation for the radio altimeter's rate of climb and descent when operating in different working states across two or more redundancies, preventing compensation errors caused by inconsistent states. Safety considerations are paramount in this context.",
            "The system should check the timing of the execution of the vertical acceleration compensation task to ensure that the task is executed according to the specified timing, preventing abnormal compensation function caused by inconsistent timing.",
            "The system should perform real-time monitoring of the execution results of the vertical acceleration compensation task to ensure the accuracy and consistency of the radio altimeter's rate of climb data after compensation, and trigger a warning mechanism in case of abnormalities."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 248,
        "requirement": "The system needs to adopt the Tustin bilinear transformation to obtain a unified filtering formula",
        "original_safety_criterions": [
            "Check multiple input data for the function, analyze the correctness of function processing under conditions where multiple input data values are combinations of normal value equivalence classes, abnormal value equivalence classes, boundary value combinations, initial value combinations, Safety value combinations, default value combinations, etc.",
            "Check the logical conditions and branches of the function, analyze the correctness of function handling in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\" etc.",
            "Check the loop condition of the function, and analyze the correctness of function handling in cases where the loop condition is always false or always true.",
            "Check the results of the function control calculations and analyze the correctness of the function processing under conditions such as normal values, abnormal values, boundary values, maximum and minimum values.",
            "The timing relationships, constraint relationships, concurrent relationships, and combinational relationships between the control logics of each functional point are correct."
        ],
        "safety_requirements": [
            "When the system adopts the Tustin bilinear transformation to obtain a unified filter formula, it should check the loop judgment conditions to ensure the correctness of function handling in cases where the loop judgment condition is always false or always true.",
            "The system should ensure the correct timing relationships, constraint relationships, concurrent relationships, and combinational relationships among the control logics of each functional point, especially during the process of obtaining a unified filtering formula using the Tustin bilinear transformation.",
            "When the system adopts the Tustin bilinear transformation to obtain a unified filter formula, it should check the logical judgment conditions and logical branches to ensure the correctness of functional processing in cases such as 'logically always false, logically always true, incorrect logical judgment conditions, missing logical branches'.",
            "When the system adopts the Tustin bilinear transformation to obtain a unified filter formula, it should check multiple input data to ensure the correctness of functional processing under combinations of normal value equivalence classes, abnormal value equivalence classes, boundary values, initial values, Safety values, and default values.",
            "The system should check the control calculation results of the unified filter formula obtained using the Tustin bilinear transformation to ensure the correctness of functional processing in cases of 'normal values, abnormal values, boundary values, maximum and minimum values'."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 249,
        "requirement": "The system needs to calculate the values of H1(k) and Hbc(k).",
        "original_safety_criterions": [
            "Check the output data of different redundancies and analyze the correctness of function implementation in cases of \"single redundancy failure\" and \"multiple redundancies all fail\".",
            "Check multiple input data of the function, analyze the correctness of function processing under various input data values such as \"normal value equivalence class combination, abnormal value equivalence class combination, boundary value combination, initial value combination, Safety value combination, default value combination\", etc.",
            "Check the results of functional control calculations and analyze the correctness of functional processing under conditions such as normal values, abnormal values, boundary values, maximum and minimum values.",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\"."
        ],
        "safety_requirements": [
            "The system should check the control calculation results of H1(k) and Hbc(k) to ensure the correctness of function processing under normal values, abnormal values, boundary values, maximum and minimum values.",
            "The system should check the output data of different redundancies to ensure the correctness of H1(k) and Hbc(k) calculations in cases of single redundancy failure or multiple redundancies failing. Safety is a critical concern in this process.",
            "The system should check the working status of different redundancies to ensure the correctness of H1(k) and Hbc(k) calculation results in cases such as 'two or more redundancies being in different states'.",
            "The system should check multiple input data of H1(k) and Hbc(k) to ensure the correctness of functional processing under combinations of normal value equivalence classes, abnormal value equivalence classes, boundary values, initial values, Safety values, and default values."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 250,
        "requirement": "When H is set to Hb and Hr respectively, the system needs to calculate the compensated lifting speed Hbc, corresponding to uy and h respectively.",
        "original_safety_criterions": [
            "Check the values of continuous interface data with different redundancies, and analyze the correctness of function implementation in cases where \"the values of two or more redundant interfaces are inconsistent, meaning the difference in values exceeds the specified threshold.\"",
            "Check the values of the same input data received by different redundancies, and analyze the correctness of function implementation when the values of the same input data received by two or more redundancies are inconsistent. Safety considerations are paramount in ensuring reliable system performance under such conditions.",
            "Check the logical judgment conditions and logical branches of the function, analyze the correctness of function processing in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "Check the values of continuous output data with different redundancies, and analyze the correctness of function implementation in cases where \"the values of two or more redundancy outputs are inconsistent, meaning the difference in values exceeds the specified threshold.\"",
            "Check the values of discrete output data with different redundancies and analyze the correctness of function implementation in cases such as \"value inconsistency\" among two or more redundant output data."
        ],
        "safety_requirements": [
            "The system should check the logical judgment conditions and logical branches of the functions to ensure correctness in calculating the compensated ascent and descent speeds Hbc (corresponding to uy and h) when H is taken as Hb and Hr respectively, under circumstances such as logically always false, logically always true, incorrect logical judgment conditions, and missing logical branches.",
            "The system should check the values of continuous interface data with different redundancies to ensure the correctness of the calculated compensated ascent and descent speeds Hbc (corresponding to uy and h respectively) in cases where there is inconsistency in values among two or multiple redundancy interface data, meaning the difference in values exceeds the specified threshold.",
            "The system should check the values of the same input data received by different redundancies to ensure the correctness of the calculated compensated ascent and descent speed Hbc (corresponding to uy and h respectively) when the values of the same input data received by two or more redundancies are inconsistent. Safety is a crucial aspect in this process.",
            "The system should check the values of discrete output data with different redundancies to ensure the correctness of the Hbc calculation for ascent and descent speed after compensation in cases such as 'inconsistent values' among two or more redundant output data.",
            "The system should check the values of continuous output data with different redundancies to ensure the correctness of the compensated ascent and descent speed Hbc calculation when there is inconsistency in the values of two or more redundant outputs, i.e., the difference in values exceeds the specified threshold."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 251,
        "requirement": "The system needs to calculate the values of H1(k) and H2(k) according to the formula at each sampling period T=20ms.",
        "original_safety_criterions": [
            "Check the transmission and reception cycles of the interface data, analyzing whether the transmission and reception cycles match.",
            "The software reads data from external devices (such as sensors, NVM, databases, other systems, etc.) through interfaces, checks the external devices, and analyzes the correctness of the output when communication with the external devices is interrupted.",
            "Check the cycle of interface data, analyze the correctness of the output when the input value cycle is \"maximum, minimum\", etc."
        ],
        "safety_requirements": [
            "The system should check the interface data period at each sampling cycle T=20ms to ensure that the calculation results of H1(k) and H2(k) are correct under conditions such as 'maximum, minimum' input values.",
            "The system should check the transmission and reception cycles of H1(k) and H2(k) to ensure that the transmission and reception cycles match, thereby ensuring the accuracy of the calculation results for each sampling period T=20ms.",
            "The system should read data from external devices (such as sensors, NVM, databases, other systems, etc.) via interfaces. When communication with external devices is interrupted, it should ensure the correct calculation output of H1(k) and H2(k) and provide an exception handling mechanism.",
            "The system should ensure the real-time performance and accuracy of the calculations for H1(k) and H2(k) at each sampling period T=20ms, and trigger a warning mechanism in case of anomalies."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 252,
        "requirement": "Determine the flight phases under autonomous control, manual correction, and command control modes.",
        "original_safety_criterions": [
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\".",
            "Does the timing of the output control status meet the scene requirements?",
            "Check the execution sequence of tasks and analyze the correctness of functional processing when the task execution sequence is inconsistent with the specified sequence.",
            "Check the control calculation results of the function, analyze the correctness of functional processing under conditions such as \"normal values, abnormal values, boundary values, maximum and minimum values\".",
            "Check the execution conditions of the function, analyze the correctness of function processing when the execution conditions are \"not met, met again\" during the function execution."
        ],
        "safety_requirements": [
            "The system should check the working status of different redundancies to ensure the correctness of the flight phase determination function under autonomous control, manual correction, and command control modes when 'two or more redundancies are in different states'.",
            "The system should check the execution conditions determined by the flight phase to ensure the correctness of functional processing in cases where the execution conditions are 'not met, met again', etc., under autonomous control, manual correction, and command control modes.",
            "The system should ensure that the timing of output control states meets the scenario requirements of the flight phase under autonomous control, manual correction, and command control modes.",
            "The system should check the execution sequence of tasks determined by flight phases in autonomous control, manual correction, and command control modes to ensure that the task execution sequence is consistent with the specified sequence and that function processing is correct.",
            "The system should check the control calculation results determined by the flight phase to ensure the correctness of functional processing under conditions where the control calculation results are 'normal values, abnormal values, boundary values, maximum and minimum values'."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 253,
        "requirement": "The determination of flight phases in remote control mode (with inner loop remote control and without inner loop remote control) is different.",
        "original_safety_criterions": [
            "When issuing dangerous control commands or actions, is there a rational judgment based on the equipment status?"
        ],
        "safety_requirements": [
            "When the system issues control commands or actions, it should make rational judgments based on the equipment status of the current flight phase (such as with inner-loop remote control and without inner-loop remote control) to ensure the Safety and effectiveness of the commands.",
            "The system should have a mechanism to determine the flight phases under different remote control modes (with inner loop remote control and without inner loop remote control), ensuring the accuracy and consistency of the flight status.",
            "The system should monitor the equipment status in real time under different remote control modes, prevent the issuance of dangerous control commands or actions, and ensure Safety during flight.",
            "The system should provide anomaly detection and warning mechanisms, triggering warnings and taking appropriate measures in a timely manner when unreasonable or hazardous control commands are detected."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 254,
        "requirement": "When switching between control modes, corresponding processing and phase determination are carried out.",
        "original_safety_criterions": [
            "Check the transition conditions between pairwise states in the software state space, analyzing the correctness of state transitions under conditions where the transition is \"not set, always satisfied, impossible to satisfy,\" etc.",
            "Two or more states that have a transfer relationship possess the same function. Check the execution of this function before and after the state transition, analyzing the correctness of function handling in scenarios such as \"starting execution, maintaining execution, interrupting execution\" after the state transition.",
            "The control calculation process for functions varies under different states and working stages. Check the function inputs and analyze the correctness of function processing in scenarios such as \"not considering working stages, not considering working states\".",
            "Check the equivalence classes of the interface data, analyze the correctness of the output when data values switch between different output equivalence classes.",
            "Check the equivalence classes of the interface data and analyze the correctness of the output when the interface data values switch between different equivalence classes."
        ],
        "safety_requirements": [
            "The system should check the setup of transfer conditions when switching between control modes to ensure the correctness of status transfer in cases such as 'not set, always met, cannot be met'.",
            "The system should check the control mode inputs when switching control modes under different states and working phases to ensure the correctness of function handling in cases such as 'not considering the working phase, not considering the work status', etc.",
            "The system should check the execution of functions before and after switching between two or more control modes with transfer relationships, ensuring the correctness of function handling in cases such as 'start execution, maintain execution, interrupt execution'.",
            "The system should check the equivalence classes of interface data when switching control modes to ensure the correctness of the output when switching between different equivalence classes.",
            "The system should check the output when the interface data values switch between different output equivalence classes during control mode transitions, ensuring the correctness of the output."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 255,
        "requirement": "Softening of the given attitude angles, control surface commands, or throttle during phase transitions in flight and when switching control modes",
        "original_safety_criterions": [
            "The possible hazards that various control functions may cause during the switching process of different operating scenarios of the system?",
            "The control calculation process for functions varies under different states and working phases. Check the function inputs and analyze the correctness of function processing in scenarios such as \"not considering working phases, not considering working states\".",
            "When issuing control commands or actions that are dangerous, is there a rational judgment based on the equipment status?"
        ],
        "safety_requirements": [
            "The system should soften the handling of given attitude angles, control surface commands, or throttle during phase transitions and control mode switches in the flight phase to reduce potential hazards. This ensures Safety.",
            "The system should check the functional inputs during different flight phases and control modes to ensure the correctness of function processing in cases of 'unconsidered flight phase' or 'unconsidered control mode'.",
            "The system should make reasonable judgments based on the equipment status when transitioning flight phases or switching control modes, to prevent issuing hazardous control commands or actions. Safety is a priority in this process."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 256,
        "requirement": "Select two softening methods: one for softening during switching between control modes with inner loops or during flight phase transitions, and another for softening during switching to remote control modes without inner loops.",
        "original_safety_criterions": [
            "Check and analyze the correctness of states and functions with different priorities set under transfer relationships between two or more states, including situations such as high priority switching to low priority and low priority switching to high priority.",
            "Check the transition conditions between pairwise states in the software state space, analyze the correctness of state transitions under conditions where the transition conditions are \"not set, always satisfied, cannot be satisfied,\" etc.",
            "Two or more states with transfer relationships have the same function. Check the execution of the function before and after the state transition, and analyze the correctness of function processing in cases such as \"starting execution, maintaining execution, interrupting execution\" after the state transition.",
            "The control calculation process for functions varies under different states and working phases. Check the function inputs and analyze the correctness of function processing in scenarios such as \"not considering working phases, not considering working states\".",
            "Check the equivalence classes of the interface data and analyze the correctness of the output when the values of the interface data switch between different equivalence classes."
        ],
        "safety_requirements": [
            "The system should check the transition conditions between each pair of states in the software state space, ensuring that during transitions with conditions such as 'not set, always satisfied, unsatisfiable', the softening when switching between control modes containing inner loops or transitioning between flight phases, as well as the softening when switching to remote control modes without inner loops, is handled correctly.",
            "The system should check the execution of softening methods before and after state transitions for two or more states that have a transfer relationship, ensuring that the functional processing after state transitions is correct under conditions such as 'start execution, maintain execution, interrupt execution'.",
            "The system should check the control calculation process of functions under different states and working stages to ensure the correctness of softening method selection and switching handling in cases such as 'unconsidered working stages, unconsidered working states'.",
            "The system should check the equivalence classes of interface data to ensure that the softening during switching between equivalence classes of interface data values, as well as during transitions between control modes with inner loops or flight phase conversions, and the softening when switching to remote control modes without inner loops, is handled correctly.",
            "The system should check the two softening methods with transfer relationships, under which different functions are set with priorities, to ensure the correctness of status and functions in cases such as switching from high priority to low priority and from low priority to high priority."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 257,
        "requirement": "The flight control system must have a notch filter function to attenuate the structural vibration mode signals of the aircraft, ensuring system stability.",
        "original_safety_criterions": [
            "Check the logical judgment conditions and logical branches of the function, analyze the correctness of function processing in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "Check the operating status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\"."
        ],
        "safety_requirements": [
            "When the flight control system operates at different redundancy levels, the notch filter function should be checked to ensure it correctly attenuates the structural vibration mode signals even when 'two or more redundancies are in different states', ensuring system stability. Safety is a priority in this process.",
            "The flight control system should check the logical judgment conditions and logical branches of the notch filter function to ensure that in cases such as 'logically always false, logically always true, incorrect logical judgment conditions, missing logical branches', the notch filter function can still be correctly processed, preventing system instability. Safety is a priority in this process.",
            "The flight control system should have the capability to monitor and record the status of the notch filter function in real time, ensuring that warning mechanisms can be triggered promptly in case of abnormalities to prevent system instability.",
            "The flight control system should ensure the correctness of the logical judgment conditions and branch processing for the notch filter function to prevent system instability or failures caused by logical errors."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 258,
        "requirement": "The elevator channel in the flight control system should include two notch filters, one located between the control law output and the servo loop, and the other after the pitch acceleration pre-filter.",
        "original_safety_criterions": [
            "The control calculation process for functions varies under different states and working phases. Check the function inputs and analyze the correctness of function processing in scenarios such as \"not considering working phases, not considering working states\".",
            "The timing relationships, constraint relationships, concurrent relationships, and combinational relationships between the control logics of each functional point are correct.",
            "Check the values of discrete output data with different redundancies and analyze the correctness of function implementation in cases such as \"inconsistent values\" among two or more redundancy outputs. Safety considerations are integral to ensuring reliable outcomes in such analyses.",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\"."
        ],
        "safety_requirements": [
            "The flight control system should check the input to the notch filters and the elevator acceleration lead filter between the control law output and the servo loop under different states and operating phases, ensuring the correctness of functional processing in cases where the 'operating phase is not considered' or the 'operating state is not considered'. Safety must be prioritized throughout this process.",
            "The flight control system should check the working status of different redundancies to ensure the correctness of the two notch filters function implementation in the elevator channel when 'two or more redundancies are in different states'.",
            "The flight control system should ensure the correct timing, constraint, concurrency, and combination relationships between the control logics of the elevator channel, especially the configuration and location of the two notch filters should be reasonable.",
            "The flight control system should check the discrete output data values of different redundancies to ensure the correctness of the notch filter function implementation in the elevator channel when 'two or more redundancy output data values are inconsistent'."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 259,
        "requirement": "The notch filter parameters between the control law output and the servo loop should be set to x1z = 0.1, x2z = 0.6, wn1z = 24.3, wn2z = 24.3.",
        "original_safety_criterions": [
            "The control calculation process for functions varies under different states and working phases. Check the function inputs and analyze the correctness of function processing in scenarios such as \"not considering working phases, not considering working states.\"",
            "Check the output data of different redundancies and analyze the correctness of function implementation in cases of \"single redundancy failure, multiple redundancies all failing\".",
            "Check the results of the function control calculations and analyze the correctness of function processing under conditions such as normal values, abnormal values, boundary values, maximum and minimum values."
        ],
        "safety_requirements": [
            "The system should check the notch filter parameter calculation process between the control law output and the servo loop under different states and working stages, ensuring the correctness of functional processing when 'working stages are not considered, working states are not considered'.",
            "The system should check the control calculation results of the notch filter parameters between the control law output and the servo loop (such as x1z = 0.1, x2z = 0.6, wn1z = 24.3, wn2z = 24.3) to ensure the correctness of functional processing in cases of 'normal values, abnormal values, boundary values, maximum and minimum values'.",
            "The system should check the output data of different redundancies to ensure that, in cases of 'single redundancy failure or multiple redundancies failing', the parameters of the notch filter between the control law output and the servo loop (such as x1z = 0.1, x2z = 0.6, wn1z = 24.3, wn2z = 24.3) are set correctly.",
            "The system should ensure that the notch filter parameters between the control law output and the servo loop are set to x1z = 0.1, x2z = 0.6, wn1z = 24.3, wn2z = 24.3, and provide a parameter verification mechanism to prevent incorrect parameters from affecting system performance."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 260,
        "requirement": "The specific parameters of the notch filter following the pre-filter for lift acceleration should be configured in the system.",
        "original_safety_criterions": [
            "Check the logical judgment conditions and logical branches of the function, analyze the correctness of function processing in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "The timing relationships, constraint relationships, concurrent relationships, and combinational relationships between the control logics of each functional point are correct.",
            "Is the sequence and timing of system control coordinated with the hardware, and are the control conditions complete and consistent?",
            "Check the operating status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\"."
        ],
        "safety_requirements": [
            "The system should ensure that the control sequence and timing are coordinated with the hardware, and that the control conditions are comprehensive and consistent when specifying the parameters of the notch filter after configuring the pre-filter for lift acceleration.",
            "The system should check the operating status of different redundancies to ensure the correctness of the notch filter parameter configuration after the pre-filter for acceleration in cases such as 'two or more redundancies being in different states'.",
            "The system should check the logic judgment conditions and logic branches of the notch filter after the pre-filter for elevation acceleration, ensuring the correctness of function handling in cases such as 'logic always false, logic always true, incorrect logic judgment conditions, missing logic branches'.",
            "The system should ensure the specific parameter configuration of the notch filter after the lift acceleration pre-filter, and the timing, constraint, concurrency, and combination relationships between the control logic of each functional point are correct to prevent configuration errors from causing functional failure."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 261,
        "requirement": "The pitch acceleration in the longitudinal control law during the flare phase needs to be processed by the pitch acceleration notch filter 2.",
        "original_safety_criterions": [
            "Check the execution sequence of tasks and analyze the correctness of function processing when the task execution sequence is inconsistent with the specified sequence.",
            "Check the process of control calculation for functions, and analyze the correctness of functional handling in cases where the control calculation process times out (does not return results within the specified time).",
            "Check the duration of each task, analyze the correctness of functional processing in cases where the task duration exceeds the specified time.",
            "Check the duration of each task, analyze the correctness of functional processing in cases where the task duration is less than the specified time."
        ],
        "safety_requirements": [
            "During the flattening phase of the system's longitudinal control law, the processing time of the pitch acceleration notch filter 2 should be checked to ensure it does not exceed the specified time, thereby ensuring the accuracy of the pitch acceleration calculation.",
            "The system should check the execution timing of each task to ensure that the task execution sequence is consistent with the specified timing, to ensure the correctness of the elevator acceleration notch filter 2 processing.",
            "The system should check the pitch acceleration control calculation process in the longitudinal control law during the flare phase, ensuring that the calculation process returns results within the specified time to guarantee the correctness of function processing.",
            "The system should check the mission duration of the lift acceleration after processing by the lift acceleration notch filter 2 to ensure that the mission duration is not less than the specified time, thereby ensuring the correctness of function processing."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 262,
        "requirement": "The notch filter parameters for the aileron channel are x1x = 0.1, x2x = 0.6, wn1x = 24.3, wn2x = 24.3.",
        "original_safety_criterions": [
            "Check the logical conditions and branches of the function, analyze the correctness of function processing in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\" etc.",
            "Check the output data of different redundancies and analyze the correctness of function implementation under the conditions of \"single redundancy failure, multiple redundancies all fail\".",
            "Check the results of functional control calculations and analyze the correctness of functional processing under conditions such as normal values, abnormal values, boundary values, maximum and minimum values.",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\"."
        ],
        "safety_requirements": [
            "The system should check the control resolution results of the aileron channel to ensure correctness under various conditions including normal values, abnormal values, boundary values, and extreme maximum and minimum values.",
            "The system should check the output data of notch filters for aileron channels with different redundancies to ensure the correctness of function implementation in cases of 'single redundancy failure, multiple redundancies all failed'.",
            "The system should check the operating conditions of different redundancies to ensure that in situations such as 'two or more redundancies being in different states', the parameters of the aileron channel notch filter (such as x1x = 0.1, x2x = 0.6, wn1x = 24.3, wn2x = 24.3) are correctly implemented.",
            "The system should check the logic judgment conditions and logic branches of the aileron channel notch filter to ensure the correctness of function processing in cases such as 'logic always false, logic always true, incorrect logic judgment conditions, missing logic branches'."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 263,
        "requirement": "The notch filter parameters for the rudder channel are x1y = 0.1, x2y = 0.5999922, wn1y = 40.81997, wn2y = 25.11991.",
        "original_safety_criterions": [
            "Check the logical judgment conditions and logical branches of the function, analyze the correctness of function handling in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "Check the output data of different redundancies and analyze the correctness of function implementation under the conditions of \"single redundancy failure, multiple redundancies all fail\".",
            "Check the control calculation results of the function, analyze the correctness of function processing under conditions such as \"normal values, abnormal values, boundary values, maximum and minimum values\".",
            "Check the operating status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\"."
        ],
        "safety_requirements": [
            "The system should check the operating status of different redundancies to ensure the correctness of the rudder channel notch filter parameters (such as x1y = 0.1, x2y = 0.5999922, wn1y = 40.81997, wn2y = 25.11991) when 'two or more redundancies are in different states'.",
            "The system should check the control calculation results of the notch filter parameters for the rudder channel (such as x1y = 0.1, x2y = 0.5999922, wn1y = 40.81997, wn2y = 25.11991) to ensure the correctness of functional processing under conditions such as normal values, abnormal values, boundary values, and extreme maximum and minimum values.",
            "The system should check the logical judgment conditions and logical branches of the notch filter parameters for the rudder channel (such as x1y = 0.1, x2y = 0.5999922, wn1y = 40.81997, wn2y = 25.11991) to ensure the correctness of function handling in cases of 'logical always false, logical always true, incorrect logical judgment conditions, missing logical branches'.",
            "The system should check the output data of the notch filter parameters for the rudder channel (such as x1y, x2y, wn1y, wn2y, etc.) to ensure the correctness of function implementation in cases of 'single redundancy failure and multiple redundancies all failing'."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 264,
        "requirement": "The formula for the discretized notch filter obtained using the Tustin bilinear transformation is δd(k) = [- Kd12δd(k-1) - Kd22δd(k-2) + Kd01δ(k) + Kd11δ(k-1) + Kd].",
        "original_safety_criterions": [
            "Check the values of the same input data received by different redundancies, and analyze the correctness of the function implementation when the values of the same input data received by two or more redundancies are inconsistent.",
            "Check the logical judgment conditions and logical branches of the function, analyze the correctness of function processing in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "Check the values of discrete interface data with different redundancies, and analyze the correctness of function implementation in cases such as \"value inconsistency\" among two or more redundant interface data.",
            "Check the values of continuous output data with different redundancies, and analyze the correctness of function implementation in cases where the values of two or more redundant outputs are inconsistent, meaning the difference in values exceeds the specified threshold.",
            "Check the values of discrete output data with different redundancies, and analyze the correctness of function implementation in cases such as \"value inconsistency\" among two or more redundant output data."
        ],
        "safety_requirements": [
            "The system should check the values of discrete output data with different redundancies to ensure the correctness of the notch filter formula δd(k) = [- Kd12δd(k-1) - Kd22δd(k-2) + Kd01δ(k) + Kd11δ(k-1) + Kd] functionality in case of 'inconsistent values'.",
            "The system should check the values of the same input data received from different redundancies to ensure the correctness of the discrete notch filter formula δd(k) = [- Kd12δd(k-1) - Kd22δd(k-2) + Kd01δ(k) + Kd11δ(k-1) + Kd] function when there is an 'inconsistent value'.",
            "The system should check the output data values of discretized notch filters with different redundancies to ensure the correctness of function implementation when there is an inconsistency in values, i.e., the difference in values exceeds the specified threshold.",
            "The system should check the logical conditions and branches of the discretization notch filter formula to ensure the correctness of function processing in cases such as 'logically always false, logically always true, incorrect logical judgment conditions, missing logical branches'.",
            "The system should check the value of discrete interface data with different redundancies to ensure the correctness of the discretization notch filter formula δd(k) = [- Kd12δd(k-1) - Kd22δd(k-2) + Kd01δ(k) + Kd11δ(k-1) + Kd] function in case of 'inconsistent values'."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 265,
        "requirement": "The software system needs to implement the functionality of the升降加速度陷波滤波器 2, including parameter settings and filtering processing. \n\nNote: The term \"升降加速度陷波滤波器 2\" seems to be a specific technical term or name that does not have a direct English equivalent provided in the context. It is recommended to clarify or provide the exact English term for this component.",
        "original_safety_criterions": [
            "Check the logical judgment conditions and logical branches of the function, analyze the correctness of function processing in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "Check the output data of different redundancies and analyze the correctness of function implementation under the conditions of \"single redundancy failure, multiple redundancies all failed\".",
            "The timing relationships, constraint relationships, concurrent relationships, and combinational relationships between the control logics of each functional point are correct.",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\"."
        ],
        "safety_requirements": [
            "The system should check the logic conditions and logic branches of the elevator acceleration notch filter 2 to ensure the correctness of the filtering process in cases such as 'logic always false, logic always true, incorrect logic conditions, missing logic branches'.",
            "The system should check the output data of different redundancies to ensure the correct implementation of the acceleration notch filter 2 function under conditions of 'single redundancy failure, multiple redundancies all failed'.",
            "The system should ensure the correct timing, constraint, concurrency, and combination relationships between the control logic of the elevator acceleration notch filter 2 and other functional points, preventing errors caused by logical conflicts.",
            "The system should check the operating status of different redundancies to ensure the correct implementation of the acceleration notch filter 2 function when 'two or more redundancies are in different states'."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 266,
        "requirement": "The software system needs to implement the notch filter function for the aileron channel, including parameter settings and filtering processing.",
        "original_safety_criterions": [
            "Check the logical conditions and branches of the function's logic, analyze the correctness of function handling in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "Has the software made corresponding judgments and processing when abnormal external factors occur, such as high sea conditions, adverse weather conditions, etc.?",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\"."
        ],
        "safety_requirements": [
            "The system should make corresponding judgments and handle abnormal external factors such as high sea conditions and adverse weather conditions to ensure the normal operation of the aileron channel's notch filter function, including the accuracy of parameter settings and filtering processing.",
            "The system should check the operating status of different redundancies to ensure the correctness and consistency of the aileron channel notch filter function when 'two or more redundancies are in different states'.",
            "The system should check the logical judgment conditions and logical branches of the aileron channel notch filter function to ensure the correctness and Safety of functional processing in cases such as 'logical always false, logical always true, incorrect logical judgment conditions, missing logical branches'.",
            "The system should ensure the parameter settings of the aileron channel notch filter and the integrity of data during the filtering process to prevent incorrect data from affecting the normal operation of functions.",
            "The system should provide real-time monitoring and early warning mechanisms to ensure that any anomalies in the aileron channel notch filter function can be detected and handled promptly."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 267,
        "requirement": "The software system needs to implement the notch filter function for the rudder channel, including parameter settings and filtering processing.",
        "original_safety_criterions": [
            "Check the logical judgment conditions and logical branches of the function, analyze the correctness of function handling in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "Check the loop condition of the function, analyze the correctness of function handling under conditions such as \"loop condition is always false, always true\".",
            "The timing relationships, constraint relationships, concurrent relationships, and combination relationships between the control logics of each function point are correct.",
            "Check the operating status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\"."
        ],
        "safety_requirements": [
            "The system shall ensure the correct timing, constraint, concurrency, and combinational relationships between the control logics of the notch filter function for the rudder channel, preventing logical errors from causing functional failures.",
            "The system should check the logical judgment conditions and logical branches of the notch filter function for the rudder channel, ensuring the correctness of functional processing in cases such as 'logically always false, logically always true, incorrect logical judgment conditions, missing logical branches'.",
            "The system should check the working status of different redundancies to ensure the correctness of the rudder channel notch filter function in cases such as 'two or more redundancies being in different states'.",
            "The system should check the cyclic judgment conditions of the notch filter function for the rudder channel, ensuring the correctness of functional processing in cases such as 'cyclic judgment conditions are always false, always true'."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 268,
        "requirement": "The software system needs to implement the Tustin bilinear transformation discretization to generate a discrete notch filter formula.",
        "original_safety_criterions": [
            "Check the logical conditions and branches of the function, analyze the correctness of function handling in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\" etc.",
            "Check the operating status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\".",
            "Check the values of discrete output data with different redundancies and analyze the correctness of function implementation in cases such as \"value inconsistency\" among two or more redundant output data.",
            "Check the values of discrete interface data with different redundancy, and analyze the correctness of function implementation in cases such as \"value inconsistency\" among two or more redundant interface data."
        ],
        "safety_requirements": [
            "When the system's discrete output data values are inconsistent at different redundancies, the discretization processing and notch filter formula generation functions should be checked to ensure their correctness.",
            "The system should check the logical judgment conditions and logical branches of the discretization processing to ensure the correctness of the discretization processing in cases of logically false, logically true, incorrect logical judgment conditions, or omitted logical branches.",
            "The system should check the correctness of the discretization processing and notch filter formula generation when two or more redundancies are in different operating states.",
            "When the system has inconsistent values in discrete interface data of different redundancies, the correctness of the discretization processing of the Tustin bilinear transformation should be checked."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 269,
        "requirement": "The flaps can be extended or retracted according to the needs of different phases of flight or remote control requirements, with three deflection angles: 0°, 15°, and 40°.",
        "original_safety_criterions": [
            "The control calculation process for functions varies under different states and working stages. It is necessary to check the function inputs and analyze the correctness of function processing in cases such as \"not considering working stages, not considering working states\".",
            "There is no transition relationship between two or more states; check the entry conditions for these states and analyze the correctness of state execution under conditions such as \"satisfied simultaneously, satisfied during state execution.\"",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\"."
        ],
        "safety_requirements": [
            "The system should check the input of flap retraction and extension functions under different flight phases or remote control to ensure the correctness of the flap retraction and extension function processing regardless of the flight phase and flight status.",
            "When there is no transition relationship between two or more states in the system, the entry conditions of these states should be checked to ensure the correctness of the flap retraction and extension state execution when the conditions are met simultaneously or during the state execution process.",
            "The system should check the working status of different redundancies to ensure the correctness of the flap retraction and extension functions when 'two or more redundancies are in different states'.",
            "The system should ensure that during the switching process of the flap at three deflection angles of 0°, 15°, and 40°, the flight status and control commands are monitored in real time to prevent safety hazards caused by incorrect operations."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 270,
        "requirement": "The system should be able to automatically adjust the flap deflection position based on information provided by the phase of flight identification module.",
        "original_safety_criterions": [
            "The control calculation process for functions varies under different states and working stages. It is necessary to check the function inputs and analyze the correctness of function processing in cases such as \"not considering working stages, not considering working states\".",
            "Check the logical conditions and branches of the function, analyze the correctness of function processing in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\" etc.",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\".",
            "Check the execution sequence of tasks and analyze the correctness of function processing when the task execution sequence is inconsistent with the specified sequence.",
            "The timing relationships, constraint relationships, concurrent relationships, and combinational relationships between the control logics of each functional point are correct."
        ],
        "safety_requirements": [
            "When the system's operating states at different redundancies vary, the correctness of the flap deflection position adjustment function should be checked to ensure that when two or more redundancies are in different states, the implementation of the flap deflection position adjustment function meets expectations.",
            "The system should ensure the correct timing, constraint, concurrency, and combination relationships between the control logics of various functional points, especially when automatically adjusting the flap deflection position based on information provided by the flight phase recognition module; the logical relationships must be accurate.",
            "The system should logically evaluate the information provided by the flight phase identification module to check for logical judgment conditions and logical branches. It must ensure the correctness of the flap angle position adjustment function handling in cases such as 'logical always false, logical always true, incorrect logical judgment conditions, missing logical branches'.",
            "The system should check the execution sequence of tasks for adjusting the flap deflection position based on the information provided by the flight phase identification module to ensure that the task execution sequence matches the specified sequence, preventing functional processing errors caused by inconsistent sequences.",
            "The system should check the control calculation process of flap deflection angles at different flight phases and operating conditions to ensure the correctness and Safety of function processing in situations where 'flight phases are not considered, operating conditions are not considered', etc."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 271,
        "requirement": "The system should support remote control for manually adjusting the flap deflection angle position.",
        "original_safety_criterions": [
            "Check the logical conditions and branches of the function, analyze the correctness of function processing in cases of \"logical always false, logical always true, incorrect logical judgment conditions, missing logical branches\".",
            "Is the detection logic for fault items reasonable, and will the detection method affect the normal operation of the equipment?",
            "Is the sequence and timing of system control coordinated with the hardware, and are the control conditions complete and consistent?"
        ],
        "safety_requirements": [
            "When the system is detecting fault items, it should ensure that the detection logic is reasonable and will not affect the normal operation of manually adjusting the flap deflection angle position.",
            "The system should check the logical judgment conditions and logical branches for adjusting the flap deflection angle position to ensure the correctness of function processing in cases such as 'logically always false, logically always true, incorrect logical judgment conditions, omitted logical branches'.",
            "When manually adjusting the flap deflection position, the system should ensure that the control sequence and timing are coordinated with the hardware, and that the control conditions are comprehensive and consistent.",
            "The system should provide real-time monitoring and early warning mechanisms to ensure that any abnormal conditions are promptly detected and handled when manually adjusting the flap angle position."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 272,
        "requirement": "The system should be able to receive and process data provided by the flight phase identification module to determine the current flight phase.",
        "original_safety_criterions": [
            "Check the transmission and reception cycles of the interface data, and analyze whether the transmission and reception cycles match.",
            "When the working state transitions, check the values of the functional interface data and analyze the correctness of the outputs in cases such as \"values change or the range of values changes\".",
            "Check the duration of each task, analyze the correctness of functional processing in cases where the task duration is less than the specified time.",
            "Check the execution sequence of tasks and analyze the correctness of functional processing when the execution sequence does not match the specified sequence.",
            "Check the duration of each task, analyze the correctness of functional processing in cases where the task duration exceeds the specified time."
        ],
        "safety_requirements": [
            "The system should check the matching of transmission and reception cycles when receiving and processing data provided by the flight phase identification module to ensure the timeliness and accuracy of data transmission.",
            "When the system transitions to a working state, it should check the values provided by the flight phase identification module to ensure the correctness of flight phase identification when there are changes in 'value' or 'range of values'.",
            "The system should check the duration of each task to ensure that data processing by the flight phase identification module can still proceed correctly when the task duration is less than the specified time.",
            "The system should check the timing of the flight phase identification task execution to ensure that the timing is consistent with the specified sequence; otherwise, measures should be taken to ensure the correctness of the function processing."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 273,
        "requirement": "The system should be able to select the appropriate flap deflection position based on the current phase of flight.",
        "original_safety_criterions": [
            "Check and analyze the correctness of states and functions with different priorities set under transfer relationships between two or more states, including situations such as high priority switching to low priority and low priority switching to high priority.",
            "Is there fault handling based on wrap-around detection, and is the reporting strategy for status during faults reasonable?",
            "Does the timing of the output control status meet the scenario requirements?",
            "When issuing control commands or actions that are dangerous, is there a rational judgment based on the equipment status?",
            "Is there a reasonable range for the rate of change of parameters (upper and lower limits of slope), and is the handling strategy for data exceeding the slope clearly defined?"
        ],
        "safety_requirements": [
            "The system should ensure that the rate of change of the flap deflection position is within a reasonable range, with clear upper and lower limits for the slope. A clear handling strategy should be adopted when the slope data exceeds these limits.",
            "The system should make rationality judgments based on the current flight phase when issuing control commands or actions to prevent the execution of dangerous commands. Safety is a priority in this process.",
            "The system should select the flap angle position at a time that meets the requirements of the current flight phase, ensuring the correctness and Safety of the operation.",
            "The system should have a fault handling mechanism based on wrap-around detection, and during faults, it should reasonably report the status of the flight phase and flap deflection position.",
            "The system should check the different flap deflection positions with set priorities during two or more flight phases with transfer relationships, ensuring the correctness of status and functions in cases such as switching from high priority to low priority and from low priority to high priority."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 274,
        "requirement": "The system should be able to record and display the current deflection angle position of the flaps.",
        "original_safety_criterions": [
            "Is the detection logic for fault items reasonable, and will the detection method affect the normal operation of the equipment?",
            "When the working state transitions, check the values of the functional interface data and analyze the correctness of the output in cases such as \"values have not changed.\"",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\".",
            "After system recovery, does the recorded critical state still meet the real-time requirements?"
        ],
        "safety_requirements": [
            "When the system transitions to a working state, it should check the current deflection angle position of the flaps to ensure that the 'value has not changed', and verify the correctness of the recording and display functions.",
            "After system recovery, it should be ensured that the recorded current deflection angle position of the flaps still meets the real-time requirements to prevent data lag from affecting flight Safety.",
            "The system should reasonably design the detection logic for fault items to ensure that the detection method does not negatively impact the normal operation of the flaps.",
            "The system should check the working status of different redundancies to ensure the correctness and consistency of recording and displaying the current deflection angle position of the flaps when 'two or more redundancies are in different states'."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 275,
        "requirement": "The flaps are set to 0° during the ground waiting phase of the aircraft.",
        "original_safety_criterions": [
            "Check the transfer conditions between pairwise states in the software state space, analyze the correctness of state transitions under conditions where the transfer conditions are \"not set, always satisfied, unsatisfiable,\" etc.",
            "Is there fault handling based on wrap-around detection, and is the status reporting strategy during faults reasonable?",
            "Are the entry and exit conditions for each mode consistent?",
            "Is there a judgment on the rationality of personnel operations? Commands that do not conform to the current scenario or status should not be responded to."
        ],
        "safety_requirements": [
            "During the ground waiting phase of the aircraft, when the flaps are set to 0°, it should be ensured that the entry conditions and exit conditions for each mode are consistent.",
            "During the ground waiting phase of the aircraft, the transition conditions between each pair of states in the state space should be checked to ensure the correctness of state transitions in cases such as 'not set, always satisfied, cannot be satisfied'.",
            "During the ground waiting phase of the aircraft, the rationality of personnel operations should be evaluated, and commands that do not conform to the current scenario or status (such as setting flaps to non-0°) should not be responded to.",
            "During the ground waiting phase of the aircraft, the flap status should be monitored in real time to ensure it is always set to 0°, and a warning mechanism should be triggered when an abnormality is detected."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 276,
        "requirement": "When the aircraft begins takeoff, it starts from the ground roll phase, with the flaps deflected to 15°.",
        "original_safety_criterions": [
            "The control calculation process for functions varies under different states and working stages. Check the function inputs and analyze the correctness of function processing in cases such as \"not considering working stages, not considering working states\".",
            "Check the execution sequence of tasks and analyze the correctness of functional processing when the task execution sequence is inconsistent with the specified sequence.",
            "Check the execution timing of different redundancies and analyze the correctness of function implementation in cases such as \"two or more redundancy execution timings are not synchronized\".",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\"."
        ],
        "safety_requirements": [
            "The system should ensure the correct implementation of the function to deflect the flaps to 15° when operating in different redundancy states, preventing functional failure due to inconsistent states. Safety is a priority in this process.",
            "The system should check functional inputs at different operational phases and states to ensure the correct functionality of flaps deflecting to 15° from the start of ground run, preventing errors caused by not considering the operational phase or state. Safety is a priority throughout these checks.",
            "The system should check the task execution sequence when performing aircraft takeoff tasks to ensure that the execution sequence matches the specified sequence, especially for the task of deflecting the flaps to 15° starting from the ground roll phase. This prevents functional errors caused by inconsistent sequences.",
            "When the system has inconsistent execution timing at different redundancies, it should ensure that the function of deflecting the flaps to 15° from the ground roll phase of the aircraft is correctly implemented, preventing functional failure due to unsynchronized execution timing."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 277,
        "requirement": "Timing starts when flying to climb segment 1; if the landing gear is retracted within 1 minute, then after a delay of 5 seconds from the moment of retraction, the flaps are set to 0°.",
        "original_safety_criterions": [
            "Check the execution timing of different redundancies and analyze the correctness of function implementation in situations such as 'two or more redundancy execution timings are not synchronized'.",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as 'two or more redundancies being in different states'."
        ],
        "safety_requirements": [
            "The system starts timing when flying to climb segment 1. If the landing gear is retracted within 1 minute, the flaps will be set to 0° 5 seconds after retraction. The execution sequence of different redundancies should be checked to ensure the correctness of function implementation when 'two or more redundancy execution sequences are not synchronized'.",
            "The system starts timing when flying to climb segment 1. If the landing gear is retracted within 1 minute, the flaps will be set to 0° 5 seconds after retraction. The working status of different redundancies should be checked to ensure the correctness of function implementation when 'two or more redundancies are in different states'.",
            "The system should ensure timing starts when flying to climb segment 1, and if the landing gear is retracted within 1 minute, then after a delay of 5 seconds from the retraction time, set the flaps to 0 degrees. It should also provide anomaly detection and handling mechanisms when the timing and operational status are inconsistent under different redundancies. Safety considerations are paramount in these operations.",
            "The system should monitor in real-time the status of the landing gear retraction and flap extension and retraction, ensuring that operations are completed within the specified time, and trigger a warning mechanism in case of anomalies."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 278,
        "requirement": "If the landing gear is still not retracted after 1 minute, then directly set the flaps to 0°.",
        "original_safety_criterions": [
            "Check the execution sequence of tasks and analyze the correctness of functional processing when the task execution sequence is inconsistent with the specified sequence.",
            "Check the duration of each task, analyze the correctness of functional processing in cases where the task duration exceeds the specified time.",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\"."
        ],
        "safety_requirements": [
            "The system should check the timing of the landing gear retraction task execution to ensure it is carried out according to the specified sequence, preventing errors in the processing of landing gear and flap retraction functions caused by inconsistent timing.",
            "The system should monitor the duration of the landing gear retraction task to ensure it is completed within 1 minute. If the task duration exceeds 1 minute, the system should directly retract the flaps to 0° and record the anomaly.",
            "The system should provide real-time monitoring and warning mechanisms to ensure that in the event of a timeout during the landing gear retraction task, the flap retraction operation can be triggered promptly, and relevant logs are recorded.",
            "The system should ensure the correctness and timeliness of flap retraction operations in case of a landing gear retraction task timeout, preventing flight Safety issues caused by timeouts."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 279,
        "requirement": "When the aircraft flies to the fourth side of the five-sided approach path, if the distance to the point is less than 1500m, then set flaps to 15°.",
        "original_safety_criterions": [
            "Check the operating status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\".",
            "Check the values of discrete output data with different redundancy, and analyze the correctness of function implementation in cases such as \"inconsistent values\" among two or more redundant output data. Safety considerations are integral to ensuring reliable functionality.",
            "Check the values of discrete interface data with different redundancy, and analyze the correctness of function implementation in cases such as \"inconsistent values\" among two or more redundant interface data."
        ],
        "safety_requirements": [
            "When the aircraft flies to the fourth side of the five-side route, if the distance to the point is less than 1500m, check the values of different redundancy discrete interfaces to ensure the correctness of the flap 15° function when 'values are inconsistent'.",
            "The system should check the working status of different redundancies when the aircraft flies to the fourth side of the five-sided route and the distance to the point is less than 1500m, ensuring the correctness of the function to set flaps at 15° when 'two or more redundancies are in different states'.",
            "When the aircraft flies to the fourth side of the five-sided route, if the distance to the point is less than 1500m, check the values of different redundancy discrete output data to ensure the correctness of the flap 15° function when there is a 'value inconsistency'.",
            "The system should ensure that when the aircraft flies to the fourth side of the five-sided approach, if the distance to the point is less than 1500m, the real-time performance and accuracy of the function to set flaps at 15 degrees is maintained, and a warning mechanism is triggered in case of abnormal conditions."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 280,
        "requirement": "When flying to the fifth side, lower the flaps to 40° when the distance to the预定着陆点 is less than Hw / tgλ + 1020 m and greater than Hw / tgλ + 20 m.",
        "original_safety_criterions": [
            "Check the output data of different redundancies and analyze the correctness of function implementation in cases of 'single redundancy failure' and 'multiple redundancies all failing'.",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as 'two or more redundancies being in different states'."
        ],
        "safety_requirements": [
            "When the system flies to the fifth side, it should check the operating status of different redundancies to ensure that in cases where 'two or more redundancies are in different states', when the distance to the predetermined landing point is less than Hw / tanλ + 1020 m and greater than Hw / tanλ + 20 m, the function of deploying flaps to 40° is correctly implemented.",
            "The system should check the output data of different redundancies when flying to the fifth side to ensure that in cases of 'single redundancy failure and multiple redundancies failure', when the distance to the predetermined landing point is less than Hw / tanλ + 1020 m and greater than Hw / tanλ + 20 m, the function of deploying flaps to 40° is correctly implemented.",
            "The system should ensure that when flying to the final approach, the operation of deploying flaps to 40° has high reliability when the distance to the predetermined landing point is less than Hw / tgλ + 1020 m and greater than Hw / tgλ + 20 m, preventing Safety issues caused by redundancy failures.",
            "The system should provide real-time monitoring and early warning mechanisms. When redundancy failures or inconsistent operating statuses are detected, it should promptly notify the operators and take corresponding measures to ensure Safety during flight."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 281,
        "requirement": "If the aircraft does not enter the glide slope window, then after regaining altitude, the flaps are retracted to 15° (Vg changes accordingly).",
        "original_safety_criterions": [
            "Check the loop condition of the function, analyze the correctness of function processing under conditions such as \"loop condition is always false, always true\".",
            "Check the execution sequence of tasks and analyze the correctness of function processing when the execution sequence does not match the specified sequence.",
            "Check the process of control calculation for functions, analyze the correctness of functional handling in cases where the control calculation process times out (does not return results within the specified time).",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\"."
        ],
        "safety_requirements": [
            "The system should check the operating status of different redundancies to ensure the correctness of the function to reset the flaps to 15° (with corresponding changes in Vg) after the aircraft regains altitude, when 'two or more redundancies are in different states'.",
            "The system should check the loop judgment conditions of the function to ensure that under the circumstances where the loop judgment condition is always false or always true, the function handling of re-setting the altitude and retracting the flaps to 15° (with corresponding changes in Vg) after the aircraft regains height is correct.",
            "The system should check the execution sequence of tasks to ensure that when the task execution sequence does not match the specified sequence, the aircraft relevels and retracts the flaps to 15° (Vg changes accordingly) correctly before entering the glide window.",
            "The system should inspect the aircraft control calculation process to ensure the correctness of functional handling in cases such as timeouts (not returning results within the specified time), especially when the aircraft does not enter the glide window and then re-levels before retracting the flaps to 15 degrees (Vg changes accordingly). Safety is a priority in these checks."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 282,
        "requirement": "If the aircraft enters the glide slope window, the flaps remain at 40° until fully landed.",
        "original_safety_criterions": [
            "Check the transition conditions between pairwise states in the software state space, analyze the correctness of state transitions under conditions where the transition conditions are \"not set, always satisfied, unsatisfiable,\" etc.",
            "Check the entry conditions for states and analyze the correctness of state execution under scenarios where the entry conditions are \"met, not met, met again\" during the state execution process."
        ],
        "safety_requirements": [
            "The system should check the transfer conditions between each pair of states in the software state space to ensure that under transfer conditions such as 'not set, always satisfied, unsatisfiable', when the aircraft enters the glide window, the flaps can correctly remain at 40° until complete landing. Safety is a priority throughout this process.",
            "The system should check the conditions for the aircraft entering the glide path window to ensure that under the conditions of 'met, not met, met again', the flaps can correctly remain at 40° until complete landing.",
            "The system should monitor the aircraft status in real time to ensure that after the aircraft enters the glide window, the flaps can immediately adjust and maintain at 40°, and continue to maintain this state throughout the landing process.",
            "The system should provide an anomaly detection mechanism to ensure that after the aircraft enters the glide window, any abnormal conditions during the process of maintaining the flaps at 40° can be promptly identified and addressed."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 283,
        "requirement": "During a normal approach landing, the system starts deploying the flaps to 15° at point A and to 40° at point B; during a reverse approach landing, the system starts deploying the flaps to 15° at point C and to 40° at point D.",
        "original_safety_criterions": [
            "The timing relationships, constraint relationships, concurrent relationships, and combinational relationships between the control logics of each functional point are correct.",
            "Check the logical conditions and branches of the function, and analyze the correctness of function handling in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "The control calculation process for functions varies under different states and working phases. Check the function inputs and analyze the correctness of function processing in scenarios such as \"not considering working phases, not considering working states\".",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\"."
        ],
        "safety_requirements": [
            "The system should check the functionality of flap deployment while operating in different redundancy states to ensure that the control logic for lowering the flaps is correct when 'two or more redundancies are in different states'.",
            "The system should ensure the correct timing, constraint, concurrency, and combination relationships between the control logic of deploying flaps to 15 degrees at points A and C, and deploying flaps to 40 degrees at points B and D, for both normal and reverse landings.",
            "The system should check the logical judgment conditions and logical branches for flap deployment, ensuring the correctness of function processing in cases such as 'logically always false, logically always true, incorrect logical judgment conditions, omitted logical branches'.",
            "The system should check the functional inputs at different states and working phases to ensure the correctness of flap deployment operations in cases such as 'unconsidered working phases, unconsidered working states'."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 284,
        "requirement": "In remote control mode, when the system receives a \"flap position 0\" control command from the remote, it issues a flap 0° control signal; when it receives a \"flap position 1\" control command, it issues a flap 15° control signal; when it receives a \"flap position 2\" control command, it issues a flap 40° control signal.",
        "original_safety_criterions": [
            "Does the timing of the output control status meet the scenario requirements?",
            "The control calculation process for functions varies under different states and working phases. Check the function inputs and analyze the correctness of function processing in scenarios such as \"without considering working phases, without considering working states\".",
            "Is the sequence and timing of system control coordinated with the hardware, and are the control conditions complete and consistent?",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\"."
        ],
        "safety_requirements": [
            "The system in remote control mode should ensure that the control sequence and timing are coordinated with the hardware, and that control conditions are complete and consistent. This specifically includes: when receiving a 'flap position 0' control command from the remote, issuing a flap 0° control signal; when receiving a 'flap position 1' control command, issuing a flap 15° control signal; when receiving a 'flap position 2' control command, issuing a flap 40° control signal.",
            "The system, in remote control mode, should ensure that the timing of output control status meets the scenario requirements when receiving flap position control commands from the remote.",
            "In the remote control mode, the system should check the working status of different redundancies to ensure the correctness of the flap position control signal issued when 'two or more redundancies are in different states'.",
            "The system should check functional inputs at different states and working phases to ensure the correctness of flap control signal processing in cases of 'unconsidered working phases' or 'unconsidered working states'."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 285,
        "requirement": "The retraction control of the landing gear is operated by the retract signal and checked by the retract lock signal to confirm if it has been retracted. The extension control of the landing gear is operated by the extend signal and checked by the extend lock signal to confirm if it has been extended. If the extension fails, the emergency extension signal can activate the emergency pump.",
        "original_safety_criterions": [
            "Check the logical judgment conditions and logical branches of the function, analyze the correctness of function processing in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "The control calculation process for functions varies under different states and working phases. Check the function inputs and analyze the correctness of function processing in scenarios such as \"not considering working phases, not considering working states\".",
            "Check the execution conditions of the function and analyze the correctness of function processing when the execution conditions are \"not met, met again\" during the execution process.",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\"."
        ],
        "safety_requirements": [
            "The landing gear control inputs should be checked under various states and operational phases to ensure the correctness of landing gear control processing, regardless of the operational phase or state considered. Safety is a priority in this process.",
            "The system should check the working status of different redundancies to ensure the correctness of the landing gear retraction and extension control functions when 'two or more redundancies are in different states'.",
            "The system should check the logical judgment conditions and logical branches for landing gear control to ensure the correctness of function processing in cases such as 'logically always false, logically always true, incorrect logical judgment conditions, missing logical branches'.",
            "The system should check the execution conditions for landing gear control to ensure the correctness of function processing when the conditions are 'not met, met again', etc., during the retraction and deployment of the landing gear.",
            "The system should ensure that in the event of a failure to lower the landing gear, an emergency signal is triggered to start the emergency pump and provide status feedback, ensuring the Safety and reliability of the emergency response.",
            "The system should provide real-time monitoring and alarm mechanisms to ensure that any abnormal conditions during the retraction and extension of the landing gear can be detected and handled promptly."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 286,
        "requirement": "The landing gear can be controlled for retraction and extension in autonomous control, manual correction, and remote control modes. During autonomous control or manual correction, the flight control system automatically retracts and extends the landing gear based on the aircraft's position, movement, and other information. In remote control mode, the ground control station can issue commands at any time to retract or extend the landing gear.",
        "original_safety_criterions": [
            "Is the sequence and timing of system control coordinated with the hardware, and are the control conditions complete and consistent?",
            "Check the entry conditions for states and analyze the correctness of state execution during the process when the entry conditions are \"met, not met, met again,\" etc.",
            "After performing hardware control, is there monitoring and evaluation of the hardware status to determine its match with control requirements?",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\".",
            "Does the timing of output control status meet the scene requirements?"
        ],
        "safety_requirements": [
            "The system should monitor and determine the compatibility of the landing gear status with the control requirements after performing the landing gear retraction and extension control, ensuring the correctness of the landing gear status.",
            "The system should check the working status of different redundancies to ensure the correctness of the landing gear retraction and extension control function when 'two or more redundancies are in different states'.",
            "The system should ensure that the control sequence and timing for landing gear retraction and extension are coordinated with the hardware, and that the control conditions are comprehensive and consistent before and after, whether in autonomous control, manual correction, or remote control mode.",
            "The system should check the conditions for entering the state of landing gear retraction and extension control to ensure the correctness of state execution when the entry conditions are 'met, not met, met again' during the state execution process.",
            "The system must ensure the timing of landing gear retraction and extension control meets scenario requirements under autonomous control, manual correction, and remote control modes to prevent misoperation. Safety is a crucial concern in this process."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 287,
        "requirement": "When the aircraft takes off and reaches climb phase 1 with the landing gear in the down position, the system should set the landing gear retraction signal to high level and simultaneously send left and right brake signals (brake pressure at 50% FS).",
        "original_safety_criterions": [
            "Is the sequence and timing of system control coordinated with the hardware, and are the control conditions complete and consistent?",
            "Check the entry conditions for states and analyze the correctness of state execution during the process when the entry conditions are \"met, not met, met again,\" etc.",
            "Check the external devices (such as sensors, NVM, databases, other systems, etc.), and analyze the correctness of the output from the source device under conditions such as \"degraded, maintenance,\" etc.",
            "Does the timing of the output control status meet the scene requirements?",
            "Have differentiated alarm measures and handling measures been implemented for all fault conditions of the system?"
        ],
        "safety_requirements": [
            "The system should check the status entry conditions when the aircraft takes off and reaches climb phase 1 with the landing gear in the down position, ensuring the correctness of setting the retract landing gear signal to high level and issuing left and right brake signals (brake pressure at 50% FS) under circumstances such as 'met, not met, met again'.",
            "The system shall ensure the sequence and timing of control is coordinated with the hardware and control conditions are complete and consistent when the aircraft takes off and reaches climb phase 1 with the landing gear in the down position.",
            "The system should implement differentiated warning and handling measures for all fault conditions when the aircraft takes off and reaches climb phase 1 with the landing gear in the down position. This ensures the signal to retract the landing gear is set to high level, while also issuing left and right brake signals (brake pressure at 50% FS) reliably. Safety is a priority in this process.",
            "The system should check the status of external equipment (such as sensors, NVM, databases, other systems, etc.) when the aircraft takes off and reaches the climb 1 phase with the landing gear in the down position to ensure the correctness of setting the retract landing gear signal to high level and issuing left and right brake signals (brake pressure at 50% FS) under situations like 'degraded, maintenance'. Safety is a crucial concern in this process.",
            "The system should ensure that the timing of output control status meets the scenario requirements when the aircraft takes off and reaches the climb phase 1 with the landing gear in the down position, preventing safety issues caused by improper timing."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 288,
        "requirement": "1 second after, the system should check the retraction lock signal. If the retraction lock signal is low, it should continue to check the landing gear retraction status.",
        "original_safety_criterions": [
            "Check the logical judgment conditions and logical branches of the function, analyze the correctness of function processing in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "When the working state transfers, check the values of the functional interface data and analyze the correctness of the output in cases such as \"values have not changed\".",
            "Is the detection logic for fault items reasonable, and will the detection method affect the normal operation of the equipment?",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\"."
        ],
        "safety_requirements": [
            "The system should ensure the correctness of the retraction lock signal check and the landing gear retraction and extension status check functions when it is in different working states due to varying redundancy.",
            "The system should ensure that the detection logic for the retracted lock signal is reasonable, and the detection method should not affect the normal operation of the system.",
            "The system should check the logical judgment conditions and logical branches for retracting and locking signals to ensure the correctness of functional processing in cases such as 'logically always false, logically always true, incorrect logical judgment conditions, missing logical branches'.",
            "When the system transitions to a working state, it should check the value of the retracted lock signal to ensure the correctness of the retracted lock signal check function when 'the value has not changed'.",
            "The system should ensure that it can continue to check the landing gear retraction status and provide anomaly detection and handling mechanisms when the lock retraction signal is at a low voltage level."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 289,
        "requirement": "If the landing gear is in the down position, the system should set the retract landing gear signal to low level, the left and right brake signals to 0, and set the landing gear retraction failure flag.",
        "original_safety_criterions": [
            "Is there fault handling based on wrap-around detection, and is the status reporting strategy during faults reasonable?",
            "Check the external devices (such as sensors, NVM, databases, other systems, etc.), and analyze the correctness of the output from the source device when it is in conditions like \"degraded, maintenance,\" etc.",
            "Have differentiated alarm measures and handling measures been implemented for all fault conditions of the system?",
            "Is the detection logic for fault items reasonable, and will the detection method affect the normal operation of the equipment?",
            "Are the fault items for fault detection adequate?"
        ],
        "safety_requirements": [
            "The system should reasonably detect the landing gear retraction fault flag to ensure the correctness of the detection logic and that the detection method does not affect the normal operation of the equipment.",
            "The system should check external devices (such as sensors, NVM, databases, other systems, etc.) to ensure the correctness of the landing gear retraction failure flag when the source device is in a 'degraded, maintenance' state.",
            "The system should implement differentiated warning and handling measures for landing gear retraction failure situations to ensure timely detection and handling of the fault.",
            "The system should develop a reasonable fault handling strategy based on landing gear retraction failure detection, and ensure the timeliness and accuracy of status reporting during faults.",
            "The system should fully consider the fault items of fault detection, especially the setting of fault flags for landing gear retraction, to ensure the comprehensiveness and reliability of fault detection."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 290,
        "requirement": "If the landing gear is in the retracted position, the system should set the retract landing gear signal to low level and the left and right brake signals to 0.",
        "original_safety_criterions": [
            "Is the detection logic for fault items reasonable, and will the detection method affect the normal operation of the equipment?",
            "Is the sequence and timing of system control coordinated with the hardware, and are the control conditions complete and consistent?",
            "Have differentiated alarm measures and handling measures been implemented for all fault conditions of the system?",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\"."
        ],
        "safety_requirements": [
            "The system should reasonably detect the retraction status of the landing gear, ensuring the correctness of the detection logic and that the detection method does not affect the normal operation of the equipment.",
            "The system should ensure that the control sequence and timing are coordinated with the hardware when the landing gear is in the retracted state, ensuring that control conditions are complete and consistent. It must ensure that the signal for retracting the landing gear is set to low level and the braking signals for both left and right are set to 0.",
            "The system should provide differentiated alerts and handling measures for the situation where the landing gear is retracted and faulty, ensuring timely response and handling in case of failure. Safety is a priority in such scenarios.",
            "The system should check the operating status of different redundancies to ensure the correctness of the landing gear retraction signal and left and right brake signals when 'two or more redundancies are in different states'."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 291,
        "requirement": "If the retracted lock signal is high, the system should periodically check the retracted lock signal.",
        "original_safety_criterions": [
            "Is the detection logic for fault items reasonable, and will the detection method affect the normal operation of the equipment?",
            "Is there a detection mechanism in the output circuit to monitor the loop status without affecting normal output?",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as 'two or more redundancies being in different states'."
        ],
        "safety_requirements": [
            "The system should ensure that the detection logic for the retracted lock signal is reasonable, and the detection method should not affect the normal operation of the system.",
            "The system should set up a detection mechanism in the output circuit to achieve periodic checks of the retraction lock signal without affecting normal output.",
            "The system should check the operating status of different redundancies to ensure that when two or more redundancies are in different states, and the lock-up signal is high, the system can correctly implement periodic inspection functions. Safety checks are crucial in these scenarios."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 292,
        "requirement": "If the retraction lock signal becomes low within 1 minute, the system should set the retraction landing gear signal to low, the left and right brake signals to 0, and set the landing gear status to retracted.",
        "original_safety_criterions": [
            "Check and analyze the interface data of different redundancy levels to ensure the correctness of function implementation in cases of single redundancy failure and all redundancies failing (such as data anomalies, timing faults, communication failures, destination device failures, etc.). Focus on Safety.",
            "Check the process of control function calculation, analyze the correctness of function handling in cases where the control calculation process times out (does not return results within the specified time).",
            "Check and analyze the correctness of states and functions with different priorities set under transfer relationships between two or more states, including situations such as high priority switching to low priority and low priority switching to high priority.",
            "Have differentiated alarm measures and handling measures been implemented for all fault conditions of the system?"
        ],
        "safety_requirements": [
            "The system should set the retraction landing gear signal to low level and the left and right brake signals to 0, and set the landing gear status to retracted when the lock retraction signal becomes low level. It should also provide differentiated alarm measures and handling measures.",
            "The system, when in two or more states with transfer relationships, should ensure the correctness of the function that, when switching from a high-priority state to a low-priority state or from a low-priority state to a high-priority state, the signal for retracting the landing gear is set to low level, the left and right brake signals are set to 0, and the landing gear status is set to retracted.",
            "The system should ensure the functionality is correctly implemented to set the landing gear retraction signal to low level, the left and right brake signals to 0, and the landing gear status to retracted when a single redundancy failure or all redundancies fail (such as data anomalies, timing faults, communication failures, destination device failures, etc.). Safety must be ensured in these scenarios.",
            "The system should ensure the landing gear retraction signal is set to low level, the left and right brake signals are set to 0, and the landing gear status is set to retracted when a timeout occurs during the landing gear control calculation process (does not return results within the specified time), ensuring correct processing of this function. Safety is a crucial consideration in this context."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 293,
        "requirement": "If the lockout signal remains high 1 minute later, the system should set the retract landing gear signal to low level, the left and right brake signals to 0, and set the landing gear retraction failure flag.",
        "original_safety_criterions": [
            "Does the fault detection have false alarm prevention processing, and will this processing meet the real-time requirements for alarm handling?",
            "For the same interface data, there are multiple fault handling strategies. Check the required Safety values for different fault handling strategies under the same interface data, and analyze the correctness of the output when the Safety values of multiple fault handling strategies are not equal.",
            "Check and analyze the interface data of different redundancy levels to ensure the correctness of function implementation under conditions of single redundancy failure, and all redundancies failing (such as data anomalies, timing faults, communication failures, destination device failures, etc.). Safety considerations are integral to this analysis.",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\".",
            "Check the results of the function control calculations and analyze the correctness of the function processing under conditions such as normal values, abnormal values, boundary values, maximum and minimum values."
        ],
        "safety_requirements": [
            "The system should check the operating status of different redundancies to ensure that in cases where 'two or more redundancies are in different states', the signal to retract the landing gear is set to low level, the left and right brake signals are set to 0, and the function to set the landing gear retraction failure flag is correctly implemented.",
            "The system should check the interface data of different redundancies to ensure the correctness of setting the landing gear retraction signal to low level, the left and right brake signals to 0, and setting the landing gear retraction fault flag under conditions such as single redundancy failure or all redundancies failing (such as abnormal data, timing faults, communication faults, destination device failures, etc.).",
            "The system should check different fault handling strategies under the same interface data to ensure that when the safety values of multiple fault handling strategies differ, if the retraction lock signal remains high for 1 minute, the system sets the landing gear retraction signal to low level, the left and right brake signals to 0, and correctly outputs the landing gear retraction fault flag.",
            "The system should have a false alarm prevention mechanism to ensure that the processing of false alarms meets the real-time requirements of setting the landing gear retraction signal to low level, setting the left and right brake signals to 0, and setting the landing gear retraction fault flag.",
            "The system should check the results of the landing gear control calculations to ensure the correctness of function processing under conditions such as normal values, abnormal values, boundary values, maximum and minimum values."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 294,
        "requirement": "When the aircraft returns and flies to the third side of the five-side approach path, and the distance to the arrival point is less than 5000m, the system should set the left and right brakes to 100%, and set the landing gear deployment signal to high level.",
        "original_safety_criterions": [
            "Check the process of functional control calculations and analyze the correctness of functional handling in cases such as timeouts (not returning results within the specified time) during the control calculation process.",
            "Check the results of the control calculations for the function, analyze the correctness of the function processing under conditions such as \"normal values, abnormal values, boundary values, maximum and minimum values\".",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\"."
        ],
        "safety_requirements": [
            "The system should ensure that when in different redundancy states, during the aircraft's return flight to the third leg of the five-side approach, if the distance to the touchdown point is less than 5000m, the function to set the left and right brakes to 100%, and the landing gear deployment signal to high level, is correctly implemented.",
            "The system should ensure that when a timeout occurs during the control calculation process (not returning results within the specified time), and when the aircraft returns to fly to the third leg of the five-edge approach with a distance less than 5000m from the point, the function handling is correct by setting the left and right brakes to 100%, and setting the landing gear deployment signal to high level.",
            "The system must ensure that when the control calculation results are normal values, abnormal values, boundary values, maximum or minimum values, etc., the function handling is correct to set the left and right brakes to 100%, and set the landing gear deployment signal to high level when the aircraft returns to fly to the third leg of the five-side approach route and the distance to the touchdown point is less than 5000m.",
            "The system should monitor in real-time the distance from the point of return to the third leg of the final approach path as the aircraft flies back to the runway, and when the distance is less than 5000m, it must ensure the timely and accurate execution of setting the left and right brakes to 100%, and setting the landing gear deployment signal to a high level.",
            "The system should provide anomaly detection and early warning mechanisms to ensure that when abnormalities occur during the control calculation process, timely measures can be taken to prevent the execution of erroneous commands."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 295,
        "requirement": "1 second after, the system should check the signal for the lowered and locked status.",
        "original_safety_criterions": [
            "Is the detection logic for fault items reasonable, and will the detection method affect the normal operation of the equipment?",
            "Check the data processing of the function, analyze whether there is a division by zero in the data processing process.",
            "Check the process of functional control calculation, analyze the correctness of function processing in cases such as timeout in control calculation (not returning results within the specified time)."
        ],
        "safety_requirements": [
            "The system should ensure that the detection logic for checking the lock release signal after 1s is reasonable and does not affect the normal operation of the system.",
            "The system should check the data processing when handling the data of a dropped lock signal to ensure that there is no division by zero, preventing system abnormalities.",
            "The system should ensure that it returns results within the specified time during the process of controlling the release of the lock signal. If a timeout occurs, there should be a proper functional handling mechanism to prevent system failure."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 296,
        "requirement": "If the landing gear down lock signal is low, it indicates a failure in the landing gear down circuit. Setting the emergency landing gear down signal to high level, after 1 minute, set both the landing gear down and emergency landing gear down signals to low level (this situation cannot check the down lock signal), and set the left and right brakes to the corresponding preset amounts, setting the landing gear down fault flag to valid.",
        "original_safety_criterions": [
            "Check the execution sequence of tasks and analyze the correctness of function processing when the task execution sequence is inconsistent with the specified sequence.",
            "Check the logical judgment conditions and logical branches of the function, analyze the correctness of function processing in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "Check the output data of different redundancies and analyze the correctness of function implementation in cases of \"single redundancy failure, multiple redundancies all failed\".",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\"."
        ],
        "safety_requirements": [
            "The system should check the logical judgment conditions and logical branches of the landing gear deployment circuit to ensure the correctness of functional processing in cases such as 'logically always false, logically always true, incorrect logical judgment conditions, missing logical branches'.",
            "The system should check the working status of different redundancies to ensure the correctness of the landing gear release and emergency release signals when 'two or more redundancies are in different states', especially when the downlock signal is at a low voltage level, setting the emergency landing gear release signal to high voltage level. After 1 minute, set both the landing gear release and emergency release signals to low voltage level, and set the left and right brakes to the corresponding preset amounts, and set the landing gear release fault flag to valid.",
            "The system should check the output data of different redundancies to ensure the correctness of setting the signals for landing gear deployment and emergency landing gear deployment, as well as the brake preset values, in cases of single redundancy failure or multiple redundancies failing. Safety is a crucial consideration in this process.",
            "The system should check the execution sequence of tasks to ensure that the task execution order is consistent with the specified sequence, especially when setting the lock release signal to low level, the emergency landing gear deployment signal to high level, setting both the landing gear deployment and emergency deployment signals to low level after 1 minute, setting the left and right brakes to the corresponding preset values, and setting the landing gear deployment fault flag to valid."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 297,
        "requirement": "If the landing gear down lock signal is high, periodically check the down lock signal: if it goes low within one minute, it indicates the landing gear has been deployed. Set the landing gear down signal to low, set the landing gear status to down, and set the left and right brakes to the corresponding preset amounts. Invalidate the landing gear deployment fault flag.",
        "original_safety_criterions": [
            "Is there fault handling based on wrap-around detection, and is the status reporting strategy during faults reasonable?",
            "Check the entry conditions for states, analyze the correctness of state execution during the process when the entry conditions are \"met, not met, met again,\" etc.",
            "Are there specified requirements for handling responses to incorrect or invalid operations?",
            "Is the detection logic for fault items reasonable, and will the detection method affect the normal operation of the equipment?",
            "Are the fault items for fault detection adequate?"
        ],
        "safety_requirements": [
            "The system should have a fault handling mechanism based on the drop lock signal to ensure reasonable status reporting strategies in case of failure.",
            "The system should specify the response handling requirements for incorrect operations and invalid operations, for example: if the signal to lower and lock is high, then periodically check the lower and lock signal: if within 1 minute the lower and lock signal changes to low, it indicates that the landing gear has been lowered, set the lower landing gear signal to low, set the landing gear status to down, and set the left and right brakes to the corresponding preset amounts, and set the landing gear down fault flag to invalid.",
            "The system should ensure that the detection logic for releasing the lock signal is reasonable, and the detection method should not affect the normal operation of the landing gear.",
            "The system should check the conditions for entering the locked signal state to ensure the correctness of state execution during the process when the entry conditions are 'met, not met, met again', etc.",
            "The system should thoroughly detect faults in the drop lock signal, especially through periodic checks, to ensure the comprehensiveness and accuracy of fault detection."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 298,
        "requirement": "If the landing gear down lock signal is high, then periodically check the down lock signal: if after 1 minute the down lock signal is still high, it indicates a landing gear deployment failure, then set the emergency landing gear down signal to high, and after 1 second, periodically check the down lock signal again.",
        "original_safety_criterions": [
            "Check the logical conditions and branches of the function, and analyze the correctness of function handling in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "Check the output data of different redundancies and analyze the correctness of function implementation in cases of \"single redundancy failure, multiple redundancies all fail\".",
            "Check and analyze the interface data of different redundancy levels to ensure the correctness of function implementation under conditions of single redundancy failure, and all redundancies failing (such as data anomalies, timing faults, communication failures, destination device failures, etc.). Safety is a crucial concern in this process.",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\"."
        ],
        "safety_requirements": [
            "The system should check the down lock signals of different redundancies to ensure the correct operation of lowering the landing gear under 'single redundancy failure' or 'multiple redundancies failure'.",
            "The system should check the working status of different redundancies to ensure the correctness of the periodic inspection of the lockout signal and setting the emergency landing gear release signal to high level when 'two or more redundancies are in different states'.",
            "The system should check the logical judgment conditions and logical branches for releasing the lock signal to ensure the correctness of function processing in cases such as 'logical always false, logical always true, incorrect logical judgment conditions, missing logical branches'.",
            "The system should check the interface data of different redundancies to ensure the correctness of the functionality for releasing the lock signal and the emergency release of the landing gear signals in cases of 'single redundancy failure' or 'all redundancies failing (such as data anomalies, timing failures, communication failures, destination device failures, etc.)'. Safety is a crucial concern in this process.",
            "The system should periodically check the down lock signal. If the down lock signal remains high after 1 minute, the emergency release gear signal should immediately be set to high level, and continue to periodically check the down lock signal after 1 second to ensure the Safety of the gear release function."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 299,
        "requirement": "If the lockout signal remains high after 1 minute, it indicates that the emergency landing gear deployment has failed. Set both the landing gear deployment and emergency deployment signals to low, and set the left and right brakes to their respective preset amounts. The landing gear deployment failure flag is set to valid.",
        "original_safety_criterions": [
            "Check the output data of different redundancies and analyze the correctness of function implementation in cases of \"single redundancy failure\" and \"multiple redundancies all failing\".",
            "Check the logical conditions and branches of the function's logic, analyzing the correctness of function handling in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "Has the diagnosis and handling of specific failures of the sensor been carried out based on the principle of operation of the sensor?",
            "Check the process of control calculation for functions, analyze the correctness of functional handling in cases where the control calculation process times out (does not return results within the specified time).",
            "Check the execution sequence of tasks and analyze the correctness of functional processing when the task execution sequence is inconsistent with the specified sequence."
        ],
        "safety_requirements": [
            "The system should check the logical judgment conditions and logical branches for the emergency deployment of the landing gear function, ensuring the correctness of function processing in cases such as 'logic always false, logic always true, incorrect logical judgment conditions, missing logical branches'.",
            "The system should check the sequence of executing the emergency landing gear deployment tasks to ensure that the execution order matches the specified order, especially the correctness of the handling logic when the lock signal remains high one minute after deployment.",
            "The system should check the output data of different redundancies to ensure the correctness of the emergency landing gear deployment function in cases of 'single redundancy failure, multiple redundancies all failed'.",
            "The system should diagnose and handle specific failures of emergency landing gear deployment based on the operating principles of the landing gear, ensuring the correctness and timeliness of failure handling.",
            "The system should check the emergency landing gear deployment control algorithm to ensure correct functional handling in cases such as timeouts (not returning results within the specified time), especially when the down lock signal remains high after 1 minute, setting both the landing gear deployment and emergency deployment signals to low level, and setting the left and right brakes to the corresponding preset values, and setting the landing gear deployment failure flag to valid."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 300,
        "requirement": "If the lock signal drops to a low level within 1 minute, it indicates that the emergency release of the landing gear was successful. After a 2-second delay, both the landing gear release and emergency release signals are set to a low level. The landing gear status is set to down, and the left and right brakes are set to the corresponding preset amounts. The landing gear release failure flag is set to invalid.",
        "original_safety_criterions": [
            "Is there fault handling based on wrap-around detection, and is the status reporting strategy during faults reasonable?",
            "Are there specified requirements for handling responses to incorrect or invalid operations?",
            "Is the detection logic for fault items reasonable, and will the detection method affect the normal operation of the equipment?",
            "Are the fault items for fault detection adequate?",
            "For critical control or actions, is there a timeout judgment to handle situations where the hardware status does not meet control requirements for an extended period?"
        ],
        "safety_requirements": [
            "The system should detect the failure of the landing gear emergency release based on the lockout signal and report the fault status reasonably.",
            "The system should ensure that the logic for detecting failures in the emergency release of the landing gear is reasonable, and the detection method should not affect the normal operation of the equipment.",
            "The system should set up a timeout judgment mechanism. If the lock signal does not change to low level within 1 minute, the corresponding fault handling mechanism should be triggered.",
            "The system should specify the response handling requirements for incorrect operations and invalid operations. For example: if the lock signal drops to a low level within 1 minute, it indicates that the emergency release of the landing gear was successful. After a 2-second delay, set both the landing gear release signal and the emergency release signal to a low level, set the landing gear status to down, and set the left and right brakes to the corresponding preset amounts. The landing gear release failure flag is set to invalid.",
            "The system should adequately define fault detection items, especially for fault detection during the emergency release process of the landing gear."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 301,
        "requirement": "When powering up on the ground, the system should initialize all signals and states to ensure the initial state of the landing gear and brake systems is correct.",
        "original_safety_criterions": [
            "Check the external devices (such as sensors, NVM, databases, other systems, etc.), and analyze the correctness of the outputs when the devices are in working states like \"power down, initialization\".",
            "Multiple functions or states share the same interface data, but different functions/states have different requirements for input initial values. Check the initial value of this interface data and analyze the correctness of the output when the initial value of the interface data is \"greater than or less than the function/state requirements\" etc.",
            "Check the entry conditions for states, analyze the correctness of state execution during the process when the entry conditions are \"met, not met, met again,\" etc.",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\"."
        ],
        "safety_requirements": [
            "When the system is powered on the ground, the working status of different redundancies should be checked to ensure that in cases where 'two or more redundancies are in different states', all signals and statuses are correctly initialized, and the initial states of the landing gear and brake systems are correct. Safety checks must also be performed.",
            "When the system is powered on the ground, the status entry conditions should be checked to ensure that during the status execution process, under circumstances where the entry conditions are 'met, not met, met again', etc., all signals and statuses are correctly initialized, and the initial states of the landing gear and brake systems are correct. Safety must be prioritized throughout this process.",
            "When the system is powered on the ground, the operating status of external devices (such as sensors, NVM, databases, other systems, etc.) should be checked to ensure that all signals and statuses are correctly initialized when the equipment is in states such as 'power off, initialization', and to ensure the initial state of the landing gear and brake systems is correct.",
            "When the system is powered on the ground, the initial states of the landing gear and brake systems should be checked to ensure that all signals and states are correctly initialized under conditions such as 'greater than functional requirements, less than functional requirements', and to ensure the initial states of the landing gear and brake systems are correct."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 303,
        "requirement": "Remote control commands to deploy or retract the landing gear can be issued in any control mode as required.",
        "original_safety_criterions": [
            "The control calculation process for functions varies under different states and working stages. Check the function inputs and analyze the correctness of function processing in cases such as \"not considering working stages, not considering working states\".",
            "Check the logical judgment conditions and logical branches of the function, analyze the correctness of function handling in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "When issuing dangerous control commands or actions, is there a rational judgment based on the equipment status?",
            "Check the execution sequence of tasks and analyze the correctness of functional processing when the task execution sequence is inconsistent with the specified sequence.",
            "The timing relationships, constraint relationships, concurrent relationships, and combinational relationships between the control logics of each functional point are correct."
        ],
        "safety_requirements": [
            "When issuing remote control commands to extend or retract the landing gear in different states and working phases, the system should check the functional inputs to ensure the correctness of remote command processing when the 'working phase not considered' or 'working state not considered'.",
            "The system should make reasonable judgments based on the equipment status when issuing remote control commands to extend or retract the landing gear, ensuring that the execution of commands complies with the current equipment status.",
            "The system should check the timing of task execution when performing various tasks to ensure the correctness of processing remote control commands for landing gear deployment and retraction if the task execution sequence does not match the specified sequence.",
            "When the system issues remote control commands to extend or retract the landing gear under various control modes, it should check the logical judgment conditions and logical branches to ensure the correctness of functional processing in cases such as 'logic always false', 'logic always true', 'incorrect logic judgment conditions', or 'omitted logic branches'.",
            "When the system issues remote control commands to extend or retract the landing gear under various control modes, it should ensure the correctness of timing relationships, constraint relationships, concurrent relationships, and combinational relationships, preventing functional abnormalities caused by incorrect relationships."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 304,
        "requirement": "When a \"retract landing gear\" remote control command is received, if the flight phase is not ground waiting and the flight altitude is not less than 80m, then proceed according to item 1) in section 3.2.11.3 (excluding its conditions).",
        "original_safety_criterions": [
            "Is there a judgment on the rationality of personnel operations, where instructions that do not conform to the current scenario or status are not responded to?",
            "When issuing dangerous control commands or actions, is there a rational judgment based on the equipment status?",
            "Check the duration of each task, analyze the correctness of function processing in cases where the task duration is less than the specified time.",
            "Check the duration of each task, analyze the correctness of functional processing in cases where the task duration exceeds the specified time.",
            "Check the execution conditions of the function, analyze the correctness of function processing when the execution conditions are \"not met, met again\" during the execution process."
        ],
        "safety_requirements": [
            "The system should check the flight phase and altitude when it receives the 'retract landing gear' remote control command, ensuring that the flight phase is not ground waiting and the flight altitude is no less than 80m; otherwise, the command will not be executed.",
            "The system should check the correctness of the execution conditions when performing the gear retraction function, ensuring the proper handling of scenarios where the conditions are 'not met, met again', etc.",
            "The system should make a reasonable judgment based on the current equipment status (such as flight phase and flight altitude) when issuing a 'retract landing gear' control command to ensure the rationality of the command.",
            "The system should check the duration of the task for retracting the landing gear to ensure that the task duration does not exceed the specified time; otherwise, an exception handling mechanism should be triggered.",
            "The system should evaluate the rationality of the 'retract landing gear' remote control command when it is received. Commands that do not fit the current scenario or status should not be responded to."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 305,
        "requirement": "When receiving the remote control command to \"lower the landing gear\", proceed as per 2) in section 3.2.11.3 (excluding its conditions).",
        "original_safety_criterions": [
            "Check the process of control calculation for functions, analyze the correctness of function handling in cases where the control calculation process times out (does not return results within the specified time).",
            "When issuing dangerous control commands or actions, is there a rational judgment based on the equipment status?",
            "Check the results of functional control calculations and analyze the correctness of functional processing under conditions such as normal values, abnormal values, boundary values, maximum and minimum values.",
            "Check the execution sequence of tasks and analyze the correctness of functional processing when the task execution sequence is inconsistent with the specified sequence.",
            "Check the duration of each task, analyze the correctness of functional processing in cases where the task duration exceeds the specified time."
        ],
        "safety_requirements": [
            "The system should check the duration of the task when it receives the 'lower landing gear' remote control command, ensuring the correctness of functional processing if the task duration exceeds the specified time.",
            "When the system receives a remote control command to 'lower the landing gear', it should check the control calculation results to ensure the correctness of functional processing under conditions where the control calculation results are 'normal values, abnormal values, boundary values, maximum and minimum values'.",
            "When the system receives a 'lower landing gear' remote control command, it should check the control calculation process to ensure the correctness of functional processing if a timeout occurs (does not return results within the specified time) during the control calculation process.",
            "The system should check the execution sequence of the task when it receives the 'lower landing gear' remote control command, ensuring the correctness of functional processing if the execution sequence does not match the specified sequence.",
            "When the system issues a control command to 'lower the landing gear', it should make a rational judgment based on the equipment status to ensure the correctness and Safety of the command."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 306,
        "requirement": "Each of the two rear wheels of the aircraft has an independent braking system, and the brakes use a PWM control scheme. The flight control computer sends a 2kHz pulse width modulation signal to the braking system, with the braking torque proportional to the duty cycle of the pulse width modulation signal. The braking duration corresponds to the duration of the PWM signal.",
        "original_safety_criterions": [
            "Check the logical conditions and branches of the function, analyze the correctness of function processing under conditions such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "The timing relationships, constraint relationships, concurrent relationships, and combinational relationships between the control logics of each functional point are correct."
        ],
        "safety_requirements": [
            "The system should check the logical judgment conditions and logical branches of the braking system to ensure the correctness and Safety of braking processing in cases such as 'logical always false, logical always true, incorrect logical judgment conditions, omitted logical branches'.",
            "When the flight control computer sends a 2kHz pulse width modulation signal to the braking system, it should ensure the correct timing relationships, constraint relationships, concurrent relationships, and combinational relationships between each functional point control logic, to guarantee that the braking torque is directly proportional to the duty cycle of the pulse width modulation signal, and that the braking duration corresponds to the duration of the PWM signal.",
            "The system should provide an abnormal detection mechanism for the logical judgment conditions and logical branches of the braking system to ensure that warnings or protective measures are triggered in a timely manner when logical errors occur. Safety is a priority in this context.",
            "The system should ensure reliable communication between the flight control computer and the braking system, preventing signal transmission errors or delays from affecting the accuracy of braking torque and duration."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 311,
        "requirement": "If the landing gear fully compressed signal is valid and the airspeed is less than a certain speed threshold vk_may_brake, differential braking is used for correction.",
        "original_safety_criterions": [
            "Check the logical judgment conditions and logical branches of the function, analyze the correctness of function processing in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "Check the values of continuous output data with different redundancies, and analyze the correctness of function implementation in cases where \"values are inconsistent, meaning the difference between the values exceeds the specified threshold\" for two or more redundant outputs.",
            "Check the duration of each task, analyze the correctness of function processing in cases where the task duration is less than the specified time.",
            "Check the execution sequence of tasks and analyze the correctness of functional processing when the task execution sequence is inconsistent with the specified sequence.",
            "Check the results of the function control calculations and analyze the correctness of the function processing under conditions such as normal values, abnormal values, boundary values, maximum and minimum values."
        ],
        "safety_requirements": [
            "The system should check the logic conditions and branches for the landing gear fully compressed signal being valid and airspeed being less than a certain speed threshold vk_may_brake, ensuring the correctness of the differential braking correction function handling in cases of 'logic always false, logic always true, incorrect logic judgment conditions, missing logic branches'.",
            "The system should check the values of continuous output data with different redundancies to ensure the correctness of the differential braking bias correction function in cases where 'the values of two or more redundant outputs are inconsistent, that is, the difference in values exceeds the specified threshold'.",
            "The system should check the execution sequence of tasks to ensure the correctness of the differential braking bias correction function processing when the task execution sequence is inconsistent with the specified sequence.",
            "The system should check the control calculation results of differential braking for correction to ensure the correctness of function processing under conditions where the control calculation results are 'normal values, abnormal values, boundary values, maximum and minimum values'.",
            "The system should check the mission duration for which the landing gear full compression signal is valid and the airspeed is less than a certain speed threshold vk_may_brake, ensuring the correctness of the differential brake correction function processing under conditions such as the mission duration being less than the specified time. Safety considerations are paramount in this context."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 312,
        "requirement": "In autonomous control mode, the differential brake control law is: δb = -(Kz * Dz + Kz * Dz - K * Δy - Ky * wy)",
        "original_safety_criterions": [
            "The control calculation process for functions varies under different states and working phases. Check the function inputs and analyze the correctness of function processing in scenarios such as \"not considering working phases, not considering working states\".",
            "Check the system status, operational phase, or software status corresponding to system tasks, and analyze the correctness of status execution in cases such as \"no corresponding software status exists\" or \"software is inconsistent with the system\".",
            "Check the entry conditions for states and analyze the correctness of state execution during the process when the entry conditions are \"met, not met, met again,\" etc."
        ],
        "safety_requirements": [
            "The system should check the status entry conditions under autonomous control mode to ensure the correctness of status execution during the process, when the entry conditions are 'met, not met, met again'.",
            "The system should check functional inputs at different states and operational phases to ensure the correctness of the differential brake control law (δb = -(Kz * Dz + Kz * Dz - K * Δy - Ky * wy)) in cases where the operational phase and state have not been considered.",
            "The system should check the system status, working phase, or software status corresponding to the system tasks under autonomous control mode to ensure the correctness of status execution when there is no corresponding software status or inconsistency between the software and the system.",
            "The system should ensure the calculation result of the differential brake control law (δb = -(Kz * Dz + Kz * Dz - K * Δy - Ky * wy)) is accurate under autonomous control mode, and trigger a warning mechanism in case of abnormalities."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 313,
        "requirement": "In the manual correction mode, the differential brake control law is: δb = -[Kz * (Dz - DzgSemi - DzsemiOld) + Kz * Dz - K * Δy - Ky * wy], where DzsemiOld is the lateral offset correction amount during the flare segment.",
        "original_safety_criterions": [
            "Check and analyze the correctness of states and functions with different priorities set under transfer relationships between two or more states, including situations such as high priority switching to low priority and low priority switching to high priority.",
            "Check the transition conditions between pairwise states in the software state space, analyze the correctness of state transitions under conditions where the transition conditions are \"not set, always satisfied, cannot be satisfied,\" etc.",
            "Check the conditions for state entry and analyze the correctness of state execution under conditions such as \"met, not met, met again\" during the state execution process.",
            "The control calculation process for functions varies under different states and working phases. Check the function inputs and analyze the correctness of function processing in cases such as \"not considering working phases, not considering working states\".",
            "Check the system status, working phase, or software status corresponding to system tasks, and analyze the correctness of status execution in cases such as \"no corresponding software status exists\" or \"software is inconsistent with the system.\""
        ],
        "safety_requirements": [
            "The system should check the state entry conditions in manual correction mode to ensure the correctness of state execution in cases such as 'met, not met, met again'.",
            "The system should check the functional inputs under different states and working phases to ensure the correctness of the differential brake control law calculations in cases such as 'unconsidered working phases, unconsidered working states'.",
            "The system should check the correctness of states and functions when switching between two or more states with transfer relationships, especially from high priority to low priority and vice versa, particularly in manual correction mode. The differential braking control law is: δb = -[Kz * (Dz - DzgSemi - DzsemiOld) + Kz * Dz - K * Δy - Ky * wy], where DzsemiOld is the lateral offset correction during the flare segment.",
            "In manual correction mode, the system should check the transfer conditions between each pair of states in the software state space to ensure the correctness of state transitions in cases such as 'not set, always satisfied, cannot be satisfied'.",
            "In manual correction mode, the system should check the system status, working phase, or the software status corresponding to the system tasks to ensure the correctness of status execution in cases such as 'non-existent corresponding software status, inconsistency between software and system'."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 314,
        "requirement": "In the inner loop remote control (attitude remote control) mode, the differential brake control law is: δb = K * (-yg) + Ky * wy",
        "original_safety_criterions": [
            "Is the sequence and timing of control by the system coordinated with the hardware, and are the control conditions complete and consistent?",
            "Is there fault handling based on wrap-around detection, and is the strategy for reporting status during a fault reasonable?",
            "Does the output circuit have a detection mechanism to monitor loop status without affecting normal output?",
            "Check the entry conditions for states, analyze the correctness of state execution during the process when the entry conditions are \"met, not met, met again,\" etc."
        ],
        "safety_requirements": [
            "The system should check the correctness of the entry conditions in the in-band loop remote control (attitude remote control) mode to ensure the correct execution of states under conditions such as 'met, not met, met again'.",
            "The system, in the in-band loop remote control (attitude remote control) mode, should have a fault handling mechanism based on wrap-around detection to ensure reasonable status reporting strategies in case of faults, especially during the execution of the differential brake control law δb = K * (-yg) + Ky * wy.",
            "The system should have a detection mechanism in the in-band loop remote control (attitude remote control) mode to ensure that the differential braking control law (δb = K * (-yg) + Ky * wy) loop status detection is performed without affecting normal output.",
            "The system, in the in-band loop remote control (attitude remote control) mode, should ensure that the sequence and timing of control are coordinated with the hardware, that control conditions are complete and consistent, especially the accurate execution of the differential brake control law δb = K * (-yg) + Ky * wy."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 315,
        "requirement": "In the remote control mode without inner loop (surface remote control), the specific formula for differential brake control law is not provided, but the corresponding control logic needs to be implemented.",
        "original_safety_criterions": [
            "Check the values of continuous output data with different redundancies, and analyze the correctness of function implementation in cases where the values of two or more redundant outputs are inconsistent, meaning the difference in values exceeds the specified threshold.",
            "Check the values of discrete output data with different redundancies, and analyze the correctness of function implementation in cases such as \"inconsistent values\" among two or more redundancy outputs.",
            "Check the execution timing of different redundancies and analyze the correctness of function implementation in cases such as \"two or more redundancy execution timings are not synchronized\".",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\"."
        ],
        "safety_requirements": [
            "When the system operates in different redundancy states, the correctness of the differential brake control logic implementation should be checked to ensure the consistency of control logic output across different states.",
            "When the system's continuous output data values at different redundancies are inconsistent, that is, the difference in values exceeds the specified threshold, the implementation correctness of the differential brake control logic should be checked to ensure the consistency of the output under different values.",
            "When the discrete output data values of the system are inconsistent at different redundancies, the implementation correctness of the differential brake control logic should be checked to ensure the consistency of the output under different values.",
            "When the system's execution timing at different redundancies is not synchronized, the implementation correctness of the differential brake control logic should be checked to ensure the consistency of the control logic output under different execution timings.",
            "The system should provide real-time monitoring and warning mechanisms, triggering warnings and taking appropriate actions promptly when inconsistent output data or execution timing among different redundancies is detected."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 316,
        "requirement": "During the ground waiting phase, the differential brake control law under both autonomous and manual correction modes is: δb = 0.",
        "original_safety_criterions": [
            "Check the transition conditions between pairwise states in the software state space, analyze the correctness of state transitions under conditions where the transition conditions are \"not set, always satisfied, unsatisfiable,\" etc.",
            "The control calculation process for functions varies under different states and working stages. Check the function inputs and analyze the correctness of function processing in scenarios such as \"without considering working stages, without considering working states\".",
            "Does the timing of output control status meet the scenario requirements?",
            "When issuing control commands or actions that are dangerous, is there a rational judgment based on the equipment status?",
            "For critical control or actions, is there a timeout judgment to handle situations where the hardware status does not meet control requirements for an extended period?"
        ],
        "safety_requirements": [
            "During the ground waiting phase, in both autonomous and manual correction modes, the timing for checking the output control status should be examined to ensure that the differential brake control law δb = 0 meets the scenario requirements.",
            "The system should make a rational judgment based on the status of the equipment during the ground waiting phase when issuing hazardous control commands or actions, ensuring the Safety of the control commands.",
            "The system should check the functional inputs under different states and working phases to ensure the correctness of the differential brake control law (δb = 0) processing in cases such as 'unconsidered working phases, unconsidered working states'.",
            "The system should check the transfer conditions between each pair of states during the ground waiting phase in both autonomous and manual correction modes, ensuring the correctness of state transitions in cases such as 'not set', 'always satisfied', and 'cannot be satisfied'.",
            "The system should set a timeout judgment for critical control or actions to handle situations where differential brake control laws fail to meet control requirements for an extended period during ground waiting phases."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 317,
        "requirement": "In remote control mode, it is the same as the skid phase, where vk_may_brake = 80km/h.",
        "original_safety_criterions": [
            "The control calculation process for functions varies under different states and working stages. Check the function inputs and analyze the correctness of function processing in cases such as \"not considering working stages, not considering working states\".",
            "Check the transition conditions between pairwise states in the software state space, analyze the correctness of state transitions under conditions where the transition conditions are \"not set, always satisfied, unsatisfiable,\" etc.",
            "Check the entry conditions for states and analyze the correctness of state execution during the process when the entry conditions are \"met, not met, met again,\" etc."
        ],
        "safety_requirements": [
            "The system should check the status entry conditions during the taxiing phase in remote control mode to ensure the correctness of status execution in cases such as 'met, not met, met again'.",
            "The system should check functional inputs during the taxiing phase in remote control mode to ensure correct function handling in cases such as 'not considering the operating phase, not considering the remote control mode'.",
            "During the taxiing phase in remote control mode, the system should check the transfer conditions between each pair of states in the software state space to ensure the correctness of state transitions in cases such as 'not set, always satisfied, cannot be satisfied'.",
            "During the taxiing phase in remote control mode, the system should ensure the accuracy of the entry conditions and transfer conditions to prevent execution errors caused by improper condition settings."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 318,
        "requirement": "If the landing gear fully compressed signal is valid, and the airspeed is not less than vk_may_brake, then δb = 0.",
        "original_safety_criterions": [
            "Check the logical conditions and branches of the function's logic, analyzing the correctness of function processing in cases of \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\".",
            "Check the results of functional control calculations and analyze the correctness of functional processing under conditions such as normal values, abnormal values, boundary values, maximum and minimum values.",
            "The timing relationships, constraint relationships, concurrent relationships, and组合 relationships between the control logics of each functional point are correct."
        ],
        "safety_requirements": [
            "The system should check the logic conditions and branches for the landing gear fully compressed signal being valid and airspeed not less than vk_may_brake, ensuring the correctness of function processing in cases such as 'logic always false, logic always true, incorrect logic judgment conditions, omitted logic branches'.",
            "The system should check the control calculation results when the landing gear is fully compressed and the airspeed is not less than vk_may_brake, ensuring the correctness of function processing under conditions such as normal values, abnormal values, boundary values, maximum and minimum values.",
            "The system should check the working status of different redundancies to ensure that in cases such as 'two or more redundancies being in different states', the function of δb = 0 is correctly implemented when the landing gear full compression signal is valid and the airspeed is not less than vk_may_brake.",
            "The system should ensure the correctness of the timing relationship, constraint relationship, concurrent relationship, and combination relationship between the control logic of δb = 0 when the landing gear full compression signal is valid and airspeed is not less than vk_may_brake, and the control logic of other functional points."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 319,
        "requirement": "The δb limit is within [-XfB, XfB]. XfB is the maximum proportional braking amount, which can be set remotely, with a default value of 40%.",
        "original_safety_criterions": [
            "Check the default values of the interface data and analyze the correctness of the output in cases such as \"default values being outliers outside the value range.\"",
            "Check multiple input data for the function, analyze the correctness of function processing under various input value combinations such as normal value equivalence classes, abnormal value equivalence classes, boundary value combinations, initial value combinations, Safety value combinations, default value combinations, etc.",
            "Check the default values of the interface data and analyze the correctness of the output in cases such as \"default values not set\".",
            "The timing relationships, constraint relationships, concurrent relationships, and combinational relationships between the control logics of each functional point are correct.",
            "Check the results of the function control calculations and analyze the correctness of the function processing under conditions such as normal values, abnormal values, boundary values, maximum and minimum values."
        ],
        "safety_requirements": [
            "The system should check the control calculation results of δb to ensure the correctness of functional processing under normal values, abnormal values, boundary values, maximum and minimum values.",
            "The system should check multiple input data of δb to ensure the correctness of functional processing under various conditions including combinations of normal value equivalence classes, abnormal value equivalence classes, boundary values, initial values, Safety values, and default values (such as the default value 40% for δb).",
            "The system should check the default values of interface data to ensure the correctness of the output of δb's default value of 40% in cases such as 'default value not set'.",
            "The system should ensure that the δb limit is within the range [-XfB, XfB], where XfB is the maximum proportional braking amount that can be set remotely, with a default value of 40%, and it should check the correctness of timing relationships, constraint relationships, concurrent relationships, and combinational relationships between control logics at each functional point.",
            "The system should check the default values of interface data to ensure that in cases such as 'default values being abnormal values outside the value range', the default value of δb, 40%, outputs correctly within the range of [-XfB, XfB]."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 321,
        "requirement": "If δb < 0, then δbL = -δb + YzBL + YjB, δbR = YzBL + YjB; otherwise δbL = YzBL + YjB, δbR = δb + YzBR + YjB.",
        "original_safety_criterions": [
            "Check the values of continuous interface data with different redundancies, and analyze the correctness of function implementation in cases where \"the values of two or more redundant interfaces are inconsistent, meaning the difference in values exceeds the specified threshold.\"",
            "Check the logical judgment conditions and logical branches of the function, analyze the correctness of function processing in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "Check the values of continuous output data with different redundancies, and analyze the correctness of function implementation in cases where \"values are inconsistent, meaning the difference in values exceeds the specified threshold\" among two or more redundant outputs.",
            "Check the values of discrete output data with different redundancies and analyze the correctness of function implementation in cases such as \"inconsistent values\" among two or more redundant output data. Safety considerations are integral to ensuring reliable function implementation.",
            "Check the data processing of the function, analyze whether there is a division by zero in the data processing process."
        ],
        "safety_requirements": [
            "The system should check the data processing when calculating the rudder deflection angles δbL and δbR to ensure there is no division by zero, preventing calculation errors.",
            "The system should check the continuous output data of different redundancies when calculating the rudder deflection angles δbL and δbR, ensuring the correctness of the calculation results if the values are inconsistent (i.e., the difference in values exceeds the specified threshold).",
            "The system should check the discrete output data of different redundancies when calculating the rudder deflection angles δbL and δbR, ensuring the correctness of the calculation results in case of inconsistent values.",
            "The system should check the continuous interface data of different redundancies when calculating the rudder deflection angles δbL and δbR, ensuring the correctness of the calculation results if the values are inconsistent (i.e., the difference in values exceeds the specified threshold).",
            "The system should check the logical judgment conditions and logical branches when calculating the rudder deflection angles δbL and δbR, ensuring the correctness of function processing in cases such as logically always false, logically always true, incorrect logical judgment conditions, and omitted logical branches."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 322,
        "requirement": "YzBL and YzBR are the preset amounts for left and right brakes, respectively, which can be set via remote control, with a default value of 10%.",
        "original_safety_criterions": [
            "The timing relationships, constraint relationships, concurrent relationships, and combinational relationships between the control logics of each functional point are correct.",
            "Check multiple input data for the function, analyze the correctness of function processing under various input value combinations such as 'normal value equivalence class, abnormal value equivalence class, boundary value combination, initial value combination, Safety value combination, default value combination'.",
            "Check the logical conditions and branches of the function, analyze the correctness of function handling in cases such as 'logically always false, logically always true, incorrect logical judgment conditions, missing logical branches'."
        ],
        "safety_requirements": [
            "The system should check the logical conditions and logical branches of the brake pre-setting (YzBL and YzBR) to ensure the correctness of functional processing in cases such as 'logically always false, logically always true, incorrect logical judgment conditions, missing logical branches'.",
            "The system should check multiple input data for the brake preset amounts (YzBL and YzBR) to ensure the correctness of functional processing under various conditions including normal value equivalence class combinations, abnormal value equivalence class combinations, boundary value combinations, initial value combinations, Safety value combinations, and default value combinations (such as the default values for YzBL and YzBR being 10%).",
            "The system should ensure the correct control logic for setting and default values (10%) of the left and right brake pre-settings (YzBL and YzBR), including the timing relationships, constraint relationships, concurrent relationships, and combinational relationships between the control logics of each functional point.",
            "The system should provide real-time monitoring and anomaly detection mechanisms for brake preset amounts (YzBL and YzBR) to ensure data integrity and consistency during setup and use."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 323,
        "requirement": "YjB is the emergency brake bias, normally 0, and during a link interruption it is 30%.",
        "original_safety_criterions": [
            "Is there fault handling based on wrap-around detection, and is the strategy for reporting status during a fault reasonable?",
            "Check the timing of data acquisition for the interface, analyzing the correctness of the output when the input acquisition timing is \"too early to stop, too late to stop\", etc.",
            "Is there a detection mechanism in the output circuit to monitor the loop status without affecting normal output?",
            "Is the detection logic for fault items reasonable, and will the detection method affect the normal operation of the equipment?",
            "Are the fault items for fault detection adequate?"
        ],
        "safety_requirements": [
            "The system should have a fault handling mechanism based on wrap-around detection to ensure that the emergency brake bias YjB is correctly reported as 30% when the link is interrupted.",
            "The system should reasonably design the fault detection logic to ensure that the detection method for the emergency brake bias YjB changing from 0 to 30% when the link is interrupted does not affect the normal operation of the equipment.",
            "The system should perform status detection on the output circuit without affecting normal output, especially when the emergency brake bias YjB changes from 0 to 30% in case of a link interruption.",
            "The system should fully consider the fault detection items, especially the changes in the emergency brake bias YjB, to ensure the rationality of the detection logic.",
            "The system should check the timing of interface data acquisition to ensure the correctness of the emergency brake bias YjB when the input acquisition timing is 'too early stop' or 'too late stop'."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 324,
        "requirement": "When the solution is obtained according to a), the resulting max(δbL, δbR) ≤ 1.",
        "original_safety_criterions": [
            "The control calculation process for functions varies under different states and working stages. It is necessary to check the function inputs and analyze the correctness of function processing in scenarios such as \"not considering working stages, not considering working states\".",
            "Check the values of continuous output data with different redundancies, and analyze the correctness of function implementation in cases where the values of two or multiple redundant outputs are inconsistent, meaning the difference in values exceeds the specified threshold.",
            "Check the process of control calculation for functions, and analyze the correctness of functional handling in cases such as timeouts in the control calculation process (where results are not returned within the specified time).",
            "Check the values of discrete output data with different redundancies, and analyze the correctness of function implementation in cases such as \"inconsistent values\" among two or more redundant output data.",
            "Check the results of functional control calculations and analyze the correctness of functional processing under conditions such as normal values, abnormal values, boundary values, maximum and minimum values."
        ],
        "safety_requirements": [
            "The system should check the values of discrete output data with different redundancies to ensure that in cases of 'inconsistent values', the function max(δbL, δbR) ≤ 1 is correctly implemented.",
            "The system should check the solution results to ensure that in cases of 'normal values, abnormal values, boundary values, maximum and minimum values', the functional processing of max(δbL, δbR) ≤1 is correct.",
            "The system should check the control calculation process to ensure that the result of max(δbL, δbR) is correct in case of a timeout (no result returned within the specified time).",
            "The system should check the function inputs to ensure that the solution max(δbL, δbR) ≤1 is correct under various states and operating stages, especially in cases where 'operating stages are not considered, operating states are not considered'.",
            "The system should check the values of continuous output data with different redundancies to ensure that in cases where the values are inconsistent, meaning the difference between the values exceeds the specified threshold, the function max(δbL, δbR) ≤1 is correctly implemented."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 325,
        "requirement": "The specific softening time should be determined based on control requirements, actual needs, and previous control experience.",
        "original_safety_criterions": [
            "The control calculation process for functions varies under different states and working stages. Check the function inputs and analyze the correctness of function processing in cases such as \"not considering working stages, not considering working states\".",
            "Does the timing of the output control status meet the scene requirements?",
            "Check the duration of each task, analyze the correctness of function processing in cases where the task duration is less than the specified time.",
            "The timing relationships, constraint relationships, concurrent relationships, and combinational relationships between the control logics of each functional point are correct.",
            "For critical control or actions, is there a timeout judgment to handle situations where the hardware status does not meet control requirements for an extended period?"
        ],
        "safety_requirements": [
            "The system should check functional inputs at different states and working phases to ensure the softening time is correctly determined in cases of 'unconsidered working phases' or 'unconsidered working states'.",
            "The system should have a timeout judgment mechanism for critical control or actions, to handle situations where the hardware status does not meet control requirements for an extended period. The specific timeout duration should be determined based on control requirements, actual needs, and previous control experience.",
            "The system should ensure that the timing of output control status meets the control requirements, actual needs, and previous control experience.",
            "The system should check the duration of each task to ensure that in cases where the task duration is less than the specified time, the softening time is handled correctly.",
            "The system should ensure the correct timing relationships, constraint relationships, concurrent relationships, and combination relationships among the control logics of each functional point, especially when determining the softening time, it should ensure the correct application of control requirements, actual needs, and previous control experience."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 327,
        "requirement": "The transition into and out of the ground waiting phase improves reliability through a two-out-of-three switch command.",
        "original_safety_criterions": [
            "When issuing dangerous control commands or actions, is there a rational judgment based on the equipment status?"
        ],
        "safety_requirements": [
            "The system should enhance reliability by using a two-out-of-three switch command mechanism when entering and exiting the ground waiting phase, ensuring the correctness and reliability of commands.",
            "When the system issues control commands or actions, it should make rationality judgments based on the current state of the equipment (such as entering and exiting the ground waiting phase) to prevent issuing hazardous commands.",
            "The system should ensure that the entry and exit instructions for the ground waiting phase are verified through multiple checks to prevent safety risks caused by misoperation.",
            "The system should provide real-time monitoring and logging functions to ensure the transfer and exit processes during the ground waiting phase are traceable, facilitating fault analysis and Safety audits."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 328,
        "requirement": "The conversion conditions for other stages should be judged multiple times according to specific situations. The phase transition only occurs when the results of five consecutive judgments are consistent, in order to reduce the probability of misjudgment.",
        "original_safety_criterions": [
            "Check the conditions for state entry, analyze the correctness of state execution during the process when the entry conditions are 'met, not met, met again', etc.",
            "Check the transition conditions between pairwise states in the software state space, analyze the correctness of state transitions under conditions where the transition conditions are 'not set, always satisfied, unsatisfiable', etc."
        ],
        "safety_requirements": [
            "The system should check the transfer conditions between each pair of states in the software state space to ensure the correctness of state transitions under conditions such as 'not set, always satisfied, unsatisfiable', with particular attention to phase transitions only occurring after five consecutive consistent judgment results to reduce the probability of misjudgment.",
            "The system should check the entry conditions for state transitions to ensure the correctness of state execution when the entry conditions are 'met, not met, met again', etc., during the state execution process. The phase transition should only occur when there are five consecutive consistent judgment results, in order to reduce the probability of misjudgment.",
            "The system should ensure that phase transitions only occur after five consecutive consistent judgment results to reduce the probability of misjudgment, and provide corresponding log records for subsequent analysis and auditing.",
            "The system should have an anomaly detection mechanism that triggers a warning when there are five consecutive inconsistent judgment results, preventing incorrect phase transitions."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 329,
        "requirement": "After the flight control computer is powered on the ground or after the aircraft has fully landed and issued a pre-shutdown command for the flight control system, it enters the ground waiting phase.",
        "original_safety_criterions": [
            "Can the system recover to its normal operating state after the power failure recovery or runaway reset mechanism is initiated?",
            "The control calculation process for functions varies under different states and working phases. Check the function inputs and analyze the correctness of function processing in cases such as \"not considering working phases, not considering working states\".",
            "Does the timing of the output control status meet the scene requirements?",
            "When issuing dangerous control commands or actions, is there a rational judgment based on the equipment status?",
            "For critical control or actions, is there a timeout judgment to handle situations where the hardware status does not meet control requirements for an extended period?"
        ],
        "safety_requirements": [
            "The system should have a timeout judgment mechanism after the flight control computer is powered on the ground or the aircraft issues a pre-shutdown command of the flight control upon complete landing, to handle situations where the hardware status does not meet the control requirements for a long time.",
            "The system should have a power failure recovery or runaway reset mechanism after the flight control computer is powered on the ground or the aircraft has fully landed and issued a pre-shutdown command for the flight control, ensuring that the system can return to normal operating conditions.",
            "The system should check the function inputs when it enters the ground waiting phase after the flight control computer is powered on the ground or the aircraft has fully landed and the flight control pre-shutdown command is issued, ensuring the correctness of function processing without considering the operating phase or status.",
            "The system should ensure that the timing of output control status meets the scenario requirements when entering the ground waiting phase after the flight control computer is powered on the ground or after the aircraft has fully landed and issued a pre-shutdown command for the flight control.",
            "The system should make a rational judgment based on the status of the flight control computer being powered on the ground or the aircraft being fully landed when issuing hazardous control commands or actions to prevent misoperation. Safety is a priority in this process."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 330,
        "requirement": "During the ground roll phase (including takeoff roll and landing roll), after receiving a ground wait command from remote control, it transitions into the ground wait phase.",
        "original_safety_criterions": [
            "Check the transmission and reception cycles of the interface data, and analyze whether the transmission and reception cycles match."
        ],
        "safety_requirements": [
            "The system should verify the command after receiving the ground hold instruction from remote control during the ground run phase, ensuring the legality and integrity of the command to prevent system status errors caused by illegal commands.",
            "When the system transitions to the ground waiting phase, it should record the current flight status parameters and target status parameters to ensure the correctness and traceability of the status transition.",
            "The system should continuously monitor flight status parameters during the ground waiting phase to ensure it can promptly return to a Safety state in case of anomalies.",
            "The system should provide real-time status feedback during the ground waiting phase to ensure operators can promptly understand the system status and prevent misoperations."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 331,
        "requirement": "When max(δbL, δbR) > 100%, if δbL ≥ δbR, then set δbR = δbR - (δbL - 100), δbL = 100%; if δbR > δbL, then set δbL = δbL - (δbR - 100), δbR = 100%. This ensures that the left and right brakes meet the differential requirements.",
        "original_safety_criterions": [
            "Check the logical judgment conditions and logical branches of the function, analyze the correctness of function handling in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "Check the output data of different redundancies and analyze the correctness of function implementation in cases of \"single redundancy failure\" and \"multiple redundancies all failing\".",
            "Check multiple input data for the function, analyze the correctness of function processing under various input value combinations such as normal equivalent class, abnormal equivalent class, boundary values, initial values, Safety values, and default values.",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\"."
        ],
        "safety_requirements": [
            "The system should check the logical judgment conditions and logical branches of the braking logic to ensure the correctness of brake handling in cases such as 'logically always false, logically always true, incorrect logical judgment conditions, missing logical branches'.",
            "The system should check the working status of different redundancies to ensure the correctness of differential requirements for left and right brakes when 'two or more redundancies are in different states'.",
            "The system should check the brake input data to ensure correct functional processing under various conditions including normal value equivalence class combinations, abnormal value equivalence class combinations, boundary value combinations, initial value combinations, Safety value combinations, and default value combinations. Especially when max(δbL, δbR) > 100%, if δbL ≥ δbR, then set δbR = δbR - (δbL - 100), δbL = 100%; if δbR > δbL, then set δbL = δbL - (δbR - 100), δbR = 100%, thus ensuring that the left and right brakes meet the differential requirements.",
            "The system should check the output data of different redundancies to ensure the correctness of the differential requirements for left and right braking in cases of 'single redundancy failure, multiple redundancies all failing'."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 332,
        "requirement": "The braking command issued remotely has the highest priority. Regardless of the control mode, when a \"brake\" command is received, the aircraft will apply full braking force to both left and right brake controls, then process for overload. This full braking force can be remotely set, with a default value of 80%.",
        "original_safety_criterions": [
            "Check the default values of the interface data and analyze the correctness of the output in cases such as \"default value being an outlier outside the range of values.\"",
            "Check the logical conditions and branches of the function, analyze the correctness of function processing in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\" etc.",
            "The control calculation process for functions varies under different states and working phases. Check the function inputs and analyze the correctness of function processing in cases such as \"not considering working phases, not considering working states\".",
            "Check the process of control function calculation, analyze the correctness of function handling in cases where the control calculation process times out (does not return results within the specified time).",
            "Check the execution sequence of tasks and analyze the correctness of function processing when the task execution sequence is inconsistent with the specified sequence."
        ],
        "safety_requirements": [
            "The system should check functional inputs at different states and working phases to ensure the correctness of brake command processing, especially in cases where working phases or working states are not considered.",
            "The system should check the logical judgment conditions and logical branches for brake commands to ensure correctness in processing brake commands under scenarios such as logically always false, logically always true, incorrect logical judgment conditions, or omitted logical branches.",
            "The system should check the default values of interface data to ensure the correctness of brake command processing when the default value is an abnormal value outside the range, especially the correctness when the default value of remotely issued brake commands is 80%.",
            "The system should check the execution sequence of tasks to ensure the correctness of brake command processing when the task execution sequence does not match the specified sequence."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 333,
        "requirement": "When the \"release brakes\" command is received, the braking is performed according to the calculated left and right brake amounts (i.e., no longer adding full brake amount). At this time, if the calculated brake amount δb is 0, then both left and right brakes take the corresponding preset brake amounts.",
        "original_safety_criterions": [
            "Check the logical judgment conditions and logical branches of the function, analyze the correctness of function processing in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "The control calculation process for functions varies under different states and working stages. Check the function inputs and analyze the correctness of function processing in scenarios such as \"not considering working stages, not considering working states\".",
            "Check the values of discrete interface data with different redundancies, and analyze the correctness of function implementation in cases such as \"value inconsistency\" among two or more redundant interface data.",
            "Check the control calculation process of functions, analyze the correctness of function handling in cases such as timeout in the control calculation process (not returning results within the specified time).",
            "Check the execution sequence of tasks and analyze the correctness of functional processing when the execution sequence does not match the specified sequence."
        ],
        "safety_requirements": [
            "When the system receives the 'release brake' command, it should check the task execution sequence to ensure that the timing of task execution is consistent with the specified sequence, and correctly process the calculated left and right brake amounts δb and the brake preset amount.",
            "The system should check the functional inputs at different states and working phases to ensure the calculated braking amount δb is correct, and when the calculated braking amount δb is 0, both left and right brakes should take the corresponding preset braking amounts.",
            "The system should check the logical judgment conditions and logical branches of the braking logic to ensure that under circumstances such as 'logically always false, logically always true, incorrect logical judgment conditions, omitted logical branches', the brake handling is correct.",
            "The system should check the brake control calculation process to ensure that it returns results within the specified time, preventing timeouts that can lead to functional processing errors.",
            "The system should check the values of discrete interface data with different redundancies to ensure that in cases such as 'inconsistent values' among two or more redundant interface data, when the calculated brake amount δb is 0, the function of both left and right brakes taking the corresponding preset brake amounts is correctly implemented."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 334,
        "requirement": "When receiving a driving command or a release brake command, the braking control amounts for the left and right brakes are respectively set to the left and right ground inspection braking amounts.",
        "original_safety_criterions": [
            "When the working state transfers, check the values of the functional interface data and analyze the correctness of the outputs in cases such as \"values change or the range of values changes\".",
            "When multiple functions are executed simultaneously, check and analyze the input and output data of these functions to verify the correctness of multi-function processing under conditions where the input/output data values are combinations of \"boundary values, initial values, Safety values, default values,\" etc.",
            "When multiple functions are executed simultaneously, check and analyze the input and output data of these functions to verify the correctness of multi-function processing under conditions such as \"normal value equivalence class combination, abnormal value equivalence class combination\" for input/output data values.",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\".",
            "Check the input data values for the execution conditions of each task, and analyze the correctness of functional processing when the input data values cause the task execution conditions to be met prematurely."
        ],
        "safety_requirements": [
            "When the system is in different redundancy working states, the correctness of the function implementation for the left and right brake control quantities being separately taken as the left and right ground inspection brake quantities should be checked.",
            "The system should check the input and output data values when multiple functions are executed simultaneously, ensuring correctness in processing the function of left and right brake control amounts taking the respective left and right ground inspection brake amounts when receiving vehicle instructions or release brake instructions under combinations of boundary values, initial values, Safety values, and default values.",
            "The system should check the input data values for vehicle command or release brake command to ensure the correctness of the functional processing that sets the left and right braking control amounts to the respective ground inspection braking amounts when the conditions for task execution are met in advance.",
            "When the system's working state transfers, the left and right ground inspection brake values should be checked to ensure that in cases where the values change or the range of values changes, the left and right brake control outputs are correctly derived from the left and right ground inspection brake values."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 335,
        "requirement": "When the pre-shutdown command from the flight controller is received, set the brake control amounts for both left and right to 0, which means clearing the preset amounts for both left and right brakes.",
        "original_safety_criterions": [
            "Check the logical conditions and branches of the function's logic, analyzing the correctness of function handling in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "The control calculation process for functions varies under different states and working stages. Check the function inputs and analyze the correctness of function processing in scenarios such as \"not considering working stages, not considering working states\".",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\".",
            "Check the data processing of the function, analyze whether there is a division by zero in the data processing process.",
            "The timing relationships, constraint relationships, concurrent relationships, and combinational relationships between the control logics of each functional point are correct."
        ],
        "safety_requirements": [
            "After receiving the pre-shutdown command from the flight controller, the system should check the current working phase and status to ensure that the control quantities for both left and right brakes are set to 0, meaning clearing the preset quantities for both left and right brakes.",
            "The system should ensure the correct timing, constraint, concurrency, and combination relationships between the flight control pre-shutdown command and the left and right brake control logic, preventing incorrect timing from causing the brake control amount to not be properly cleared.",
            "The system should check the data processing when handling the pre-shutdown command of the flight controller, ensuring there is no division by zero, to prevent system abnormalities caused by division by zero errors.",
            "The system should check the logical judgment conditions and logical branches for responding to flight control pre-shutdown instructions, ensuring the correctness of the function handling for clearing preset brake quantities on both sides under circumstances such as 'logical always false, logical always true, incorrect logical judgment conditions, missing logical branches'.",
            "The system should check the working status of different redundancies to ensure the correctness of the left and right brake preset function implementation in cases such as 'two or more redundancies being in different states'."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 336,
        "requirement": "Brake commands are processed only during ground waiting, takeoff roll, and landing roll phases.",
        "original_safety_criterions": [
            "Is there fault handling based on wrap-around detection, and is the reporting strategy for status during faults reasonable?",
            "Does the timing of the output control status meet the scene requirements?",
            "Has the software made the corresponding judgment and handling when abnormal external factors occur, such as high sea conditions, adverse weather conditions, etc.?",
            "When issuing control commands or actions that are dangerous, is there a rational judgment based on the equipment status?",
            "Is there a judgment on the rationality of personnel operations, where instructions that do not conform to the current scene or status are not responded to?"
        ],
        "safety_requirements": [
            "The system should handle faults based on loop detection and report fault conditions reasonably during ground waiting, takeoff run, and landing run segments.",
            "The system should make corresponding judgments and handle abnormal external factors such as high sea conditions and adverse weather conditions to ensure the correctness of brake command processing during ground holding, takeoff run, and landing run segments.",
            "The system should make rational judgments based on the current equipment status (such as waiting on the ground, takeoff run, landing rollout phase) when issuing brake commands to ensure the correctness and Safety of the instructions.",
            "The system should evaluate the rationality of personnel operations and not respond to braking commands that do not conform to the current flight status (such as ground waiting, takeoff run, landing run segment).",
            "The system should ensure that the processing timing of brake commands meets the requirements for ground holding, takeoff roll, and landing roll scenarios, preventing brake operations at inappropriate times."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 337,
        "requirement": "When retracting the landing gear, set both left and right brake amounts to 50%; when deploying the landing gear, set both left and right brake amounts to 100%; at the end of retracting the landing gear, set both left and right brake amounts to 0%; at the end of deploying the landing gear, set both left and right brake amounts to the preset amount.",
        "original_safety_criterions": [
            "Check the logical conditions and branches of the function, and analyze the correctness of function handling in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "Check the output data of different redundancies and analyze the correctness of function implementation in cases of \"single redundancy failure\" and \"multiple redundancies all failing\".",
            "The timing relationships, constraint relationships, concurrent relationships, and combinational relationships between the control logics of each functional point are correct.",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\"."
        ],
        "safety_requirements": [
            "The system should ensure the correctness of timing relationships, constraint relationships, concurrent relationships, and combinational relationships between the control logic of the retracting landing gear and deploying landing gear functional points.",
            "The system should check and ensure the correctness of the left and right brake settings for gear retraction and extension, under conditions of single redundancy failure and multiple redundancies failing, with different levels of output data redundancy.",
            "The system should check and ensure the correctness of left and right brake settings during landing gear retraction and extension when two or more redundancies are in different states, under varying operational conditions of the system. Safety considerations must be prioritized in these checks.",
            "The system should check the logical judgment conditions and logical branches for landing gear operations to ensure the correctness of function processing in cases such as 'logically always false, logically always true, incorrect logical judgment conditions, missing logical branches'.",
            "The system should ensure that the settings for left and right brake quantities comply with predefined rules when retracting and deploying the landing gear. That is, when retracting the landing gear, both left and right brake quantities are set to 50%, and when deploying the landing gear, both are set to 100%; at the end of retracting the landing gear, both left and right brake quantities are set to 0%, and at the end of deploying the landing gear, both left and right brake quantities are set to the preset amount."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 338,
        "requirement": "If the conditions for a safe landing are not met when an aircraft returns to land, continuing the landing may affect landing Safety. To improve the Safety of aircraft landing, a go-around function is provided, allowing the aircraft to adjust its flight status and attempt to land again.",
        "original_safety_criterions": [
            "Check the transfer conditions between pairwise states in the software state space, analyze the correctness of state transitions under conditions where the transfer conditions are \"not set, always satisfied, unsatisfiable,\" etc.",
            "Check the execution conditions of the function and analyze the correctness of function processing when the execution conditions are \"not met, met again\" during the execution process.",
            "Check the entry conditions for states and analyze the correctness of state execution during the process when the entry conditions are \"met, not met, met again,\" etc.",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\"."
        ],
        "safety_requirements": [
            "The system should check the operating status of different redundancies to ensure that in cases where 'two or more redundancies are in different states', the go-around function can be correctly implemented.",
            "The system should check the execution conditions for the go-around function to ensure that during its execution, the function handles situations such as 'not met, met again' correctly.",
            "The system should check the conditions for entering the return-to-home landing state to ensure the correctness of state execution when the entry conditions are 'met, not met, met again', etc., ensuring the correct triggering and execution of the go-around function.",
            "The system should check the transfer conditions between each pair of states in the state space when the aircraft returns to land, ensuring the correctness of state transitions under conditions such as 'not set, always satisfied, cannot be satisfied', to ensure the correctness and Safety of the go-around function."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 339,
        "requirement": "After the aircraft enters the glide path in either autonomous or manual correction mode, if it switches to remote control operation, and when the flight altitude is above the decision height (40m), if it switches back to autonomous control mode again, the aircraft will automatically go into a go-around, adopting a softened transition method from remote control to autonomy.",
        "original_safety_criterions": [
            "Check the transition conditions between pairwise states in the software state space, analyze the correctness of state transitions under conditions where the transition criteria are \"not set, always satisfied, impossible to satisfy,\" etc.",
            "Check the entry conditions for states and analyze the correctness of state execution during the process when the entry conditions are \"met, not met, met again,\" etc.",
            "Does the timing of output control status meet the scene requirements?",
            "When issuing control commands or actions that are hazardous, is there a rational judgment based on the equipment status?",
            "For critical control or actions, is there a timeout judgment to handle situations where the hardware status does not meet control requirements for an extended period?"
        ],
        "safety_requirements": [
            "The system, after the aircraft enters the glide phase in either autonomous or manual correction mode, if switched to remote control operation, and when the flight altitude is above the decision height (40m), should ensure that the timing of switching back to autonomous control mode complies with the scenario requirements. The aircraft should automatically initiate a go-around and adopt a softened transition from remote control to autonomy.",
            "When operating in remote control mode, if the flight altitude is above the decision height (40m), the system should have a timeout judgment mechanism to ensure the aircraft automatically goes around when switching back to autonomous control mode.",
            "The system should check the transfer conditions between each pair of states in the software state space to ensure that when the aircraft switches from remote control mode back to autonomous control mode, if the flight altitude is above the decision height (40m), the state transition conditions are correct. The aircraft should automatically go into a go-around and adopt a soft transition method from remote control to autonomy.",
            "The system should make a rational judgment based on the current flight status (such as flight altitude, control mode, etc.) when issuing hazardous control commands or actions to ensure the Safety of the commands or actions.",
            "The system should check the entry conditions for status to ensure that after the aircraft enters the glide path in autonomous or manual correction mode, if it switches to remote control operation, when the flight altitude is higher than the decision height (40m), if it switches back to autonomous control mode again, the entry conditions during the status execution process are correct. The aircraft will automatically go around and adopt a softened transition from remote control to autonomy."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 341,
        "requirement": "When the following conditions 1) and 2) are met simultaneously, execute the go-around command:\n1) The flight altitude is higher than the decision height (40m). If the control mode is not remote, it should also have entered the glide path.\n2) Receive the flight switch command: \"go-around\".",
        "original_safety_criterions": [
            "Check the conditions for state entry and analyze the correctness of state execution during the process when the entry conditions are \"met, not met, met again,\" etc.",
            "Check the logical conditions and branches of the function's logic, analyze the correctness of function handling in cases of \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "There is no transition relationship between two or more states; check the entry conditions for these states and analyze the correctness of state execution under conditions such as \"all met simultaneously, met during state execution,\" etc.",
            "Check the execution conditions of the function and analyze the correctness of function handling in scenarios where the execution conditions are \"not met, met again\" during the execution process.",
            "Check the input data values for the execution conditions of each task, and analyze the correctness of function processing when the input data values cause the task execution conditions to be met prematurely."
        ],
        "safety_requirements": [
            "The system should check the entry conditions for the go-around command to ensure correctness in execution of the go-around command under various status conditions such as 'met, not met, met again' during the process.",
            "The system should check the logical judgment conditions and logical branches for responding to go-around commands, ensuring the correctness of go-around command processing in cases such as 'logically always false, logically always true, incorrect logical judgment conditions, omitted logical branches'.",
            "The system should check the execution conditions for the go-around command to ensure that during the execution of the go-around command, the processing is correct under circumstances such as 'not met, met again'.",
            "The system should check the input data values for the conditions required to execute the go-around task, ensuring the correctness of the go-around command processing when the input data values prematurely satisfy the task execution conditions. Specific conditions include:\n1) The flight altitude is higher than the decision altitude (40m); if the control mode is not remote control, it must also have entered the glide path.\n2) Received a flight switch command: \"go-around\".",
            "The system should ensure that when there is no transition relationship between two or more states, it checks the entry conditions for these states to ensure the correctness of state execution under conditions such as 'satisfied simultaneously, satisfied during state execution', especially when the flight altitude is above the decision altitude (40m) and has entered the descent phase, while also receiving a flight switch command 'go-around'. This ensures Safety during state execution."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 342,
        "requirement": "If the aircraft is in autonomous control mode, directly control the aircraft to perform a go-around. If the aircraft is not in autonomous control mode, automatically switch to autonomous control mode and then control the aircraft to perform a go-around. The softening method is the same as the softening method for mode transition.",
        "original_safety_criterions": [
            "Check the transition conditions between pairwise states in the software state space, analyze the correctness of state transitions under conditions where the transition conditions are \"not set, always satisfied, unsatisfiable,\" etc.",
            "Is the sequence and timing of system control coordinated with the hardware, and are the control conditions complete and consistent?",
            "Check the conditions for state entry and analyze the correctness of state execution during the process when the entry conditions are \"met, not met, met again,\" etc.",
            "Two or more states with a transfer relationship have the same function. Check the execution of the function before and after the state transition, and analyze the correctness of function handling in cases such as \"starting execution, maintaining execution, interrupting execution\" after the state transition.",
            "Does the timing of output control status meet the scene requirements?"
        ],
        "safety_requirements": [
            "The system should check the correctness of function handling in scenarios such as 'start execution, maintain execution, interrupt execution' after transitioning from non-autonomous control mode to autonomous control mode, ensuring the smooth operation of go-around procedures.",
            "During the transition between autonomous control mode and non-autonomous control mode, the system should ensure that the control sequence and timing are coordinated with the hardware, and that the control conditions are complete and consistent.",
            "The system should check the entry conditions for autonomous control mode to ensure the correctness of state execution during the process when the entry conditions are 'met, not met, met again', etc.",
            "The system should check the conditions for state transition between autonomous control mode and non-autonomous control mode, ensuring the correctness of state transitions in cases where the transition conditions are 'not set, always met, cannot be met', etc.",
            "The system should ensure that the timing of output control status meets the requirements of the autonomous control mode, especially during go-around operations."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 343,
        "requirement": "Advance the throttle to 100% position, transition the flight phase to climb segment 2, longitudinally control the aircraft to climb to the final approach altitude, and laterally control the aircraft to intercept the final approach course from the current point. After reaching the final approach altitude, the aircraft will exit the go-around mode and set the flaps to 15 degrees. It will then re-enter the final approach course and attempt to land again.",
        "original_safety_criterions": [
            "Check the transfer conditions between pairwise states in the software state space, analyze the correctness of state transitions under conditions where the transfer conditions are \"not set, always satisfied, unsatisfiable,\" etc.",
            "Check and analyze the correctness of states and functions with different priorities set under transfer relationships between two or more states, including situations such as high priority switching to low priority and low priority switching to high priority.",
            "There is no transition relationship between two or more states; check the entry conditions for these states and analyze the correctness of state execution under conditions such as \"all met at the same time, met during state execution,\" etc.",
            "Check the entry conditions for states and analyze the correctness of state execution during the process when the entry conditions are \"met, not met, met again,\" etc."
        ],
        "safety_requirements": [
            "The system should check the correctness of status and functions when switching from the go-around state to the climb 2 segment during the flight phase, ensuring the correctness of transitioning from a high-priority state (go-around state) to a low-priority state (climb 2 segment).",
            "After the system transitions from climb phase 2 to the final approach segment altitude during flight, the status and function correctness should be checked to ensure the proper transition from low-priority status (climb phase 2) to high-priority status (final approach segment altitude).",
            "The system should check the correctness of status execution when the conditions for phase transition during flight are met, ensuring that when the throttle is advanced to 100% position, the flight phase transitions to climb segment 2. Longitudinal control should direct the aircraft to climb to the approach path altitude, while lateral control should guide the aircraft from the current point to intercept the approach path. Upon reaching the designated approach altitude, the aircraft should exit the go-around state, set the flaps to 15 degrees, and then re-enter the approach path for a new landing attempt, ensuring the correctness of status execution throughout this process.",
            "The system should check the correctness of status execution when the conditions for phase transition during flight are not met, ensuring that when the throttle is advanced to 100%, the flight phase transitions to climb segment 2. Longitudinal control should make the aircraft climb to the final approach course altitude, and lateral control should guide the aircraft to intercept the final approach course from the current point. Upon reaching the final approach altitude, the aircraft should exit the go-around state, set the flaps to 15°, and then re-enter the final approach course to attempt a landing again, ensuring the correctness of status execution throughout this process.",
            "The system should check the correctness of status execution when the conditions for phase transition are met again during flight, ensuring that when the throttle is advanced to 100% position, the flight phase transitions to climb segment 2. Longitudinal control should direct the aircraft to climb to the final approach leg altitude, and lateral control should guide the aircraft from the current point to intercept the final approach leg. Upon reaching the altitude of the final approach leg and stabilizing, the aircraft should exit the go-around state, set the flaps to 15 degrees, and then re-enter the final approach leg, ensuring the correctness of status execution throughout the process of landing again.",
            "The system should check the correctness of entry conditions when performing critical operations such as cutting into the five-edge approach from the current point, reaching the five-edge altitude and exiting the go-around mode, and setting the flaps to 15 degrees, ensuring the correctness of state execution.",
            "The system should check the correctness of state transitions in the flight phase state space when the transition conditions between pairwise states are not set, ensuring the correctness of the transition conditions from the go-around state to climb segment 2, and from the final approach fix altitude to exiting the go-around state and setting the flaps to 15 degrees.",
            "The system should check the correctness of state transitions in the flight phase state space whenever the transition conditions between any two states are always met, ensuring the correctness of the transition conditions from the go-around state to climb segment 2, and from the final approach fix altitude to exiting the go-around state and setting the flaps to 15 degrees.",
            "When the system cannot meet the transfer conditions between pairwise states in the flight phase state space, the correctness of the state transitions should be checked, ensuring the accuracy of the transition conditions from the go-around state to climb segment 2, and from the final approach fix altitude to exiting the go-around state and setting the flaps to 15°."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 344,
        "requirement": "During the go-around process, setting a starting point is not allowed, but changing the landing direction is permitted.",
        "original_safety_criterions": [
            "Check the initial values of the interface data and analyze the correctness of the output in cases such as \"initial values not set\"."
        ],
        "safety_requirements": [
            "During the go-around process, the system should check the initial values of the interface data to ensure that, in cases where 'initial values are not set', it does not allow setting a starting point and permits changes to the landing direction correctly.",
            "The system should ensure that the function logic for setting the starting point is correctly executed during the go-around process, preventing safety risks caused by incorrect settings.",
            "The system should ensure that the function logic allowing changes to the landing direction during go-around is correctly executed, and provide real-time monitoring to prevent safety risks caused by incorrect operations.",
            "The system should perform real-time checks on the initial values of interface data to ensure data integrity and accuracy, preventing data errors from affecting the Safety of the go-around process."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 348,
        "requirement": "In autonomous or manual correction control modes, if the aircraft is flying at a constant altitude or in the approach segment and the airspeed is determined to be less than a certain value (refer to the appendix for specific values) or the pitch angle is determined to be greater than 10 degrees for three consecutive judgments, the aircraft is considered to be in a stall condition.",
        "original_safety_criterions": [
            "Check the operating status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\".",
            "Check the entry conditions for states and analyze the correctness of state execution during the process when the entry conditions are \"met, not met, met again,\" etc. Safety is a crucial concern in this analysis.",
            "When issuing dangerous control commands or actions, is there a rational judgment based on the equipment status?",
            "For critical control or actions, is there a timeout judgment to handle situations where the hardware status does not meet control requirements for an extended period?"
        ],
        "safety_requirements": [
            "The system should check the airspeed and pitch angle of the aircraft when it is flying at a constant altitude or in the first segment of the descent, whether in autonomous or manual correction control mode, to ensure that the aircraft is correctly determined to be in a stall condition if the airspeed is judged to be less than a certain value three consecutive times or the pitch angle is judged to be greater than 10 degrees three consecutive times.",
            "The system, whether in autonomous or manual correction control mode, should have a timeout judgment mechanism to handle situations where the airspeed is continuously judged to be below a certain value three times in a row or the pitch angle is continuously judged to be greater than 10 degrees three times in succession, resulting in hardware status not meeting control requirements for an extended period.",
            "The system should check the operating status of different redundancies under autonomous or manual correction control modes to ensure that it correctly determines the aircraft entering a stall condition when two or more redundancies are in different states.",
            "The system should make a rational judgment based on the aircraft's status (such as airspeed and pitch angle) when issuing hazardous control commands or actions to prevent safety risks caused by misoperation."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 349,
        "requirement": "Transition to climb segment 2, use elevator for airspeed control, advance throttles to 100%, if the aircraft stalls during approach segment 1, then enter go-around control.",
        "original_safety_criterions": [
            "Check the logical conditions and branches of the function, analyze the correctness of function processing in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\" etc.",
            "The control calculation process for functions varies under different states and working phases. Check the function inputs and analyze the correctness of function processing in scenarios such as \"without considering working phases, without considering working states\".",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\".",
            "Check the execution sequence of tasks and analyze the correctness of functional processing when the task execution sequence is inconsistent with the specified sequence.",
            "The timing relationships, constraint relationships, concurrent relationships, and combinational relationships between the control logics of each functional point are correct."
        ],
        "safety_requirements": [
            "The system should check the working status of different redundancies to ensure that in cases where 'two or more redundancies are in different states', the functions of transitioning to Climb Segment 2, elevator airspeed control, throttle advance to 100%, and go-around control when the aircraft stalls during approach are correctly implemented.",
            "The system should check the sequential execution of tasks to ensure that when the task execution sequence does not match the specified sequence, it correctly transitions to Climb Segment 2, elevator airspeed control, throttle to 100%, and go-around control if the aircraft stalls during approach segment 1. Safety is ensured through proper functional handling in these scenarios.",
            "The system should check the logical judgment conditions and logical branches of the functions to ensure that in cases of 'logical always false, logical always true, incorrect logical judgment conditions, omitted logical branches', the function handling is correct for transitioning to climb segment 2, elevator airspeed control, throttle advance to 100%, and go-around control when the aircraft enters a stall during approach 1. Safety is ensured through these checks.",
            "The system should ensure the correct timing, constraint, concurrency, and combination relationships between the control logics of various functional points, especially when transitioning to climb segment 2, elevator airspeed control, throttle advance to 100%, and when the aircraft enters a go-around control after entering glide slope 1 and stalling.",
            "The system should check the functional inputs to ensure correct processing of functions such as entering climb segment 2, elevator airspeed control, advancing throttles to 100%, and go-around control when the aircraft enters a stall during approach phase 1, under conditions like 'unconsidered work stages, unconsidered work states'."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 350,
        "requirement": "When the aircraft determines that the airspeed has increased to above the given speed for five consecutive times, it exits the stall condition. Depending on the altitude deviation at that time, it judges which phase to enter (either Climb Phase 2 or Constant Altitude Phase), and continues flying.",
        "original_safety_criterions": [
            "Check the transfer conditions between pairwise states in the software state space, analyze the correctness of state transitions under conditions where the transfer conditions are \"not set, always satisfied, unsatisfiable,\" etc.",
            "Check the entry conditions for states and analyze the correctness of state execution during the process when the entry conditions are \"met, not met, met again,\" etc.",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\".",
            "There is no transition relationship between two or more states; check the entry conditions for these states and analyze the correctness of state execution under conditions such as \"satisfied simultaneously, satisfied during state execution,\" etc.",
            "For critical control or actions, is there a timeout judgment to handle situations where the hardware status does not meet control requirements for an extended period?"
        ],
        "safety_requirements": [
            "The system should check the entry conditions for state transitions to ensure that during state execution, when the entry conditions are 'met, not met, met again', etc., the aircraft exits the stall condition and correctly transitions to either segment 2 of climb or stabilizes at a set altitude based on the current altitude deviation.",
            "The system should make a timeout judgment on critical controls or actions, ensuring that when the airspeed increases consecutively five times to greater than the given speed, the aircraft exits the stall condition and judges based on the current altitude deviation whether to correctly transition into the second segment of climb or maintain altitude.",
            "The system should check the entry conditions between two or more states to ensure that under circumstances where entry conditions are met simultaneously or during the execution of state, the aircraft exits the stall condition and correctly transitions to segment 2 of climb or stabilizes at a set altitude based on the height deviation at that time.",
            "The system should check the transition conditions between each pair of states in the software state space to ensure that, under transition conditions such as 'not set, always satisfied, cannot be satisfied', the aircraft exits the stall condition and correctly transitions to either the second segment of climb or the altitude hold segment based on the current altitude deviation.",
            "The system should check the operating status of different redundancies to ensure that in cases such as 'two or more redundancies being in different states', when the airspeed increases to greater than a given speed, the aircraft exits the stall condition and correctly transitions into either the climb second segment or level flight segment based on the current altitude deviation."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 351,
        "requirement": "The aileron deflection commands calculated by the control law must be allocated to the rudder deflection commands before being output to the actuators.",
        "original_safety_criterions": [
            "Check the logical conditions and branches of the function, analyze the correctness of function handling in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "Check the loop condition of the function, analyze the correctness of function processing under conditions such as \"loop condition is always false, always true\".",
            "The control calculation process for functions varies under different states and working stages. Check the function inputs and analyze the correctness of function processing in cases such as \"not considering working stages, not considering working states\".",
            "Check the execution sequence of tasks and analyze the correctness of function processing when the task execution sequence is inconsistent with the specified sequence.",
            "The timing relationships, constraint relationships, concurrent relationships, and combinational relationships between the control logics of each functional point are correct."
        ],
        "safety_requirements": [
            "The system should check the control law inputs under different states and working phases to ensure the correctness of rudder deflection command allocation, preventing errors caused by not considering the working phase or state.",
            "The system should check the execution timing of each task to ensure that the task execution sequence is consistent with the specified timing, preventing functional processing errors in rudder angle command allocation and output to the actuators caused by inconsistent timing.",
            "The system should ensure that the control law calculations produce correct timing, constraint, concurrency, and combination relationships for the aileron deflection commands before the rudder deflection commands are output to the actuators, preventing incorrect command distribution. Safety is a priority in this process.",
            "The system should check the loop judgment conditions for the rudder bias command allocation to ensure the correctness of function processing in cases where the loop judgment condition is always false or always true, preventing incorrect command allocation.",
            "The system should check the logical judgment conditions and logical branches of the rudder deflection angle commands calculated by the control law before they are output to the actuators, ensuring the correctness of functional processing in cases such as 'logically always false, logically always true, incorrect logical judgment conditions, missing logical branches', to prevent incorrect command allocation."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 352,
        "requirement": "The efficiency of the aileron tab deflection upwards and downwards is different; the upward deflection has lower efficiency while the downward deflection has higher efficiency. By distributing the rudder deflection commands, and through different distribution coefficients, the aim is to achieve the same control effect.",
        "original_safety_criterions": [
            "The control calculation process for functions varies under different states and working stages. Check the function inputs and analyze the correctness of function processing in scenarios such as \"not considering working stages, not considering working states\".",
            "Check and analyze the correctness of states and functions with different priorities set under transfer relationships between two or more states, including situations such as high priority switching to low priority and low priority switching to high priority."
        ],
        "safety_requirements": [
            "The system should check the efficiency distribution of aileron deflections, both up and down, when there are two or more states with transfer relationships, ensuring the correctness of rudder deflection command allocation when switching from 'high priority to low priority' or 'low priority to high priority'.",
            "The system should check the aileron control surface calculation process under different states and working phases to ensure the correctness of the rudder deflection command allocation when the 'unconsidered working phase' or 'unconsidered working state' is encountered.",
            "The system should ensure that the efficiency distribution of the aileron tab deflection upwards and downwards achieves the same control effect by varying the distribution coefficients, and triggers a warning mechanism in abnormal situations. Safety is a priority in this process.",
            "The system should perform real-time consistency checks on the allocation of control surface deflection commands for the ailerons to ensure they match the current operating state and phase, and trigger a warning mechanism in case of anomalies."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 353,
        "requirement": "If the aileron deflection command δx > 0, then the left aileron deflection command δxL = k1 δx, and the right aileron deflection command δxR = k2",
        "original_safety_criterions": [
            "Check the logical judgment conditions and logical branches of the function, analyze the correctness of function processing in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "Check the values of the same input data received by different redundancies, and analyze the correctness of function implementation when the values of the same input data received by two or more redundancies are inconsistent. Safety is ensured through this process.",
            "The timing relationships, constraint relationships, concurrent relationships, and combinational relationships between the control logics of each functional point are correct.",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\"."
        ],
        "safety_requirements": [
            "The system should ensure the correct calculation results of the aileron deflection commands δxL and δxR when it is in different working states due to varying redundancy.",
            "When the system receives inconsistent values for the aileron deflection command δx at different redundancies, it should ensure the calculated results for the aileron deflection commands δxL and δxR are correct.",
            "The system should check the logical judgment conditions and logical branches for responding to aileron deflection angle commands to ensure the correctness of functional processing in cases such as logically always false, logically always true, incorrect logical judgment conditions, and missing logical branches.",
            "The system should ensure the correct timing relationship, constraint relationship, concurrent relationship, and combination relationship between the left aileron deflection command δxL = k1 δx and the right aileron deflection command δxR = k2 when the aileron deflection command δx > 0."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 354,
        "requirement": "If the aileron deflection command δx < 0, then the left aileron deflection command δxL = k2 δx, and the right aileron deflection command δxR = k1 δx, where k1 is the upward deflection distribution coefficient, and k2 is the downward deflection distribution coefficient.",
        "original_safety_criterions": [
            "Check the logical conditions and branches of the function, analyze the correctness of function handling in cases of \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\" etc.",
            "Check the values of the same input data received by different redundancies, and analyze the correctness of function implementation when the values of the same input data received by two or more redundancies are inconsistent. Safety considerations are paramount in ensuring reliable data processing.",
            "The control calculation process for functions varies under different states and working phases. Check the function inputs and analyze the correctness of function processing in cases such as \"not considering working phases, not considering working states\".",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\"."
        ],
        "safety_requirements": [
            "The system should check the values of the same aileron deflection command δx received by different redundancies to ensure the correctness of function implementation when the values are inconsistent.",
            "The system should check the logical judgment conditions and logical branches for the aileron deflection angle command to ensure the correctness of function processing in cases such as 'logically always false, logically always true, incorrect logical judgment conditions, missing logical branches'.",
            "The system should check the control decoding process of aileron deflection commands under different states and working phases to ensure the correctness of aileron deflection command processing in cases such as 'without considering working phases, without considering working states'.",
            "The system should check the operating status of different redundancies to ensure the correctness of the aileron deflection command δx distribution (left aileron deflection command δxL = k2 δx, right aileron deflection command δxR = k1 δx) in cases such as 'two or more redundancies being in different states'.",
            "The system should ensure the logic judgment and distribution are correct for the aileron deflection commands when δx < 0, with the left aileron deflection command δxL = k2 δx and the right aileron deflection command δxR = k1 δx, to prevent incorrect commands from affecting flight Safety."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 356,
        "requirement": "Flight control and management software should be able to calculate the stall speed based on the given flight weight, altitude, and flight true airspeed.",
        "original_safety_criterions": [
            "Check the logical judgment conditions and logical branches of the function, analyze the correctness of function processing in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "Check the results of functional control calculations and analyze the correctness of functional processing under conditions such as normal values, abnormal values, boundary values, maximum and minimum values.",
            "Check the values of discrete output data with different redundancies, and analyze the correctness of function implementation in cases such as \"value inconsistency\" among two or more redundant output data."
        ],
        "safety_requirements": [
            "The system should check the logical judgment conditions and logical branches of the flight control and management software to ensure the correctness of the stall speed calculation results in cases of 'logical always false, logical always true, incorrect logical judgment conditions, missing logical branches'.",
            "The system should check the calculation results of stall speed for different redundancies to ensure the correctness of function implementation when two or more redundancy outputs have 'inconsistent values'.",
            "The system should check the control calculation results for stall speed to ensure the correctness of function processing when the control calculation results are 'normal values, abnormal values, boundary values, maximum and minimum values'.",
            "The system should ensure that the calculated stall speed, based on the given flight weight, altitude, and flight true airspeed, has data integrity verification to prevent incorrect data from affecting the calculation results.",
            "The system should provide a real-time consistency check mechanism to ensure that the stall speed calculation results match the input parameters, and trigger a warning mechanism in case of anomalies."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 357,
        "requirement": "Flight control and management software should support stall speed calculations at different flap angles, especially the stall speed calculation when flaps are at 40°.",
        "original_safety_criterions": [
            "Has the software made the corresponding judgments and processing when exceptional external factors occur, such as high sea conditions, adverse weather conditions, etc.?",
            "The timing relationships, constraint relationships, concurrent relationships, and combinational relationships between the control logics of each functional point are correct."
        ],
        "safety_requirements": [
            "The flight control and management software should ensure the correctness of timing relationships, constraint relationships, concurrent relationships, and combinational relationships in the stall speed calculation logic at different flap angles, especially for the stall speed calculation when the flaps are at 40°.",
            "Flight control and management software should make corresponding judgments and processing when abnormal external factors (such as high sea conditions, adverse weather conditions, etc.) occur, ensuring the accuracy of stall speed calculations at different flap angles, especially the stall speed calculation when flaps are at 40°.",
            "The flight control and management software should provide real-time monitoring and anomaly detection mechanisms to ensure that during the stall speed calculation at different flap angles, anomalies can be detected and handled in a timely manner, especially for the stall speed calculation when the flaps are at 40°.",
            "Flight control and management software should ensure the integrity and consistency of data during stall speed calculations at different flap angles, preventing incorrect data from affecting the results, especially for stall speed calculations when flaps are at 40°."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 358,
        "requirement": "The ground holding phase transitions into the takeoff ground segment (takeoff roll segment) after the five-side approach and airport pressure altitude are set and a takeoff instruction is received.",
        "original_safety_criterions": [
            "Two or more states with transfer relationships have the same function. The execution of this function before and after the state transition is checked, analyzing the correctness of function handling in cases such as \"starting execution, maintaining execution, interrupting execution\" after the state transition.",
            "Check the transition conditions between pairwise states in the software state space, analyze the correctness of state transitions under conditions where the transition conditions are \"not set, always satisfied, unsatisfiable,\" etc.",
            "Check and analyze the correctness of states and functions with different priorities set under transfer relationships between two or more states, including situations such as high priority switching to low priority and low priority switching to high priority.",
            "Check the entry conditions for states and analyze the correctness of state execution under scenarios where the entry conditions are \"met, not met, met again\" during the state execution process."
        ],
        "safety_requirements": [
            "The system should check the execution of functions when transitioning from the ground waiting phase to the takeoff ground segment (takeoff run segment) to ensure that the functions are correctly handled in cases of 'starting execution, maintaining execution, interrupting execution' after the status transition.",
            "The system should check the state transition conditions between the ground waiting phase and the takeoff ground segment to ensure the correctness of state transitions in cases such as 'not set, always met, cannot be met'.",
            "The system should check the entry conditions during the ground waiting phase to ensure the correctness of state execution when the entry conditions are met, not met, or met again during the process.",
            "The system should check different functions with set priorities during the transition between the ground holding phase and the takeoff ground segment (takeoff roll segment) to ensure the correctness of status and functions in situations such as 'high priority switching to low priority, low priority switching to high priority'."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 359,
        "requirement": "During the takeoff run segment, when the airspeed exceeds 30m/s and the altitude is greater than 15m, it transitions into the takeoff departure segment, with a softening time limit set to 2s.",
        "original_safety_criterions": [
            "Does the timing of output control status meet the scenario requirements?",
            "Are the entry conditions and exit conditions for each mode consistent?",
            "Are the entry conditions, exit conditions, and constraints of each mode sufficient and accurate?",
            "Does the duration of the output state meet the constraint requirements?"
        ],
        "safety_requirements": [
            "The system should ensure consistency between entry and exit conditions when transitioning from the takeoff run segment to the takeoff climbout segment, where the airspeed is greater than 30m/s and the altitude is greater than 15m.",
            "The system should ensure the sufficiency and accuracy of entry conditions, exit conditions, and constraint conditions when transitioning from the takeoff run segment to the takeoff climb segment, where the airspeed is greater than 30m/s and the altitude is greater than 15m.",
            "During the takeoff run segment, when the airspeed is greater than 30m/s and the altitude is higher than 15m, the system transitions into the takeoff departure segment. It should check if the duration of the output status meets the 2s softening time limit requirement.",
            "During the takeoff run segment, when the airspeed exceeds 30m/s and the altitude is greater than 15m, the system transitions into the takeoff departure segment. The timing for checking the output control status should comply with the scenario requirements, with a softening time limit set to 2s."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 360,
        "requirement": "During the takeoff departure segment, when the flight altitude exceeds the Safety height of 80m, it transitions to climb segment 1. The elevator channel uses a method of softening by setting the initial value of the integrator, while other channels do not require softening.",
        "original_safety_criterions": [
            "Check the logical conditions and branches of the function's logic, analyze the correctness of function handling in cases of \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "Check the process of control function calculation, analyze the correctness of function handling in cases where the control calculation process times out (does not return results within the specified time).",
            "The timing relationships, constraint relationships, concurrent relationships, and组合 relationships between the control logics of each functional point are correct."
        ],
        "safety_requirements": [
            "The system, during the takeoff phase, when the flight altitude exceeds the Safety altitude of 80m and transitions into climb segment 1, should check whether the method of softening the initial value of the elevator channel integrator, as well as the timing relationship, constraint relationship, concurrent relationship, and combination relationship with other channels that do not require softening, is correct.",
            "The system should check the logical judgment conditions and logical branches for the take-off departure segment to ensure the correctness of function processing in cases such as 'logical always false, logical always true, incorrect logical judgment conditions, missing logical branches', especially when the flight altitude exceeds Safety altitude 80m, it should switch to climb segment 1. The elevator channel uses the method of setting the initial value of the integrator to soften, while other channels do not require softening.",
            "The system should check the control calculation process for the take-off departure segment to ensure the correctness of function handling in cases such as timeout (not returning results within the specified time) during the control calculation process.",
            "The system should ensure that during takeoff departure segments, when the flight altitude is greater than the Safety altitude of 80m, the integrator initial value softening method of the elevator channel is correctly executed, and provide real-time monitoring and anomaly detection mechanisms when other channels do not require softening."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 361,
        "requirement": "In segment 1 of the climb, start retracting the landing gear. If the landing gear is retracted, delay for 5 seconds before starting to retract the flaps; if after 1 minute the landing gear is still not retracted, then directly set the flaps to 0 degrees. If the flaps are retracted to 0 degrees, after a 5-second delay transition to segment 2 of the climb; if more than 75 seconds have elapsed since entering segment 1 and the flaps are still not at 0 degrees, then directly transition to segment 2. The soft time limit for transitioning to segment 2 is 2 seconds.",
        "original_safety_criterions": [
            "Check and analyze the correctness of states and functions with different priorities set under transfer relationships between two or more states, including situations such as high priority switching to low priority and low priority switching to high priority.",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\".",
            "Check the entry conditions for states and analyze the correctness of state execution during the process when the entry conditions are \"met, not met, met again,\" etc.",
            "For critical control or actions, is there a timeout judgment to handle situations where the hardware status does not meet control requirements for an extended period?"
        ],
        "safety_requirements": [
            "When the system transitions between Climb Segment 1 and Climb Segment 2, it should check the sequence and timing processing correctness of landing gear retraction and flap retraction to ensure that high-priority functions are executed first, and low-priority functions are executed when conditions are met.",
            "The system checks the conditions for entering a climb phase to ensure that the requirements for retracting the landing gear and flaps are met during the state execution process, especially verifying the correctness of state execution under conditions such as \"met, not met, met again\".",
            "The system should implement timeout judgments for the retraction of landing gear and flaps to ensure timely handling when hardware conditions do not meet control requirements for extended periods. For example, during climb segment 1, if the landing gear is not retracted after one minute, the flaps should be directly set to 0 degrees; if after entering climb segment 1, the flaps are not retracted to 0 degrees within the 75-second limit, then it should directly transition to climb segment 2.",
            "The system checks the operational status at different redundancies to ensure the correctness of the climb segment 1 and climb segment 2 functions, especially in cases where 'two or more redundancies are in different states'. This includes the logic for retracting the landing gear and flaps."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 362,
        "requirement": "During the climb phase, if the aircraft does not stall, handle according to the difference in height (DH) between the current altitude and the desired altitude: 1) If DH>10m, switch to the descent phase, set the softening time limit to 2s, and soften the elevator channel by setting the initial value of the integrator. 2) If -10m≤DH≤10m, switch to the level flight phase, with the softening time limit set to 2s.",
        "original_safety_criterions": [
            "Check multiple input data for the function, analyze the correctness of function processing under various input value combinations such as normal value equivalence class, abnormal value equivalence class, boundary value combination, initial value combination, Safety value combination, default value combination, etc.",
            "Check the logical conditions and branches of the function, analyze the correctness of function handling in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "Check the process of control function calculation, analyze the correctness of function handling in cases where the control calculation process times out (does not return results within the specified time).",
            "Check the control calculation results of the function, and analyze the correctness of function processing under conditions such as normal values, abnormal values, boundary values, maximum and minimum values.",
            "Check the execution conditions of the function and analyze the correctness of function handling in cases where the execution conditions are \"not met, met again\" during the function execution process. Safety is a crucial aspect to consider throughout this analysis."
        ],
        "safety_requirements": [
            "The system should check the control calculation results during the climb of two segments to ensure the correctness of the processing when transitioning to the descent segment at DH>10m and to the fixed height segment at -10m≤DH≤10m. This includes normal values, abnormal values, boundary values, maximum and minimum values, etc.",
            "The system should check the logical judgment conditions and logical branches when climbing 2 segments to ensure the handling logic is correct when DH>10m or -10m≤DH≤10m, preventing situations such as logically always false, logically always true, incorrect logical judgment conditions, or omitted logical branches.",
            "The system should check the control calculation process during the climb of 2 segments to ensure that in cases such as a timeout in the control calculation process (not returning results within the specified time), the system can correctly transition to the descent segment or altitude hold segment and perform softening treatment as required.",
            "The system should check the functional execution conditions while climbing two segments to ensure that during the function execution process, when the execution conditions are not met or met again, the system can correctly transition to the descending segment or altitude-holding segment, and set corresponding softening time limits.",
            "The system should check multiple input data during the climb of 2 segments to ensure that under combinations of normal value equivalence classes, abnormal value equivalence classes, boundary values, initial values, Safety values, and default values, the system can correctly handle the difference DH between the current altitude and the desired altitude."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 363,
        "requirement": "Initialize the altitude hold control integrator, the altitude tracking integrator, and the throttle control integrator (calculate the initial value of the throttle control integrator based on a throttle position of 100%) to prepare for altitude hold control and altitude tracking control.",
        "original_safety_criterions": [
            "Check and analyze the correctness of states and functions with different priorities set under transfer relationships, including scenarios such as high priority switching to low priority and low priority switching to high priority.",
            "Check the logical conditions and branches of the function's logic, analyzing the correctness of function processing in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "The control calculation process for functions varies under different states and working stages. Check the function inputs and analyze the correctness of function processing in scenarios such as \"not considering working stages, not considering working states\".",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\".",
            "Check the results of functional control calculations and analyze the correctness of functional processing under conditions such as normal values, abnormal values, boundary values, maximum and minimum values."
        ],
        "safety_requirements": [
            "The system should check the initial value settings of the altitude control integrator, height tracking integrator, and throttle control integrator under different states and working phases to ensure the correctness of the initial value settings regardless of the working phase or state.",
            "The system should check the initial settings of the altitude control integrator, height tracking integrator, and throttle control integrator when there are transfer relationships between two or more states, ensuring the correctness of the initial settings in cases of 'high priority switching to low priority, low priority switching to high priority'.",
            "The system should check the control calculation results of the altitude hold controller integrator, the altitude tracking controller integrator, and the throttle controller integrator to ensure the correctness of the control calculation results under various conditions including normal values, abnormal values, boundary values, and extreme maximum and minimum values.",
            "The system should check the logical judgment conditions and logical branches of the altitude control integrator, height tracking integrator, and throttle control integrator to ensure the correctness of logic processing in cases such as 'logic always false, logic always true, incorrect logical judgment conditions, missing logical branches'.",
            "The initial settings of the altitude control integrator, height tracking integrator, and throttle control integrator should be checked for correctness when the system is operating in different redundancy states, ensuring that the initial settings are correct when 'two or more redundancies are in different states'."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 364,
        "requirement": "If in the fifth leg of the five-sided approach and entering the glide window, transition to segment 1 of the glide; otherwise, handle according to the value of the difference DH between the current altitude and the desired altitude.",
        "original_safety_criterions": [
            "Check the transition conditions between pairwise states in the software state space, and analyze the correctness of state transitions under conditions where the transition conditions are \"not set, always satisfied, unsatisfiable,\" etc.",
            "Check the entry conditions for states and analyze the correctness of state execution during the process when the entry conditions are \"met, not met, met again,\" etc.",
            "Has the software made corresponding judgments and processing when abnormal external factors occur, such as high sea conditions, adverse weather conditions, etc.?",
            "Check the results of functional control calculations and analyze the correctness of functional processing under conditions such as normal values, abnormal values, boundary values, maximum and minimum values.",
            "Is there a reasonable range for the rate of change of parameters (upper and lower limits of slope), and is the handling strategy for data exceeding the slope clearly defined?"
        ],
        "safety_requirements": [
            "The system should check the entry conditions for the fifth leg of the five-sided approach flight, ensuring the correctness of state execution during the process when the entry conditions are 'met, not met, met again'.",
            "The system should make corresponding judgments and handle abnormal external factors (such as high sea conditions, adverse weather conditions, etc.), ensuring that during the fifth side of the five-side approach and entering the glide window, it correctly transitions to the first segment of the glide path; otherwise, it should handle according to the difference between the current altitude and the desired altitude DH.",
            "The system should ensure that the rate of change of flight status parameters on the five-side approach is within a reasonable range (upper and lower limits of slope), and have a clear processing strategy for data exceeding the slope limit, especially during the fifth side of the five-side approach, and when entering the glide path window, or handle according to the difference between the current altitude and the desired altitude DH value.",
            "The system should check the transfer conditions between each pair of states in the five-side approach flight status space, ensuring the correctness of state transitions under the conditions of 'not set, always met, cannot be met', especially when entering the glide window from the fifth side or handling according to the difference DH between the current altitude and the desired altitude.",
            "The system should check the control calculation results for the five-sided approach flight status to ensure the correctness of function processing under conditions where the control calculation results are 'normal values, abnormal values, boundary values, maximum and minimum values'."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 365,
        "requirement": "When DH > 50m, transition to the descent phase, the softening time limit is set to 2s, and the elevator channel uses the method of setting the initial value of the integrator for softening.",
        "original_safety_criterions": [
            "Does the timing of output control status meet the scene requirements?"
        ],
        "safety_requirements": [
            "The system should ensure that the timing of control state output for transitioning into the descent phase meets the scenario requirements when DH > 50m, preventing premature or delayed triggering of the descent.",
            "The system should check the integrator initial value setting of the elevator channel when DH > 50m, ensuring the smoothness and Safety of the softening process.",
            "The system should monitor the DH value in real time to ensure a timely transition to the descent phase when DH > 50m, and provide a confirmation mechanism for state transitions.",
            "The system should ensure that when transitioning to the descent phase, the softening time limit for the elevator channel is set to 2s, preventing too fast or too slow a softening process from affecting flight Safety."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 366,
        "requirement": "When DH < -50m, transition to climb segment 2, set the softening time limit to 2s, and soften the elevator channel by setting the initial value of the integrator.",
        "original_safety_criterions": [
            "Check and analyze the correctness of states and functions with different priorities set under transfer relationships between two or more states, including situations such as high priority switching to low priority and low priority switching to high priority.",
            "Check the transition conditions between pairwise states in the software state space, analyze the correctness of state transitions under conditions where the transition conditions are \"not set, always satisfied, cannot be satisfied,\" etc.",
            "Check the entry conditions for states and analyze the correctness of state execution during the process when the entry conditions are \"met, not met, met again,\" etc."
        ],
        "safety_requirements": [
            "The system should check the state entry conditions to ensure correctness when transitioning into the climb phase 2 state when DH < -50m, especially in scenarios where the entry conditions are 'met, not met, met again', ensuring the correct execution of the state.",
            "The system should check the transfer conditions between each pair of states in the software state space to ensure the correctness of the state transition condition for entering the climb segment 2 when DH < -50m, especially under the transfer conditions of 'not set, always met, cannot be met', ensuring the correctness of the state transitions.",
            "The system should check different functions with set priorities to ensure that when DH < -50m, it transitions to Climb Segment 2, with a softened time limit set to 2s. The elevator channel uses the method of softening by setting the initial value of the integrator. This ensures the correctness of high-priority functions switching to low-priority functions and vice versa.",
            "The system should ensure the correctness and effectiveness of the softening method for the integrator initial value of the elevator channel during the state transition to climb phase 2 when DH < -50m, preventing system abnormalities caused by inappropriate softening methods."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 367,
        "requirement": "When the lateral control flag of the general symbol is changed from other modes to five-side flying, the initial value of the altitude tracking integrator is set for softening; when the lateral control flag of the general symbol is changed from five-side flying to other modes, the initial value of the fixed-altitude control integrator is set for softening.",
        "original_safety_criterions": [
            "Check the initial values of the interface data and analyze the correctness of the output in cases such as \"initial values not set\"."
        ],
        "safety_requirements": [
            "When the system's lateral control标志 is changed from other methods to five-side flying, it should check the initial values of interface data to ensure that the initial value of the altitude tracking integrator is correctly set and softened, preventing initial value errors from causing abnormal output.",
            "The system should check the initial values of interface data when the lateral control flag is changed from pentagonal flight to other modes, ensuring that the initial value of the altitude control integrator is correctly set and softened to prevent abnormal output caused by incorrect initial values.",
            "The system should perform real-time monitoring of the initial values of interface data to ensure that, in the absence of set initial values, it can trigger warning mechanisms and take corresponding Safety measures.",
            "The system should ensure the correctness and timeliness of the initial value setting and softening process of interface data when switching status modes to prevent system instability caused by data errors."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 368,
        "requirement": "Process accordingly based on the value of DH, the difference between the current height and the desired height: if -10m ≤ DH ≤ 10m, then transition to the altitude hold phase, set the softening time limit to 2s, and initialize the altitude hold controller integrator, altitude tracking controller integrator, and throttle controller integrator for softening, preparing for altitude hold control and altitude tracking control.",
        "original_safety_criterions": [
            "Check the entry conditions for states and analyze the correctness of state execution during the process when the entry conditions are \"met, not met, met again,\" etc.",
            "The control calculation process for functions varies under different states and working stages. Check the function inputs and analyze the correctness of function processing in scenarios such as \"not considering working stages, not considering working states\".",
            "Does the timing of the output control status meet the scene requirements?",
            "Is there a reasonable range for the rate of change of parameters (upper and lower limits of slope), and is the handling strategy for data exceeding the slope limit clearly defined?",
            "For critical control or actions, is there a timeout judgment to handle situations where the hardware status does not meet control requirements for an extended period?"
        ],
        "safety_requirements": [
            "The system should check the value of the difference DH between the current altitude and the desired altitude when the condition for entering the state is met, ensuring that it correctly transitions to the altitude hold phase when -10m ≤ DH ≤ 10m. The softening time limit is set to 2s, and the initial values of the altitude hold controller integrator, altitude tracking integrator, and throttle control integrator are set for softening, preparing for altitude hold control and altitude tracking control.",
            "The system should continuously check the state entry conditions during state execution to ensure the correctness of state execution when the entry conditions are met, not met, and met again. This is especially important when the difference between the current altitude and the desired altitude DH is within -10m ≤ DH ≤ 10m, ensuring a correct transition to the altitude hold segment. The softening time limit is set to 2s, and the initial values of the altitude hold controller integrator, altitude tracking integrator, and throttle control integrator are set for softening.",
            "The system should ensure that the timing of output control status meets scenario requirements, especially when the difference between the current height and the desired height DH is within -10m ≤ DH ≤ 10m, correctly transitioning to altitude hold mode. The softening time limit is set to 2s. Initial values for the altitude hold controller integrator, height tracking integrator, and throttle control integrator are set for softening, preparing for altitude hold control and height tracking control.",
            "The system should check functional inputs at different states and operational phases to ensure the correctness of function processing in cases such as \"unconsidered operational phase, unconsidered current altitude and desired altitude difference DH value,\" etc.",
            "The system should have a timeout judgment mechanism for critical control or actions to handle situations where high control does not meet requirements for an extended period. For example, within a softening time limit of 2 seconds, if the difference between the current height and the desired height DH does not reach the range of -10m ≤ DH ≤ 10m, then a timeout processing mechanism should be triggered.",
            "The system should ensure that the rate of change of height difference DH is within a reasonable range (upper and lower limits of slope) and specify the handling strategy for data exceeding the slope limit."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 369,
        "requirement": "When DH < -10m, then transition to the descent phase.",
        "original_safety_criterions": [
            "There is no transition relationship between two or more states; check the entry conditions for these states and analyze the correctness of state execution under conditions such as \"satisfied simultaneously, satisfied during state execution.\"",
            "When the working state transitions, check the values of the functional interface data and analyze the correctness of the output in cases such as \"values have not changed\".",
            "Check the transition conditions between pairwise states in the software state space, analyze the correctness of state transitions under conditions where the transition conditions are \"not set, always satisfied, cannot be satisfied,\" etc.",
            "Check the entry conditions for states and analyze the correctness of state execution under scenarios where the entry conditions are \"met, not met, met again\" during the state execution process."
        ],
        "safety_requirements": [
            "When the system transitions between working states, it should check the value of altitude difference (DH) to ensure the correctness of state transition under the condition that 'the value has not changed', especially when transitioning to the descent phase when DH < -10m.",
            "The system should check the transfer conditions between each pair of states in the software state space to ensure the correctness of state transitions under conditions such as 'not set, always satisfied, cannot be satisfied', especially for the condition of transitioning into the descent phase when DH < -10m.",
            "The system should check the entry conditions for state transitions to ensure the correctness of state execution when the entry conditions are 'met, not met, met again', especially when transitioning to the descent phase if DH < -10m.",
            "The system should check for the absence of transition relationships between two or more states to ensure the correctness of state execution under conditions such as 'simultaneously met, met during state execution', especially when transitioning to the descent phase when DH < -10m."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 370,
        "requirement": "Enter climb phase 2, set the softening time limit to 2s, and soften the elevator channel by setting the initial value of the integrator.",
        "original_safety_criterions": [
            "Check the duration of each task, analyze the correctness of functional processing in cases where the task duration exceeds the specified time.",
            "Check the logical judgment conditions and logical branches of the function, analyze the correctness of function handling in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "Check the duration of each task, analyze the correctness of function processing in cases where the task duration is less than the specified time.",
            "Check the execution sequence of tasks and analyze the correctness of functional processing when the execution sequence differs from the specified sequence.",
            "The timing relationships, constraint relationships, concurrent relationships, and combinational relationships between the control logics of each functional point are correct."
        ],
        "safety_requirements": [
            "The system should check the sequence of task execution during the entry into the 2nd segment climb mission to ensure that the timing of task execution is consistent with the specified sequence, and that the initial value softening processing for the elevator channel integrator is correct.",
            "When the system enters the second segment of climb, the timing, constraint, concurrency, and combination relationships between elevator channel control logics should be correct, especially when the soft time limit is set to 2 seconds.",
            "The system should check the logical judgment conditions and logical branches of the 2-stage climb function to ensure that in cases of 'logically always false, logically always true, incorrect logical judgment conditions, missing logical branches', the function is handled correctly.",
            "The system should ensure the function processing of setting the initial value softening method for the elevator channel integrator is correct when the duration of entering the 2nd segment climb task is greater than 2s.",
            "The system should ensure correct softening treatment of the elevator channel integrator initial value when the duration of the 2nd segment climb task is less than 2s."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 371,
        "requirement": "In segment 1 of the descent, when the flight altitude drops below 100m, transition to segment 2 of the descent and reset the integral controllers for lateral slip control and heading control to zero, preparing for the flight control in segment 2 of the descent, with a softening time limit set to 2s.",
        "original_safety_criterions": [
            "The control calculation process for functions varies under different states and working stages. Check the function inputs and analyze the correctness of function processing in cases such as \"not considering working stages, not considering working states\".",
            "Check the transfer conditions between pairwise states in the software state space, analyze the correctness of state transitions under conditions where the transfer conditions are \"not set, always satisfied, unsatisfiable,\" etc.",
            "Check and analyze the correctness of states and functions with different priorities set under transfer relationships between two or more states, including situations such as high priority switching to low priority and low priority switching to high priority.",
            "Check the entry conditions for states and analyze the correctness of state execution during the process when the entry conditions are \"met, not met, met again,\" etc. Safety is a crucial concern in this analysis."
        ],
        "safety_requirements": [
            "The system should check the correctness of functional inputs in different states and working phases to ensure that when transitioning from segment 1 of the glide path, if the flight altitude drops below 100m, it correctly moves to segment 2 of the glide path. The integral values for the straight slip control and heading control should be reset to zero, with a softening time limit set to 2s.",
            "The system should check the correctness of high-priority switching to low-priority and low-priority switching to high-priority when there are transfer relationships between two or more states. It must ensure that when transitioning from descent segment 1 to descent segment 2, if the flight altitude is below 100m, the straight slip control integrator and heading control integrator are correctly reset to zero, with a softening time limit set to 2s.",
            "The system should check the transition conditions between segment 1 and segment 2 of the software state space to ensure the correctness of the transition conditions, preventing state transition errors caused by conditions that are not set, always met, or impossible to meet.",
            "The system should check the entry conditions for state transitions to ensure the correctness of state execution when these conditions are met, not met, or met again during the state execution process, especially during the transition from segment 1 to segment 2 of the descent when the flight altitude is below 100m. It should reset the fixed side slip control integrator and the heading control hold integrator to zero and set the soft time limit to 2s."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 372,
        "requirement": "During the approach phase, when the flight altitude drops below 17m, transition to the flare segment occurs. The elevator channel adopts the method of softening the initial value of the integrator, while other channels do not require softening.",
        "original_safety_criterions": [
            "Check the logical conditions and branches of the function, and analyze the correctness of function processing in cases such as \"logically always false, logically always true, incorrect logical judgment conditions, missing logical branches\".",
            "Check the working status of different redundancies and analyze the correctness of function implementation in situations such as \"two or more redundancies being in different states\"."
        ],
        "safety_requirements": [
            "The system should check the logical judgment conditions and logical branches of the functions to ensure that when the flight altitude is below 17m, the logical judgment conditions are correct, and there are no omissions in the logical branches, correctly transitioning to the flare segment. The elevator channel should use the method of setting the initial value of the integrator to soften, while other channels do not require softening.",
            "The system should check the operating status of different redundancies to ensure the correctness and consistency of the elevator channel integrator initial value softening method when two or more redundancies are in different states.",
            "The system should provide real-time monitoring and early warning mechanisms to ensure that when the flight altitude is below 17m, the integrator initial value softening method of the elevator channel is correctly executed, preventing logic errors from causing Safety hazards.",
            "The system should ensure that the execution results of the elevator channel integrator initial value softening method are consistent across different redundancy states, preventing functional failures due to inconsistent states. Safety is a crucial consideration in this process."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 373,
        "requirement": "During the flare segment, when the flight altitude is below 1.5m, it transitions to the roll flattening segment, and no softening is performed on any channel.",
        "original_safety_criterions": [
            "There is no transition relationship between two or more states; check the entry conditions for these states and analyze the correctness of state execution under conditions such as \"satisfied simultaneously, satisfied during state execution.\"",
            "Check the transition conditions between pairwise states in the software state space, and analyze the correctness of state transitions under conditions such as \"not set, always satisfied, cannot be satisfied,\" etc.",
            "Check the entry conditions for states and analyze the correctness of state execution during the process when the entry conditions are \"met, not met, met again,\" etc. Safety is a crucial concern in this analysis."
        ],
        "safety_requirements": [
            "The system should check the conditions for entering the roll-to-level segment when the flight altitude is below 1.5m during the leveling phase, ensuring the correctness of status execution in cases of 'meeting, not meeting, and re-meeting' the conditions.",
            "The system should check the conditions for entering the roll flattening segment when the flight altitude is below 1.5m during the flattening phase, ensuring the correctness of state execution under conditions such as 'simultaneously met, met during state execution', without softening any channels.",
            "The system should check the transfer conditions between the flare segment and the roll-to-level segment to ensure the correctness of state transitions in cases such as 'not set, always met, cannot be met', especially when transitioning to the roll-to-level segment if the flight altitude is below 1.5m.",
            "The system during the flattening phase, when the flight altitude is below 1.5m, should ensure that no channel undergoes softening and provide real-time monitoring of status transitions and anomaly warning mechanisms."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 374,
        "requirement": "During the roll-to-level segment, transition to the landing rollout segment when any of the following conditions are met, with a softened time limit set to 2s.\n1) The landing gear fully compressed signal is true for 12 consecutive frames;\n2) The remote control ground contact signal is true;\n3) The cumulative number of frames where the remote control signal status is abnormal reaches 75. Note, this condition only needs to be evaluated once.",
        "original_safety_criterions": [
            "Check the transition conditions between pairwise states in the software state space, analyze the correctness of state transitions under conditions where the transition conditions are \"not set, always satisfied, unsatisfiable,\" etc.",
            "Check the entry conditions for states and analyze the correctness of state execution during the process when the entry conditions are \"met, not met, met again,\" etc.",
            "Check the loop condition of the function, and analyze the correctness of function processing under conditions such as \"loop condition is always false, always true\".",
            "There is no transition relationship between two or more states; check the entry conditions for these states and analyze the correctness of state execution under conditions such as \"all met at the same time, met during state execution,\" etc.",
            "For critical control or actions, is there a timeout judgment to handle situations where the hardware status does not meet control requirements for an extended period?"
        ],
        "safety_requirements": [
            "The system should transition to the landing roll phase when the signal indicating full compression of the landing gear is true for 12 consecutive beats, and it should set a softening time limit of 2 seconds to ensure the correctness and timeliness of the state transition.",
            "The system should transition to the landing rollout phase when the remote control ground signal is true during the roll-to-level segment, and set a softening time limit of 2s to ensure the correctness and timeliness of the state transition.",
            "The system should switch to the landing roll phase and set a softening time limit of 2 seconds when it accumulates 75 abnormal remote control signal states during the roll-to-level segment, ensuring the correctness and timeliness of the state transition.",
            "The system should check the state transition conditions between the roll-to-level segment and the landing rollout segment to ensure the correctness of state transitions in cases such as 'not set, always met, cannot be met'.",
            "The system should check the conditions for transitioning from the roll-to-level segment to the landing rollout segment, ensuring the correctness of state execution during the process when the entry conditions are 'met, not met, met again', etc.",
            "The system should check the cyclic judgment conditions for transitioning from the roll-to-level segment to the landing rollout segment, ensuring the correctness of function processing in cases such as 'cyclic judgment condition is always false, always true'.",
            "The system should have a timeout judgment mechanism to handle situations where the hardware status does not meet control requirements for an extended period, ensuring Safety and reliability when transitioning from the roll-to-level segment to the landing rollout segment."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 375,
        "requirement": "During the landing rollout phase, after the flight control pre-shutdown command becomes effective, it transitions into the ground waiting phase.",
        "original_safety_criterions": [
            "Is there fault handling based on wrap-around detection, and is the status reporting strategy during faults reasonable?",
            "When issuing dangerous control commands or actions, is there a rational judgment based on the equipment status?",
            "Can the system recover to its normal operating state after the power failure recovery or runaway reset mechanism is activated?"
        ],
        "safety_requirements": [
            "The system, during the landing rollout phase, should make a reasonable judgment based on the equipment status when transitioning to the ground waiting phase after the flight control pre-shutdown command becomes effective, ensuring the correctness of the state transition.",
            "The system should have a fault handling mechanism based on wrap-around detection to ensure that the state reporting strategy is reasonable during faults, especially during the landing rollout phase, when the flight control pre-shutdown command is valid and it transitions to the ground waiting phase.",
            "The system should be able to return to normal operation after power recovery or the reset mechanism due to a runaway is initiated, especially during the landing rollout phase, when the flight control pre-shutdown command is valid and it transitions into the ground waiting phase."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 376,
        "requirement": "If the engine fails in flight, the aircraft enters the gliding phase.",
        "original_safety_criterions": [
            "Is the detection logic for fault items reasonable, and will the detection method affect the normal operation of the equipment?",
            "When issuing dangerous control commands or actions, is there a rational judgment based on the equipment status?"
        ],
        "safety_requirements": [
            "The system should make a rational judgment when the engine fails in mid-air to ensure that the issued control commands or actions do not pose a Safety hazard to the aircraft.",
            "The system should have a reasonable in-flight engine shutdown detection logic to ensure that the detection method does not negatively impact the normal operation of the aircraft.",
            "The system should immediately enter the gliding phase and trigger the corresponding safety mechanisms upon detecting an in-flight engine shutdown, ensuring the Safety condition of the aircraft.",
            "The system should monitor the engine status in real time, providing fault detection and early warning functions to ensure timely response when an engine flameout occurs in flight."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 378,
        "requirement": "When DH<-10m, switch to climb phase 2, and initialize the airspeed control integrator for softening.",
        "original_safety_criterions": [
            "Check and analyze the correctness of states and functions with different priorities set under transfer relationships between two or more states, including situations such as high priority switching to low priority and low priority switching to high priority.",
            "Check the transition conditions between pairwise states in the software state space, analyze the correctness of state transitions under conditions where the transition conditions are \"not set, always satisfied, cannot be satisfied,\" etc.",
            "For critical control or actions, is there a timeout judgment to handle situations where the hardware status does not meet control requirements for a long time?"
        ],
        "safety_requirements": [
            "The system should implement a timeout judgment mechanism when transitioning to climb segment 2, to handle situations where the hardware status does not meet control requirements for an extended period, ensuring Safety.",
            "The system should check the transfer conditions between each pair of states in the software state space to ensure that the condition for transitioning to the climb segment 2 state when DH <-10m is correct, especially in cases such as 'not set, always met, cannot be met'.",
            "The system should check different functions with set priorities under states where transfer relationships exist, ensuring the correct transition to Climb Segment 2 and setting the initial value of the airspeed control integrator for softening when DH<-10m, especially in cases of 'high priority switching to low priority, low priority switching to high priority'.",
            "When the system transitions to climb segment 2, it should ensure that the initial value of the airspeed control integrator is set correctly and perform real-time monitoring to prevent incorrect settings from affecting flight Safety."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 379,
        "requirement": "When -10m < DH < 10m, switch to the fixed height segment, set the initial values of the fixed height control integrator and the height tracking integrator for softening.",
        "original_safety_criterions": [
            "Check and analyze the correctness of states and functions with different priorities set under transfer relationships between two or more states, including situations like high priority switching to low priority and low priority switching to high priority.",
            "Check the transition conditions between pairwise states in the software state space, analyze the correctness of state transitions under conditions where the transition conditions are \"not set, always satisfied, cannot be satisfied,\" etc.",
            "Is the sequence and timing of control by the system coordinated with the hardware, and are the control conditions complete and consistent?",
            "Check the initial values of the interface data and analyze the correctness of the output in cases such as \"initial values not set\"."
        ],
        "safety_requirements": [
            "When the system transitions to the fixed-height segment at -10m < DH < 10m, it should ensure that the control conditions are complete and consistent before and after. The initial values of the fixed-height control integrator and altitude tracking integrator should be set for softening.",
            "When the system transitions to the altitude hold segment at -10m < DH < 10m, it should check the initial values of the interface data to ensure the correctness of the outputs from the altitude hold controller integrator and the height tracking integrator in cases such as 'initial values not set'.",
            "The system checks the transfer conditions between each pair of states in the software state space to ensure the correctness of state transitions under conditions such as 'not set, always satisfied, unsatisfiable', especially when -10m < DH < 10m, transitioning to the altitude hold segment. It sets the initial values of the altitude hold controller integrator and the altitude tracking integrator for softening.",
            "The system sets different priority functions for checking when there are two or more states with transfer relationships, ensuring the correctness of states and functions in cases such as high priority switching to low priority and low priority switching to high priority, especially when -10m < DH < 10m, transitioning to a fixed height segment, setting initial values for the altitude control integrator and height tracking integrator to soften the transition."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 380,
        "requirement": "The softening time limit for the phase transition is set to 2s.",
        "original_safety_criterions": [
            "Does the timing of the output control status meet the scene requirements?",
            "Check the transfer conditions between pairwise states in the software state space, analyze the correctness of state transitions under conditions where the transfer conditions are \"not set, always satisfied, cannot be satisfied,\" etc.",
            "For critical control or actions, is there a timeout judgment to handle situations where the hardware status does not meet control requirements for an extended period?"
        ],
        "safety_requirements": [
            "The system should have a timeout judgment mechanism for critical control or actions, ensuring that if the hardware status does not meet the control requirements within 2 seconds, corresponding processing can be carried out.",
            "The system should ensure that the timing of output control status meets the scenario requirements, especially when the softening time limit for phase transition is set to 2 seconds, ensuring the timeliness and accuracy of the control status.",
            "The system should check the transfer conditions between each pair of states within the software state space to ensure the correctness of state transitions under conditions such as 'not set, always met, impossible to meet', especially when the phase transition softening period is set to 2 seconds."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 381,
        "requirement": "When executing the takeoff command, enter the takeoff roll phase.",
        "original_safety_criterions": [
            "Check the entry conditions for states and analyze the correctness of state execution during the process when the entry conditions are 'met, not met, met again', etc.",
            "Check the system status, working phase, or software status corresponding to system tasks, and analyze the correctness of status execution in cases such as 'non-existence of corresponding software status, inconsistency between software and system'."
        ],
        "safety_requirements": [
            "The system should check the system status, operational phase, or software status corresponding to the system tasks when executing takeoff commands, ensuring the correctness of the takeoff command execution in cases where the corresponding software status does not exist or the software is inconsistent with the system.",
            "The system should check the entry conditions of the takeoff command when executing the takeoff instruction to ensure the correctness of status execution during the takeoff run segment, including scenarios where the entry conditions are met, not met, or met again.",
            "The system should monitor the system status and entry conditions in real time when transitioning into the takeoff run segment to ensure that the warning mechanism is triggered in case of anomalies.",
            "The system should ensure that the execution of takeoff commands has data integrity and consistency, preventing erroneous states from affecting the Safety of the takeoff process."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 382,
        "requirement": "During the takeoff run segment, when airspeed > 30m/s and altitude is greater than 15m, it transitions into the takeoff departure segment without softening treatment.",
        "original_safety_criterions": [
            "Does the fault detection have anti-false alarm processing, and will this processing meet the real-time requirements for alarm handling?",
            "Does the timing of the output control status meet the scene requirements?",
            "Has the software made corresponding judgments and processing in case of abnormal external factors (such as high sea conditions, adverse weather conditions, etc.)?",
            "Check the duration of each task, analyze the correctness of functional processing in cases where the task duration exceeds the specified time.",
            "For critical control or actions, is there a timeout judgment to handle situations where the hardware status does not meet control requirements for an extended period?"
        ],
        "safety_requirements": [
            "The system during the takeoff run segment, when airspeed > 30m/s and altitude is greater than 15m, should have a mechanism to prevent false alarms, ensuring the real-time and accuracy of alert processing.",
            "The system, during the takeoff run segment, when airspeed > 30m/s and altitude is greater than 15m, should be capable of handling abnormal external factors such as high sea states and severe weather conditions, ensuring the correctness and Safety of transitioning to the takeoff departure segment.",
            "The system during the takeoff run segment, when airspeed > 30m/s and altitude is greater than 15m, should have a timeout judgment mechanism to handle situations where the hardware status does not meet the requirements for transitioning to the takeoff climb segment for an extended period, ensuring Safety control.",
            "The system, during the takeoff run phase, when airspeed > 30m/s and altitude is greater than 15m, should ensure that the timing of output control status meets the scenario requirements, ensuring Safety."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 383,
        "requirement": "When the flight altitude is greater than Safety altitude 80m, switch to climb segment 1 without softening treatment.",
        "original_safety_criterions": [
            "When the working state transitions, check the values of the functional interface data and analyze the correctness of the outputs in cases such as \"values change or the range of values changes\".",
            "Check the entry conditions for states and analyze the correctness of state execution during the process when the entry conditions are \"met, not met, met again,\" etc. Safety is a crucial concern in this analysis.",
            "Has the software made the corresponding judgment and handling when abnormal external factors occur, such as high sea conditions, adverse weather conditions, etc.?",
            "When issuing dangerous control commands or actions, is there a rational judgment based on the equipment status?",
            "For critical control or actions, is there a timeout judgment to handle situations where the hardware status does not meet control requirements for an extended period?"
        ],
        "safety_requirements": [
            "The system should check the conditions for entering the flight state when the flight altitude is greater than 80m above Safety height, ensuring the correctness of state execution, especially when transitioning into the initial climb state.",
            "The system should perform a timeout judgment when the flight altitude is more than 80m above Safety altitude, handling situations where the flight altitude does not reach Safety altitude of 80m for a long time.",
            "When the system transitions to a working state, it should check the flight altitude data values to ensure the correctness of transitioning to Climb Segment 1 output when there is a 'change in value' or a 'change in value range'. Safety must be prioritized during this process.",
            "When the system is flying at an altitude greater than 80m above Safety height, it should make a rational judgment based on the equipment status when transitioning to Climb Segment 1.",
            "The system should make corresponding judgments and handle situations when abnormal external factors occur (such as high sea conditions, adverse weather conditions, etc.), ensuring that when the flight altitude is greater than the Safety altitude of 80m, it transitions to climb segment 1 without softening processing."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 384,
        "requirement": "When the landing gear fully compressed signal is true or the remote ground signal is true, it transitions to the landing roll segment without softening treatment.",
        "original_safety_criterions": [
            "Check the entry conditions for states and analyze the correctness of state execution during the process when the entry conditions are \"met, not met, met again,\" etc. Safety is a crucial concern throughout this analysis.",
            "Does the fault detection have anti-false alarm processing, and will the anti-false alarm processing meet the real-time requirements for alarm handling?",
            "Does the timing of the output control status meet the scene requirements?",
            "Is the detection logic for fault items reasonable, and will the detection method affect the normal operation of the equipment?",
            "For critical control or actions, is there a timeout judgment to handle situations where the hardware status does not meet control requirements for an extended period?"
        ],
        "safety_requirements": [
            "The system should check the entry conditions for the landing gear full compression signal and the remote grounding signal to ensure the correctness of state execution during the process, whether the entry conditions are met, not met, or met again.",
            "The system should set a timeout judgment for the landing gear full compression signal and the remote grounding signal to handle situations where the hardware status does not meet control requirements for a long time, ensuring the stability and Safety of the system.",
            "The system should logically enter the landing rollout detection phase when the gear fully compressed signal is true or the remote grounding signal is true. The detection method should not affect the normal operation of the equipment.",
            "The system should have a false alarm prevention mechanism for fault detection to ensure that the real-time requirements for transitioning to the landing rollout phase are not affected when the gear full compression signal or remote grounding signal is true.",
            "The system should ensure that the timing of transitioning into the landing rollout control state when the landing gear full compression signal is true or the remote grounding signal is true meets the actual scenario requirements, ensuring Safety landing."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 385,
        "requirement": "Item d needs to be judged only once, while other items must continuously meet the corresponding conditions for 5 times before phase transition occurs.",
        "original_safety_criterions": [
            "Check the transition conditions between pairwise states in the software state space, analyze the correctness of state transitions under conditions where the transition conditions are \"not set, always satisfied, cannot be satisfied,\" etc.",
            "Check the entry conditions for states and analyze the correctness of state execution during the process when the entry conditions are \"met, not met, met again,\" etc.",
            "A transition relationship exists between the same state and multiple other states. Check the conditions for transitioning from the same state to multiple states and from multiple states to the same state. Analyze the correctness of state transitions when multiple state transition conditions are met simultaneously.",
            "Check the execution conditions of the function, analyze the correctness of function processing when the execution conditions are \"not met, met again\" during the function execution.",
            "For critical control or actions, is there a timeout judgment to handle situations where the hardware status does not meet control requirements for an extended period?"
        ],
        "safety_requirements": [
            "The system should check the correctness of execution conditions during the execution of functions to ensure the correctness of function processing when the execution conditions are 'not met, met again', etc. In particular, item d only needs to be judged once, while other items must continuously meet the corresponding conditions for five consecutive times before transitioning to the next phase.",
            "The system should check the correctness of entry conditions during state execution to ensure the correctness of state execution under circumstances such as when entry conditions are met, not met, met again, etc. Specifically, item d only needs to be judged once, while other items must transition phases only after continuously meeting the corresponding conditions five times.",
            "The system should make a timeout judgment on critical controls or actions to handle situations where hardware status does not meet control requirements for a long time, especially when phase transitions must only occur after meeting the corresponding conditions consecutively 5 times.",
            "The system should check the transition conditions between the same state and other multiple states, ensuring the correctness of state transitions when multiple state transition conditions are met simultaneously. Specifically, item d only needs to be evaluated once, while other items must meet their respective conditions continuously for 5 times before the phase transition occurs.",
            "The system should check the transition conditions between each pair of states in the software state space to ensure the correctness of state transitions under conditions such as 'not set, always satisfied, unsatisfiable', especially item d only needs to be judged once, while other items must meet the corresponding conditions continuously for 5 times before phase transition."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 386,
        "requirement": "If the phase marker is \"falling\", then no phase transition occurs.",
        "original_safety_criterions": [
            "If the redundancy switch fails when the conditions for redundancy switching are met, has the software handled it correctly?",
            "Is there a judgment on the rationality of personnel operations? Instructions that do not conform to the current scene or status are not responded to."
        ],
        "safety_requirements": [
            "The system should determine the rationality of personnel operations when the phase marker is 'falling', not perform phase transitions, and not respond to instructions that do not conform to the current scene or state.",
            "The system should correctly handle the failure of redundancy switching when the phase flag is 'drift', ensuring the stability and Safety of the system status."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    },
    {
        "id": 387,
        "requirement": "If the go-around symbol 3 out of 2 results are true, then the aircraft phase transitions to climb phase 2, and the airspeed control integrator is reset to zero.",
        "original_safety_criterions": [
            "Check the transition conditions between pairwise states in the software state space, analyze the correctness of state transitions under conditions where the transition conditions are \"not set, always satisfied, cannot be satisfied,\" etc.",
            "Is there fault handling based on wrap-around detection, and is the strategy for reporting status during a fault reasonable?",
            "There is no transition relationship between two or more states; check the entry conditions for these states and analyze the correctness of state execution under conditions such as \"all met simultaneously, met during state execution,\" etc.",
            "Can the system recover to its normal operating state after the power failure recovery or runaway reset mechanism is activated?"
        ],
        "safety_requirements": [
            "The system should check the state transition conditions when the result of a 2-out-of-3 vote on the go-around flag is true, ensuring that in cases such as 'not set, always met, cannot be met', the aircraft phase can correctly transition to climb segment 2, and reset the airspeed control integrator to zero.",
            "The system should check the condition for entering the state when the result of 2 out of 3 go-around flags is true, ensuring that under circumstances such as 'satisfied simultaneously, satisfied during state execution', the aircraft phase can correctly transition to climb segment 2, and reset the airspeed control integrator to zero.",
            "The system should return to normal operation after power recovery or the initiation of a reset mechanism following a runaway, ensuring that when the 3-out-of-2 result of the go-around flag is true, the aircraft phase correctly transitions to climb segment 2, and the airspeed control integrator is reset to zero.",
            "The system should have a fault handling mechanism based on wrap-around detection and ensure that when the go-around flag 3 out of 2 results is true, the aircraft phase transitions to climb segment 2, and the airspeed control integrator is reset to zero, the status reporting strategy is reasonable."
        ],
        "Comprehensiveness": 0,
        "Consistency": 0,
        "Feasibility": 0,
        "Readability": 0
    }
]