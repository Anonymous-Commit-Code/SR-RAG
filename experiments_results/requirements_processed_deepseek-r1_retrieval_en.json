[
    {
        "requirement": "Determine which flight phase should be entered based on the aircraft's current flight altitude, status, and other motion information.",
        "safety_requirements": [
            "The system shall check whether the functional inputs take into account the current operating phase and status when determining the flight phase, to ensure the correctness of the processing logic when such consideration is not made.",
            "The system should continuously monitor the entry conditions of the flight phase, and verify the correctness of the state execution logic when the conditions are met, not met, or met again.",
            "The system should check the control calculation results for flight phases and correctly handle normal values, abnormal values, boundary values, and maximum and minimum values.",
            "The system shall verify whether the task execution sequence complies with the specified sequence and implement a predefined fault-tolerant handling mechanism when the sequences are inconsistent.",
            "The system should ensure that the control sequence, timing, and hardware coordination are properly aligned, and control conditions must remain complete and consistent."
        ]
    },
    {
        "requirement": "If the flight altitude is not greater than the decision altitude, phase transition processing is performed based on the current phase flag and flight altitude.",
        "safety_requirements": [
            "When the system transitions between phases, it should check the priority relationship between phase flags and flight altitude to ensure the correctness of switching between high-priority and low-priority states.",
            "If the redundancy switching condition is met but the switch fails, the system shall immediately trigger a safety alarm and maintain the current safety status.",
            "The system should check the duration of phase transition tasks and execute a predefined safety handling process when the duration is less than the specified threshold.",
            "The system shall verify the integrity of functional interface data during operational state transitions, ensuring the correctness of phase identifiers and flight altitude data.",
            "The system should monitor the rate of change of the flight altitude parameter, and if it exceeds the preset upper and lower slope limits, activate the abnormal data processing mechanism."
        ]
    },
    {
        "requirement": "When the flight altitude is less than 2.1 meters, the given vertical speed automatic correction value vygSemi begins to take effect, and is calculated based on the aircraft's pitch angle using the following formula, then limited to [-2, 2].",
        "safety_requirements": [
            "The system should clearly define the upper and lower limits of the sensor's measurement range, and immediately trigger a sensor fault alarm when the flight altitude data exceeds the set range.",
            "The system should set reasonable threshold ranges for the rate of change of vygSemi, and automatically activate the preset slope data processing strategy when the limit is exceeded.",
            "When the system receives an interface data frame, it should verify the data length to ensure the correctness of the output correction when the length is greater than or less than the specified length.",
            "The system shall verify the value accuracy of interface data bits and automatically perform data calibration and record anomalies when the accuracy is less than required.",
            "The system should verify the value accuracy of interface data bits, retain the original data and trigger a precision overflow alarm when the accuracy exceeds the required level."
        ]
    },
    {
        "requirement": "If the inertial navigation acceleration is invalid at this time, the vertical acceleration feedback will not be included.",
        "safety_requirements": [
            "The system should perform real-time validation of input parameters such as the inertial navigation acceleration. When invalid parameters are detected, the system should not respond and should trigger a prompt.",
            "The system should verify the compatibility of personnel operation commands with the current flight status and reject execution of commands that do not match the scenario.",
            "The system should periodically detect the status of the output loop and record any anomalies without affecting normal output.",
            "The system shall execute a preset response handling mechanism, including prompts and operation rejection, when detecting misoperations or invalid operations."
        ]
    },
    {
        "requirement": "δp = Kp (vg - vk) + f(J), with δp limited to [3%, 100%]",
        "safety_requirements": [
            "The system should verify the precision of data bits in the interface data, ensuring that δp calculation results are correct when the precision is greater than or less than required, and comply with the amplitude limit constraint [3%, 100%].",
            "The system should verify the control solution results (normal values, abnormal values, boundary values, maximum and minimum values) to ensure that the logic processing of δp calculation meets the functional requirements.",
            "The system shall perform consistency checks on continuous output data with varying redundancy, and trigger error correction mechanisms to ensure correct δp output when value discrepancies exceed the threshold.",
            "The system should clearly define the upper and lower limits of the sensor's measurement range, immediately report a sensor fault and lock δp to a safe state when the measured value exceeds these limits.",
            "The system should perform real-time monitoring of the δp amplitude limiting logic to ensure that the output value always remains within the [3%, 100%] range and activate protective measures when exceeding the limits."
        ]
    },
    {
        "requirement": "vg = Vt + (h - ht)(Vs - Vt) / (hf - ht)",
        "safety_requirements": [
            "The system should check the data bit value accuracy of the functional interface data, and ensure the correctness of the output of the formula vg = Vt + (h - ht)(Vs - Vt)/(hf - ht) when the accuracy exceeds the specified requirement.",
            "The system should check the data bit value accuracy of the functional interface data, and ensure the correctness of the output of the formula vg = Vt + (h - ht)(Vs - Vt)/(hf - ht) when the accuracy is less than the specified requirement.",
            "The system should verify whether input parameters take into account the current phase and status during different operational phases and states, and ensure the correctness of the control solution process when they are not considered.",
            "The system should perform real-time checks on the control calculation results, analyze normal values, abnormal values, boundary values, and extreme maximum/minimum values, and trigger an error correction mechanism when anomalies or out-of-limit values are detected.",
            "The system should check the input cycle of the interface data, and when the cycle is greater than or less than the specified value, or reaches extreme maximum or minimum values, ensure that the output of formula vg meets expectations and record the abnormal status."
        ]
    },
    {
        "requirement": "If the calculated value of the automatic correction factor vygSemi for lifting speed results in J < 3.5, the throttle opening δp shall be reduced to zero.",
        "safety_requirements": [
            "The system should check the control solution results of the automatic correction quantity vygSemi for lifting speed calculation when J < 3.5, ensuring correct handling of throttle input δp under normal, abnormal, and boundary value conditions.",
            "The system should verify the rationality of the detection logic for J < 3.5 to ensure that the detection method does not affect the normal operation of the equipment, and accurately perform the δp zeroing operation when the conditions are met.",
            "The system should verify the precision of data bits in interface data, and ensure the correctness of vygSemi calculation and δp processing results when the precision is less than or greater than required.",
            "The system should check the data processing procedure of the lifting speed automatic correction value vygSemi to ensure there is no division by zero operation, and trigger the fault-tolerant mechanism when anomalies are detected."
        ]
    },
    {
        "requirement": "The lateral control is the same as in the second glide segment.",
        "safety_requirements": [
            "The system should ensure that the sequence and timing of lateral control are coordinated with the hardware, with complete and consistent control conditions, in accordance with the logic of the second glide slope segment.",
            "The system should verify the correctness of timing relationships, constraint relationships, concurrency relationships, and combination relationships among functional points in lateral control.",
            "The system should check functional inputs under different states and operational phases, and analyze the correctness of lateral control processing when operational phases or states are not considered.",
            "The system should check the operational status of different redundancies to ensure that lateral control functions are correctly implemented when multiple redundancies are in different states.",
            "The system shall synchronize redundant states or perform fault-tolerant control based on the glide slope segment 2 logic when detecting two or more redundancies in different states."
        ]
    },
    {
        "requirement": "Discretization vyg",
        "safety_requirements": [
            "The system should perform validity checks on discrete data bits, and when the data bit values are undefined abnormal values outside the valid range, processing should be rejected and an exception alarm triggered.",
            "The system shall validate all valid enumeration values for discrete data bits to ensure that the response within each valid value range meets the expected output.",
            "The system should detect the transition of discrete data bits between two consecutive cycles, and trigger an operational warning if the transition exceeds a preset threshold.",
            "The system shall perform consistency checks on discrete output data with different redundancies, and when two or more redundant output data are inconsistent, execute a predefined fault-tolerant mechanism and record the anomaly.",
            "The system should check the consistency of discrete interface data across different redundancies, and in case of inconsistent values, use arbitration logic to ensure correct function execution and generate logs."
        ]
    },
    {
        "requirement": "Calculate(k) = vyt + (h(k) - ht)(vyf - vyt)/(hf - ht)",
        "safety_requirements": [
            "The system should perform real-time checks on the control calculation results to ensure correctness of the outputs under conditions such as \"normal values, abnormal values, boundary values, maximum and minimum values,\" and conform to the logic of the calculation formula: k = vyt + (h(k) - ht)(vyf - vyt)/(hf - ht).",
            "The system should verify the data bit value accuracy of the interface data, and when the accuracy is greater than or less than the specified requirement, trigger an error correction mechanism to ensure the calculation results meet expectations.",
            "When the system performs control calculations in different states or operational phases, it should check whether the inputs include the correct operational phase and state identifiers, and reject processing or initiate a fault-tolerant process if these factors are not considered.",
            "The system should check the input cycle of the interface data, and when the cycle is \"greater than the specified cycle, less than the specified cycle, or at extreme maximum or minimum values,\" ensure that the calculation process remains stable and the results are reliable."
        ]
    },
    {
        "requirement": "Md 2(k ) = KLI . Md 1(k )",
        "safety_requirements": [
            "The system shall check the data bit value accuracy of the interface data to ensure the calculation result of Md2(k) = KLI·Md1(k) is correct when the accuracy is less than or greater than required.",
            "The system should check for division by zero operations during data processing and trigger safety mechanisms upon detection to ensure system stability.",
            "The system should verify the correctness of functional processing when the control solution results are normal values, abnormal values, boundary values, or maximum/minimum values.",
            "The system should check the period of the input data to ensure correct output when the period is greater than, less than, or at extreme maximum or minimum values."
        ]
    },
    {
        "requirement": "Md 2(k ) limited to [- XfSitaF , XfSitaF ]",
        "safety_requirements": [
            "The system shall verify output data with different redundancies to ensure that the Md 2(k) limiting function is correctly executed within the range [-XfSitaF, XfSitaF] in case of single or all redundancy failures.",
            "The system should handle situations where the value range represented by the interface data frame is smaller than the actual range of the interface data, ensuring correct output and employing a clamping strategy when the range is exceeded.",
            "The system should check whether the rate of change of the Md 2(k) parameter is within the preset slope range, and execute a clear handling strategy for out-of-limit data (e.g., using a default value or triggering an alarm).",
            "The system should adopt a preset strategy (e.g., retaining the last valid value) to maintain normal amplitude limiting functionality when interface data frame loss is detected.",
            "The system should verify the precision of interface data bit values, and if the precision is lower than required, it should reject or correct the data to ensure the accuracy of Md 2(k) amplitude limiting."
        ]
    },
    {
        "requirement": "Record the given attitude angles (roll, yaw, and pitch) old values before switching as the softening start point.",
        "safety_requirements": [
            "When the system transitions between operational states, it should check the values of functional interface data to ensure that the recorded previous attitude angle values are accurate and complete under conditions where the value 'has changed', 'the value range has changed', or 'the value has not changed'.",
            "The system should check the conditions for software state transitions, verify the correctness of state transition logic in scenarios such as 'not set', 'always satisfied', or 'cannot be satisfied', and ensure the reliability of the recorded previous values of attitude angles.",
            "When the system is in a redundant operating state inconsistency (e.g., two or more redundancies are in different states), it shall ensure that the recording of old attitude angle values is consistent with the implementation of the switching process function and meets the soft start point requirements.",
            "The system should perform real-time monitoring of different redundancy states, and when inconsistency in the redundancy state is detected, trigger a redundant data verification mechanism to ensure the correctness of the recorded previous attitude angle values."
        ]
    },
    {
        "requirement": "dvyg (k) = h&(k)(vyf - vyt ) / (hf - ht )",
        "safety_requirements": [
            "The system should check the precision of data bits in interface data, and ensure the correctness of the dvyg(k) calculation result when the precision is greater than or less than the required value.",
            "The system should verify the correctness of dvyg(k) output when the input value cycle is greater than the specified cycle, less than the specified cycle, and at extreme maximum and minimum values.",
            "The system should monitor the control solution results to ensure correct functional handling under normal values, abnormal values, boundary values, and extreme maximum/minimum values.",
            "The system should detect the communication status of the interface data frame and trigger a fault-tolerance mechanism to maintain a reasonable output of dvyg(k) in case of data frame loss."
        ]
    },
    {
        "requirement": "Md3(k ) = Md 2(k ) + KL  . [vyg (k ) - h&(k )]+ KLd  . [dvyg (k ) - &(k )]",
        "safety_requirements": [
            "The system should check whether the control solution results are normal values, abnormal values, boundary values, or extreme maximum/minimum values, and ensure the correctness of functional processing.",
            "The system should verify the data bit precision of interface data, and trigger exception handling and record errors when the precision is lower than required.",
            "The system should monitor the data bit precision of interface data, and employ a fault-tolerant mechanism and issue an alarm when the precision exceeds the allowable range.",
            "The system needs to verify whether the cycle of input data meets the specified requirements, handle situations where the processing cycle is greater than, less than the set value or extreme values, and ensure the correctness of the solution.",
            "The system shall check inputs according to different operating states and phases, and terminate the solution process and activate the safety protocol when relevant states or phases are not considered."
        ]
    },
    {
        "requirement": "Md 4(k ) = [(22.0 - T)·Md 4(k - 1) + (T + 4)·Md 3(k ) + (T - 4)·Md 3(k - 1)]/(22.0 + T)",
        "safety_requirements": [
            "The system shall check the value accuracy of interface data bits to ensure that when the accuracy is less than required, the calculation result of Md 4(k) meets the expected correctness.",
            "The system shall check the value accuracy of the interface data bits to ensure that when the accuracy is greater than required, the calculation result of Md 4(k) meets the expected correctness.",
            "The system should analyze interface data when the input cycle is greater than, less than, or at the specified extreme value, to verify the correctness of the Md 4(k) solution results.",
            "The system should check the interface data safety value, and when the difference between the safety value and the normal value under non-fault conditions exceeds the threshold, ensure the correctness of the Md 4(k) solution logic.",
            "The system should perform real-time checks on the control calculation results to ensure that the functional processing of Md 4(k) meets safety requirements when outputting normal values, abnormal values, boundary values, and extreme values."
        ]
    },
    {
        "requirement": "Md 4(k ) Limiting [- XfSitaF , XfSitaF ]",
        "safety_requirements": [
            "The system should perform amplitude checks on the interface data frame values. When the interface data frame range is smaller than the actual range, the output should be limited to the data frame range and an exception warning should be triggered.",
            "The system should monitor redundant output data, switch to the valid redundancy upon a single redundancy failure, and enter safety mode with an alarm when multiple redundancies fail.",
            "The sensor acquisition range should be explicitly set to [-XfSitaF, XfSitaF]. If the range is exceeded, a sensor fault should be reported immediately and the fault-tolerant mechanism activated.",
            "The system shall retain the last valid data and trigger a communication fault alarm when interface data frame loss is detected.",
            "When the value accuracy of the interface data bits does not meet the requirements, the system should reject the use of this data and trigger an accuracy anomaly alarm."
        ]
    },
    {
        "requirement": "Jg (k ) = Md 4(k )",
        "safety_requirements": [
            "The system should check the data bit value accuracy of the interface data, analyze the output correctness when the precision is less than required, and ensure that the control solution results meet expectations.",
            "The system should check the value accuracy of data bits in interface data, analyze the output correctness when the precision is greater than required, and ensure that the control solution results meet expectations.",
            "The system should check the periodic values of the interface data, and verify the correctness of the processing procedure when the input period is greater than, less than the specified period, or at extreme maximum or minimum values.",
            "The system should check whether the control solution results are normal values, abnormal values, boundary values, or extreme maximum/minimum values, and ensure that the corresponding handling logic meets the functional requirements.",
            "The system should verify whether functional inputs have considered the current operating phase and status under different states or working phases, ensuring that the solution process matches the state."
        ]
    },
    {
        "requirement": "δp (k ) = Kp (vg (k ) - vk (k )) + f (J(k ))",
        "safety_requirements": [
            "The system should check the value accuracy of interface data to ensure that the calculation result of δp(k) is accurate when the data bit precision is greater than or less than the specified requirement.",
            "The system should perform real-time checks on the control calculation results, analyze the handling correctness of normal values, abnormal values, boundary values, maximum and minimum values, and trigger an error correction mechanism when anomalies occur.",
            "The system should verify whether the input data matches the current phase and status during different operational states or phases, eliminating input scenarios that do not consider the current operational phase/state.",
            "The system should monitor the value cycle of input data. When a cycle greater than, less than the specified value or an extreme value is detected, the system should immediately execute fault-tolerant processing and output an alarm.",
            "The system should implement cross-state validation during the control solution process, automatically verifying the logical consistency of solution parameters with the current state when transitioning between operational states."
        ]
    },
    {
        "requirement": "δp (k ) limited to [3%, 100 % ]",
        "safety_requirements": [
            "The system shall perform redundancy checks on the output data of δp(k), and when the value difference between redundancies exceeds the threshold, execute the preset error correction strategy and ensure the correct execution of the amplitude limiting function.",
            "The system should clearly define the acquisition range of the δp(k) sensor as [3%, 100%], and immediately trigger a sensor fault alarm and activate the safety fault-tolerant mechanism when the limit is exceeded.",
            "The system should monitor the precision of δp(k) data bits and perform precision truncation when the precision exceeds the set threshold to ensure the validity of output values.",
            "The system should monitor the value accuracy of the δp(k) data bits and reject output while generating a data anomaly log when the accuracy falls below the set threshold.",
            "The system should set a reasonable slope range for the δp(k) rate of change, activate the smoothing filter algorithm upon exceeding the limit, and issue an alarm message for slope out-of-bound conditions."
        ]
    },
    {
        "requirement": "f (J(k )) = 3J(k )",
        "safety_requirements": [
            "The system should check the value accuracy of data bits in interface data, analyze the correctness of outputs when the accuracy is less than or greater than the specified level, and ensure that functional processing meets requirements.",
            "The system should check the input cycle of interface data and analyze the correctness of processing under conditions where the cycle is greater than, less than, or at extreme maximum or minimum values of the specified cycle.",
            "The system should verify the control calculation results to ensure the correctness of functional processing when the results are normal values, abnormal values, boundary values, or extreme maximum or minimum values.",
            "The system should check input data under different states and operating phases to ensure that the current operating phase and state are correctly considered during the solution process.",
            "The system should implement dynamic checks during the functional control solution process to ensure that the corresponding solution methods are used under different states and operational phases."
        ]
    },
    {
        "requirement": "At the end of the flare phase, the system needs to calculate the aileron deflection command on the ground based on δx 0.",
        "safety_requirements": [
            "The system should verify the results of control resolution when calculating the aileron deflection command in the loop, ensuring correct handling under normal values, abnormal values, boundary values, and extreme maximum/minimum conditions.",
            "The system should check for division by zero during data processing and take protective measures when δx is zero to prevent computational anomalies.",
            "The system should confirm that the current operating phase is the end of the flare phase before calculating ground deflection commands, and verify whether the input data has been correctly associated with the current operating status and phase.",
            "The system shall ensure that the sequence and timing of command generation for ground deflection are coordinated with the hardware, and that the control condition logic is complete and consistent.",
            "When the system is in different operating states with multiple redundancies, it should ensure the correctness of the calculation logic for the aileron deflection command in the deflection loop."
        ]
    },
    {
        "requirement": "The system needs to calculate the yg value, with the formula: yg = - (Kyz·Δy + KyzI∫ Kys·Δy dt + Kyzd·wy), and the yg value must be clamped within the range [- XfFxd , XfFxd].",
        "safety_requirements": [
            "The system should check the control solution results when calculating the yg value, ensuring the processing logic for 'normal values, abnormal values, boundary values, and extreme values' is correct, with results conforming to the formula definition and strictly limited within the range [-XfFxd, XfFxd].",
            "The system should monitor the rate of change of input parameters Δy and wy in real time, and when they exceed the preset upper and lower slope limits, employ a clear data processing strategy for excessive slopes (such as substituting values or triggering alarms).",
            "The system should verify the value accuracy of functional interface data, and employ a predefined handling mechanism (such as data truncation, rounding, or exception alarm) to ensure solution accuracy when the data precision is greater than or less than required.",
            "When the system performs control calculations during different operational phases or states, it needs to verify whether the input data includes information about the current phase and state, and trigger an error handling process if relevant factors are not considered."
        ]
    },
    {
        "requirement": "When switching between remote control modes with and without an inner loop, record the previous value of the rudder deflection command before switching, as a softening starting point.",
        "safety_requirements": [
            "During mode switching, a timeout judgment should be made on the hardware status. If the control requirements are not met within the timeout period, a safety response mechanism should be triggered and the switching operation should be terminated.",
            "The control sequence and timing should be verified against the hardware actions during the switching process to ensure the switching condition logic is complete and the states are consistent before and after the switch.",
            "When the system switches states, it should perform a value range analysis on the functional interface data to ensure that the recorded previous value of the rudder deflection command is within the valid range and serves as a legitimate softening starting point.",
            "The input for the switching function needs to be verified to ensure it includes the current operating phase and status parameters, preventing calculation errors caused by unrecognized operating states.",
            "Perform boundary checks on the soft start values generated during the switching process, identify abnormal and limit values, and execute data reset or fault alarms."
        ]
    },
    {
        "requirement": "The throttle airspeed closed-loop control during the flare segment should be the same as that during the flare segment.",
        "safety_requirements": [
            "The system should verify the control sequence, timing, and hardware coordination of the throttle airspeed closed-loop control during the flare phase, and ensure that the control conditions are complete and consistent.",
            "The system needs to verify the correctness of timing relationships, constraint relationships, concurrency relationships, and combination relationships of control logic for each functional point during the flattening phase.",
            "After executing hardware control, the system should monitor and determine whether the hardware status matches the requirements of the leveling section control, and trigger corrective actions when they do not match.",
            "The system must ensure consistency of the entry and exit conditions for the throttle airspeed closed-loop control mode during the flare phase.",
            "The system should set a timeout judgment mechanism for critical control actions during the leveling phase to handle timeout situations where hardware status does not meet control requirements."
        ]
    },
    {
        "requirement": "In the discretization process, Md 2(k) = KyzI * Md1(k), and Md 2(k) must be limited within the range [- XfFxd , XfFxd].",
        "safety_requirements": [
            "The system should check for data jumps between adjacent cycles during the discretization process to ensure the correctness of Md2(k) within the clamping range [-XfFxd, XfFxd].",
            "The system should set a reasonable range (upper and lower slope limits) for the rate of change of Md2(k), and implement a clear handling strategy (such as clamping or alarming) for data exceeding the slope limit.",
            "The system needs to verify the correctness of Md2(k) calculation and clamping processing when the discrete data bit takes a valid enumerated value.",
            "The system should detect abnormal value ranges of discrete data bits and trigger the preset fault-tolerance mechanism (such as replacement with default values or output of error flags).",
            "When the system outputs inconsistent redundant discrete data, it should activate an error correction mechanism (such as majority voting or state freezing) to ensure that the functional output meets expectations."
        ]
    },
    {
        "requirement": "In the discretization process, Md 3(k) = Kyz · Δy(k) + Md 2(k) + Kyzd · wy(k), and Md 3(k) must be limited within the range [- XfFxd , XfFxd].",
        "safety_requirements": [
            "The system should perform adjacent cycle transition checks on discrete data bits to ensure the correctness of Md 3(k) transitions within the valid value range.",
            "The system should clearly define the reasonable variation range of parameters Δy(k) and wy(k), and specify the handling strategy for over-slope data.",
            "The system should verify whether the value of Md 3(k) is an enumerated value within the valid value range to ensure that the output conforms to the defined scope.",
            "The system should detect outliers of Md 3(k) (values exceeding the range [-XfFxd, XfFxd]) and execute predefined fault tolerance or alarm measures.",
            "The system should check the consistency of redundant discrete output data and ensure functional correctness when redundant data values are inconsistent."
        ]
    },
    {
        "requirement": "In the discretization process, yg(k) = -Md3(k).",
        "safety_requirements": [
            "The system should check the data bits of discrete value ranges in the interface data to ensure the correctness of the output when the data values jump between consecutive cycles.",
            "The system should verify whether the discrete value domain data bits in the interface data are valid enumerated values within the effective value range and ensure the correctness of the output.",
            "The system should detect whether discrete value fields in the interface data contain abnormal values outside the valid value range, and perform fault-tolerant processing or issue an alarm in case of anomalies.",
            "The system should check the data processing logic during the discretization process to avoid division by zero operations and ensure the safety and stability of the computation process.",
            "The system should check the integrity and applicability of functional inputs under different states and operational phases, ensuring that the control solution process correctly accounts for the current operational phase and state."
        ]
    },
    {
        "requirement": "The longitudinal control during landing rollout is the same as during the takeoff ground phase.",
        "safety_requirements": [
            "The system shall ensure that the longitudinal control during landing roll is coordinated with the control sequence, timing, and hardware of the takeoff ground phase, and that the control condition logic is complete and consistent.",
            "The system must verify that the entry conditions, exit conditions, and execution for the landing roll and takeoff ground phase modes are fully consistent.",
            "The system shall ensure that the timing relationships, constraint relationships, concurrency relationships, and combination relationships of control logic during the landing roll phase are strictly consistent with those during the takeoff ground phase.",
            "After power recovery or reset due to runaway, the system shall be able to accurately restore to the control state corresponding to the current flight phase (landing rollout/takeoff ground segment).",
            "The timing of the longitudinal control status output by the system must meet the real-time requirements for both the landing rollout and takeoff ground phase scenarios."
        ]
    },
    {
        "requirement": "In the lateral control during landing rollout, yg decreases linearly from -δx 0 / Ky to 0 within 2 seconds.",
        "safety_requirements": [
            "In the lateral control during landing rollout, a timeout detection mechanism should be set. When yg does not linearly decrease from -δx0/Ky to 0 within 2 seconds, the timeout handling should be triggered.",
            "The YG control solution results should be checked in real time to ensure correct handling under normal values, abnormal values, boundary values, maximum and minimum values.",
            "The task duration should be monitored, and if the duration is less than 2 seconds, the exception handling mechanism should be triggered and logs recorded.",
            "The value of Ky should be checked during the calculation to prevent division by zero, and the calculation should be terminated if Ky=0 is detected.",
            "The reasonable slope range (upper and lower limits) of the yg parameter variation rate should be defined, and when an out-of-slope data is detected, the preset handling strategy should be initiated."
        ]
    },
    {
        "requirement": "In the lateral control during landing rollout, yg(k) = Kyg(Kz·Dz(k) + Kz·Dz(k) - K·Δy(k) - K·wy(k)) + 0.5yg0, where yg0 is the outer loop control output of the rudder channel at the end of the roll leveling phase.",
        "safety_requirements": [
            "The system should perform real-time monitoring of control calculation results, distinguishing normal values, abnormal values, boundary values, and maximum/minimum values, and trigger correction mechanisms or alarms when abnormalities are detected.",
            "When calculating yg(k), the system needs to verify the operational phase and status of the input parameters to ensure that parameters from non-matching phases or statuses are not used in the calculation.",
            "The system shall ensure that the timing and sequence of control solutions are strictly synchronized with hardware actions, and that control condition logic is complete and free of contradictions.",
            "The system needs to verify the timing relationships, constraints, and concurrent combinations among control logics to prevent logic conflicts or timing mismatches.",
            "The system should set upper and lower limits on the rate of change for parameters such as Dz(k), Δy(k), and wy(k), and clearly define strategies for handling out-of-limit data, including filtering, interpolation, or alarm triggering.",
            "At the end of the roll-to-level phase, the system should verify the source and validity of the yg0 value to ensure it meets the current flight status and control constraints."
        ]
    },
    {
        "requirement": "During engine in-flight start, the throttle valve control follows the start-up procedure. After a successful engine in-flight start, the aircraft exits the descent phase and enters the corresponding phase, with the throttle valve control following that phase's requirements. If the engine in-flight start fails, the throttle valve position is set to 0%.",
        "safety_requirements": [
            "The system should perform input checks on the throttle control resolution process during different stages and state transitions of in-flight engine start-up, ensuring that the correct control logic is applied according to the current operating stage and state.",
            "The system shall perform real-time validation on the throttle control calculation results, handle abnormal values, boundary values, maximum and minimum values, and force the output to be set to 0% when the results exceed safety thresholds.",
            "After a software power failure and restart, an integrity check of the engine in-flight start status should be performed to ensure that the status recovery matches the actual requirements of the current flight phase.",
            "The system should be equipped with a throttle control calculation timeout monitoring mechanism, which forcibly sets the throttle to 0% and triggers a fault alarm if the calculation result is not returned on time.",
            "After system power recovery or reset, the throttle control module should perform a self-check to ensure automatic recovery to a safe control state matching the current flight phase."
        ]
    },
    {
        "requirement": "When autonomous control cannot achieve satisfactory control performance, manual correction control can be used to make minor adjustments to the autonomous control. The correction inputs are introduced into the flight control computer through three remote control stick channels (elevator input, aileron input, rudder input) and airspeed correction combined commands. After corresponding scaling conversion, these inputs are fed into the control laws, thereby achieving the purpose of adjusting the control performance. The meaning of the correction terms varies across different flight phases.",
        "safety_requirements": [
            "When the system is in different working phases and states, it should check whether the inputs of control resolution consider the current phase and state. Inputs that are not considered should be rejected and trigger a warning mechanism.",
            "The system should perform real-time checks on the control solution results, identify normal values, abnormal values, boundary values, and extreme maximum and minimum values, and activate the safety handling mechanism upon detecting anomalies.",
            "The system should monitor the time of the control solution process, and if the result is not returned within the timeout period, immediately terminate the current solution and activate the preset default control strategy.",
            "After a software power failure and restart, the system should verify the correctness of status recovery. If incomplete or incorrect recovery is detected, it should automatically switch to safe mode and issue an alarm.",
            "The system must ensure that control commands are sequenced and timed in strict coordination with the hardware, and verify the completeness and consistency of control conditions to avoid conflicts or contradictions."
        ]
    },
    {
        "requirement": "Different manual correction amounts are required for control in each flight phase, and the relationship between manual correction amount and control input is linear.",
        "safety_requirements": [
            "The system should verify during the control solution process whether the current operational phase and status are correctly identified, ensuring that manual correction calculations match the flight phase.",
            "The system shall perform hardware consistency checks on the execution sequence and timing of control commands to ensure complete and consistent logical control conditions.",
            "The system should define reasonable range for the rate of change of manually corrected parameters (upper and lower slope limits), and clearly specify the correction or discarding strategy for data exceeding these slope limits.",
            "The system needs to verify the control logic timing, constraints, concurrency, and combination relationships of each functional point to ensure compliance with dynamic flight phase requirements.",
            "The system should monitor control solution results in real time, distinguish normal values, abnormal values, and boundary values, and trigger alarms and safety fault-tolerant mechanisms for non-normal results."
        ]
    },
    {
        "requirement": "When switching between the remote control mode with an in-band loop, record the previous set attitude angles (roll, yaw, and pitch) as the soft start reference before the switch.",
        "safety_requirements": [
            "When the system switches to remote control mode, it should check the recorded attitude angle old values and their value range changes to ensure their validity as soft start points.",
            "The system should verify the completeness of state transition conditions during remote control mode switching, covering abnormal scenarios such as 'not set / always satisfied / never satisfied'.",
            "Before switching modes, the system should check the operational status of external devices such as sensors and NVM, to ensure that the old attitude angle values can still be correctly saved when the device is powered off or initialized.",
            "The system should implement anomaly detection on the attitude angle calculation results during the switching process, including handling mechanisms for abnormal data scenarios such as boundary values, maximum and minimum values.",
            "The system should verify the timing logic of attitude angle recording actions to ensure that the triggering timing of switching control states complies with the timing constraints of the flight scenario."
        ]
    },
    {
        "requirement": "The control law used in manual correction control is the same as that of automatic control (Equation 2-1, Equation 2-2, Equation 2-3), except that a correction value is added to the corresponding control quantity.",
        "safety_requirements": [
            "The system should ensure that the execution sequence and timing of manual correction control are coordinated with the hardware, with complete control conditions and consistent logical order.",
            "The system should check control inputs under different states and operational phases to ensure the computation process clearly distinguishes between operational phases and states, and maintains correct processing in unforeseen circumstances.",
            "The system must verify manually corrected control solution results to ensure that preset processing strategies are executed when outputting normal values, abnormal values, boundary values, and maximum/minimum values.",
            "The system should monitor the timeliness of the control solution process and trigger a predefined safety handling mechanism if no result is returned within the timeout period.",
            "The system should verify the correctness of the timing relationships, constraints, concurrent logic, and combination rules between manually corrected control function points."
        ]
    },
    {
        "requirement": "Command control mode is a control mode in which an aircraft changes its flight status or position during cruise according to actual conditions at that time through command control.",
        "safety_requirements": [
            "The system should check the integrity of functional inputs under different states and operational phases, analyze scenarios of 'unconsidered operational phases' or 'unconsidered operating states', and ensure the correctness of the control solution process.",
            "The system should monitor in real time the conditions for entering the command control mode, and analyze the correctness of state transitions when conditions such as \"satisfied, not satisfied, satisfied again\" occur during the execution state.",
            "The system should monitor computation time during the control solution process and execute a preset fault-tolerance mechanism in case of timeout without returning results, ensuring functional processing effectiveness.",
            "The system shall verify the consistency between software status and system status, and implement an exception blocking mechanism for scenarios of 'no corresponding software status' or 'inconsistent software and hardware status'.",
            "After a software abnormal restart, the system shall automatically execute the status recovery verification process to identify \"status not recovered\" or \"incorrect recovery\" issues and trigger corrective actions."
        ]
    },
    {
        "requirement": "The command control mode does not alter the control law structure under autonomous control mode.",
        "safety_requirements": [
            "The system should ensure that the control sequence and timing in command control mode are coordinated with the hardware, and that control conditions are complete and consistent.",
            "After hardware control, the system needs to monitor the hardware status, determine its compliance with control requirements, and execute predefined handling mechanisms when non-compliance is detected.",
            "The system should check the entry conditions for states without transfer relationships to ensure the correctness of state transitions when all conditions are simultaneously met or during execution.",
            "The system shall set a timeout detection mechanism for critical control actions to handle situations where the hardware status does not meet control requirements for an extended period.",
            "The system should check the inputs to the control solution process according to different states and working phases, ensuring correct handling without missing any working phase or state."
        ]
    },
    {
        "requirement": "The instruction for setting the command control has a lateral direction.",
        "safety_requirements": [
            "When the system executes lateral command control, it should ensure that the control sequence, timing, and hardware coordination are properly aligned, and that control conditions are complete and consistently maintained.",
            "After issuing lateral instructions, the system must monitor in real-time the consistency between hardware status and control requirements, and trigger alarms or error correction mechanisms when inconsistencies occur.",
            "The system should validate the effectiveness of lateral control parameters set by personnel and provide alerts or reject responses for abnormal parameters.",
            "The system needs to verify the correctness of timing relationships, constraint relationships, concurrency relationships, and combination relationships in the lateral control logic of each functional point to avoid logical conflicts.",
            "Before issuing lateral hazard control commands, the system should perform a reasonableness check based on the current equipment status, and must not execute commands under abnormal conditions."
        ]
    },
    {
        "requirement": "Supports command control modes such as \"Left Turn\", \"Right Turn\", \"Figure Eight\", \"Temporary Waypoint\", longitudinal \"Constant Altitude\", \"Altitude Setting\", and speed control modes including \"Constant Speed\" and \"Speed Setting\".",
        "safety_requirements": [
            "The system should verify the compatibility of input commands with the control mode during different operational phases/states, and reject commands that do not consider the current phase or state.",
            "The system shall detect the working status of different redundancies in real time, and when two or more redundancies are in different states, a consistency arbitration mechanism shall be triggered to ensure correct control solution logic.",
            "The system should verify the logical correctness of timing, constraints, concurrency, and combined relationships among various control modes, and isolate conflicting or out-of-bound commands.",
            "The system should ensure that the timing of output control status strictly matches the actual flight scenario, and immediately trigger a status correction mechanism upon detecting any timing deviation.",
            "The system should perform dynamic redundancy state synchronization checks on flight path commands such as \"left/right turn\" and \"figure-eight flight\" to avoid control output failure caused by redundancy discrepancies."
        ]
    },
    {
        "requirement": "In either autonomous control or command control mode, during the flight segment from climb phase 2 to the completion of the route intercepting the final approach course (excluding the final approach course itself), issuing any of the above commands will switch the system into command control mode.",
        "safety_requirements": [
            "When the system switches between autonomous/instruction control modes, it should check the current operational phase and status to ensure that input instructions are only processed legally within the flight segment from climb phase 2 to before the final approach course interception.",
            "The system should perform boundary value validation on the results of command control mode switching calculations, identify abnormal values, maximum/minimum values, and maintain the original control mode while issuing an alarm upon detecting anomalies.",
            "The system shall resume the control mode status prior to the restart after a software reboot. If recovery fails, it shall be forced into safe default mode and report an error.",
            "The system must re-validate the flight segment conditions each time it receives a mode switching command. If the conditions are no longer satisfied, the switch shall be rejected and a conflict event recorded.",
            "The system should verify the compatibility of the timing for activating the command control mode with the current flight scenario, and switching commands received during unauthorized flight segments should be intercepted in real time."
        ]
    },
    {
        "requirement": "During climb phase 1, only the \"constant speed\" and \"airspeed setting\" commands are valid; all other commands are invalid.",
        "safety_requirements": [
            "The system should validate the effectiveness of instruction parameters set by personnel, and during climb phase 1 only respond to the 'constant speed' and 'airspeed setting' instructions, disregarding other instructions and indicating an anomaly.",
            "The system should set a timeout judgment for the execution process of the \"constant speed\" and \"airspeed setting\" commands, and terminate the operation and trigger an alarm when the hardware status does not meet the control requirements for a long time.",
            "The system shall perform real-time monitoring on the execution duration of the climb phase 1 command; if the mission time is less than the specified threshold, it must automatically correct or prompt for an operational anomaly.",
            "The sequence and timing of system command execution should strictly match the hardware control logic to ensure complete and consistent control conditions, avoiding functional failure due to timing errors.",
            "The system needs to verify the current operating phase during the first climbing stage, allowing only valid command inputs for this phase and rejecting any command requests that do not take into account the operating phase or status."
        ]
    },
    {
        "requirement": "In the command control mode, commands of the same type can be re-sent, and the new command will replace the old one.",
        "safety_requirements": [
            "When the system resends a command, it should check the current operation phase and status to ensure correctness of command replacement processing under the condition of 'unconsidered operation phase' or 'unconsidered operation status'.",
            "When a state transition occurs, the system should check the execution process of both the old and new commands to ensure that the command replacement after the state transition meets the correctness requirements of \"start execution, maintain execution, interrupt execution.\"",
            "The system should verify the control sequence, timing, and hardware coordination of command replacement to ensure complete control conditions and logical consistency.",
            "If multiple commands may operate the same actuator simultaneously, the system should perform conflict detection and implement a mutual exclusion processing mechanism.",
            "A timeout detection mechanism should be set during the critical command replacement process to trigger safety protection measures when the hardware status fails to meet control requirements for an extended period."
        ]
    },
    {
        "requirement": "During \"altitude hold\" command control, the commanded altitude in the flight control law is set to the flight altitude at the moment the \"altitude hold\" command is received.",
        "safety_requirements": [
            "When the system enters the 'Altitude Hold' state, it should perform real-time checks on the entry conditions to ensure the correctness of state execution under conditions of 'satisfied, not satisfied, satisfied again'.",
            "The timing and sequence of the system executing the 'altitude hold' command should be coordinated with the hardware, and the control conditions must be complete and logically consistent.",
            "When the system processes the 'Fixed Altitude' command, it needs to check the current working phase and status to ensure the control calculation process is correct, avoiding situations where the working phase or status is not considered.",
            "The system output timing of the 'altitude hold' control status shall meet the requirements of the current flight scenario and verify consistency with the expected time window.",
            "The system should set a timeout judgment mechanism during the \"altitude hold\" control process. When the hardware status does not meet the control requirements within the timeout period, the safety handling procedure is triggered."
        ]
    },
    {
        "requirement": "When the \"Height Setting\" command is active, the specified height in the flight control law is taken as the set height value.",
        "safety_requirements": [
            "The system should check the control solution results for altitude setting commands to ensure that, under normal, abnormal, boundary, and extreme maximum/minimum value conditions, the specified altitude in the flight control laws is correctly set to the intended altitude value.",
            "The system should verify that the control sequence, timing, and hardware coordination of altitude setting commands are consistent, with complete and coherent control conditions.",
            "The system should check the input of height setting commands during different operational phases and states to ensure correct handling even when no operational phase or state is missed.",
            "The system shall check continuous altitude data outputs from different redundancies, and when the difference between multiple redundant data exceeds the specified threshold, trigger the error correction mechanism and ensure the altitude setting is correct.",
            "The system should perform a validity check based on the current device status before issuing altitude setting commands, to prevent execution of hazardous instructions."
        ]
    },
    {
        "requirement": "When switching between the inner loop remote control and non-inner loop remote control modes, record the previous value of the rudder deflection command before switching as the soft start point.",
        "safety_requirements": [
            "When the system switches modes, it should verify the control sequence, timing, and hardware coordination to ensure complete and consistent control conditions.",
            "The system should check the functional inputs during the mode transition phase to ensure that the processing logic correctly covers all operating states and phases, avoiding situations where operating phases or states are not considered.",
            "During the mode switching process, the system needs to perform a timeout judgment on the hardware status. If the control requirements are not met for an extended period, the safety handling procedure should be triggered.",
            "The system should perform real-time checks on the results of mode switching calculations, covering normal values, abnormal values, boundary values, and extreme value scenarios to ensure the correctness of the calculation commands.",
            "After a power failure and restart, the system shall automatically check and restore the previous rudder deflection command value before the switchover, and handle any unrecovered or incorrectly recovered states."
        ]
    },
    {
        "requirement": "The specified height in autonomous control mode is the height of the target waypoint.",
        "safety_requirements": [
            "The system should verify the correctness of timing relationships, constraint relationships, concurrent relationships, and combined relationships of control logic under different working phases and states in autonomous control mode to ensure high consistency with the target waypoint.",
            "The system shall ensure that the control sequence and timing are coordinated with the hardware, the control conditions are complete and consistent, and they match the current flight phase.",
            "The system should perform real-time checks on the control solution results, including normal values, abnormal values, boundary values, and maximum/minimum values, and trigger alarms and safety handling mechanisms in case of abnormalities or boundary conditions.",
            "The system needs to dynamically adjust the control solution process based on the current state and operational phase, check whether functional inputs miss any operational phases or state parameters, and ensure the accuracy of altitude control.",
            "The system should implement a timeout detection mechanism for critical altitude control commands. When the hardware status fails to meet control requirements for an extended period, the system must immediately trigger a safe failure mode and switch to the backup strategy."
        ]
    },
    {
        "requirement": "In the command control mode, the navigation algorithm or waypoint switching method can be varied according to the commands, but the control laws remain the same as in autonomous control.",
        "safety_requirements": [
            "When the system is in command control mode, it should check functional inputs when transitioning between different operational states or phases, to ensure that the navigation algorithm or waypoint switching method correctly handles situations involving 'unconsidered operational phases' or 'unconsidered operational states'.",
            "The system should verify control sequences, timing, and hardware coordination to ensure complete and consistent control conditions.",
            "The system should perform real-time checks on the control calculation results, distinguishing between normal values, abnormal values, boundary values, and maximum/minimum values, and trigger a safety response mechanism when abnormalities are detected.",
            "The system needs to verify the correctness of timing relationships, constraint relationships, concurrency relationships, and combination relationships in the control logic of each functional point.",
            "The system should activate the preset safety handling mechanism in case of a timeout during the control calculation process, ensuring that results are returned or default safety operations are executed within the specified time."
        ]
    },
    {
        "requirement": "The commanded airspeed in the flight control law is set to the airspeed value at the moment the \"constant speed\" command is received when under \"constant speed\" command control.",
        "safety_requirements": [
            "The system should implement categorized checks on the control solution results to ensure that under conditions of \"normal values, abnormal values, boundary values, maximum and minimum extreme values\", the given airspeed values are always based on the actual airspeed at the moment the \"constant speed\" command is triggered.",
            "Before executing control calculations, the system must verify the validity of the current operational phase and status inputs to prevent errors in airspeed values caused by overlooking the operational phase or status.",
            "During the system's execution in a constant speed state, it is necessary to continuously monitor the satisfaction status of the entry conditions. When the conditions are 'not satisfied' or 'satisfied again', the airspeed value strategy should be dynamically adjusted to ensure control continuity.",
            "The system must ensure that control timing and hardware actions are strictly synchronized, and the definition and execution process of control conditions should maintain logical completeness and consistency.",
            "The system should set a control solution timeout threshold, and when the solution is not completed within the specified time, automatically activate the preset airspeed value fault tolerance mechanism and trigger an alarm."
        ]
    },
    {
        "requirement": "The specified airspeed in the flight control law is taken as the set airspeed value during \"Speed Setting\".",
        "safety_requirements": [
            "The system should verify the correctness of functional processing when the control resolution results are at normal, abnormal, boundary, maximum, and minimum airspeed values, ensuring that the given airspeed values strictly match the set values.",
            "The system shall dynamically verify the airspeed setpoint based on the current context under different operating phases and conditions, to prevent situations where the operating phase or condition is not taken into account.",
            "The system must verify the coordination of control solution timing with hardware devices to ensure the completeness and logical consistency of airspeed setting conditions.",
            "The system shall perform real-time monitoring of the conditions for entering the speed setting state, ensuring correct state machine transitions and stable airspeed value readings when the conditions are met, not met, or met again.",
            "The system needs to establish timing constraint rules for airspeed control logic, clearly defining the concurrent relationships and boundary conditions of combined relationships with other flight control parameters.",
            "The system shall perform overspeed detection at the set boundary airspeed value and automatically activate the safety protection mechanism when the input exceeds the preset threshold.",
            "The system should implement multi-channel cross-checking during the airspeed control calculation process to ensure consistency of output results from different calculation paths."
        ]
    },
    {
        "requirement": "The specified airspeed in the flight control law during autonomous control is a value stored in the flight control computer, calculated based on flight performance.",
        "safety_requirements": [
            "The system should check the airspeed calculation results of the flight control laws to ensure correct handling logic under normal, abnormal, boundary, maximum, and minimum values, and record the types of abnormal values.",
            "The system must verify input parameters based on the current status and operational phase of the aircraft. When an unconsidered operational phase or status is detected, the control solution should be terminated and a specified error code returned.",
            "The system should be configured with a control solution timeout threshold, automatically terminating the current solution process if no result is returned within the timeout period, and triggering a preset safety response mechanism.",
            "The system shall perform real-time verification of the execution sequence, timing, and hardware coordination of control commands. If incomplete conditions or logical inconsistencies are detected, the control output shall be immediately frozen and an alarm issued.",
            "During the execution of critical control commands, the system must continuously monitor the hardware feedback status. If the control requirements are not met within the timeout period, the system should forcibly switch to a backup control plan or enter a safety protection mode."
        ]
    },
    {
        "requirement": "The airspeed setting limit is set to (25 m/s, 65 m/s).",
        "safety_requirements": [
            "The system should clearly define the airspeed range (25 m/s, 65 m/s) collected by the sensor and trigger a sensor fault alarm when exceeding this range.",
            "The system should set a timeout determination mechanism for critical control commands and execute a preset safety strategy when the hardware status does not meet the control requirements.",
            "The system should check the airspeed control solution results (normal values, abnormal values, boundary values, maximum and minimum values) to ensure that the processing logic is consistent with the flight status.",
            "The control sequence and timing of the system should be strictly coordinated with hardware operations, and control conditions must maintain completeness and consistency.",
            "When the airspeed output data exceeds the limit, the system shall execute according to the safety value or truncation strategy and record the over-limit event."
        ]
    },
    {
        "requirement": "When sending the \"Cancel Altitude Hold\" command, exit from the \"Altitude Hold\" or \"Altitude Setting\" command control, and the target waypoint altitude is taken as the reference height.",
        "safety_requirements": [
            "When the system sends a \"Cancel Altitude Hold\" command, it should perform a timeout check on critical control operations. If the hardware status does not meet the requirements within the specified time, the safety handling mechanism shall be triggered.",
            "When the system transitions to the \"Cancel Altitude Hold\" mode, it should check the values of the functional interface data to ensure that the specified altitude is correctly set to the target waypoint altitude and verify the reasonableness of the output.",
            "The system should truncate the given height value to the safety value or preset threshold and generate an alarm message when the specified height exceeds the preset safety range.",
            "Before issuing the \"Cancel Altitude Hold\" command, the system should make a reasonableness judgment based on the equipment's real-time status. If the equipment status is abnormal, execution of the command shall be prohibited.",
            "The system should check the timing of interface data values, analyze the output correctness under conditions of 'premature stop' or 'delayed stop' inputs, and ensure that the height setting is consistent with the current state."
        ]
    },
    {
        "requirement": "When the \"Cancel Cruise\" command is issued, exit from \"Cruise\" or \"Speed Setting\" command control, and the set speed value becomes the same as autonomous control.",
        "safety_requirements": [
            "When the system exits the 'constant speed' or 'speed setting' command control, it should perform a timeout check on the hardware status to prevent control anomalies caused by hardware response delays.",
            "The system should ensure that the control sequence and timing of the 'Cancel Cruise' command are coordinated with the hardware, with complete control conditions and consistent logic.",
            "The system should verify the consistency of entry and exit conditions for the 'Constant Speed' and 'Speed Setting' modes to ensure that the mode switching logic is conflict-free.",
            "When the system exits the control mode, it shall check whether the functional inputs take into account the current operating phase and status, ensuring the correctness of the specified speed value and autonomous control processing.",
            "The system should verify the timing of control state transitions triggered by the \"Cancel Cruise\" command, strictly meeting the time constraint requirements of actual scenarios."
        ]
    },
    {
        "requirement": "When sending the \"Resume Route\" command, exit from lateral command control and transition from the current position to the original route towards the point.",
        "safety_requirements": [
            "After power recovery or runaway reset, the system should verify whether it can correctly resume to the operational state executing the \"resume route\" command, and check the status integrity of lateral control exit and route entry process after restart.",
            "When the transmitting end recovers from an abnormality and resumes data transmission, the receiving end should properly receive the 'Resume Route' command again and verify the integrity and execution continuity of the command.",
            "When the redundancy switching condition is triggered, the system must ensure that the output value of the current route recovery function does not experience abrupt changes or anomalies during the switching process, maintaining the stability of the control surface command.",
            "After software restart, the recovery status of the route cutting into  logic should be checked, and the execution path should be automatically corrected in case of 'status not recovered' or 'incorrect recovery'.",
            "It is necessary to verify the timing relationships, constraint conditions, and concurrency logic of functions such as lateral control exit and routecutting into to point during the recovery route process, to eliminate control conflicts."
        ]
    },
    {
        "requirement": "The commands \"Cancel Altitude Hold,\" \"Cancel Speed Hold,\" and \"Resume Route\" are only valid when in Command Control mode and after the corresponding command to enter Command Control has been sent.",
        "safety_requirements": [
            "After a power failure and subsequent restart of the system software, a recovery check should be performed on the state of the command control mode to ensure that the commands \"Cancel Altitude Hold,\" \"Cancel Speed Hold,\" and \"Resume Route\" are valid only when the state is correctly recovered and the original control mode conditions are met.",
            "Before the system executes the commands 'Cancel Altitude Hold', 'Cancel Speed Hold', and 'Resume Route', it shall perform mandatory verification of the current operational phase and status to exclude situations where the command control mode has not been entered or the entry command has not been sent.",
            "The system shall check the status of interface data communication during software restart to ensure that commands such as 'Cancel Altitude Hold', 'Cancel Speed Hold', and 'Resume Route' are not executed in case of communication interruption or abnormal recovery.",
            "The system should verify whether the command control calculation results are normal values, abnormal values, boundary values, or extreme maximum/minimum values, and reject execution of relevant commands in case of abnormalities.",
            "The system adds a timeout judgment mechanism to the execution process of the commands \"Cancel Altitude Hold,\" \"Cancel Speed Hold,\" and \"Resume Route.\" If the hardware status does not meet the requirements for an extended period, the command will be terminated and an alarm will be triggered."
        ]
    },
    {
        "requirement": "When a phase transition occurs or a control mode switch related to the remote control mode takes place, record the previous value of the throttle deflection command before the transition as the softening start point.",
        "safety_requirements": [
            "When the system switches control modes or transitions between phases, it should verify the control calculation results to ensure the recorded old values of the throttle deflection command under conditions such as 'normal values, abnormal values, boundary values, maximum and minimum values' are accurate.",
            "The system shall check the value or range variation of functional interface data during phase transitions or control mode switches to ensure that the recorded old value is consistent with the actual state before switching.",
            "When the system performs control calculations in different operational phases or states, it is necessary to check whether the inputs accurately account for the current phase and state, preventing processing errors caused by 'not considering the operational phase' or 'not considering the operational state'.",
            "After a software power failure and restart, the system should verify the recovered throttle position command old value to identify and handle situations of 'status not restored' or 'restoration error'.",
            "The system shall ensure that the control sequence and timing for recording the previous value of the throttle deviation command are coordinated with the hardware, with complete conditions and consistent logic."
        ]
    },
    {
        "requirement": "After the effective processing of the commands \"Cancel Altitude Hold,\" \"Cancel Speed Hold,\" and \"Resume Route,\" the control mode will revert to autonomous control only when the command control state has been exited in all three aspects: longitudinal, lateral, and speed. Otherwise, the command control mode remains active.",
        "safety_requirements": [
            "After a software power failure and restart, the system shall check the control mode status to ensure that the original command control mode is maintained when not recovered or incorrectly recovered, until longitudinal, lateral, and speed subsystems all confirm exit from the command control state.",
            "When handling control mode switching, the system should verify the current operational phase and status to ensure that the solving process strictly distinguishes input conditions for different phases, preventing erroneous switching caused by overlooking the operational phase or status.",
            "The system should perform real-time checks on the control calculation results to ensure they are within the normal value range, and trigger safety handling mechanisms for abnormal values, boundary values, maximum and minimum values, etc., to maintain the current control mode.",
            "When performing critical actions in command control mode, the system should implement a timeout judgment mechanism. If the hardware status does not meet control requirements for an extended period, it should automatically switch to a preset safety state and trigger an alarm.",
            "The system should ensure that the timing and conditions for switching control modes are coordinated with the hardware. The exit determination logic for longitudinal, lateral, and speed aspects must be strictly synchronized and have complete conditions to prevent unilateral misjudgment from causing mode recovery errors."
        ]
    },
    {
        "requirement": "Remote control mode is divided into two types: in-band loop remote control and out-of-band loop remote control.",
        "safety_requirements": [
            "When the system switches between in-band loop remote control and non-in-band loop remote control modes, it should perform operational phase and status checks on the functional inputs to ensure the correctness of the control resolution process.",
            "The system shall ensure that the sequence and timing of control solutions are coordinated with the hardware, and that control conditions are complete and consistent.",
            "The system should verify the interpretation results of remote control modes, covering the correctness of handling normal values, abnormal values, boundary values, and extreme maximum and minimum values.",
            "The system should verify the control logic timing, constraints, concurrency, and combination relationships of each functional point to ensure they meet the design requirements.",
            "The system should monitor the duration of the control solution process and trigger the preset exception handling mechanism in case of a timeout."
        ]
    },
    {
        "requirement": "Directly control the control surfaces (elevator, aileron, and rudder) via remote control without internal feedback loops, converting the remote control inputs to appropriate proportional outputs.",
        "safety_requirements": [
            "The system should check the inputs to the control solution process in different operational phases and states to ensure that no operational phase or state parameter is missing and that proportional conversion is correctly executed.",
            "The system should ensure that the control sequence, timing, and hardware actions are coordinated, verifying that control conditions are complete and logically consistent.",
            "The system should perform real-time checks on the control calculation results, clearly handle scenarios involving normal values, abnormal values, boundary values, and maximum/minimum values, and define an exception response mechanism.",
            "The system should monitor the operational status of different redundancies, and when multiple redundancy states are inconsistent, use cross-checking or majority agreement principles to ensure functional correctness."
        ]
    },
    {
        "requirement": "The in-band loop remote control converts the remote control manipulation into corresponding target attitude angles, and calculates the corresponding rudder deflection control commands through autonomous control laws (Equations (2-1), (2-2), and (2-3)) to control the control surfaces.",
        "safety_requirements": [
            "The system should check whether the input contains current operational phase and status information before performing control calculations to ensure that the calculation logic matches the operating conditions.",
            "The system should verify the results of rudder deflection control commands generated by autonomous control algorithms, identify normal values, abnormal values, and boundary values, and trigger error correction mechanisms in case of anomalies.",
            "The system must ensure that the timing and sequence of control calculations are strictly coordinated with hardware actions, verifying the completeness and consistency of control conditions.",
            "The system should be equipped with a solution timeout detection mechanism. If no result is returned within the specified time, the safety protection process shall be initiated and the fault reported.",
            "The system should verify the timing relationships, constraints, and correctness of concurrent combination logic for each functional point to avoid conflicts or failures."
        ]
    },
    {
        "requirement": "In both remote control modes, the remote control of the throttle valve is the same.",
        "safety_requirements": [
            "The system shall ensure that the sequence, timing, and coordination of controlling the throttle valve under both remote control modes are consistent with the hardware, and that the control conditions are complete and coherent.",
            "The system needs to verify the consistency of entry and exit conditions for each mode in the two remote control modes.",
            "After implementing throttle control, the system should monitor the hardware status in real time, determine its compliance with control requirements, and trigger a correction mechanism when non-compliance is detected.",
            "The system needs to perform input checks on the throttle control resolution process under different operating phases and conditions to ensure correct handling when 'operating phase not considered' or 'operating condition not considered' occurs.",
            "The system should implement a timeout detection mechanism for critical control actions related to the throttle valve. If the hardware status does not meet requirements within the specified time, a predefined safety operation shall be executed immediately."
        ]
    },
    {
        "requirement": "Remote control has the highest control authority and can switch to remote control mode at any time under any circumstances.",
        "safety_requirements": [
            "When the system switches to remote control mode, it should perform a timeout check on the hardware status. If the control requirements are not met for an extended period, the safety mechanism shall be triggered and the system shall remain in a controllable state.",
            "Before switching control modes, the system needs to verify the current operating phase and status to ensure the correctness and safety of the switching logic when the operating phase or status is not considered.",
            "The timing and conditions for remote control mode switching commands should be strictly coordinated with the hardware execution logic, and the control conditions must be complete and consistent to avoid conflicts or timing errors.",
            "The system should perform real-time validation on the results of remote control calculations, handle situations involving \"outliers, boundary values, maximum and minimum values\", and ensure output commands remain within safe limits.",
            "When the remote control mode is active, if the system powers down and restarts, it is necessary to restore and verify the permission status, and perform redundant processing or issue an alarm for \"status not restored\" or \"error recovery\"."
        ]
    },
    {
        "requirement": "The rudder deflection command calculation formula for in-band loop remote control when the aircraft is on the ground is: δy = KyY · Y + [Kyg (K · (-yg) + Ky · wy)] + Kywy · wy.",
        "safety_requirements": [
            "Before calculating the rudder deflection angle δy, the system should perform validity checks on the current operating phase (ground status) and input parameters to prevent situations where the operating phase or status is not considered.",
            "The system should perform multi-dimensional verification on the control solution results, including normal values, abnormal values, boundary values, and extreme maximum/minimum value scenarios, to ensure outputs are logical and trigger exception handling mechanisms.",
            "The system shall ensure that the sequence and timing of control solutions are strictly coordinated with hardware actions, and that the logic for determining control conditions is comprehensive and consistent.",
            "The system should detect the bit precision of interface data, and when the input precision exceeds the preset threshold, it should forcibly perform data truncation or rounding operations and record an alarm.",
            "The system should detect the data bit precision of the interface data, and when the input precision is lower than the preset threshold, it should reject processing and trigger a data retransmission or fault-tolerant compensation mechanism."
        ]
    },
    {
        "requirement": "Given the linear relationship between the attitude angles and the throttle deflection δp with the remote control inputs.",
        "safety_requirements": [
            "The system should verify the sequence and timing coordination with hardware during the control process, and ensure the completeness and consistency of control conditions.",
            "The system shall ensure that the timing relationships, constraint relationships, concurrent relationships, and combination relationships of control logic for each functional point comply with the design specifications.",
            "The system should set reasonable ranges (upper and lower slope limits) for the rate of change of the throttle deviation parameter δp, and clearly define handling strategies for data exceeding these slope limits.",
            "After the system executes hardware control, it should monitor the hardware status in real time, determine its compliance with control requirements, and trigger a correction mechanism when non-compliance is detected.",
            "The system shall check the operational status of different redundancies to ensure the correctness of functional implementation when 'two or more redundancies are in different states'."
        ]
    },
    {
        "requirement": "The system should be capable of flying along pre-bound routes.",
        "safety_requirements": [
            "The system shall ensure that control sequences, timing, and hardware coordination are properly aligned, and that control conditions are complete and consistent to maintain the accuracy of route tracking.",
            "The system shall automatically trigger a correction mechanism and verify the correctness of functional processing when the task execution sequence is inconsistent with the specified sequence.",
            "The software requirements and design documentation should fully cover the system safety requirements and ensure their accurate implementation through independent verification.",
            "When multiple concurrently executed functions operate on the same actuator, the system shall implement mutual exclusion locking or priority arbitration mechanisms.",
            "Before issuing control commands, the system must perform a reasonableness check based on real-time equipment status, intercept dangerous commands, and trigger alarms."
        ]
    },
    {
        "requirement": "The system shall control the aircraft to maintain a constant altitude during the final approach segment, and when the navigation mode is set to final approach navigation, the flight phase shall be reported as the final approach phase, with the control method consistent with the constant altitude segment.",
        "safety_requirements": [
            "The system should verify that the functional inputs are clearly differentiated by operational phase and status during the final approach segment, ensuring that the altitude hold control and final approach navigation modes have independent and correct solution logic.",
            "The system should perform multi-dimensional verification on the control solution results during the final approach phase, including the correctness of handling under normal values, abnormal values, boundary values, and extreme maximum/minimum value scenarios.",
            "The system must ensure that flight control timing, sequence, and hardware actions are strictly coordinated, and that control conditions are fully and consistently defined.",
            "The system should dynamically evaluate functional priorities during state transitions to ensure correct state and control handover between high and low priority modes.",
            "The system shall continuously monitor the conditions for entering the final approach phase of flight, and execute predefined state machine logic when the conditions are met, not met, or met again, to ensure accurate determination of the flight phase."
        ]
    },
    {
        "requirement": "The FCC collects necessary aircraft motion information, compares it with the required motion, obtains the deviation between the actual and ideal aircraft motion, then generates control signals by resolving the control laws based on this deviation, and inputs these control signals to the relevant actuators, causing the control surfaces to deflect in a specific manner, thereby achieving control of the aircraft's attitude and motion.",
        "safety_requirements": [
            "The FCC shall check the input aircraft motion information and the current operating phase and status to ensure that the control computation process correctly adapts to the logical differences in various statuses and operating phases.",
            "The system should perform outlier, boundary value, maximum and minimum value checks on the control solution results, and verify the accuracy of the processing logic.",
            "The FCC should be equipped with a timeout determination mechanism to control the resolution process, triggering preset safety response measures if results are not returned on time.",
            "The system should verify the sequence, timing, and hardware coordination of control signal outputs to ensure complete and consistent control conditions.",
            "For critical control signal outputs, the system should be equipped with a timeout detection function to execute safety handling procedures when the hardware status does not meet requirements for an extended period."
        ]
    },
    {
        "requirement": "In the first glide segment, the system should control the aircraft to descend along a pre-set glide path at a specified airspeed, from the final approach altitude to the end of the first glide segment at 100m. Longitudinal control ensures the aircraft tracks the glide path altitude, while lateral control eliminates any cross-track deviation relative to the airport runway centerline, and in the presence of crosswind, the aircraft maintains zero sideslip angle.",
        "safety_requirements": [
            "The system should verify whether the functional inputs explicitly consider the current operating phase (Glide Slope Segment 1) and operational status, ensuring the correct application of longitudinal and lateral control solution logic.",
            "The system should implement real-time monitoring of control calculation results, including normal values, abnormal values, boundary values, and maximum/minimum values, and activate the preset fault-tolerant mechanism in case of anomalies.",
            "The system must strictly verify the timing of control commands and their coordination with hardware devices to ensure complete control conditions and consistent logical condition evaluation.",
            "The system should support cross-validation of redundant interface data and maintain basic control functions even in the case of a single redundancy failure or all redundancies failure (data anomalies/timing faults/communication faults, etc.).",
            "The system should monitor sensor data in real time to determine whether it exceeds the preset acquisition range (with clear upper and lower limits). If the limit is exceeded, a sensor failure alarm should be triggered immediately and the backup signal source should be activated."
        ]
    },
    {
        "requirement": "The system should control the aircraft in the second glide segment to descend from the end altitude of the first glide segment (100m) to the flare altitude (17m), enabling the aircraft to glide in a straight sideslip manner.",
        "safety_requirements": [
            "The system should ensure that during the control process of the glide slope segment 2, the control sequence and timing are coordinated with the hardware, and the control conditions are complete and consistent.",
            "The system should perform real-time checks on the glide slope segment 2 control calculation results to ensure correct logic handling of normal values, abnormal values, boundary values, maximum and minimum values.",
            "After power recovery or runaway reset, the system should ensure a return to normal control status through a self-check mechanism and maintain the straight sideslip glide mode.",
            "In the glide slope segment control, the system should perform phase and state correlation checks on input data, and prohibit data that does not consider the operating phase or operating state from being used in calculations.",
            "The system should clearly define the upper and lower limits of the acquisition range for the sensors used in segment 2 glide path. When out-of-limit data is detected, it should immediately report a sensor failure and activate the redundancy switching mechanism."
        ]
    },
    {
        "requirement": "During the flare phase, the system should level off the aircraft's flight path angle so that the aircraft lands with a small descent speed. The lateral control mode is the same as during the latter part of the glide.",
        "safety_requirements": [
            "The system should ensure that the control sequence, timing, and coordination with hardware during the flare phase are complete and consistent, and that the lateral control mode is synchronized with the latter part of the descent.",
            "When the system switches between different operating phases and states, it should check functional inputs to ensure that the calculation process for trajectory angle leveling correctly handles cases where \"operating phase\" or \"state\" is not considered.",
            "The system should check the control solution results during the flare phase, verify the handling logic for 'normal values, abnormal values, boundary values, maximum and minimum values', and ensure the aircraft lands at a safe descent speed.",
            "When the system is in different operating states at multiple redundancies, the correctness of the redundant mechanism's functional implementation should be checked to ensure fault tolerance and reliability in adjusting the trajectory inclination angle during the pull-flat phase."
        ]
    },
    {
        "requirement": "The system should transition from the roll-out phase at a height of 1.5 meters to meet the conditions for switching to the landing rollout segment.",
        "safety_requirements": [
            "The system should verify the control sequence, timing, and hardware coordination during the roll-to-level phase to ensure complete control conditions and logical consistency.",
            "The system should set upper and lower limits on the rate of change for roll-to-level parameters, clearly defining real-time filtering or correction strategies for data exceeding these slope limits.",
            "The system should check condition integrity during state transitions, and block transitions with conditions that are 'unset, always satisfied, or unfulfillable' to ensure correct state switching.",
            "The system must verify the consistency between functions and states during priority switching scenarios (switching between high and low priorities) to ensure that the switch does not cause logic conflicts.",
            "The system should implement a timeout determination mechanism for critical control actions, triggering a safety response strategy when hardware status fails to meet requirements within the specified time."
        ]
    },
    {
        "requirement": "The system should enter the landing rollout phase after receiving a remote control ground signal, a fully compressed landing gear signal, or 75 frames of abnormal link status during the landing rollout phase, using the rudder and brakes to correct the aircraft's lateral deviation distance and yaw angle relative to the runway axis.",
        "safety_requirements": [
            "After power recovery or runaway reset, the system should be able to return to normal operating condition and ensure that rudder and brake control functions are executed properly.",
            "The system should perform real-time checks on the control solution results to ensure correct and landing roll phase compliant handling logic under conditions such as \"normal values, abnormal values, boundary values, maximum and minimum values\".",
            "The system should verify the current operating status and taxi phase during the functional input stage to prevent control solution errors caused by \"overlooking the operating phase or status.\"",
            "After a software power failure and restart, a recovery check should be performed on the status during the landing rollout phase to ensure correct status and no erroneous recovery after restart.",
            "The system should ensure that the control sequence, timing, and coordination of rudder and brake controls are consistent with the hardware, with complete control conditions and coherent logical sequence."
        ]
    },
    {
        "requirement": "The system should control the aircraft to enter the descent phase after an in-flight engine shutdown.",
        "safety_requirements": [
            "During the system's descent phase control process, it should ensure that the control sequence, timing, and hardware coordination are properly managed, with completeness and consistency of control conditions maintained before and after.",
            "After power recovery or runaway reset, the system should be able to return to normal operating conditions and correctly execute thedescent phase control function.",
            "Critical control commands during the drifting phase must be equipped with a timeout detection mechanism, and an exception handling procedure shall be executed when the hardware status does not meet the control requirements.",
            "The system should check the input data during the descent phase, analyze the processing logic when the operating phase or status is not considered, and ensure the correctness of the control solution process.",
            "The system should perform numerical range checks on the control solution results of the drifting section, including verification of handling mechanisms for normal values, boundary values, and abnormal values."
        ]
    },
    {
        "requirement": "The remote control input corresponds to the rudder surface deflection command and throttle deflection command. The linear relationship between the rudder deflection and throttle command with respect to the remote control input is as follows: δz (-28º~+28º), δx (-20º~+20º), δy (-25º~+25º), δp (0~115%). The limit range is [-30°, +20°].",
        "safety_requirements": [
            "The system should perform real-time checks on the calculation results of the rudder deflection angles δz, δx, δy, δp, and throttle commands to ensure the processing logic is correct and meets the limit requirements [-30°, +20°] under different value ranges (normal values, abnormal values, boundary values, maximum and minimum values).",
            "The system should ensure that the sequence and timing of control solutions are strictly coordinated with hardware actions, and the conditions of the control logic must be complete and consistent.",
            "The sensor acquisition range should be clearly set as follows: δz (-28º~+28º), δx (-20º~+20º), δy (-25º~+25º), δp (0~115%). A sensor fault will be reported immediately upon exceeding these limits.",
            "The rate of parameter change should be limited within the preset slope range, and data exceeding the slope limit should be processed according to established strategies (e.g., filter hold, reset to default value, etc.) and anomalies recorded.",
            "When the system switches between different operating states or phases, it should verify whether the input parameters match the current phase and ensure that the solution process complies with the corresponding state logic."
        ]
    },
    {
        "requirement": "Elevator control (0–255), aileron control (0–255), rudder control (0–255), throttle control (0–255).",
        "safety_requirements": [
            "The system should monitor the rate of change of elevator, aileron, rudder, and throttle control inputs to ensure that the slope remains within the preset upper and lower limits, and execute clear handling strategies when limits are exceeded.",
            "The system shall perform real-time classification checks on the control calculation results (normal values, abnormal values, boundary values, extreme values) and trigger corresponding handling mechanisms.",
            "The system should activate fault-tolerant mechanisms (such as majority voting or switching to a safe mode) to ensure functional correctness when different redundancies are in an inconsistent state.",
            "The system shall verify the integrity of input data based on the current operating status and phase, and reject processing and issue an alarm if necessary information is missing.",
            "The system should dynamically adjust the control solution logic when switching between different operating phases or states, avoiding the use of algorithms not matched to the current phase."
        ]
    },
    {
        "requirement": "By means of remote control switch commands, the aileron and elevator deflections are attenuated to two-thirds of the above values respectively, thereby changing the corresponding relationships to: δz (-20º~+20º), δx (-13º~+13º), δy (-25º~+25º), δp (0~115%).",
        "safety_requirements": [
            "The system should monitor the rate of change of rudder deflection angles δz, δx, δy, and δp, ensuring they remain within the preset slope upper and lower limits, and execute predefined handling strategies when exceeded.",
            "The system should perform real-time checks on the control calculation results, distinguishing between normal values, abnormal values, boundary values, and maximum/minimum values, and implement corresponding safety measures.",
            "The system should clearly define the measurement ranges for each rudder deflection sensor (δz: -20º~+20º, δx: -13º~+13º, δy: -25º~+25º, δp: 0~115%). A sensor fault shall be reported immediately when the value exceeds the range.",
            "When the system performs control calculations in different operating states or phases, it is necessary to verify whether the inputs match the current state to prevent erroneous outputs caused by unconsidered operating phases or states.",
            "The system shall perform real-time consistency checks on the redundant output rudder deflection data. If the difference exceeds the set threshold, the error correction mechanism shall be triggered or switch to the backup channel.",
            "The system shall ensure that after the execution of remote control switch commands, the rudder deflection attenuation results are strictly limited within the ranges of δz (－20º~+20º), δx (－13º~+13º), δy (－25º~+25º), and δp (0～115%)."
        ]
    },
    {
        "requirement": "Control range and accuracy requirements for elevator control (0–255), aileron control (0–255), rudder control (0–255), and throttle control (0–255)",
        "safety_requirements": [
            "The system should verify the correctness of calculations when control resolution results are normal values, abnormal values, boundary values, and extreme maximum or minimum values, ensuring that elevator, aileron, rudder, and throttle control outputs meet accuracy requirements within the range of 0 to 255.",
            "The system should perform a dual check on the value accuracy of interface data bits, ensuring that the output result meets the preset tolerance range when the accuracy is greater than or less than the required value.",
            "The system must verify whether the functional inputs include current phase and state parameters, and prevent control calculations and report errors if phases or states are not considered.",
            "The system should ensure that the control sequence, timing, and hardware actions are coordinated, check the completeness and consistency of control conditions, and avoid abnormal outputs caused by timing mismatches."
        ]
    },
    {
        "requirement": "When the aircraft is in the ground waiting phase, the elevator deflection command, aileron deflection command, and rudder deflection command are all set to 0°.",
        "safety_requirements": [
            "The system should determine the validity of operations during the aircraft's ground waiting phase and not respond to non-zero elevator, aileron, and rudder deflection commands that are not applicable to the current scenario.",
            "Before the system issues rudder surface deflection commands, it should perform multi-dimensional verification of the equipment status to ensure that the logic for forcibly setting commands to zero during the ground waiting phase is executed with priority.",
            "When two or more redundancies are in different operating states, the system shall ensure the integrity and correctness of the rudder deflection angle zeroing function through a cross-checking mechanism.",
            "The system shall perform real-time monitoring of the entry conditions for the ground waiting state, and maintain the absolute priority of the zero rudder angle command even when multiple state conditions are simultaneously satisfied.",
            "The system should perform dual verification of the rudder angle zeroing command during state transitions, ensuring the preset safety reference value is maintained during state conflicts."
        ]
    },
    {
        "requirement": "Implementation of five flight control modes: autonomous control, manual correction control, command control, attitude remote control, and control surface remote control.",
        "safety_requirements": [
            "The system shall ensure the correct logical timing, constraints, concurrency, and combination relationships among the five flight control modes including autonomous control, and execute predefined safety handling strategies in case of logical conflicts.",
            "The system should perform validity checks on functional inputs when switching between different operational phases and states, to avoid control solution errors caused by overlooking the operational phase or state.",
            "The system should perform outlier, boundary value, maximum and minimum value checks on the control calculation results, and execute correction, alarm or rejection operations based on the check results.",
            "The system control sequence and timing should be strictly coordinated with hardware actions, and control conditions must maintain completeness and consistency before and after state transitions.",
            "The system should terminate the current operation and trigger a timeout handling mechanism when a control solution timeout occurs, while also outputting a clear timeout alarm prompt."
        ]
    },
    {
        "requirement": "Special handling during control mode switching",
        "safety_requirements": [
            "When the system switches control modes, it should perform real-time checks on the control calculation results to ensure correct handling under conditions such as \"normal values, abnormal values, boundary values, maximum and minimum values\".",
            "When the system switches operating scenarios, a risk assessment of each control function is required to identify potential hazards and implement protective measures.",
            "The system should check functional inputs under different states and operational phases to ensure correct handling when in an 'unconsidered operational phase' or 'unconsidered operational state'.",
            "The system should implement a timeout detection mechanism for critical controls or actions, triggering a safety handling process when the hardware status fails to meet control requirements for an extended period.",
            "The system should limit the maximum time threshold for redundancy switching and initiate an exception handling mechanism upon timeout to ensure functional continuity."
        ]
    },
    {
        "requirement": "In the autonomous control mode, issuing any of the commands described in section 3.2.4 during the phase from (including) the climb phase 2 to (excluding) the completion of the route intercepting the final approach course will switch the system to command control mode.",
        "safety_requirements": [
            "When the system transitions from autonomous control mode to command control mode, it should perform dual verification of the current operational phase and status, ensuring that the command is valid only during the climb phase 2 to before intercepting the final approach leg, and complies with control logic constraints.",
            "The system must perform real-time validation of control solution results (normal values/anomalous values/boundary values/maximum and minimum values), and lock mode switching while triggering the fault-tolerant mechanism in case of anomalies or limit exceedances.",
            "The system should verify the correctness of timing, concurrency, and combinational logic during mode transitions to prevent unintended state switching caused by control logic conflicts.",
            "After a system power failure and restart, the flight phase status and control mode must be accurately restored. If the status recovery is abnormal, the system must be forced into safe protection mode.",
            "If the control solution process times out without returning a result, the system should immediately terminate the mode switching operation and execute the default safety command."
        ]
    },
    {
        "requirement": "In command control mode, sending the \"Autonomous Control\" command can switch back to autonomous control mode.",
        "safety_requirements": [
            "After a power failure and subsequent restart of the system software, the status recovery of the autonomous control mode should be checked to ensure that the correct handling procedures are executed when in 'unrecovered' or 'incorrectly recovered' state.",
            "When switching control modes, the system should verify the current operational phase and status to avoid processing errors caused by \"unconsidered operational phase\" or \"unconsidered operational status\".",
            "The system shall monitor the interruption, reconnection, and recovery process of interface data communication during power failure and restart, ensuring the correctness of functional output under communication abnormality conditions.",
            "The system should perform real-time verification of the control calculation results during the autonomous control mode switching process, covering scenarios such as \"normal values, abnormal values, boundary values, maximum and minimum values\", and execute corresponding safety mechanisms.",
            "The system should ensure that the control sequence and timing of mode switching are strictly coordinated with hardware actions, and that control conditions maintain logical completeness and consistency before and after the switch."
        ]
    },
    {
        "requirement": "Switching between autonomous control and command control does not change the control law and does not require softening treatment.",
        "safety_requirements": [
            "The system should perform consistency checks on control sequence, timing, and hardware coordination during the transition between autonomous control and command control, ensuring that control conditions are complete and logically consistent.",
            "The system should add a timeout determination mechanism for critical control actions, triggering a preset handling process when the hardware status does not meet control requirements.",
            "When the system switches between different operating states or phases, it should perform validity checks on functional inputs for the respective phase/state and verify the correctness of the control solution logic.",
            "After the system executes hardware control commands, it should monitor the match between hardware status and control requirements in real time and perform compensation measures when a mismatch occurs.",
            "The system shall implement numerical range verification on the control solution results, including verification of the correctness of handling logic for normal values, abnormal values, boundary values, and extreme maximum and minimum values."
        ]
    },
    {
        "requirement": "In autonomous control mode, issuing the \"Manual Correction\" command switches to manual correction mode.",
        "safety_requirements": [
            "After a power failure and subsequent restart of the system software, the status recovery of the autonomous control mode should be checked to ensure that the safety mode is automatically triggered and an alarm is issued if the status is not recovered or incorrectly recovered after the restart.",
            "During the manual correction mode switching process, the system should perform real-time checks on the control solution results, identify normal values, abnormal values, boundary values, etc., and terminate the switching and initiate the error handling procedure upon detecting anomalies.",
            "When the system performs mode switching during different operational phases or states, it must verify the compatibility between the current phase/state and the manually corrected mode. If the conditions are not met, the operation should be rejected and a log generated.",
            "The system should monitor the communication status of the interface during the reboot process. When data interruption or unrecoverable conditions are detected, it should maintain the current flight control state and activate the backup communication channel.",
            "After the system issues a manual correction mode switching command, if the hardware response times out (≥300 ms), the switching process should be immediately terminated and the emergency protection mechanism triggered."
        ]
    },
    {
        "requirement": "When switching from manual correction to autonomous control, remove the manual correction amount from the control law; no smoothing treatment is required.",
        "safety_requirements": [
            "When the system manually corrects and switches to autonomous control, it should ensure that the timing and conditions of the control law switching are coordinated with the hardware, and verify their completeness and consistency.",
            "The system should perform real-time checks on the control solution results after switching, ensuring that manual correction values are correctly removed under conditions of 'normal values, abnormal values, boundary values, and extreme maximum/minimum values'.",
            "A timeout determination mechanism should be set during the switching process. When the time required for the hardware status to reach the control requirements exceeds the threshold, the safety handling procedure should be triggered.",
            "The system should perform work phase and status checks on the input during mode switching to ensure that no conditional constraints of the 'current work phase or status' are overlooked.",
            "After a power failure and restart, the software needs to verify the correctness of the control mode state recovery, identify and handle abnormal situations such as \"state not recovered\" and \"incorrect recovery.\""
        ]
    },
    {
        "requirement": "When switching from autonomous control to attitude remote control, the control law structure changes. It is necessary to soften the given attitude angles with a softening time of 2 seconds, and also to soften the throttle command with a softening time of 2 seconds.",
        "safety_requirements": [
            "When the system switches from autonomous control to attitude remote control, it should ensure that the sequence and timing of changes in the control law structure are coordinated with the hardware, with complete control conditions and consistent logic.",
            "After the software power failure and restart, the control law structure, attitude angles, and softening status of throttle commands should be checked to verify the correctness of state recovery and handle error recovery scenarios.",
            "During the attitude angle and throttle command softening process, a timeout detection mechanism should be set. If the hardware status does not meet the control requirements within 2 seconds, the safety handling procedure shall be triggered.",
            "The system should validate the input data for control solution based on the current operational phase and status, ensuring that the smoothing processing of attitude angles and throttle commands complies with the logic requirements of the corresponding phase.",
            "The softened attitude angles and throttle command output values shall be subjected to range checks, including handling of normal values, abnormal values, and boundary values, to ensure compliance with flight safety constraints.",
            "The system should monitor the real-time validity of the softening time parameter (2 seconds) to prevent control delays or failures caused by parameter tampering or incorrect configuration."
        ]
    },
    {
        "requirement": "When switching from attitude remote control to autonomous control, the control law structure changes, and the given attitude angle needs to be softened with a softening time of 2 seconds. If the aircraft is in cruise (climb phase 2, altitude hold, or descent), the target waypoint's latitude and longitude will be changed to the current position's latitude and longitude to guide the aircraft toward the original destination point. Throttle command softening is also required, with a softening time of 2 seconds.",
        "safety_requirements": [
            "After a software power failure and restart, the system shall check the recovery status of the control state to ensure that the attitude angle softening and throttle command softening procedures are executed correctly in case of incomplete or incorrect state recovery.",
            "When the system switches between different control states or operational phases, the functional inputs should be verified to ensure that the processing logic meets the requirements of the current cruise, climb 2, level flight, or descent phase.",
            "The sequence and timing during control law structure changes shall be strictly coordinated with hardware actions, and the configuration of the softening time parameter (2 seconds) shall remain consistent throughout all phases.",
            "During the process of attitude remote control switching, position latitude and longitude updating, and throttle softening, a timeout detection mechanism should be set. When the hardware response exceeds 2 seconds, the safety mode should be triggered.",
            "The system shall perform integrity checks on the state transition conditions for attitude control mode switching, ensuring that illegal state transitions are prohibited when the 'not set/always satisfied/never satisfied' transition conditions are not met."
        ]
    },
    {
        "requirement": "When switching from autonomous control to rudder surface remote control, it changes to direct rudder surface control, softens the rudder deflection command with a softening time of 2 seconds, and also requires softening of the throttle command with a softening time of 2 seconds.",
        "safety_requirements": [
            "After a power failure and subsequent restart of the system software, it should check the status recovery from autonomous control to rudder surface remote control, ensuring that soft processing of rudder deflection commands and throttle commands can still be correctly executed when the status is not recovered or incorrectly recovered.",
            "The system should ensure that the sequence and timing of control switching are coordinated with the hardware, with complete control conditions and consistent logic.",
            "When the system switches to remote control of the control surfaces, it should verify the functional inputs based on the current operational phase and status to prevent errors in control calculations caused by neglecting the operational phase or status.",
            "The system should perform real-time checks on the smoothing results of rudder deflection commands and throttle commands, and handle control solution outputs under normal values, abnormal values, boundary values, and maximum/minimum values.",
            "The system should set a timeout judgment mechanism during the remote control switching of the rudder surface and the command softening process. When the hardware status does not meet the control requirements within 2 seconds, the safety handling procedure should be triggered."
        ]
    },
    {
        "requirement": "The system should be capable of real-time acquisition and processing of the aircraft's motion information, including but not limited to data such as position, velocity, and attitude.",
        "safety_requirements": [
            "The system shall automatically trigger the data processing module to perform anomaly detection and execute predefined fault-tolerant strategies when detecting abnormal external factors such as high sea conditions or adverse weather.",
            "The system should monitor the sensor's acquisition range in real time (clear upper and lower limits), and immediately report a sensor failure and activate the redundancy mechanism when data exceeds the set range.",
            "The system shall set a timeout threshold for the execution of critical control commands. If the hardware target state is not reached within the timeout period, the current operation shall be terminated and the fault handling process shall be triggered.",
            "The system continuously monitors the status (e.g., degraded, maintenance) of external devices (such as sensors, NVM) to ensure the validity of their output data and synchronization with the current flight status.",
            "The system needs to verify the consistency of timing, conditions, and hardware operation logic for control commands, ensuring no conflicts or state inconsistencies occur during multi-module cooperative execution."
        ]
    },
    {
        "requirement": "When switching from rudder surface remote control to autonomous control, specific operations are required, but the document does not provide detailed descriptions. It is recommended to further clarify the specific control law changes and softening processing.",
        "safety_requirements": [
            "When the system switches control modes of the control surfaces, it should ensure that the control sequence, timing, and hardware coordination are properly aligned, and that control conditions remain complete and consistent before and after the switch.",
            "The system needs to set a timeout determination mechanism during the autonomous control switching process. If the hardware status does not meet the control requirements, the switching should be terminated and the system should enter a safe state.",
            "The system should check the control solution inputs according to the current operational phase and status, verify whether the operational phase and status parameters have been considered, and ensure correct handling of the transition process.",
            "The system should set reasonable ranges for the variation rates of control law parameters, implement preset processing strategies for overslope data, and perform smoothing treatment during switching.",
            "The system should verify whether the timing of autonomous control outputs meets the requirements of the current flight scenario and maintain synchronization between the control state and the target state after switching."
        ]
    },
    {
        "requirement": "Sending the \"Autonomous Control\" command can realize this switch, exiting direct control surface control and softening the control surface deflection command with a softening time of 2 seconds. If the aircraft is in cruise flight (climb phase 2, altitude hold, or descent) at this time, the target coordinates will be changed from the predefined waypoint to the aircraft's current position coordinates to guide the aircraft back to its original destination. Throttle command softening is also required, with a softening time of 2 seconds.",
        "safety_requirements": [
            "After a software power failure and restart, the system shall check the correctness of status recovery, analyze the execution logic under 'status not recovered' and 'incorrect recovery' scenarios, and ensure consistency with the current flight phase and command requirements.",
            "When the system restarts due to a software power failure, it should verify the status of interface data communication, handle abnormal situations such as 'interruption, reconnection, and unrecoverable errors', and ensure the accuracy of output commands after communication is restored.",
            "When the system executes control commands, it should ensure that the control timing, conditions, and hardware actions are coordinated consistently, and maintain condition completeness and state continuity in the preceding and subsequent control logic.",
            "When the system switches between different operating states or phases, it should dynamically verify functional inputs to ensure correct handling of rudder deflection command softening and position update logic based on the current operational phase (e.g., cruise, climb, altitude hold, descent).",
            "The system shall trigger an exception handling mechanism and record an alarm when the redundancy switching time exceeds the set threshold, while maintaining basic control functions to ensure flight safety."
        ]
    },
    {
        "requirement": "Sending the \"rudder surface remote control\" command can achieve this switch, converting to direct rudder surface control, and smoothing the rudder deflection command with a smoothing time set to 2 seconds.",
        "safety_requirements": [
            "When the system switches to the rudder surface remote control command, it should verify the control sequence, timing, and hardware coordination, and ensure that the control conditions are complete and consistent before and after.",
            "The software needs to monitor the redundancy switching time. If it exceeds the set threshold, the exception handling mechanism should be triggered immediately and an alarm issued.",
            "When the redundancy switching condition is met but the switch fails, the system shall automatically execute the fault isolation procedure and activate the backup control channel.",
            "During direct control surface operation, the system should set timeout judgments for critical operations, terminate commands and restore to a safe state when hardware status is not up to standard.",
            "The system should dynamically check input commands based on the current operational phase and status, ensuring that the rudder deflection command softening process executes correctly even when the phase or status is not considered.",
            "When the softening time parameter is configured to 2 seconds, the system must perform real-time verification of whether the softening process complies with the parameter settings, and implement corrective actions if deviations exceed the allowable range."
        ]
    },
    {
        "requirement": "Sending the \"attitude remote control\" command can achieve this transition, exiting direct control surface control and softening the control surface deflection commands with a softening time set to 2 seconds.",
        "safety_requirements": [
            "The system should ensure that the redundancy switching time does not exceed 2 seconds; if exceeded, a handling mechanism must be triggered to maintain a safe state.",
            "When the system performs attitude remote control switching, the control sequence and timing shall be coordinated with the hardware, ensuring complete and consistent conditions.",
            "When the redundancy switch condition is met but the switch fails, the system shall immediately revert to direct surface control or enter safety mode.",
            "After restarting the software, check the attitude remote control status and properly handle situations of \"status not restored\" or \"error recovery\".",
            "The system should set a timeout judgment for the critical control process of attitude remote command, and trigger the exception handling process upon timeout."
        ]
    },
    {
        "requirement": "The \"attitude remote control\" command can achieve this switching, and the given attitude angle should be softened with a softening time of 2 seconds. Throttle command softening is required, with a softening time set to 2 seconds.",
        "safety_requirements": [
            "After a power failure and subsequent restart of the system software, the softening status of attitude remote control and throttle commands should be checked to ensure no erroneous recovery or failure to recover has occurred, and the correct execution of the 2-second softening time should be maintained.",
            "The system should initiate a timeout handling mechanism when the redundancy switching time exceeds the threshold, ensuring that the softening process of attitude remote control and throttle commands is not interrupted.",
            "The system should immediately trigger the redundant channel takeover when it detects that the redundancy switching conditions are met but the switch fails, keeping the softening time parameter unchanged at 2 seconds.",
            "When the system performs attitude remote control switching and command softening, it is necessary to verify the strict synchronization between control timing and hardware actions, and ensure that the throttle softening conditions remain consistent across consecutive control cycles.",
            "The system should verify the attitude angle softening command inputs under different flight phases and operating conditions to eliminate incorrect solutions that do not account for the current operational phase or state."
        ]
    },
    {
        "requirement": "Sending the \"rudder surface remote control\" command can achieve this transition, softening the rudder deflection command with a softening time set to 2 seconds. Throttle command softening is required, with the softening time set to 2 seconds.",
        "safety_requirements": [
            "The system should monitor redundancy switch-over time, and if it exceeds the allowed threshold, an alarm must be triggered and a predefined safety handling procedure executed.",
            "The system needs to verify the sequence, timing, and hardware coordination of remote control switching for the control surfaces, ensuring that conditions are complete and logic is consistent.",
            "When the redundancy switching condition is met but the switch fails, the system shall activate the backup control mechanism and trigger a fault alarm.",
            "After a power failure and restart, the system must check the softening status of the control surfaces and throttle, and implement corrective measures for any unrecovered or incorrectly recovered conditions.",
            "The system shall verify the command input according to the current operating phase and status to ensure that the softening treatment parameters strictly match the actual operating conditions."
        ]
    },
    {
        "requirement": "Sending the \"attitude remote control\" command can achieve this transition, smoothing the given attitude angle with a smoothing time set to 2 seconds. Throttle command smoothing is also required, with the smoothing time set to 2 seconds.",
        "safety_requirements": [
            "After a power failure and subsequent restart of the system software, the system should check the status after restart to ensure correct execution of attitude remote control switching and command softening under 'status not recovered' or 'error recovery' conditions.",
            "The system should monitor the redundancy switch time, and if it exceeds the threshold, it should trigger the exception handling mechanism and issue an alarm.",
            "The system shall immediately activate the backup control strategy and record the fault when the redundancy switching condition is met but the switch fails.",
            "The system should ensure that the control sequence, timing, and hardware of attitude remote control switching, command softening, and throttle command softening are strictly coordinated, and that the control conditions are complete and consistent.",
            "The system should check functional inputs during different operational phases or states to ensure that attitude angle and throttle command smoothing meet the requirements of the current phase or state."
        ]
    },
    {
        "requirement": "Sending the \"rudder surface remote control\" command can achieve this switching, and the rudder deflection command is softened with a softening time set to 2 seconds.",
        "safety_requirements": [
            "The system should trigger an exception handling mechanism when the redundancy switching time exceeds the set threshold, ensuring that the interruption or resumption of the rudder deflection command softening process complies with safety state requirements.",
            "The system should detect redundancy switch failure events, execute forced switch retries or switch back to the original redundancy safety measures, and record fault information.",
            "The system shall ensure that the control sequence and timing of remote switching of control surfaces are strictly synchronized with hardware actions, and the control conditions must be verified through multiple checks and maintain logical consistency.",
            "The system must implement a timeout monitoring mechanism during the rudder deflection command softening process, terminating the operation and triggering the preset safety mode upon timeout.",
            "After a power failure and restart, the system shall automatically verify the remote control status of the control surfaces, identify 'not recovered' or 'incorrect recovery' conditions, and perform state correction or issue an alarm."
        ]
    },
    {
        "requirement": "Sending the \"rudder surface remote control\" command can achieve this switch, softening the rudder deflection command with a softening time set to 2 seconds.",
        "safety_requirements": [
            "The system should be equipped with a redundancy switch timeout mechanism, which triggers an exception handling process when the switching time exceeds 2 seconds, ensuring a safe interruption or recovery of the rudder deflection command softening process.",
            "The system shall immediately record the fault condition and switch to the backup control mode when the redundancy switching condition is met but the switching fails, to prevent loss of control of the control surfaces.",
            "When the system executes remote control switching of the control surfaces, it is necessary to ensure that the timing and sequence of control commands are strictly synchronized with hardware operations, and to perform real-time consistency verification of the control conditions.",
            "During the rudder deflection command softening process, the system should monitor for hardware response status timeout, and if softening is not completed within 2 seconds, the command should be terminated and an alarm triggered.",
            "After a software power failure and restart, the system shall automatically check the remote control status of the control surfaces, identify any unrecovered or incorrectly recovered conditions, and recalculate the control surface deflection commands based on the current flight status."
        ]
    },
    {
        "requirement": "Throttle command smoothing is required, with a smoothing time set to 2 seconds.",
        "safety_requirements": [
            "The system should ensure that the control sequence and timing of throttle command smoothing are coordinated with the hardware, and the control conditions must meet completeness and consistency.",
            "The system should be equipped with a softening timeout detection mechanism for the air damper, initiating an emergency handling process if the softening time of 2 seconds is not completed.",
            "The system should monitor the redundancy switching time and perform a safe state hold or switching operation when it exceeds the preset threshold.",
            "After a software power failure and restart, the system needs to check the softening state of the throttle command to ensure that corrective logic is executed when it is in 'not recovered' or 'error recovery' status.",
            "The system should integrate a false alarm prevention mechanism to ensure that fault detection meets both alarm accuracy and real-time requirements during the throttle softening process."
        ]
    },
    {
        "requirement": "The system should be capable of adjusting control strategies and parameters according to different flight phases, ensuring the stability and safety of the aircraft at all stages.",
        "safety_requirements": [
            "The system should ensure that the sequence and timing of control strategy adjustments are coordinated with hardware actions, and the control conditions must remain complete and logically consistent.",
            "When the system adjusts control strategies during different flight phases, it should validate the input data for operational phase and status to exclude input errors of \"unconsidered operational phase/status.\"",
            "During the transition between operational scenarios, the system must assess potential risks of control functions and implement a dynamic risk assessment mechanism to prevent hazardous states.",
            "The system should perform multi-dimensional validation on the control solution results, including normal values, abnormal values, boundary values, and extreme values, and establish corresponding handling strategies.",
            "The system must set a timeout threshold for critical control commands, and automatically trigger the safety protection mechanism and reset the control process when the hardware response times out.",
            "All control parameter adjustments in the system must undergo real-time cross-validation to ensure they match the aerodynamic characteristics of the current flight phase."
        ]
    },
    {
        "requirement": "The softening priority during control mode switching is higher than that of phase transition; therefore, if a phase transition occurs simultaneously with a mode switch, only the softening for the mode switch is performed.",
        "safety_requirements": [
            "When the system switches control modes with phase transitions, it should perform a check where high-priority (mode switching softening) overrides low-priority (phase transition), ensuring the correctness of state transitions.",
            "The system should check the integrity of functional inputs under different control modes or operational phases, ensuring that the computational process strictly distinguishes between state and phase factors, avoiding errors such as \"failure to consider operational phase\" or \"failure to consider operational state\".",
            "The system shall verify the control sequence, timing, and hardware coordination to ensure that control conditions are fully defined and logically consistent.",
            "When the redundancy switching condition is met but the switch fails, the system shall immediately trigger the fault-tolerant handling mechanism to ensure functional continuity.",
            "After a software abnormal restart, the system should automatically recover to the control mode or phase status before the restart and verify the correctness of the recovery result, avoiding \"status not recovered\" or \"incorrect recovery\" phenomena."
        ]
    },
    {
        "requirement": "When switching from command control to autonomous control, if the aircraft is in altitude hold mode, it will exit altitude hold; if the aircraft is in speed hold mode, it will exit speed hold; if the aircraft is in left turn, right turn, figure-eight flight, or flying toward a temporary waypoint state, it will resume the route and perform normal navigation.",
        "safety_requirements": [
            "When the system switches from command control to autonomous control, it should perform phase and status checks on functional inputs to ensure correct handling logic for altitude hold, speed hold, left turn, right turn, figure-eight flight, temporary waypoints, and other states.",
            "After a software power failure and restart, the system should check and restore the flight status prior to the restart to avoid 'status not restored' or 'incorrect restoration'.",
            "The system should check the control calculation results during autonomous control switching, handle normal values, abnormal values, boundary values, and extreme maximum/minimum values to ensure the output meets expectations.",
            "When the software experiences a power failure and restarts, the system should check the status of interface data communication, handle situations such as 'interrupted', 'reconnected', or 'unrecoverable', and ensure data integrity.",
            "The system should monitor the control resolution process during autonomous control switching, and trigger an exception handling mechanism if no result is returned within the timeout period, ensuring correct functional response."
        ]
    },
    {
        "requirement": "When switching from autonomous or command control to remote control, if the navigation solution flag indicates no navigation solution (0), then the start and end points will be updated to runway points 6 and 7. When switching from command control to remote control, lateral control is set to normal navigation, longitudinal control is set to normal, and speed hold control is set to normal. If lateral control is flying towards a temporary waypoint, the end point will be updated to the original end point.",
        "safety_requirements": [
            "When the system switches control modes, it should check whether the functional inputs take into account the current operational phase and status, to ensure the accuracy of waypoint updates and control mode settings.",
            "After the software restarts due to power loss, checks should be performed on the navigation solution flags and control mode status to prevent abnormal control calculations caused by incomplete or incorrect recovery.",
            "The system should perform real-time validation on the control solution results, including normal values, abnormal values, boundary values, and extreme value scenarios, and trigger an emergency handling mechanism in case of anomalies.",
            "When the software restarts, it should ensure that after the interface data communication is interrupted, it can correctly reconnect and resume data synchronization, avoiding output errors caused by communication failure.",
            "If the control solution process times out without returning a result, the system should immediately activate a backup solution strategy or switch to a safety control mode."
        ]
    },
    {
        "requirement": "To smooth the data and prevent sudden jumps, the data needs to be softened (faded in and out).",
        "safety_requirements": [
            "The system shall check and ensure the correctness of the output data after softening processing when the receiving buffer capacity is less than the interface data volume.",
            "The system should perform truncation or output data according to a preset safety value strategy when the output data exceeds the limit.",
            "The system should check for adjacent cycle jumps in discrete value domain data bits to ensure the correctness of the output after softening processing.",
            "The system should check for and prevent division by zero during data processing, and if a division-by-zero risk is detected, the fault-tolerant handling mechanism should be activated immediately.",
            "The system should define reasonable slope ranges for parameter changes, and data exceeding these slopes must be processed according to preset safety ranges or substitute values."
        ]
    },
    {
        "requirement": "During the softening time, a weighted value is obtained by weighting both the old and new values: softened value = old value × (1 - t / softening time limit) + new value × t / softening time limit",
        "safety_requirements": [
            "The system should check for cases where state transition conditions are not set, always satisfied, or never satisfied, to ensure the correctness of state transition logic and the continuity of the soft processing procedure.",
            "The system should monitor the duration of interface data values and execute softening processing strategies to adjust when the duration is greater than or less than the specified time, in order to ensure output correctness.",
            "The system shall check whether the input value period is within the allowable range, and for cases where the period exceeds the specified limit or extreme maximum/minimum values occur, activate a preset mechanism to ensure accurate calculation of the softened values.",
            "The system should perform type validation on the control solution results (normal values, abnormal values, boundary values, maximum and minimum values), and apply corresponding handling rules based on the result type.",
            "The system should set reasonable ranges for parameter change rates (upper and lower slope limits), and immediately trigger predefined handling strategies, such as clamping or alarms, when over-slope data is detected."
        ]
    },
    {
        "requirement": "The softening method of the integrator initial value is specifically used to provide softened attitude angles (Jg, Yg, yg) and throttle command during phase switching in control laws that include an integrator.",
        "safety_requirements": [
            "The system should check the setting status of transition conditions during state transitions to ensure that the initial value softening process of attitude angles (Jg, Yg, yg) and throttle command complies with the phase switching logic under the conditions of 'unset', 'always satisfied', and 'never satisfied'.",
            "The system needs to verify the input of the control solution function under different states and operation phases, ensuring that the integrator initial value softening method can be executed correctly when 'operation phase or state is not considered'.",
            "The system shall dynamically monitor the state entry conditions and ensure continuity and consistency in the calculation of attitude angles and throttle commands when handling 'satisfied, not satisfied, satisfied again' conditions during state execution.",
            "The system shall perform boundary checks on the control solution results after integrator softening to ensure the validity of output commands under conditions such as 'normal values, abnormal values, boundary values, maximum and minimum values', preventing the risk of loss of control.",
            "The system should verify the priority execution sequence and stability of attitude angle and throttle command smoothing processes under scenarios of \"high-priority switching to low-priority\" and \"low-priority switching to high-priority\" during state transitions with priority levels."
        ]
    },
    {
        "requirement": "When switching to a control law with an integrator, in order to achieve a smooth transition of the corresponding reference attitude angle (Jg or Yg or yg), instead of simply setting the initial value of the integrator for the next control law to zero, the initial value of the integrator is determined by calculating with the reference attitude angle of the next phase equaling the reference attitude angle of the previous phase.",
        "safety_requirements": [
            "When the system switches control laws, it should dynamically check the operating phase and status to ensure that the integrator initial value calculation process correctly matches the current and previous phase's commanded attitude angles Jg, Yg, or yg.",
            "The system should verify the independence of entry conditions for states without transition relationships, ensuring that entry conditions do not trigger incorrect state transitions under scenarios such as \"simultaneously satisfied\" or \"satisfied during execution.\"",
            "The system should perform real-time range checks on the control calculation results, identify \"outliers, boundary values, maximum and minimum values\", and automatically trigger error correction or alarm mechanisms.",
            "The system shall enforce a priority policy during state transitions, ensuring that both 'high-priority switching low-priority' and 'low-priority switching high-priority' transitions comply with the predefined logic.",
            "The system should continuously monitor the entry conditions during state execution to ensure that the current state is maintained or terminated according to the rules when the conditions are \"satisfied, not satisfied, satisfied again\"."
        ]
    },
    {
        "requirement": "At the transition from the takeoff departure segment to climb segment 1, let Jg be the calculated reference pitch angle at the moment before switching from the takeoff departure segment to climb segment 1, and let x be the initial value of the airspeed integrator. Then x is calculated as follows: x = Jg - Kv [nk (k) - ng (k)] / K vI",
        "safety_requirements": [
            "The system shall check the functional inputs when switching between the takeoff run phase and the climb phase 1, ensuring that the control solution process correctly accounts for changes in operating phases and states, and verifying the calculation logic of the given pitch angle Jg and the initial value x of the airspeed integrator.",
            "The system should check the calculation results of the initial value x of the airspeed integrator, covering normal values, abnormal values, boundary values, and extreme maximum/minimum values scenarios, to ensure compatibility with the current state transition conditions.",
            "The system should strictly verify the data bit value accuracy during interface data exchange to ensure it meets or exceeds the required precision, and validate the accuracy of the initial value x of the airspeed integrator derived therefrom.",
            "When the system switches state priorities, it should verify the transfer logic between high-priority and low-priority functions, ensuring that the calculation of pitch angle Jg and airspeed integrator initial value x during state transition complies with the dynamic priority rules."
        ]
    },
    {
        "requirement": "Softening of the two altitude type data during high-type switching.",
        "safety_requirements": [
            "The system should perform equivalence class checks on interface data when switching between high-level types, to ensure the correctness of output values when transitioning between different output equivalence classes.",
            "The system should set an upper limit for the redundancy switching time and automatically execute a predefined safety handling strategy after a timeout to prevent the data softening process from failing.",
            "The system should define reasonable upper and lower limits for the slope of high-type parameters, and implement clamping processing or trigger an exception alarm mechanism for data exceeding the slope limit.",
            "The system shall ensure that the priority override logic is correctly executed when switching between high and low priority states, maintaining consistency between states and functions."
        ]
    },
    {
        "requirement": "Softening of rudder deflection command and throttle valve deflection command during switching with remote rudder control.",
        "safety_requirements": [
            "When the system switches to rudder surface remote control, it should ensure that the sequence and timing of softening commands for rudder deflection and throttle valve deflection are coordinated with the hardware, and the control conditions must be complete and consistent before and after.",
            "The system should implement a timeout detection mechanism for critical control settings during the remote switching process of the control surfaces, triggering a predefined handling strategy when the hardware status remains unsatisfactory for an extended period.",
            "The system should define reasonable ranges (including upper and lower slope limits) for the rate of change of rudder deflection commands and throttle valve deflection commands, and implement clear handling strategies for data exceeding these slope limits.",
            "The system shall immediately activate redundant mechanisms or safety protection measures when the conditions for redundancy switching are met but the switching fails.",
            "The system should monitor the duration of redundancy switching. If it exceeds the preset threshold, the system must automatically initiate the exception handling process and record the fault status."
        ]
    },
    {
        "requirement": "When the flight altitude is greater than 150m, the landing gear compressed signal is false, and the flight phase is not greater than the descent phase, the three conditions are met simultaneously, the phase transition is performed according to the DH value.",
        "safety_requirements": [
            "The system should check whether the current operational phase and status have been properly considered during phase transitions, ensuring that the DH value calculation logic matches the flight phase and status.",
            "The system should perform normal value, abnormal value, and boundary value range checks on the control solution results during phase transitions, and trigger a fault alarm mechanism when anomalies are detected.",
            "The system shall verify the logical consistency between states and functions during state priority transitions (e.g., high priority switching to low priority), ensuring that phase transitions comply with predefined priority rules.",
            "The system shall clearly define the sensor acquisition range (including upper and lower limits), and mark as a fault state and terminate the phase transition process when sensor data exceeds the valid range.",
            "The system should verify the value or range of values of functional interface data during operational state transitions to ensure that input data for phase transitions meets expected thresholds."
        ]
    },
    {
        "requirement": "Longitudinal control law: δz = KJ (J - Jg) + Kwz · wz",
        "safety_requirements": [
            "The system should perform multi-dimensional checks on the control solution result δz to ensure correct handling under normal values, abnormal values, boundary values, and extreme maximum/minimum values, and trigger corresponding error handling or warning mechanisms.",
            "The system should dynamically verify input parameters based on the current working phase and status, ensuring the δz solution process follows the predefined phase logic, and isolate and log abnormal inputs when mismatches occur.",
            "The system should verify that the timing logic of control commands is strictly synchronized with the hardware execution cycle, ensuring complete trigger conditions and consistent pre- and post-strategy.",
            "The system should establish a library of timing/constraint rules for functional point control logic to validate the concurrency and combined operations involved in δz resolution for compliance.",
            "The system should be equipped with a δz solution timeout fuse mechanism, which terminates the process and activates the safety fallback strategy if no result is returned within the preset time."
        ]
    },
    {
        "requirement": "Softening of the given attitude angles (Jg, Yg, yg) during transition from autonomous to remote attitude control and vice versa.",
        "safety_requirements": [
            "The system should verify the state transition conditions (not set, always satisfied, not satisfied) when switching between autonomous and attitude remote control modes to ensure the correctness of the softening process for attitude angles (Jg, Yg, yg).",
            "The system should check the values and value range changes of functional interface data during state transitions to ensure that the softened attitude angle output is consistent with the current operating state.",
            "The system must enforce priority rules when switching between high and low priority functions to ensure continuity and stability in attitude angle smoothing processing.",
            "The system should verify whether the input parameters of the control solution process include the operational status and phase identifier based on different working conditions and stages, to avoid functional anomalies caused by neglecting relevant factors.",
            "The system should continuously monitor the entry conditions (satisfied, not satisfied, satisfied again) during state execution to ensure strict matching between the triggering of state transitions and the attitude angle softening processing logic."
        ]
    },
    {
        "requirement": "Smoothing of the given attitude angles (Jg, Yg, yg) during the transition to the landing rollout phase, and smoothing of the given attitude angles (Yg, yg) and throttle deflection command during transitions in other phases.",
        "safety_requirements": [
            "The system should check the state transition conditions to ensure that the attitude angles (Jg, Yg, yg) and the throttle deflection command during the rotating ground roll segment and phase transitions are properly softened under the conditions of 'not set, always satisfied, not satisfied'.",
            "The system should check the entry conditions during state execution, and analyze the correctness of the given attitude angles and command smoothing results when transitioning from the landing rollout phase to other phases under scenarios such as 'satisfied', 'not satisfied', and 'satisfied again'.",
            "The system should check the value or value range of functional interface data during state transitions to ensure that the smoothed outputs of attitude angles (Yg, yg) and throttle command are consistent with the current phase logic.",
            "The system should verify the correspondence between the software status and the system status/operation phase, and terminate the soft processing and trigger the fault-tolerant mechanism when 'no corresponding status' or 'status inconsistency' occurs.",
            "The system should monitor the consistency of different redundancy operating states and apply a majority voting or predefined strategy to perform softening processing of attitude angle and throttle commands when \"redundancy is in different states\"."
        ]
    },
    {
        "requirement": "Softening of the given pitch angle during phase switching in longitudinal control law with an integrator.",
        "safety_requirements": [
            "The system should ensure that the sequence and timing of transitions between longitudinal control law stages are coordinated with the hardware, and the control conditions must remain complete and internally consistent.",
            "The system should define a reasonable range for the rate of change of the pitch angle softening parameters (upper and lower slope limits) and specify the handling strategy for out-of-limit data.",
            "The timing of outputting the control state should strictly meet the sequence requirements of the current flight scenario during the switching process.",
            "The system should comprehensively verify the state transition conditions to ensure that the state transition logic is correct and conflict-free when the transition conditions are not set, always satisfied, or cannot be satisfied.",
            "During different operational phases and states, the system shall validate functional inputs to ensure the computation process has correctly identified the current phase and state, avoiding omissions or misjudgments."
        ]
    },
    {
        "requirement": "Softening of the throttle deflection command during transition from climb to altitude hold and from descent to altitude hold. The initial value of the throttle control integrator is directly set to 100.0 during transition from climb to altitude hold, and directly set to 50.0 during transition from descent to altitude hold.",
        "safety_requirements": [
            "The system should set a reasonable range for the rate of change of the damper position command (slope upper and lower limits) and clearly define the handling strategy for data exceeding the slope limit.",
            "The system should check the conditions for state transitions from climbing to altitude hold and from descending to altitude hold, ensuring that the conditions are properly configured and that abnormal situations such as \"not set,\" \"always satisfied,\" or \"never satisfied\" do not occur.",
            "When the system is in a state transition, it should check the initial value (100.0 or 50.0) and range variation of the throttle control integrator to ensure that the output softening command meets expectations.",
            "The system should verify the control calculation results (normal values, abnormal values, boundary values, maximum and minimum values), and execute predefined safety handling logic in case of anomalies.",
            "The system shall ensure that the timing and sequence of control commands during state transitions are coordinated with hardware actions, and control conditions remain complete and consistent before and after the transitions."
        ]
    },
    {
        "requirement": "When switching from attitude remote control to autonomous mode, the longitudinal control integrator is reset to zero. If in altitude hold phase, the throttle control integrator initial value is directly set to 50.0.",
        "safety_requirements": [
            "When the system switches from attitude remote control to autonomous mode, it should check the longitudinal control integrator reset operation to ensure correct handling when the control calculation result is normal, abnormal, or at boundary values.",
            "When the system switches during the altitude hold phase, it should verify whether the initial value of the throttle control integrator is correctly set to 50.0, and analyze the correctness of handling when the operating phase or state is not considered.",
            "The system should ensure that the sequence and timing of control solutions are coordinated with the hardware, and that control conditions remain complete and logically consistent during state transitions.",
            "The system needs to set a timeout detection mechanism when adjusting the integrator's initial value, in order to handle situations where the hardware status fails to meet control requirements for an extended period.",
            "After a power failure and restart, the system should check the recovery status of the longitudinal control integrator and throttle control integrator to ensure there is no case of incomplete or incorrect state recovery."
        ]
    },
    {
        "requirement": "The softening of the elevator deflection command during the transition from climbing to level flight is achieved through two simultaneous softening methods, whereas the softening of the elevator deflection command during the transition from descending to level flight employs only the integrator initial value softening method.",
        "safety_requirements": [
            "The system should check the transition condition settings in the software state space during state transitions, analyze scenarios such as 'not set', 'always satisfied', and 'cannot be satisfied', to ensure the state transition logic and functional correctness.",
            "The system should set upper and lower limits for the rate of change of the throttle deviation command slope, and clearly define the handling strategy for data exceeding the slope limit.",
            "When the system switches states with priority differences, scenarios where 'high priority switches to low priority' and vice versa should be verified for state and functional correctness.",
            "The system should monitor the operational status of different redundancies and ensure the correctness of function realization when two or more redundancies are in an inconsistent state."
        ]
    },
    {
        "requirement": "In order to suppress sensor noise and external interference with the sensor output data, it is necessary to perform filtering on some of the input sensor data.",
        "safety_requirements": [
            "The system should perform filtering and debouncing on the input data during sensor data acquisition to effectively eliminate interference data.",
            "The system should evaluate the impact of filter processing on real-time performance, ensuring that processing delay remains within an acceptable range; otherwise, trigger a real-time alarm.",
            "The system must verify the correctness of filtered data when external devices (such as sensors) are in a degraded or maintenance state, and automatically activate backup mechanisms or trigger anomaly alarms."
        ]
    },
    {
        "requirement": "A prefilter is used to filter the input data. The cutoff frequency wc of the filter is transformed using the Tustin bilinear transformation method to obtain the filtering formula y(k) = a0y(k-1) + a1[x(k)+x(k-1)], where a0 and a1 take different values depending on wc.",
        "safety_requirements": [
            "The system should apply a pre-filter during the data acquisition phase to perform anti-jitter processing, eliminate interference data, and verify the validity of the filtered data.",
            "When the system switches between different operational phases and states, it should check the input data for control calculations to ensure that no operational phase or state factors are missing, thereby ensuring calculation accuracy.",
            "The system shall monitor in real-time the computation time of the filtering process, evaluate its impact on real-time performance, and trigger an alarm and take countermeasures if the impact exceeds the acceptable range.",
            "The system shall verify the values of filter equation parameters a0 and a1 against the current cutoff frequency wc, and trigger an immediate alarm if configuration errors are detected.",
            "The system shall perform integrity checks on the output data after filtering processing to ensure that the data has not been tampered with or lost, and shall activate the data recovery mechanism in case of anomalies."
        ]
    },
    {
        "requirement": "Different wc values are selected for different sensor data, and the corresponding a0 and a1 also vary; see Table 3-21 for specific parameters.",
        "safety_requirements": [
            "The system should clearly define the acquisition range (upper and lower limits) of sensor data, and trigger a sensor failure alarm when the data exceeds the range.",
            "The system should check the data bit value accuracy of the interface data to ensure correct output when the accuracy is greater than required.",
            "The system should check the data bit value accuracy of the interface data to ensure correct output when the accuracy is less than required.",
            "The system should check the control solution results, handle normal values, abnormal values, boundary values, maximum and minimum values, etc., to ensure correct functional processing.",
            "The system should check the same input data received through different redundancies and ensure the correctness of function implementation when values are inconsistent."
        ]
    },
    {
        "requirement": "Compensate the vertical velocity from the radio altimeter and the atmospheric altimeter using the inertial navigation vertical acceleration to improve their accuracy.",
        "safety_requirements": [
            "The system shall verify the correctness of functional implementation under different redundancy configurations and operating conditions, and ensure that the compensation results for radio altimeter and atmospheric pressure altitude rate meet the required accuracy.",
            "The system should define the upper and lower limits of the slope for parameters including inertial navigation vertical acceleration, radio altimeter, and atmospheric data, and clearly specify the real-time processing strategy for data exceeding these slope limits.",
            "The system should perform multi-cycle difference analysis on continuous data bits at the interface, trigger a slope fault handling mechanism when the difference exceeds the specified threshold, and ensure the correctness of the compensation output.",
            "The system should check the value accuracy of the interface data bits, and when the accuracy does not meet the requirements, perform preset error correction or alarm operations, maintaining the compensation function within an acceptable accuracy range."
        ]
    },
    {
        "requirement": "Lateral control law: δx = KY · (Y - Yg)",
        "safety_requirements": [
            "The system shall ensure that the execution sequence, timing, and hardware coordination of the lateral control law δx = KY · (Y - Yg) are properly managed, with complete and consistent control conditions.",
            "The system should verify the results of control calculations to ensure the correctness of its processing logic under normal values, abnormal values, boundary values, and extreme maximum/minimum values.",
            "The system should verify the correctness of temporal relationships, constraint relationships, concurrent relationships, and combination relationships among control logics of each functional point.",
            "When the system performs control calculations under different states or operational phases, it is necessary to check whether functional inputs have considered the current operational phase and state, and ensure that the processing logic is correct.",
            "The system should define reasonable ranges for the rate of change (slope upper and lower limits) of parameters KY, Y, and Yg, and clearly specify the handling strategy for data exceeding these slope limits."
        ]
    },
    {
        "requirement": "A method for implementing combined filtering, comprising reading inertial navigation vertical acceleration data and applying it to compensation calculations for radio altimeter and atmospheric pressure altitude rate.",
        "safety_requirements": [
            "The system shall check and ensure the correctness of the combined filtering method and compensation calculation when the same input data received with different redundancy has inconsistent values.",
            "The system should employ filtering and debouncing processing during the data acquisition phase to effectively eliminate interference data.",
            "The system should evaluate the impact of filter processing on real-time performance to ensure it remains within acceptable limits, and clearly define handling measures in the system design."
        ]
    },
    {
        "requirement": "The system needs to compensate for the atmospheric unit's lifting speed based on vertical acceleration.",
        "safety_requirements": [
            "The system shall ensure that the execution sequence and timing of vertical acceleration compensation control are coordinated with the hardware operational characteristics, and verify the completeness and logical consistency of the control conditions.",
            "The system needs to define a reasonable threshold range for the rate of change of the atmospheric unit lifting speed parameter, and clarify the real-time filtering or correction strategy for data exceeding the slope limit.",
            "The system shall establish a fault recovery mechanism for the vertical acceleration compensation function, including fault detection, compensation pause/reset logic, and status synchronization verification procedures after recovery.",
            "The system should activate the redundant calculation mode for vertical acceleration compensation and trigger the dynamic threshold adjustment mechanism under abnormal conditions such as high sea states and severe weather.",
            "The system shall set a timeout monitoring mechanism for the execution process of the lifting speed compensation command, and automatically terminate the current compensation cycle and report a fault status upon timeout."
        ]
    },
    {
        "requirement": "The system needs to compensate for the vertical acceleration of the radio altimeter's rate of climb.",
        "safety_requirements": [
            "The system should verify that the sequence and timing of controls are coordinated with the hardware to ensure complete and consistent control conditions.",
            "The system should define a reasonable range for vertical acceleration rate of change (slope upper and lower limits) and specify the handling strategy for data exceeding these slope limits.",
            "The system shall perform multi-cycle difference analysis on the continuous data bits of the radio altimeter interface, and when the difference exceeds the specified threshold, ensure output correctness and handle slope faults.",
            "The system should monitor the communication status of the radio altimeter data frames and implement a predefined handling strategy in case of data frame loss to ensure correct output.",
            "The system should clearly define the acquisition range (upper and lower limits) of the vertical acceleration sensor, and immediately trigger a sensor fault alarm when the range is exceeded."
        ]
    },
    {
        "requirement": "The system needs to use the Tustin bilinear transform to obtain a unified filter formula.",
        "safety_requirements": [
            "The system should ensure that the sequence and timing are coordinated with the hardware when performing control, and the control conditions must be complete and logically consistent.",
            "The system should perform filtering and debouncing during data acquisition to eliminate interference data and ensure input validity.",
            "The system should set reasonable limits on the rate of parameter change (slope upper and lower bounds) and clearly define the handling strategy for data exceeding these slope limits.",
            "The system needs to check the value accuracy of data bits in the interface data to ensure the correctness of the output within the required precision range."
        ]
    },
    {
        "requirement": "The system needs to calculate the values of H1(k) and Hbc(k).",
        "safety_requirements": [
            "The system should ensure the correctness of the calculation results of H1(k) and Hbc(k) when the interface data input values are at maximum or minimum at the time of data entry.",
            "The system should check cases where the control solution results are normal values, abnormal values, boundary values, and extreme maximum or minimum values, and ensure the correctness of functional processing.",
            "When the data bit value accuracy of the interface data exceeds the specified requirements, the system shall verify the correctness of the calculated outputs H1(k) and Hbc(k).",
            "When the data bit value accuracy of the interface data is less than the specified requirement, the system shall ensure that the calculation results of H1(k) and Hbc(k) are within an acceptable error range.",
            "The system shall verify the correctness of the outputs H1(k) and Hbc(k) when the input value cycle is greater than the specified cycle, less than the specified cycle, or at extreme maximum or minimum values."
        ]
    },
    {
        "requirement": "When H is taken as Hb and Hr respectively, the system needs to calculate the compensated lifting and lowering speed Hbc corresponding to uy and h.",
        "safety_requirements": [
            "The system should verify the control solution results, covering scenarios such as normal values, abnormal values, boundary values, and extreme maximum/minimum values, to ensure the correct calculation and processing logic of the compensated ascending/descending speed Hbc (corresponding to uy and h).",
            "The system should check functional input conditions under different operating states and phases, analyze the correctness of handling situations such as 'unconsidered operating phase' or 'unconsidered operating state', and ensure the applicability of Hbc calculation.",
            "The system should verify the value accuracy of data bits at the interface, ensuring that the output of Hbc still meets the accuracy specifications when the data precision is greater than or less than required.",
            "The system should verify the validity of the interface data input cycle, ensuring the effectiveness of Hbc calculation results for scenarios where the cycle is greater/less than the specified range and for extreme maximum/minimum values."
        ]
    },
    {
        "requirement": "The system needs to calculate the values of H1(k) and H2(k) according to the formula at each sampling cycle T=20ms.",
        "safety_requirements": [
            "The system should check the cycle of interface data in each sampling cycle to ensure that when the input value cycle is at its maximum, minimum, or deviates from the specified cycle (T=20ms), the calculation results of H1(k) and H2(k) are correct.",
            "The system should verify that the transmission cycle of interface data matches the reception cycle. If a mismatch occurs, fault-tolerant handling shall be implemented and the anomaly recorded.",
            "The system shall perform real-time monitoring of the input value timing, ensuring that the calculation of H1(k) and H2(k) is synchronized with the current sampling cycle in cases of \"early input\" or \"late input\".",
            "The system should check the duration of interface data values, and when the duration exceeds or is shorter than the specified time, trigger an exception handling mechanism and maintain the validity of the output results."
        ]
    },
    {
        "requirement": "Determine the flight phase under autonomous control, manual correction, and command control modes.",
        "safety_requirements": [
            "The system should check functional inputs under different states and operational phases to ensure the correct handling of the solution process when 'operational phase is not considered' or 'operational state is not considered'.",
            "The system should verify the logical correctness of timing relationships, constraint relationships, concurrency relationships, and combination relationships among all functional points under autonomous control, manual correction, and command control modes.",
            "The system should detect control solution results to ensure the correctness of data processing and response under conditions such as 'normal values, abnormal values, boundary values, maximum and minimum values'.",
            "The system shall ensure that the control sequence and timing are coordinated with the hardware, and that control conditions are complete and consistent.",
            "The system shall dynamically check the state entry conditions and verify the correctness of the flight phase determination process when the conditions are 'satisfied, not satisfied, satisfied again'."
        ]
    },
    {
        "requirement": "The determination of the flight phase under remote control mode (with or without internal loop remote control) is different.",
        "safety_requirements": [
            "When the system determines the flight phase in remote control mode, it should check the functional inputs to ensure that the handling logic under 'unconsidered operational phases' or 'unconsidered operational states' is correct and meets the requirements of the current mode.",
            "The system shall ensure that the sequence and timing of controls are coordinated with the hardware, and that control conditions are complete and consistent.",
            "The system should implement a timeout mechanism during critical control operations or action executions to handle situations where hardware status remains in compliance with control requirements for an extended period.",
            "The system should verify that the timing of output control status meets the scenario requirements for different flight phases under remote control mode.",
            "The system shall ensure the correctness and consistency of timing relationships, constraint relationships, concurrency relationships, and combination relationships among functional points under remote control mode."
        ]
    },
    {
        "requirement": "When switching between control modes, perform corresponding processing and phase determination.",
        "safety_requirements": [
            "When the system switches control modes, it should check whether the functional inputs match the current operating phase and status, avoiding situations of 'unconsidered operating phase' or 'unconsidered operating status', and ensure correct processing logic.",
            "The system should perform real-time checks on the control calculation results, distinguish scenarios such as 'normal values, abnormal values, boundary values, maximum and minimum values', and trigger safety handling mechanisms when abnormalities or boundary values are detected.",
            "The system should verify the coordination of control sequences, timing, and hardware to ensure complete and consistent control conditions, preventing mode switching and triggering an alarm when inconsistencies occur.",
            "The system should check the control logic timing, constraints, concurrency, and combination relationships of each functional point, and enter safe mode and record the fault when a logic error is detected.",
            "The system should incorporate a timeout detection mechanism for critical control actions, terminating the current operation and switching to a preset safety state if the control requirements are not met within the specified time."
        ]
    },
    {
        "requirement": "Lateral control law: δy = KyY · (Y - Yg) + Kywy · wy",
        "safety_requirements": [
            "The system shall ensure that the calculation sequence and timing of the lateral control law δy are consistent with the hardware, and the control conditions shall be complete and logically coherent.",
            "The system should perform real-time checks on the control solution results of δy, covering normal values, abnormal values, boundary values, and extreme maximum/minimum value scenarios, to ensure correct functional processing logic.",
            "The system needs to verify the timing, constraints, concurrency, and combination relationships of control logic for each functional point to ensure they meet design requirements.",
            "The system should check input parameters based on the current state and operating phase, analyze the processing logic when the operating phase or state is not considered, and ensure the correctness of the δy solution process.",
            "The system should define a reasonable range for the parameter variation rate of δy (slope upper and lower limits), and clearly specify real-time monitoring and handling strategies for out-of-slope data."
        ]
    },
    {
        "requirement": "During flight phase transitions and control mode switches, soften the given attitude angles, control surface commands, or throttle inputs.",
        "safety_requirements": [
            "During flight phase transitions or control mode switches, functional inputs should be checked to ensure that the current operational phase and status have been considered, verifying the correctness of attitude angles, control surface commands, or throttle softening processing.",
            "The system shall ensure that the sequence and timing of softening treatment are coordinated with the hardware, and that control conditions are complete and consistent.",
            "Perform real-time checks on the softened control solution results to ensure their handling under normal values, abnormal values, boundary values, and extreme maximum/minimum values meets expectations.",
            "After a power failure and subsequent restart, the system should perform an integrity check on its status to prevent incomplete or incorrect recovery, and ensure that the soft processing logic is consistent with the current flight phase.",
            "All state transition conditions should be verified for their validity, including unset, always satisfied, or unachievable conditions, to ensure correct state transitions during flight phases and control mode switching."
        ]
    },
    {
        "requirement": "Select two softening methods: one for softening during switching between control modes with inner loops or flight phase transitions, and another for softening during switching of remote control modes without inner loops.",
        "safety_requirements": [
            "The system shall check whether the functional inputs explicitly include operational phase and status information when switching control modes or transitioning between flight phases, to avoid errors in selecting degraded modes caused by \"not considering the operational phase\" or \"not considering the operational status\".",
            "The system should check the state transition conditions between the inner loop control mode and the remote control mode without inner loop, ensuring that the transition conditions are fully set and free from anomalies such as \"not set\", \"always satisfied\", or \"never satisfied\".",
            "The system shall verify the correctness of state transition logic and function execution when switching between functional states with different priorities (e.g., high priority to low priority or vice versa).",
            "The system should check the consistency of different redundancy operating states, and when \"two or more redundancies are in different states,\" ensure that the redundancy fault-tolerant processing of the soft switching function is correctly implemented."
        ]
    },
    {
        "requirement": "The flight control system must have a notch filter function to attenuate airframe structural vibration mode signals and ensure system stability.",
        "safety_requirements": [
            "The execution sequence and timing of the notch filter function should be coordinated with the hardware control process to ensure complete control conditions and consistent logic.",
            "The system should implement filtering and anti-jitter processing during the signal acquisition phase, actively shielding interference data to maintain the effectiveness of vibration modal signal attenuation.",
            "The flight control system needs to perform multi-state checks on the notch filter solution results, including verification of the correctness of processing logic under normal values, abnormal values, boundary values, and extreme value conditions.",
            "The critical vibration signal attenuation control process should be equipped with a timeout determination mechanism, and a preset safety response strategy should be executed when the hardware status does not reach the control threshold."
        ]
    },
    {
        "requirement": "The elevator channel in the flight control system should include two notch filters, one located between the control law output and the servo loop, and the other after the elevator acceleration prefilter.",
        "safety_requirements": [
            "The system should ensure that the control sequence and timing of the notch filter in the elevator channel are coordinated with the hardware, and the control conditions must be complete and consistent.",
            "The system should perform real-time status monitoring of the rudder loop output without interfering with normal output, ensuring the notch filter function remains effective.",
            "The system must verify the integrity of functional inputs under different flight phases and operating conditions to avoid control solution errors caused by unconsidered phases or states.",
            "The system should dynamically verify the timing of output control status to ensure it meets the real-time requirements of the current flight scenario.",
            "The system should perform signal integrity checks on the notch filter after the elevator acceleration feedforward filter to prevent abnormal signals from being input to the rudder loop."
        ]
    },
    {
        "requirement": "The notch filter parameters between the control law output and the rudder loop should be set as x1z = 0.1, x2z = 0.6, wn1z = 24.3, wn2z = 24.3.",
        "safety_requirements": [
            "The system should ensure that the notch filter parameter settings (x1z=0.1, x2z=0.6, wn1z=24.3, wn2z=24.3) between the control law output and the actuator loop are coordinated with the hardware, and that the control sequence, timing, and conditions are complete and consistent.",
            "The system should perform real-time checks on the control solution results to ensure correct functional processing under conditions such as \"normal values, abnormal values, boundary values, maximum and minimum values\".",
            "When the system operates in different states or operational phases, it is necessary to check whether functional inputs have considered the current operational phase and state, to avoid processing errors caused by 'failure to consider the operational phase' or 'failure to consider the operational state'.",
            "The output circuit shall be equipped with a non-intrusive detection mechanism to monitor the circuit status in real time without affecting normal output, and support early warning for abnormal conditions."
        ]
    },
    {
        "requirement": "The specific parameters of the notch filter after the lifting acceleration pre-filter should be configured in the system.",
        "safety_requirements": [
            "When configuring the notch filter parameters of the system, it is essential to ensure that the control sequence and timing are coordinated with the hardware, and that the control conditions are complete and consistent.",
            "After configuring the notch filter parameters, the system should monitor the hardware status in real time and determine its compliance with control requirements.",
            "The system should set upper and lower limits on the rate of change for notch filter parameters and clearly define handling strategies for data exceeding these limits.",
            "The system should verify the correctness of functional processing when controlling the solution results to be normal values, abnormal values, boundary values, and maximum/minimum values after configuring the notch filter parameters.",
            "When configuring the notch filter parameters of the system, a timeout detection mechanism should be set for critical control operations to handle situations where the hardware status fails to meet control requirements for an extended period."
        ]
    },
    {
        "requirement": "The vertical acceleration in the longitudinal control law during the flare phase needs to be processed through vertical acceleration notch filter 2.",
        "safety_requirements": [
            "During the flare phase, the system should ensure that the control sequence, timing, and hardware coordination of notch filter 2 are properly managed when handling vertical acceleration, with complete and consistent control conditions.",
            "The system should set a timeout detection mechanism for the processing of the lift acceleration notch filter, and execute preset safety operations when the hardware status fails to meet requirements for an extended period.",
            "The system needs to check the input data based on the working status during the leveling phase to prevent processing errors caused by ignoring the current phase or status.",
            "The system shall validate in real time the lifting and lowering acceleration calculation results from the notch filter output, ensuring that handling of normal values, abnormal values, and boundary values complies with safety regulations.",
            "The system should monitor the rate of change of the lifting acceleration parameters and initiate a clear abnormal data handling strategy when the slope exceeds the preset range."
        ]
    },
    {
        "requirement": "The notch filter parameters for the aileron channel are x1x = 0.1, x2x = 0.6, wn1x = 24.3, wn2x = 24.3.",
        "safety_requirements": [
            "The system should define the reasonable range of variation rates for aileron channel notch filter parameters, clarify the handling strategy for over-slope data, and ensure its implementation.",
            "The system should check the communication protocol of the interface data frame to ensure correctness when the data length is greater than or less than the specified length.",
            "The system must clearly define the upper and lower limits of the sensor's measurement range, and trigger a sensor fault alarm when the measured value exceeds this range.",
            "The system should check the communication status of interface data frames and ensure the correctness of output when data frame loss occurs.",
            "The system should check the interface data receiving buffer, and ensure correct handling and maintenance of functional stability when its capacity is less than the interface data volume."
        ]
    },
    {
        "requirement": "The notch filter parameters for the rudder channel are x1y = 0.1, x2y = 0.5999922, wn1y = 40.81997, wn2y = 25.11991.",
        "safety_requirements": [
            "The system should define reasonable ranges for the rate of change (slope upper and lower limits) of the notch filter parameters x1y, x2y, wn1y, and wn2y, and execute a predetermined overslope data processing strategy when parameter changes exceed these ranges.",
            "The system should perform periodic difference checks on continuous interface data, trigger the slope fault handling mechanism when the difference exceeds the specified threshold, and ensure output correctness.",
            "The system should clearly define the acquisition range (upper and lower limits) of the rudder channel sensor, and report a sensor fault when the acquired value exceeds the limit.",
            "The system should check the inputs for control solution under different operating states and phases to ensure that inputs not considered in the current state or phase are correctly identified and processed.",
            "The system should evaluate the impact of notch filter processing on real-time performance and confirm that this impact is within an acceptable range."
        ]
    },
    {
        "requirement": "The discretized notch filter formula obtained using the Tustin bilinear transformation is δd(k) = [- Kd12δd(k-1) - Kd22δd(k-2) + Kd01δ(k) + Kd11δ(k-1) + Kd].",
        "safety_requirements": [
            "The system should perform adjacent cycle value jump checks on discrete value range data bits in the interface data to ensure correct output in case of jumps.",
            "The system should evaluate the impact of discrete notch filter processing on real-time performance and confirm that the impact is within an acceptable range.",
            "The system should check whether the control calculation results are normal values, abnormal values, boundary values, or extreme maximum/minimum values to ensure the correctness of functional processing.",
            "The system should check functional inputs under different states and operational phases to ensure that no operational phase or state is overlooked, thereby guaranteeing the correctness of control solution processing."
        ]
    },
    {
        "requirement": "The system should be capable of calculating the rudder deflection angles δz, δx, and δy based on the current flight status and target status.",
        "safety_requirements": [
            "The system should ensure that the control sequence, timing, and hardware coordination are properly aligned, with complete and consistent control conditions to accurately calculate the rudder deflection angles δz, δx, and δy.",
            "The system should check the operating status of different redundancies, and when two or more redundancies are in different states, ensure the correct calculation of rudder deflection angles δz, δx, and δy.",
            "The system should verify whether the functional inputs include current phase and status information under different states and operational stages, to prevent calculation errors caused by omissions.",
            "The system should perform real-time checks on the control calculation results, identify normal values, abnormal values, boundary values, and extreme maximum/minimum values, and take corresponding measures to ensure the accuracy ofrudder deflection angles δz, δx and δy."
        ]
    },
    {
        "requirement": "The software system needs to implement the functionality of the lifting acceleration notch filter 2, including parameter setting and filtering processing.",
        "safety_requirements": [
            "The system should ensure that the parameter setting control sequence, timing, and hardware coordination of the lifting acceleration notch filter 2 are comprehensive and logically consistent.",
            "The system should perform real-time checks on the filter control calculation results to ensure correct handling logic under conditions such as \"normal values, abnormal values, boundary values, maximum and minimum values\", and generate corresponding exception records.",
            "The system shall be equipped with a timeout determination mechanism during critical parameter settings or filter processing. When the hardware status fails to meet the control requirements for a duration exceeding the threshold, safety protection measures shall be triggered.",
            "The system should dynamically validate the filter input parameters according to different working phases and states, ensuring that the input data includes complete context information for the current phase and state.",
            "The system should continuously monitor the execution conditions during the filter operation, immediately terminate processing when the conditions are 'not met', and resume processing after re-performing the integrity check when the conditions are 'met again'."
        ]
    },
    {
        "requirement": "The software system needs to implement the notch filter function for the aileron channel, including parameter setting and filtering processing.",
        "safety_requirements": [
            "The system should ensure that the control sequence, timing, and hardware coordination of the aileron channel notch filter are properly managed, with complete and consistent control conditions.",
            "The system should trigger abnormal judgment logic and execute corresponding filtering mechanisms when detecting abnormal external factors such as high sea states or severe weather conditions.",
            "The system should perform real-time verification of the notch filter control calculation results, including correctness in handling normal values, abnormal values, boundary values, and maximum/minimum values.",
            "The system should dynamically adjust the filtering processing strategy when the conditions for functional execution are not met or are met again, and ensure the integrity of the processing logic.",
            "The system must implement a timeout detection mechanism for critical control commands and initiate a predefined fault handling procedure when the hardware status does not meet control requirements."
        ]
    },
    {
        "requirement": "The software system needs to implement the notch filter function for the rudder channel, including parameter setting and filtering processing.",
        "safety_requirements": [
            "When implementing the rudder channel notch filter function, the system should ensure that the parameter setting and filtering sequence, timing are coordinated with the hardware, and control conditions are complete and consistent.",
            "The system should set a timeout detection mechanism for the parameter configuration and filtering process of the notch filter in the rudder channel. When the hardware status fails to meet control requirements for an extended period, the exception handling should be triggered.",
            "The system should check the notch filter control calculation results to ensure the logical correctness of functional processing under 'normal values, abnormal values, boundary values, and extreme maximum/minimum values' conditions.",
            "The system should check the execution conditions of the notch filter function, and execute preset processing rules when the conditions are 'not met' or 'met again', to ensure functional reliability and state continuity.",
            "The system should dynamically check the input data of the rudder channel notch filter according to different operational phases and states, to prevent erroneous handling due to \"unconsidered operational phase\" or \"unconsidered operational state\"."
        ]
    },
    {
        "requirement": "The software system needs to implement the Tustin bilinear transform discretization to generate the discrete notch filter formula.",
        "safety_requirements": [
            "The system should check the discrete value range data bits when there is a data jump between adjacent cycles to ensure the correctness of the output of the notch filter formula.",
            "The system should set upper and lower slope limits for parameter change rates and execute a clear abnormal data handling strategy when the slope is exceeded.",
            "The software state transition conditions should check cases such as 'Not Set, Always Satisfied, Never Satisfied' to ensure the state transition logic is correct.",
            "The system shall check for outliers outside the valid range of discrete value domain data bits and maintain correct output in abnormal situations.",
            "The sequence and timing of system control should be coordinated with the hardware, and the control conditions must maintain completeness and consistency."
        ]
    },
    {
        "requirement": "The flaps can be extended or retracted according to the needs of different flight phases or remote control, and have three deflection positions: 0°, 15°, and 40°.",
        "safety_requirements": [
            "When the system is extending or retracting the flaps, it should check the operating status of redundant channels to ensure correct flap angle position control can still be achieved when \"two or more redundancies are in different states.\"",
            "The system should verify the control calculation process when switching between different flight phases or operating states to ensure that current phase or state parameters are not overlooked and to establish a fault-tolerant mechanism.",
            "The system shall perform consistency checks on the same input data received with different redundancies, trigger error correction procedures, and lock the flaps to a safe position when data inconsistencies occur.",
            "The system shall monitor redundant output data in real time, automatically switch to the backup redundancy upon detecting a single redundancy failure, and force the flap to maintain the current safe deflection angle in case of multiple redundancy failures.",
            "During the flap deflection angle switching process, the system must verify the compatibility of the target position with the current flight phase and prohibit execution under abnormal switching commands."
        ]
    },
    {
        "requirement": "The system should be capable of automatically adjusting the flap deflection position based on information provided by the flight phase identification module.",
        "safety_requirements": [
            "When the system automatically adjusts the flap deflection angle, it should ensure that the control timing, sequence, and hardware actions are coordinated, and that the control conditions are complete and state-consistent.",
            "The flap deflection adjustment command must include a timeout determination mechanism, which triggers a preset safety response when the hardware status does not reach the expected state.",
            "The system shall perform anomaly detection on the flap deflection angle calculation results, covering the handling and verification of normal values, boundary values, maximum/minimum values, and logically anomalous values.",
            "The flap deflection calculation module needs to verify the validity of the flight phase identification input to ensure correct handling when no operating phase or status information is ignored.",
            "The system should monitor the status of redundant modules and execute an arbitration strategy to maintain safe control output when multiple redundancies are in an inconsistent state."
        ]
    },
    {
        "requirement": "The system should support manual adjustment of the flap deflection position via remote control.",
        "safety_requirements": [
            "The system shall ensure that the command sequence and timing of remote control for flap deflection adjustment are coordinated with hardware actions, and control conditions must maintain completeness and consistency.",
            "When remotely adjusting the flap deflection angle, the system should establish a timeout judgment mechanism for control commands to handle abnormal situations where the hardware status does not meet the control requirements within the specified time limit.",
            "After the system performs the flap deflection adjustment operation, it must monitor in real time the consistency between the actual flap position and the control command, and trigger the state verification mechanism.",
            "The timing of flap control commands for remote output should comply with flight scenario state constraints, and angle adjustment operations are prohibited in non-safe scenarios.",
            "The system shall classify and process the flap deflection angle calculation results, and immediately terminate adjustments and activate the fault protection program when detecting abnormal values, boundary values, or values exceeding the limit."
        ]
    },
    {
        "requirement": "The system should be capable of receiving and processing data provided by the flight phase identification module to determine the current flight phase.",
        "safety_requirements": [
            "The system should check whether the transmission cycle of interface data matches the reception cycle to ensure the real-time performance and synchronization of flight phase identification data.",
            "The system shall verify the correctness of the trigger logic for execution conditions when it receives input data again after task execution, in order to avoid repeated processing that could lead to abnormal flight phase determination.",
            "The system should monitor the communication status of interface data frames and maintain a reasonable default output or trigger a fault-tolerant mechanism in the case of 'continuously not receiving new data'.",
            "The system should verify the interface data frame identifier to ensure compliance with the communication protocol specifications, and reject processing and report an error if the identifier is abnormal.",
            "The system should monitor data frame loss, record frame loss events, and employ redundant data or historical data compensation mechanisms to ensure continuity in flight phase determination."
        ]
    },
    {
        "requirement": "The system should be able to select the appropriate flap deflection position based on the current flight phase.",
        "safety_requirements": [
            "The system shall ensure that the control sequence, timing, and hardware coordination are properly aligned, with complete and consistent control conditions, to accurately select the flap deflection position corresponding to the current flight phase.",
            "The system should verify the timing of output control status against the requirements of the flight phase scenario to ensure the timeliness of flap deflection adjustment.",
            "The system should define a reasonable range for the variation rate of the flap deflection angle parameter and clearly specify the identification, processing, and feedback mechanisms for out-of-slope data.",
            "The system shall perform real-time monitoring of the operational status of different redundancy channels, and execute exception handling strategies when \"two or more redundancies are in different states\" to ensure the correctness of the flap angle selection function."
        ]
    },
    {
        "requirement": "The system should be capable of recording and displaying the current flap deflection position.",
        "safety_requirements": [
            "The system shall ensure that the flap deflection position recording and display functions are coordinated with the hardware control sequence and timing, and that the control conditions are complete and consistent.",
            "When two or more redundancies are in different operating states, the system shall verify the correctness of the flap angle position recording and display functions.",
            "After system recovery, the recorded flap deflection position data shall meet real-time requirements and be updated promptly.",
            "When one or more redundancies fail, the system should check the output data and ensure the correctness of the flap angle position recording and display functions."
        ]
    },
    {
        "requirement": "The system needs to calculate the values of δz(k), δx(k), and δy(k) through bilinear transformation based on the given pitch angle Jg, roll angle Yg, and rudder control amount yg.",
        "safety_requirements": [
            "The system should monitor the rate of change of the pitch angle Jg, roll angle Yg, and rudder control amount yg in real time, ensuring their slopes remain within predefined reasonable ranges, and execute clear data processing strategies when exceeded.",
            "During the discretization calculation process, the system should ensure that the control solution sequence and timing are strictly coordinated with hardware operations, and control conditions must maintain consistent and complete logical relationships.",
            "The system should perform a categorized check on the calculated results of δz(k), δx(k), and δy(k), clarify the processing logic for \"normal values, abnormal values, boundary values, maximum and minimum values,\" and trigger an error correction mechanism in case of anomalies.",
            "The system shall verify the adjacent cycle transitions of discrete interface data bits to ensure that the transitions comply with the condition constraints of the current flight phase and state, and that the output logic is correct.",
            "The system should dynamically adjust the control solution logic according to different operating states and phases, and enforce validation of the operational phase and status tags of the input data to prevent logic misuse."
        ]
    },
    {
        "requirement": "During the aircraft's ground waiting phase, the flaps are set to 0°.",
        "safety_requirements": [
            "When the system sets the flaps to 0° during the ground waiting phase, a zero-division check should be performed on the data processing procedure to ensure correct calculations.",
            "The system should reject any non-zero flap setting commands received during the ground waiting phase to ensure compliance with the current operational scenario.",
            "If the redundancy switch condition is met but the switch fails, the system shall maintain the flaps at 0° and trigger the error handling mechanism.",
            "When the aircraft enters the ground waiting phase, the system shall check the functional interface data to ensure the flap angle is correctly set to 0° and the data is valid during state transition.",
            "The system should validate the effectiveness of the flap angle parameters set by personnel, and abnormal parameters should be prompted or ignored."
        ]
    },
    {
        "requirement": "When the aircraft begins takeoff, from the start of the ground roll phase, the flaps are deflected to 15°.",
        "safety_requirements": [
            "After power recovery or reset, the system shall ensure that the flap deflection angle is restored to 15° and is consistent with the current operating status of the takeoff roll phase.",
            "The system should set upper and lower slope limits for the flap deflection angle variation rate, and execute a preset over-limit handling strategy when exceeding the reasonable range.",
            "The system shall check the data frame communication status of the flap control interface, and maintain or adopt default safety values to ensure output correctness in case of data frame loss.",
            "The system shall verify the sequence, timing, and hardware coordination of flap deflection control during the takeoff phase, and ensure that the control condition logic is complete and consistent.",
            "When the working statuses of different redundancies are inconsistent, the system should detect and execute the preset fault-tolerant strategy to ensure the flap deflection angle maintains an accuracy of 15°."
        ]
    },
    {
        "requirement": "Start timing when reaching climb segment 1; if the landing gear is retracted within 1 minute, delay for 5 seconds after retraction before retracting flaps to 0°.",
        "safety_requirements": [
            "The system should start timing when the aircraft flies to the climb segment 1, check whether the mission duration is less than 1 minute, and ensure the correct handling of the function that delays 5 seconds after landing gear retraction before retracting flaps to 0°.",
            "The system should monitor whether the task duration exceeds 1 minute; if the landing gear is not retracted within the specified time, the flap retraction operation must be terminated and an alarm triggered.",
            "The system shall check the execution sequence of operations for flying to the climb phase, landing gear retraction, and flap retraction. If the sequence is inconsistent with the specified requirements, the process must be terminated and an error log generated.",
            "The system shall verify the timing of the landing gear retraction signal input. If an abnormal condition such as \"premature stop\" or \"delayed stop\" is detected, the current flap status shall be maintained and a fault report shall be issued.",
            "The system should monitor the input timing of interface data. If abnormal values such as \"premature input\" or \"delayed input\" occur, the flap control command must be frozen and a system self-check initiated."
        ]
    },
    {
        "requirement": "If the landing gear is not retracted within 1 minute, directly retract the flaps to 0°.",
        "safety_requirements": [
            "The system should check the duration of the landing gear not being retracted before performing the flap retraction operation; if it exceeds one minute, the system must forcibly trigger a command to reset the flaps to zero and verify synchronization between this command and the hardware status.",
            "The system shall monitor the time of the redundancy switching process. If the switching time exceeds the threshold, the backup control channel shall be activated and a fault code recorded.",
            "The system shall lock the current control mode, cut off the abnormal signal source, and activate the safety protection mechanism when the redundancy switching condition is met but the switching fails.",
            "The system should monitor in real-time the feedback status of the flap angle control hardware. If the 0° command requirement is not met within the timeout period, the current operation must be aborted and a Level 3 alarm triggered.",
            "The system shall freeze flap control commands and switch to the avionics system backup data link for status verification when it does not receive landing gear status update data for three consecutive communication cycles."
        ]
    },
    {
        "requirement": "When the aircraft flies to the fourth leg of the five-side approach pattern, if the distance to the destination point is less than 1500m, deploy flaps to 15°.",
        "safety_requirements": [
            "The system should check the operating status of redundancies before performing flap extension operations, ensuring correct functionality when 'two or more redundancies are in different states', and implement redundant error correction mechanisms.",
            "The system should clearly define the measurement range (upper and lower limits) of sensors related to flap control. When an out-of-range value is detected, the system shall immediately report a sensor fault and lock the abnormal data.",
            "The system shall perform real-time monitoring of redundant output data, switch to valid redundant data upon \"single redundancy failure\" or \"multiple redundancies failure\", and ensure correct flap operation.",
            "The system should set a reasonable range for the rate of change of flap control parameters (upper and lower slope limits), and data exceeding these slope limits should be marked as abnormal and trigger predefined handling strategies.",
            "During the flap extension operation, it is necessary to continuously verify the real-time accuracy of the distance to the destination to prevent false triggering caused by data delays or errors."
        ]
    },
    {
        "requirement": "When flying to the fifth side, deploy flaps to 40° when the distance from the intended landing point is less than Hw / tgλ + 1020 m and greater than Hw / tgλ + 20 m.",
        "safety_requirements": [
            "When the system is flying to the fifth side, it should verify the triggering conditions for extending flaps to 40° (distance range Hw/tgλ +20m to Hw/tgλ +1020m) against the current flight scenario to ensure accuracy of control timing.",
            "The system shall clearly define the upper and lower limits of the acquisition range for the flap control sensor, and immediately report a sensor fault and lock the abnormal data upon detecting values beyond these limits.",
            "The system should monitor the duration of the flap 40° output status to ensure compliance with constraint requirements, automatically reset and trigger an alarm when the limit is exceeded.",
            "The system shall check the operational status of different redundancies, and when two or more redundancies are in different states, execute an arbitration mechanism to ensure the correctness of the flap control function."
        ]
    },
    {
        "requirement": "If the aircraft does not enter the glide slope window, the flaps are retracted to 15° (with corresponding changes in Vg) after the aircraft levels off again.",
        "safety_requirements": [
            "The system shall verify the correctness of the flap retraction to 15° operation, and ensure that the Vg variation meets expectations when continuously no new data is received, frame loss occurs in data packets, or communication is interrupted.",
            "The system shall trigger a fault handling mechanism and maintain the current safety state when the redundancy switching condition is met but the switch fails.",
            "The system should be designed with a clear fault recovery mechanism to ensure that it can revert to a safe state following communication anomalies or redundancy switch failures, according to predefined procedures."
        ]
    },
    {
        "requirement": "If the aircraft enters the glide window, the flaps remain at 40° until landing is complete.",
        "safety_requirements": [
            "After a software power failure and restart, the system shall check the flap status recovery to ensure that the flaps remain at 40° or trigger a safety handling mechanism, avoiding control anomalies caused by 'status not recovered' or 'incorrect recovery'.",
            "When the software experiences a power failure and restart, scenarios such as interface data communication interruption and reconnection should be verified to ensure consistency between flap control commands and the glide window status after restart.",
            "The system should verify whether the flap control inputs are associated with the current operating status during different operational phases and control resolution processes, to prevent erroneous solutions caused by \"failure to consider the operational phase or status.\"",
            "The system should continuously monitor the fulfillment status of the glide slope window entry conditions and ensure that the logic for maintaining the flaps at 40° is correctly executed when the conditions are \"not met or met again.\"",
            "The system shall trigger a warning mechanism and automatically switch to the backup control channel when the redundancy switching time exceeds the threshold, ensuring the flap angle remains at 40° until landing is completed."
        ]
    },
    {
        "requirement": "During normal landing, the system starts extending the flaps to 15° at point A and extends them to 40° at point B; during reverse landing, the system starts extending the flaps to 15° at point C and extends them to 40° at point D.",
        "safety_requirements": [
            "The system shall verify the flap release sequence, constraint relationships, and logic combinations of points A/B during normal landing and points C/D during reverse landing, ensuring compliance with flight phase requirements.",
            "The system must detect the current operating phase (landing direction/retreating direction) before releasing the flaps. If a flap operation not matching the current phase is detected, the system should reject execution and trigger exception handling.",
            "When the system executes a flap angle change command, it must ensure that the control sequence, timing, and hardware actions are strictly synchronized, and the control conditions (such as flight altitude, speed) must undergo consistency verification.",
            "The system should continuously monitor the operational status differences between the primary and backup redundancies. If it detects that two or more redundancies are in different flap control states, it should initiate a safety arbitration mechanism and maintain the current flap angle.",
            "When the system is in an abnormal redundancy state (e.g., some redundancies have not entered landing mode), it should perform redundant voting on flap control commands to ensure the output aligns with the current flight phase logic."
        ]
    },
    {
        "requirement": "In remote control mode, when the system receives the \"Flap Position 0\" command from the remote control, it sends a flap 0° control signal; when receiving the \"Flap Position 1\" command, it sends a flap 15° control signal; when receiving the \"Flap Position 2\" command, it sends a flap 40° control signal.",
        "safety_requirements": [
            "The system shall check the validity of the current operating phase and status when processing flap control commands, ensuring that control signals are issued only under qualified conditions.",
            "The system needs to verify the decoding results of the flap angle control signal, covering scenarios such as normal values (0°, 15°, 40°), abnormal values, and boundary values, and lock or trigger a default safety action in case of anomalies.",
            "The sequence and timing of control signal outputs shall be strictly coordinated with the hardware actuators to ensure the completeness and sequential consistency of command conditions (e.g., flight mode, system status).",
            "After software restart, the flap control status shall be automatically restored, and the consistency between the actual position and the command signal shall be verified through sensor feedback. The fault isolation mechanism shall be activated in case of anomalies.",
            "When multiple redundant channels are in different operating states, the system should adopt a majority voting mechanism or a predefined arbitration strategy to ensure the correctness and consistency of flap control commands."
        ]
    },
    {
        "requirement": "The system needs to set different reference attitude angles according to different flight phases during the takeoff and departure segment, specifically as follows: longitudinal Jg = 4.5°, lateral yg = 0°.",
        "safety_requirements": [
            "The system should set the longitudinal attitude angle Jg=4.5° and lateral attitude angle yg=0° strictly according to scenario requirements for different flight phases, ensuring that the output control status is synchronized with the phase.",
            "The system shall check and ensure the correctness of the attitude angle setting function, and trigger synchronization or alarm mechanisms when detecting that two or more redundancies are in different operating states.",
            "During the control solution process, the system must verify the current flight phase and operating status to prevent functional errors caused by unconsidered phases or statuses, ensuring correct solution logic.",
            "The sequence and timing of system control commands should be coordinated with the hardware, and the control conditions should be complete and consistent to ensure accurate execution of attitude angle settings."
        ]
    },
    {
        "requirement": "The landing gear retraction control is initiated by the landing gear retraction signal and verified through the retraction lock signal. The landing gear extension control is initiated by the landing gear extension signal and verified through the extension lock signal. If extension fails, the emergency extension signal can be used to activate the emergency pump.",
        "safety_requirements": [
            "The system should check functional inputs in different operating phases and conditions to ensure correct handling of gear retraction, gear extension, and emergency extension signals, avoiding situations where the operating phase or condition is not considered.",
            "The system should check the control solution results, handle normal values, abnormal values, boundary values, maximum and minimum values, etc., to ensure the correctness of landing gear retraction or extension.",
            "After a software power failure and restart, the system should recover and verify the current status of the landing gear to prevent control failure caused by incomplete or incorrect status recovery.",
            "The system should ensure that the control sequence, timing, and hardware coordination are properly aligned, with complete and consistent control conditions, to avoid operational anomalies caused by sequence errors or condition conflicts.",
            "The system should monitor for timeouts during the control solution process and trigger an emergency mechanism if results are not returned within the specified time, ensuring timely and reliable landing gear operation."
        ]
    },
    {
        "requirement": "The landing gear can be retracted or deployed in autonomous control, manual correction, and remote control modes. During autonomous control or manual correction, the flight control system automatically retracts or deploys the landing gear based on the aircraft's position, motion, and other information. In remote control mode, the ground control station can issue commands at any time to retract or deploy the landing gear.",
        "safety_requirements": [
            "The system should check the integrity of functional inputs under different control modes and operating phases, ensure that the control solution process correctly considers the current operating status and phase, and verify the validity of landing gear extension/retraction commands.",
            "After power recovery or reset, the system shall verify that it has returned to the normal landing gear control state, and ensure compatibility and functional consistency of autonomous control, manual correction, and remote control modes.",
            "The system shall perform real-time checks on the control calculation results, identify normal values, abnormal values, boundary values, and extreme values, and trigger safety handling mechanisms upon detection of anomalies to maintain safety of landing gear control.",
            "The system should ensure that the sequence and timing of control commands are strictly coordinated with the hardware execution logic, verify the completeness and sequential consistency of control conditions, and prevent timing conflicts or command loss.",
            "The system should immediately terminate the current solving process, enter a preset safety state, and report a timeout alarm when control solving times out or fails to return a result."
        ]
    },
    {
        "requirement": "When the aircraft takes off and reaches the first climbing phase with the landing gear in the down position, the system should set the landing gear retraction signal to high level, while sending left and right brake signals (brake pressure at 50% FS).",
        "safety_requirements": [
            "After power recovery or runaway reset, the system shall ensure that it returns to normal operating conditions and verify the consistency of the landing gear retraction signal and brake signal (50% FS pressure) with the current flight phase.",
            "The system should perform input checks during different operational phases to ensure that relevant signal outputs are disabled when in the \"Climb Phase 1 Not Considered\" or \"Landing Gear Status Not Identified\" conditions.",
            "The system should monitor the operational status of external devices (sensors, NVM) in real time and freeze control commands when the device is in a \"power-down\" or \"initialization\" state until data becomes valid.",
            "The timing of the system output signals for landing gear retraction and braking must be strictly limited to the operating condition combination where the aircraft is in Climb Phase 1 and the landing gear is in the down position.",
            "The system should re-validate the flight phase and landing gear status after a software restart to prevent erroneous signal setting operations due to incomplete status recovery."
        ]
    },
    {
        "requirement": "One second later, the system should check the retraction lock signal. If the retraction lock signal is low, continue to check the landing gear extension/retraction status.",
        "safety_requirements": [
            "After a software power failure and restart, the system shall check the landing gear extension/retraction status and the retracted lock signal to ensure correct status recovery; otherwise, trigger the exception handling mechanism.",
            "The system should perform real-time monitoring of the inspection retraction lock signal and control solution results, identify abnormal values and boundary values, and trigger alarms or execute default safety actions.",
            "The system should verify the timing, sequence, and coordination of control logic with hardware actions to ensure complete conditions and logical consistency, preventing timing conflicts.",
            "When the system checks the retraction lock signal, it needs to associate the current working phase and status to avoid incorrect judgments caused by unrecognized phases/states.",
            "After system power recovery or reset, the status synchronization process should be automatically executed to ensure returning to the correct working phase before power failure and rechecking the signals."
        ]
    },
    {
        "requirement": "If the landing gear is in the down position, the system should set the landing gear retraction signal to low level, set the left and right brake signals to 0, and set the landing gear retraction fault flag.",
        "safety_requirements": [
            "After a power failure and subsequent restart of the system software, it should check whether the landing gear status has been restored to the down position. If it has not been restored or was incorrectly restored, the retraction gear signal must be reset to low level, the left and right brake signals set to 0, and the fault flag updated.",
            "The system should verify the control solution results to ensure the correctness of setting both left and right brake signals to 0 and the fault flag under normal, abnormal, boundary, maximum or minimum value conditions.",
            "Fault detection must include a false alarm prevention mechanism, and the false alarm handling must meet real-time requirements to avoid delays in alarm processing.",
            "The system should check the input conditions based on the current operating phase and status to ensure that landing gear signals and fault flags are properly handled without overlooking any operating phase or status.",
            "After the system power recovery or reset, it should automatically resume to the normal state, and re-execute the landing gear retraction signal, brake signal reset to zero, and fault flag setting procedures."
        ]
    },
    {
        "requirement": "If the landing gear is in the retracted position, the system shall set the landing gear retraction signal to low level and both left and right brake signals to 0.",
        "safety_requirements": [
            "The system should perform real-time checks on the landing gear control calculation results to ensure correct setting of landing gear retraction signals and braking signals under conditions of \"normal values, abnormal values, boundary values, maximum and minimum values\".",
            "After the software restarts due to power loss, the correctness of the landing gear status recovery must be verified. If \"status not recovered or incorrectly recovered\" occurs, an exception handling mechanism should be triggered.",
            "When the system is setting a signal, it must detect the current operating phase and status. If a situation arises where the operating phase or status is not considered, the control output should be frozen and an error reported.",
            "The output sequence and timing of control signals should be strictly coordinated with hardware actions, and the control conditions must maintain consistency across the state machine.",
            "Critical control commands should be equipped with a timeout judgment mechanism. When the hardware status fails to meet the control requirements within the specified time, the operation should be forcibly terminated and an alarm triggered."
        ]
    },
    {
        "requirement": "If the retraction lock signal is high, the system should periodically check the retraction lock signal.",
        "safety_requirements": [
            "The system should implement a timeout detection mechanism when the retraction lock signal is detected as high. If the locked state is not released within the timeout period, the safety protection action should be automatically triggered.",
            "The system should classify and process the periodic inspection results of the retract lock signal, verify the correctness of functional processing logic under scenarios of \"normal values, abnormal values, and boundary values\", and record any abnormal events.",
            "The system should embed a status detection mechanism in the output circuit to monitor the loop's health status in real time without affecting normal signal output, and immediately issue an alarm upon detecting any anomaly.",
            "The system must ensure that the control timing is strictly synchronized with hardware actions, and verify that the triggering conditions and execution sequence of the retraction lock signal processing procedure meet the requirements of preset logical consistency."
        ]
    },
    {
        "requirement": "If the uplock signal transitions to low level within 1 minute, the system shall set the landing gear retraction signal to low level, set both left and right brake signals to 0, and set the landing gear status to retracted.",
        "safety_requirements": [
            "After a software power failure and restart, the system should check the landing gear status and the recovery of control signals to ensure that the correct subsequent actions are performed when the status is 'not recovered' or 'error recovery'.",
            "The system shall perform real-time checks on the control calculation results for landing gear retraction signals and brake signals, identify \"out-of-range values, boundary values, maximum and minimum values\", and ensure that the processing logic meets safety requirements.",
            "When the software experiences power loss and restarts, the system shall perform integrity verification on interface data communication and execute a predefined safety protocol in case of 'interruption, unrecoverable' to ensure output correctness.",
            "The system should implement a timeout detection mechanism during the landing gear retraction process. If the hardware status does not meet the control requirements within the set time, the operation must be forcibly terminated and safety protection triggered.",
            "After power recovery or reset, the system should ensure that the landing gear control module is reinitialized to a safe state and resumes normal control procedures through a self-test mechanism."
        ]
    },
    {
        "requirement": "If the uplock signal remains high after 1 minute, the system should set the landing gear retraction signal to low, set both left and right brake signals to 0, and set the landing gear retraction fault flag.",
        "safety_requirements": [
            "After a software power failure and restart, the system shall check the landing gear retraction signal, brake signal, and fault flag status to ensure that subsequent processing logic is correctly executed when the status is not recovered or erroneously recovered.",
            "The system shall perform an integrity check on the data communication of the retractable interlock signal interface when the software experiences a power failure and restart, to ensure the correctness of output results in case of communication interruption, reconnection, or failure to recover.",
            "The fault detection mechanism should include false alarm prevention processing and ensure that the false alarm filtering operation meets the real-time requirements for alarm handling.",
            "The control calculation results should cover scenarios of normal values, abnormal values, boundary values, and extreme maximum/minimum values. The system shall execute corresponding safety handling logic for different calculation results.",
            "Critical control actions (such as setting signal levels and fault flags) should include a timeout detection mechanism that triggers a predefined safety response if the hardware status does not meet requirements for an extended period."
        ]
    },
    {
        "requirement": "When the aircraft returns to the third leg of the five-leg traffic pattern and the distance to the destination point is less than 5000m, the system shall set both left and right brakes to 100% and the landing gear deployment signal to high level.",
        "safety_requirements": [
            "After power recovery or runaway reset, the system should be able to automatically return to normal operating status, and verify that the execution status of setting both left and right brakes to 100% and gear signals to high level meets actual requirements.",
            "The system should perform real-time checks on the control calculation results to ensure correct handling under \"normal values, abnormal values, boundary values, maximum and minimum values\" conditions, and generate corresponding exception alerts or fault-tolerant mechanisms.",
            "After a power failure and subsequent restart during software state execution, the system shall check the accuracy of state recovery after restarting, identify cases of 'state not recovered' or 'incorrect recovery', and perform error correction or safe termination actions.",
            "The system should perform redundant verification on interface data with different redundancy levels, and still maintain functional correctness while triggering fault isolation measures in cases of \"single redundancy failure, complete redundancy failure (data anomaly, timing fault, etc.)\".",
            "The system shall enforce checks on the current phase and status parameters when switching between different flight phases or operating states, to avoid control resolution errors caused by \"neglecting the operating phase\" or \"neglecting the operating state,\" and to ensure the sequence of brake and landing gear operations complies with safety logic."
        ]
    },
    {
        "requirement": "The system needs to calculate the value of yg based on the lateral offset Dz, the lateral offset velocity Dz, and Δy using a formula.",
        "safety_requirements": [
            "The system should define reasonable ranges for the variation rates (upper and lower slope limits) of the parameters including track offset Dz, lateral offset speed Dz, and Δy, and clearly specify handling strategies for data exceeding these slope limits.",
            "The sequence and timing of system control should be coordinated with the hardware to ensure complete and consistent control conditions.",
            "The system should verify cases where the control solution results are normal values, abnormal values, boundary values, maximum and minimum values to ensure correct functional handling.",
            "The system should verify the correctness of the output when the data bit value precision of the interface data exceeds the precision requirements.",
            "The system should verify the correctness of the output when the data bit value precision of the interface data is less than the required precision."
        ]
    },
    {
        "requirement": "The system should check the unlock signal after 1 second.",
        "safety_requirements": [
            "The system should set a timeout mechanism when checking the unlock signal after 1 second, to handle abnormal situations where the hardware status does not meet requirements.",
            "The system checks that the sequence and timing of releasing the locking signal are strictly coordinated with the hardware operations to ensure complete control conditions and consistency.",
            "After the system power recovery or reset, it should be able to automatically resume to the normal operating state and continue executing the check for the down lock signal.",
            "After restarting the software, the signal status of the released interlock should be verified to ensure the correct handling logic is executed when the status is 'Not Recovered' or 'Error Recovery'.",
            "The system should establish a clear fault recovery mechanism to ensure that when an abnormality in the unlock detection signal is detected, it recovers reasonably according to preset rules."
        ]
    },
    {
        "requirement": "If the downlock signal is low, indicating a landing gear extension circuit fault, set the emergency landing gear extension signal to high. After 1 minute, set both the landing gear extension and emergency landing gear extension signals to low (in this case, the downlock signal cannot be checked), set the left and right brakes to their respective preset values, and activate the landing gear extension fault flag.",
        "safety_requirements": [
            "After a power failure and subsequent restart of the system software, it should check the status of the emergency landing gear deployment signal, the landing gear deployment signal, and the fault flag to ensure correct execution of subsequent operations when the status is not recovered or incorrectly recovered.",
            "The system should detect interruptions, reconnections, or unrecoverable conditions in interface data communication during the restart process, and verify the correctness of signal reset and brake preset value settings.",
            "The fault detection logic should include a false alarm prevention mechanism, while ensuring that the false alarm prevention meets the real-time requirements of alarm handling.",
            "The system should check the control solution results (e.g., normal values, abnormal values, boundary values, etc.) after the emergency landing gear deployment signal is set to high level, to ensure the accuracy of signal reset and brake preset operations after one minute.",
            "The design of the landing gear fault detection logic should avoid interfering with the normal operation of the equipment and ensure the rationality of the detection method."
        ]
    },
    {
        "requirement": "If the gear down lock signal is high, periodically check the gear down lock signal: if the gear down lock signal becomes low within 1 minute, it indicates that the landing gear has been lowered; set the gear down signal to low, set the landing gear status to down, set the left and right brakes to the corresponding preset values, and set the landing gear deployment failure flag to invalid.",
        "safety_requirements": [
            "After a software power failure and restart, the system shall check the landing gear status, landing gear deployment signal, and fault flags to ensure correct handling when the status is not recovered or incorrectly recovered after restart.",
            "When the system restarts due to a software power failure, it should check the data communication status of the interface to ensure that the output of lockout signals and related control signals is correct in case of communication interruption, reconnection, or inability to recover.",
            "The system should check the control calculation results of the preset values for left and right brakes, including normal values, abnormal values, boundary values, and maximum/minimum values, to ensure correct functional processing under all conditions.",
            "The system's fault detection mechanism should include false alarm prevention to ensure real-time requirements are met during the lockout signal check and fault flag setting process.",
            "The system should check the safety value of interface data, and ensure correct processing of landing gear deployment signals, landing gear status, and brake preselection when the safety value differs significantly from the normal non-fault value."
        ]
    },
    {
        "requirement": "If the gear-down lock signal is high, periodically check the gear-down lock signal: if after 1 minute the gear-down lock signal remains high, it indicates a landing gear extension fault; then set the emergency landing gear extension signal to high and, after 1 second, periodically check the gear-down lock signal.",
        "safety_requirements": [
            "After a power failure and subsequent restart of the software, the system should check the status recovery to ensure that the logic for setting the emergency landing gear signal is consistent with the current actual status when the 'status not recovered' or 'error recovery' occurs.",
            "The system shall monitor the status of interface data communication during software power failure and restart, to ensure that fault detection results caused by communication 'interruption, reconnection, or unrecoverable failure' do not affect normal equipment operation.",
            "The system shall verify the results of the emergency landing gear control calculation, including the correctness of processing logic under scenarios of normal values, abnormal values, boundary values, and extreme maximum/minimum values.",
            "The design of the fault detection mechanism should avoid interfering with the normal control process of the landing gear equipment, and the detection cycle and signal determination logic must comply with safety constraints.",
            "Fault detection shall include measures against false alarms, ensuring that the delay time for handling false alarms does not exceed the real-time requirements of the alarm, while maintaining accurate determination of the landing gear deployment signal."
        ]
    },
    {
        "requirement": "If the unlock signal remains high after 1 minute, it indicates failure of the emergency landing gear extension. Both the landing gear extension and emergency landing gear extension signals are set to low, the left and right brakes are set to their respective preset values, and the landing gear extension fault flag is set to active.",
        "safety_requirements": [
            "After a software power failure and restart, the system should check the landing gear status and signal settings to ensure correct status recovery. If 'not recovered' or 'incorrect recovery' occurs, the emergency landing gear deployment failure handling procedure should be executed again.",
            "The system shall be equipped with a false alarm prevention mechanism to ensure the accuracy of alarms when a failure in detecting emergency landing gear deployment is identified, while the false alarm prevention mechanism shall not affect the real-time requirements for alarm handling.",
            "When the software experiences a power failure and restarts, the system should perform an integrity check on the interface data communication, handle exceptional situations such as 'interruption, reconnection, and unrecoverable errors', and ensure the correctness of signals for deploying landing gear, brake preset values, and fault flag settings.",
            "The system should verify the control resolution results for emergency landing gear deployment, including 'normal values, abnormal values, boundary values, maximum and minimum values', to ensure the correctness of the left and right brake preset amounts and signal settings.",
            "The fault detection mechanism should cover all critical items including emergency landing gear deployment failure, signal set logic, brake pre-set value configuration, and fault flag activation, to ensure comprehensive detection coverage."
        ]
    },
    {
        "requirement": "If the lock-down signal goes low within 1 minute, it indicates successful emergency gear extension. After a 2-second delay, both the gear extension and emergency gear extension signals are set to low level, the landing gear status is set to down, the left and right brakes are set to their respective preset values, and the gear extension fault flag is invalidated.",
        "safety_requirements": [
            "After the software restarts due to power loss, a status check should be performed on the landing gear status, left and right brake preset values, and fault flags, to ensure correct handling logic when the status is 'not recovered' or 'error recovery' occurs.",
            "The fault detection mechanism should include false alarm prevention processing and ensure that false alarm prevention measures do not affect the real-time requirements of alarm handling.",
            "Verify the control solution results (e.g., left/right brake presets) to ensure the processing logic is correct under conditions such as 'normal values, abnormal values, boundary values, maximum and minimum values'.",
            "When the software restarts after a power failure, the communication status of the landing gear extension/retraction and emergency landing gear extension signal interfaces should be checked to ensure correct output in cases of 'interruption, reconnection, and inability to recover'.",
            "During the emergency landing gear extension process, functional inputs should be verified according to the current operating phase and status to avoid processing errors caused by \"failure to consider the operating phase\" or \"failure to consider the operating status\"."
        ]
    },
    {
        "requirement": "When powering on the system on the ground, it should initialize all signals and statuses to ensure the landing gear and brake systems are in the correct initial state.",
        "safety_requirements": [
            "During ground power-on initialization, the system shall check the operational status of external devices (sensors, NVM, databases, etc.) to ensure their output data during the \"power-off, initialization\" phase is correct and consistent with the initial status of landing gear and brake systems.",
            "During system initialization, the sequence and timing of control commands must be verified for coordination with hardware actions to ensure complete control conditions and logical consistency.",
            "After system power recovery or runaway reset, it should automatically perform a state integrity check to ensure that signals and states can be restored to a safe initial condition meeting safety requirements, and record the handling results in cases where the state is not recovered or errors occur during recovery.",
            "Before issuing critical control commands (e.g., brake system operations), the system should perform real-time reasonableness checks on the device status, and must not execute hazardous commands if initialization is incomplete or the status is abnormal.",
            "After a software restart, the system should perform a secondary verification of the current status of the landing gear and braking systems to ensure that the status after restart is consistent with the initialization objectives, and initiate corrective mechanisms in case of 'error recovery'."
        ]
    },
    {
        "requirement": "Remote control commands for extending or retracting the landing gear can be issued in any control mode as required.",
        "safety_requirements": [
            "When the system issues commands for extending or retracting the landing gear, it must ensure that the control sequence, timing, and hardware coordination are properly aligned, with complete control conditions and logically consistent interdependencies.",
            "A timeout judgment mechanism should be set during the execution of landing gear retraction and extension commands. When the hardware status does not meet requirements beyond the set threshold, the operation shall be terminated and an alarm triggered.",
            "Before issuing landing gear retraction commands, a reasonableness check must be performed based on the equipment's real-time status (such as flight phase, speed, and altitude), and operations under hazardous conditions are prohibited.",
            "When executing landing gear control during different flight phases or operational states, it is necessary to verify whether the input conditions match the current phase and state, ensuring command validity.",
            "The landing gear control logic must strictly constrain the timing relationships and concurrent conditions to avoid abnormal actions caused by multiple command conflicts."
        ]
    },
    {
        "requirement": "When receiving the \"retract landing gear\" remote command, if the flight phase is not ground waiting and the flight altitude is no less than 80m, the processing shall be carried out as specified in item 1) of Section 3.2.11.3 (excluding its conditions).",
        "safety_requirements": [
            "When the system receives a \"Retract Landing Gear\" command, if it detects an incorrect or invalid operation, it should immediately terminate the response and trigger the alarm mechanism.",
            "The system shall perform a reasonableness check on the \"retract landing gear\" command. If the current flight phase is ground waiting or the flight altitude is below 80m, the command shall be rejected and an abnormal status feedback provided.",
            "Before processing the 'retract landing gear' command, the system needs to check the validity of the current flight phase and altitude input data. If the operating phase or status is not considered, a warning will be triggered.",
            "The system shall ensure that the output control timing of the 'retract landing gear' command is only applicable to scenarios where the aircraft is not in a ground waiting phase and the flight altitude is ≥80m; otherwise, execution shall be prohibited.",
            "Before issuing the \"retract landing gear\" command, the system must perform multiple checks based on the flight status and equipment health status. If any abnormalities are detected, the action will be terminated and a fault report will be generated."
        ]
    },
    {
        "requirement": "When receiving the remote control command \"Lower Landing Gear\", proceed according to the handling described in 3.2.11.3, item 2) (excluding its conditions).",
        "safety_requirements": [
            "When the system receives a \"landing gear deployment\" command, it should verify whether the current flight status meets the execution conditions; otherwise, the command must not be executed.",
            "The system should identify and reject invalid or conflicting \"landing gear deployment\" commands (e.g., repeated commands when the landing gear is already deployed).",
            "The system needs to record an exception log and trigger an alarm for any 'landing gear deployment' command that does not comply with the operating procedure.",
            "Before the system executes the 'landing gear deployment' command, it should real-time determine whether the equipment status allows the operation; otherwise, the action should be terminated and a status error reported.",
            "When the system executes the 'landing gear deployment' command, a timeout threshold must be set. If the operation is not completed within the timeout period, it should be terminated and the fault handling process initiated."
        ]
    },
    {
        "requirement": "The system should support adjusting the throttle valve opening through fine-tuning of the throttle valve in the takeoff roll segment, with the adjustment limit range set to [-15%, 0%].",
        "safety_requirements": [
            "The system should set a reasonable range (upper and lower slope limits) for the rate of change of the throttle valve fine adjustment. When the rate exceeds the limit, the system should automatically restrict the adjustment magnitude and trigger an alarm.",
            "The system must clearly define the measurement range (upper and lower limits) of the throttle position sensor. If the measured value exceeds this range, a sensor fault must be reported immediately and the throttle position locked.",
            "The system control should strictly coordinate the sequence and timing of throttle valve fine adjustment with the hardware operation logic to ensure complete control conditions and conflict-free execution.",
            "The system should perform real-time checks on the throttle control calculation results, distinguish between normal values, abnormal values, and boundary values (-15%, 0%), and ensure the accuracy of the processing logic.",
            "When the redundancy switching condition is triggered, the system must verify the continuity and stability of the throttle output value to prevent abrupt changes during switching that could cause the output value to exceed the amplitude limit range."
        ]
    },
    {
        "requirement": "Each of the two rear wheels of the aircraft has an independent braking system. The brakes use a PWM control scheme. The flight control computer sends a 2 kHz pulse width modulated signal to the braking system, where the brake torque is proportional to the duty cycle of the PWM signal. The duration of the brake corresponds to the duration of the PWM signal.",
        "safety_requirements": [
            "The system should check the input parameters of brake control calculation in different operating states and phases to ensure correct handling logic when 'operating phase not considered' or 'operating state not considered' occurs.",
            "The system should verify the sequence, timing, and coordination of PWM control signals with hardware execution, and ensure that control conditions are complete and consistent.",
            "The system should implement a timeout detection mechanism for brake torque control, executing predefined safety operations when the hardware status fails to meet requirements for an extended period.",
            "After power recovery or reset, the system should automatically return to the preset normal braking control state and complete self-test to confirm functional integrity.",
            "The system shall perform real-time checks on the brake control calculation results, including verification of handling correctness under normal values, abnormal values, boundary values, and extreme maximum/minimum value scenarios.",
            "The system should continuously monitor the matching between the PWM signal duty cycle and duration to ensure that the brake torque output is consistent with the dynamic requirements of the flight status."
        ]
    },
    {
        "requirement": "If the full compression signal of the landing gear is valid and the airspeed is less than a certain speed threshold vk_may_brake, differential braking will be used for course correction.",
        "safety_requirements": [
            "The system should perform a timeout judgment on the hardware status during the execution of differential braking for deviation correction, to handle situations where control requirements are not met within an extended period.",
            "The system should check the differential brake control calculation results to ensure the correctness of error correction processing under conditions such as \"normal values, abnormal values, boundary values, maximum and minimum values\".",
            "When the system corrects deviation using differential braking, it should check whether the functional inputs match the current operating phase and status, to prevent abnormal handling due to \"ignoring the operating phase or status.\"",
            "After a system power failure and restart, the correctness of brake correction status recovery should be verified, and exceptional situations such as 'status not recovered' or 'incorrect recovery' should be handled.",
            "The system's control sequence and timing for executing differential braking should be coordinated with the hardware to ensure complete and consistent control conditions."
        ]
    },
    {
        "requirement": "In autonomous control mode, the differential brake control law is: δb = -(Kz * Dz + Kz * Dz - K * Δy - Ky * wy)",
        "safety_requirements": [
            "The system should perform real-time checks on the calculation results of the differential brake control law to ensure correct handling under normal, abnormal, boundary, maximum, and minimum value conditions.",
            "The system should verify functional inputs according to different operational phases and states, and analyze the correctness of control solutions when 'unconsidered operational phases' or 'unconsidered operational states' are present.",
            "The system must ensure that the control sequence, timing, and hardware coordination are consistent, and verify the completeness of control conditions and logical consistency.",
            "The system shall set a timeout judgment mechanism for critical differential brake control to handle situations where hardware status fails to meet control requirements for an extended period.",
            "The system should verify the correctness of timing relationships, constraint relationships, concurrency relationships, and combination relationships in the differential brake control logic."
        ]
    },
    {
        "requirement": "In manual correction mode, the differential brake control law is: δb = -[Kz * (Dz - DzgSemi - DzsemiOld) + Kz * Dz - K * Δy - Ky * wy], where DzsemiOld is the lateral offset correction value during the leveling phase.",
        "safety_requirements": [
            "When the system performs differential braking control law calculations, it should check the input parameters for their operational phase and status to ensure that the current phase or status is not missing, and make corrections if necessary.",
            "The system should verify the numerical range of the control solution result δb, monitor abnormal values, boundary values, and extreme maximum and minimum values in real time, and trigger corresponding fault-tolerant handling mechanisms.",
            "The execution sequence and timing of control logic must be strictly synchronized with hardware operations to ensure complete control conditions and logical consistency.",
            "The system needs to check the timing, constraints, and concurrency relationships of control logic for each functional point to ensure their combined relationships comply with design specifications.",
            "When the control calculation process times out without returning a result, the system should immediately terminate the current computation and activate the safety fallback strategy."
        ]
    },
    {
        "requirement": "In the attitude remote control (inner loop remote control) mode, the differential brake control law is: δb = K * (-yg) + Ky * wy",
        "safety_requirements": [
            "The system should ensure that the calculation sequence and timing of the differential brake control law δb = K * (-yg) + Ky * wy are coordinated with the hardware, with complete and consistent control conditions.",
            "The system should dynamically verify the control solution results to ensure correct handling logic under normal, abnormal, boundary, and extreme value conditions.",
            "The system needs to check whether the input data is associated with the current phase and state during different working phases and states, in order to prevent logic errors caused by ignoring the working phase or state.",
            "The system has a timeout detection mechanism for critical differential brake control settings, which initiates a predefined handling process when the hardware status fails to meet control requirements for an extended period.",
            "The system shall verify the correctness and consistency of the timing relationships, constraints, concurrent operations, and combination relationships of the differential brake control logic."
        ]
    },
    {
        "requirement": "In the non-internal-loop remote control (control surface remote control) mode, the specific formula for the differential brake control law is not provided, but the corresponding control logic needs to be implemented.",
        "safety_requirements": [
            "The system shall ensure that the sequence and timing of the differential brake control logic are coordinated with the hardware, and that the control conditions are complete and consistent一致性.",
            "The system should implement a timeout detection mechanism in critical control operations to handle timeout scenarios where hardware status fails to meet control requirements.",
            "The system should perform phase and state correlation checks on functional inputs when switching between different operational phases and states, to verify the correctness of the control solution logic.",
            "The timing of the system's output control status needs to meet the sequence requirements of the current operating scenario.",
            "The system shall implement a status monitoring mechanism for the output circuits of differential braking control without affecting normal output."
        ]
    },
    {
        "requirement": "During the ground waiting phase, the differential brake control law under both autonomous and manual correction modes is: δb = 0.",
        "safety_requirements": [
            "The system should implement a differential braking control timeout judgment mechanism during the ground waiting phase, triggering safety handling when the hardware status cannot achieve δb=0.",
            "The system must verify the input data during the ground waiting phase to ensure the correct application of the δb=0 rule in control calculations and reject execution when the operational phase/state is not considered.",
            "The system should monitor δb calculation results in real-time, allowing only the normal value 0, and immediately correct any detected anomalies or non-zero values.",
            "The timing of the differential brake control must be strictly synchronized with hardware operations, ensuring that control conditions are complete and consistent.",
            "The system must continuously monitor the entry conditions for the ground waiting phase, safely switch states when conditions change, and adjust the control laws accordingly."
        ]
    },
    {
        "requirement": "In remote control mode, it is the same as during the taxi phase, where vk_may_brake = 80 km/h.",
        "safety_requirements": [
            "When the system controls the braking speed vk_may_brake in remote control mode, a timeout detection mechanism shall be set. If the hardware status cannot reach the required 80 km/h within the predetermined time, the safety handling process shall be triggered.",
            "The system shall ensure that the control sequence and timing in remote control mode are consistent with those during the taxi phase, and the control conditions must cover hardware coordination requirements and maintain logical consistency.",
            "The system needs to check the functional input data in different operating phases and analyze the correctness of the handling of the vk_may_brake control in cases of 'unconsidered operating phase' or 'unconsidered operating state'.",
            "The system shall clearly define the acquisition range (including upper and lower limits) of the brake speed sensor vk_may_brake. Upon detecting a value exceeding the range, it shall immediately report a sensor fault and activate the redundancy handling mechanism.",
            "The system should perform real-time checks on the brake speed control calculation results, distinguishing between normal values, abnormal values, and boundary values, triggering a warning and switching to safety mode when anomalies occur."
        ]
    },
    {
        "requirement": "If the landing gear full compression signal is valid and the airspeed is not less than vk_may_brake, then δb = 0.",
        "safety_requirements": [
            "The system shall verify the timing coordination between the landing gear full compression signal and the airspeed signal, ensuring that when the airspeed is greater than or equal to vk_may_brake and the signals are valid, the δb control condition trigger logic is complete and conflict-free.",
            "The system shall perform a full-range check on the control solution results, including normal values, boundary values (when airspeed approaches the vk_may_brake threshold), and mandatory effectiveness of δb=0 under abnormal value scenarios.",
            "Implement anti-false alarm mechanisms in the landing gear signal and airspeed detection stages to ensure that the determination of δb=0 meets the real-time requirements for alarm handling (error time ≤ XXms).",
            "The system should dynamically adjust the control solution strategy based on the flight phase. When the current operating phase or status is not identified, the setting operation of δb=0 must be prohibited.",
            "Add timeout monitoring for the δb control command. If the hardware response times out (threshold ≥ XXms), immediately activate the preset safety fault-tolerant mode and trigger a status alarm."
        ]
    },
    {
        "requirement": "δb is limited within [-XfB, XfB]. XfB is the maximum proportional braking amount, which can be set via remote control, with a default value of 40%.",
        "safety_requirements": [
            "The system should clearly define the sensor's acquisition range, immediately report a sensor failure when the value of δb exceeds [-XfB, XfB], and limit the remote control setting range of XfB.",
            "The system should verify the control solution results for δb, distinguish between normal values, abnormal values, boundary values, and extreme maximum/minimum values, and output the result based on the preset safety value in case of abnormalities or limit exceedance.",
            "When the output δb exceeds the limit, the system should perform truncation processing and use the default value of 40% as the safety value, while triggering the alarm mechanism.",
            "The system should implement a timeout detection mechanism during the brake control process; if the hardware status fails to meet control requirements for an extended period, the system shall automatically revert to a safe state.",
            "When the system switches between different operating phases or states, it should verify whether the input data meets the requirements of the current phase to ensure that the δb solution process matches the state."
        ]
    },
    {
        "requirement": "The system should support autonomous throttle control for climb segment 1.",
        "safety_requirements": [
            "During the autonomous throttle control in the first climbing phase, the system should ensure that the control sequence and timing are strictly coordinated with the hardware. The control conditions must cover all scenarios comprehensively and maintain logical consistency.",
            "The system should set a timeout judgment mechanism for the key control commands of the autonomous throttle valve, triggering a safety mode and alarm when the hardware status does not meet expectations.",
            "The system needs to verify the timing relationships, constraints, and concurrent combination relationships of the control logic for the climb phase 1, ensuring there are no conflicts or logical errors.",
            "After the system executes throttle control, it should monitor the consistency between hardware status and the control target in real time, and execute an error correction mechanism when deviations exceed limits.",
            "The system should perform multi-dimensional checks on the throttle control resolution results, including verification of handling correctness for normal values, abnormal values, boundary values, and extreme value scenarios."
        ]
    },
    {
        "requirement": "If δb < 0, then δbL = -δb + YzBL + YjB, δbR = YzBL + YjB; otherwise δbL = YzBL + YjB, δbR = δb + YzBR + YjB.",
        "safety_requirements": [
            "The system should check the cycle of interface data to ensure that when the input cycle is greater than, less than the specified cycle, or at extreme maximum/minimum values, the calculated results of the rudder angles δbL and δbR are correct.",
            "The system should check for cases where the interface data bit precision is lower than required and ensure correct calculation logic for the rudder deflection angles δbL and δbR when the precision is insufficient.",
            "The system should handle cases where the interface data bit precision exceeds the requirements, ensuring that the calculation process for the rudder deflection angles δbL and δbR complies with the precision specifications.",
            "The system should verify the correctness of the control solution results under normal values, abnormal values, boundary values, and maximum/minimum values, ensuring that the outputs of the left and right rudder deflection angles δbL and δbR meet expectations.",
            "The system should check for division by zero during data processing to prevent calculation anomalies in the rudder angles δbL and δbR caused by division by zero errors."
        ]
    },
    {
        "requirement": "YzBL and YzBR are the left and right brake presets, which can be set via remote control, with a default value of 10%.",
        "safety_requirements": [
            "The system should verify the YzBL and YzBR brake preset values of the remote control settings, correctly determine the normal, abnormal, boundary, maximum and minimum values of the control solution results, and trigger a fault alarm and use default values when exceeding the allowable range.",
            "The system shall check the current operating phase and status before setting the brake preset. Remote control commands that do not match the current phase or status shall be rejected.",
            "After a system power failure and restart, the status of the YzBL/YzBR preset values must be verified for proper recovery. If incomplete or incorrect recovery is detected, these values should be forcibly reset to their default values and an alarm should be triggered.",
            "The system should define the acquisition range (including upper and lower limits) of the brake preset sensor. When the remote control setting exceeds this range, a sensor fault should be directly reported and writing should be prohibited.",
            "The system shall be equipped with a misoperation prevention mechanism, which requires double verification or permission authentication for brake preset command via remote control before it can take effect."
        ]
    },
    {
        "requirement": "YjB is the emergency brake bias, which is 0 under normal conditions and 30% when the link is interrupted.",
        "safety_requirements": [
            "The system should compare the safety value (30%) and normal value (0) of the emergency brake offset YjB in real time, and verify whether the output conforms to the link break logic when the difference exceeds the threshold.",
            "The system should monitor the input value timing of YjB to ensure the timeliness and correctness of switching the offset to the preset safety value in scenarios of 'premature stop' or 'delayed stop'.",
            "The system should perform polymorphic validation on the control resolution results of YjB, including normal values, abnormal values, boundary values, and extreme maximum and minimum values, to ensure the correct handling logic of the emergency braking function under various resolution results.",
            "The system shall immediately switch YjB to a 30% safety bias upon detecting a communication link interruption, automatically reset it to 0 after communication is restored, and record the status switching event.",
            "The system's fault detection mechanism must include false alarm prevention to ensure the false alarm rate is below the threshold and the alarm processing delay meets real-time requirements, avoiding unnecessary bias switching."
        ]
    },
    {
        "requirement": "After performing the calculation according to a), the resulting max(δbL ,δbR ) ≤1.",
        "safety_requirements": [
            "The system should verify the control solution results of max(δbL, δbR) to ensure correct handling under normal values, abnormal values, boundary values, maximum and minimum values, and satisfy max(δbL, δbR) ≤1.",
            "The system should check the data processing logic during the solution process, identify and handle potential division by zero operations, and avoid failures caused by computational anomalies.",
            "The system should select the corresponding calculation logic according to different working stages and statuses, perform fault-tolerant processing on input data that does not consider the working stage or status, and ensure that the calculation results meet the constraint conditions.",
            "The system should check the precision of interface data values, and if the precision is below the threshold, it should either reject processing or activate a fault-tolerant mechanism to ensure the validity of the solution results.",
            "The system should forcibly truncate the output data to the upper limit value 1 when it exceeds the threshold (e.g., max(δbL, δbR) > 1), or output according to a preset safety value and trigger an alarm."
        ]
    },
    {
        "requirement": "The specific softening time should be determined according to control requirements, actual needs, and previous control experience.",
        "safety_requirements": [
            "The system should determine the softening time based on control requirements, practical needs, and past experience, verify the control sequence, timing, and coordination with hardware, and ensure that control conditions are complete and consistent.",
            "The system should implement a timeout detection mechanism when applying softening time in critical control or operations, to handle situations where the hardware status fails to meet control requirements for an extended period.",
            "When the system determines the softening time, it must ensure that the timing of the output control state meets the timing requirements of the specific scenario.",
            "After the system performs hardware control, it should monitor the consistency between the hardware status and the soft time control requirements in real-time, and trigger corrective actions when inconsistencies occur.",
            "The system shall ensure that the determination logic of the softening time is correctly coordinated with the control logic of other functional points in terms of timing, constraints, concurrency, and combination relationships."
        ]
    },
    {
        "requirement": "The transition into and out of the ground waiting phase is made more reliable through a two-out-of-three switching command selection.",
        "safety_requirements": [
            "The system should verify the validity of transitions between high-priority and low-priority functions during state switching, ensuring that states and functions are correctly executed in scenarios of both \"high-priority switching to low-priority\" and \"low-priority switching to high-priority\".",
            "The system should verify the control sequence, timing, and coordination with hardware during the transition into or out of the ground waiting phase, and ensure that control conditions are complete and logically consistent.",
            "The system shall check the operating status of different redundancies to ensure that the function implementation complies with the design specifications in cases where \"two or more redundancies are in different states.\"",
            "The system should set a timeout determination mechanism during the execution of critical control commands, and trigger preset safety measures when the hardware status does not meet the control requirements."
        ]
    },
    {
        "requirement": "The transition conditions for other phases should be judged multiple times according to specific circumstances, and phase transition shall only occur when the results of five consecutive judgments are consistent, in order to reduce the probability of misjudgment.",
        "safety_requirements": [
            "When multiple state transition conditions are satisfied simultaneously, the system should verify the conditions for transitions from one state to multiple states and from multiple states to the same state, ensuring correct transition priority and logic.",
            "When the system processes transitions between states of different priorities, it should verify the execution consistency of states and functions under the conditions of 'high priority switching to low priority' and 'low priority switching to high priority'.",
            "The system should monitor the entry conditions of states without transition relationships, ensuring that no illegal state transitions are triggered when the \"entry conditions are simultaneously satisfied\" or \"satisfied during execution.\"",
            "During state transitions, if different states have conflicting execution requirements for the same function, the system shall ensure that the function is correctly maintained or immediately interrupted according to the requirements of the target state.",
            "The system shall perform a real-time check of the condition validity when the state entry conditions change (satisfied, not satisfied, satisfied again), and execute phase transition after five consecutive consistent determinations."
        ]
    },
    {
        "requirement": "After the flight control computer is powered on the ground or the aircraft is fully landed and the flight control pre-shutdown command is issued, it enters the ground waiting phase.",
        "safety_requirements": [
            "When the system enters the ground waiting phase, functional inputs should be checked to ensure the current operational phase and status have been correctly identified, and to verify the compatibility of the control solution process with the phase.",
            "After a power failure and subsequent restart of the system software, the status recovery during the ground waiting phase should be checked to ensure correct status restoration and prevent erroneous recovery.",
            "The system should implement a timeout determination mechanism when executing critical control commands during the ground waiting phase, in order to handle situations where hardware status fails to meet control requirements for an extended period.",
            "The system should check the control solution results during the ground waiting phase to ensure correct handling of normal values, abnormal values, boundary values, maximum and minimum values.",
            "The system should trigger an exception handling mechanism and ensure the correctness of function processing during the ground waiting phase when a timeout occurs in the control solution process."
        ]
    },
    {
        "requirement": "During the ground taxiing phase (including takeoff and landing taxiing), after receiving a ground hold command sent remotely, the system transitions into the ground hold phase.",
        "safety_requirements": [
            "When the system receives a ground hold command during the ground taxi phase, it should check whether the functional inputs take into account the current operational phase and status to ensure correct transition to the ground hold phase.",
            "After power recovery or runaway reset, the system should automatically return to the normal operating state and verify the correctness of control calculations during the ground waiting phase.",
            "A timeout determination mechanism should be set during the ground waiting command execution period. When the hardware status does not meet the control requirements for a long time, a preset exception handling action should be triggered.",
            "When the system enters the ground waiting phase, it should verify the coordination of control sequences, timing, and hardware actions to ensure that control conditions are complete and logically consistent.",
            "The system should verify the consistency between the actual task execution sequence and the specified sequence during state transitions, and execute safety fault-tolerant handling logic in case of discrepancies."
        ]
    },
    {
        "requirement": "When max(δbL, δbR) > 100%, if δbL ≥ δbR, set δbR = δbR - (δbL - 100), δbL = 100%; if δbR > δbL, set δbL = δbL - (δbR - 100), δbR = 100%. This ensures that the left and right brakes meet the differential travel requirement.",
        "safety_requirements": [
            "The system should check the handling logic when the control resolution result is a normal value, abnormal value, boundary value, or extreme value, ensuring that the differential adjustment of left and right braking meets the constraint max(δbL, δbR) > 100%.",
            "The system should verify the applicability of the control solution process under different operating states and phases, ensuring that functional inputs have accurately distinguished the current operating phase and state, to avoid computational deviations caused by unconsidered factors.",
            "The system shall verify the precision of data bits for interface data. When the actual precision is less than or greater than the specified requirement, it shall ensure that the output brake commands δbL and δbR still meet the differential limit conditions.",
            "The system should compare the safety value with the normal value under non-fault conditions. When the difference between them exceeds the allowable range, the fault-tolerant mechanism must be activated and an alarm signal generated to prevent unsafe command outputs."
        ]
    },
    {
        "requirement": "The system should support adjusting the throttle valve opening during segment 1 climb by fine-tuning the throttle valve, with the amplitude limit changed to [-15%, 0%].",
        "safety_requirements": [
            "The system should define upper and lower limits for the slope of the throttle valve fine adjustment rate, and execute a predefined handling strategy when these limits are exceeded.",
            "The system should clearly define the upper and lower limits of the sensor's measurement range, and immediately trigger a sensor fault alarm when these limits are exceeded.",
            "The system shall ensure that the throttle control commands are sequenced and timed in coordination with hardware actions, and the control conditions must meet completeness and logical consistency.",
            "The system should perform classification checks on the control solution results, including normal values, abnormal values, boundary values (-15% and 0%), and extreme values, and verify the correctness of the processing logic.",
            "The system should employ a detection module independent of the control loop to perform fault detection, ensuring the rationality of the detection logic without affecting the normal operation of the equipment.",
            "When the system's throttle adjustment reaches the limit boundary, it should forcibly cut off the over-limit command and maintain the current safety status."
        ]
    },
    {
        "requirement": "The brake command issued by the remote control has the highest priority. Regardless of the current control mode, when a \"brake\" command is received, the aircraft will superimpose the full brake value onto the left and right brake control outputs respectively before performing limit-exceeding processing. The full brake value can be remotely set, with a default value of 80%.",
        "safety_requirements": [
            "The system should implement a timeout judgment mechanism when executing brake commands, and perform fault handling if the hardware status cannot meet the control requirements within the predetermined time.",
            "The system shall perform a compatibility check between the brake command input and the operational phase/state, ensuring that the full brake force summation and over-limit handling logic are only effective under applicable states.",
            "The system should perform outlier and boundary value detection on the combined left and right brake control outputs, and trigger safety protection measures when abnormal values are detected.",
            "The system should implement truncation processing for excessive output caused by the superposition of full braking amounts, and use a preset safety value (default 80%) as the final control output.",
            "After a software restart, the system should automatically check the current brake command execution status. If the status is found not restored or incorrectly restored, the system shall enter a preset safety mode to reinitialize control parameters."
        ]
    },
    {
        "requirement": "When receiving the \"release brake\" command, braking is performed according to the calculated left and right brake amounts (i.e., without superimposing the full brake amount). At this time, if the calculated brake amount δb is 0, both left and right brakes take the corresponding brake preset values.",
        "safety_requirements": [
            "When the system executes the \"release brake\" command, it shall enforce a check on the current working phase and status to ensure that the calculated brake amount δb does not miss any phase or status constraints.",
            "The system should verify whether the result is a normal value, boundary value, or abnormal value when calculating the brake displacement δb, and automatically apply a preset value in the case of δb=0.",
            "After software restart, the correctness of brake status recovery must be checked immediately to ensure that safety presets are enforced if recovery fails or is incorrect.",
            "If the calculation of brake amount δb times out, the current calculation should be terminated and a predefined safety braking strategy should be triggered.",
            "The system shall perform real-time consistency checks on the redundancy data of left and right brake amounts, and initiate an error isolation mechanism when the difference exceeds the threshold."
        ]
    },
    {
        "requirement": "When receiving a vehicle command or a brake release command, the left and right brake control quantities are taken as the left and right ground inspection brake quantities, respectively.",
        "safety_requirements": [
            "When the system receives a vehicle command or a brake release command, it should check the working status of different redundancies to ensure correct output of left and right ground inspection brake quantities, even in cases where two or more redundancies are in different states.",
            "The system should perform real-time checks on the brake control calculation results to ensure correct functional handling under \"normal values, abnormal values, boundary values, maximum and minimum values\" conditions, and limit the control output within safe threshold ranges.",
            "The system should verify the values of the same input data received through different redundancy channels. When there is a discrepancy between the left and right ground check brake data, a predefined arbitration rule (such as majority voting or historical data continuation) should be used to determine the final control value.",
            "The system must clearly distinguish the current operating phase and status during control computation. Brake commands shall not be executed when a valid operating phase/status is not detected, and a fault alarm shall be triggered.",
            "The system should perform dynamic cross-validation of the left and right brake control inputs. When the deviation between the left and right control inputs exceeds the set threshold, the system shall automatically enter safety mode and utilize redundant backup data."
        ]
    },
    {
        "requirement": "Upon receiving the flight control pre-shutdown command, set the left and right brake control values to 0, i.e., clear the preset values for left and right brakes.",
        "safety_requirements": [
            "After a software power failure restart, the system should check the status of the left and right brake presets to ensure that the clearing operation is executed correctly, and handle situations such as 'status not restored' or 'incorrect recovery'.",
            "The system should check the calculation results of left and right brake control outputs to ensure correct handling under conditions such as normal values, abnormal values, boundary values, maximum and minimum values.",
            "The system shall verify the current operating phase and status when processing a pre-shutdown command, ensuring that the control solution process is consistent with the phase and status.",
            "The system should set a timeout judgment when performing the brake control clearance operation, handle situations where hardware does not respond in time, and trigger safety mechanisms.",
            "The system should perform zero-division checks during data processing to prevent functional anomalies caused by division-by-zero errors."
        ]
    },
    {
        "requirement": "Brake command processing is performed only during ground waiting, takeoff roll, and landing roll phases.",
        "safety_requirements": [
            "When the system receives a brake command, it should determine whether the current flight phase is ground waiting, takeoff roll, or landing roll phase; commands from non-designated phases shall not be responded to.",
            "Real-time monitoring of the equipment status should be conducted before issuing brake commands, and control actions should only be executed when the equipment is in a responsive state.",
            "A timeout judgment mechanism should be set during the execution of critical brake control commands. If the hardware status does not meet the control requirements within the specified time, the command should be automatically terminated and a fault warning triggered.",
            "The system should identify and intercept incorrect operations or invalid brake commands that do not conform to the current scenario, refuse to execute them, and provide feedback on the abnormal operation.",
            "The system should record the operation log and activate the safety lock mechanism to prevent unauthorized execution for brake commands that do not conform to the flight phase or operation procedure."
        ]
    },
    {
        "requirement": "When retracting the landing gear, both left and right brake quantities are set to 50%; when extending the landing gear, both left and right brake quantities are set to 100%. At the end of landing gear retraction, both left and right brake quantities are set to 0%; at the end of landing gear extension, both left and right brake quantities are set to the preset value.",
        "safety_requirements": [
            "When the system is retracting or deploying the landing gear, it should check the inputs of the control calculation process according to different operating phases and states, ensure proper handling of \"unconsidered operating phase\" or \"unconsidered operating state\" conditions, and accurately set the left and right brake quantities.",
            "The system shall perform real-time checks on the control calculation results of the brake amount, verify whether they are normal values, abnormal values, boundary values, or extreme maximum/minimum values, and ensure corrective actions are taken in case of anomalies.",
            "After a software power failure and restart, the system should check and restore the left and right brake quantities to the correct values matching the current landing gear status, preventing \"status not restored\" or \"incorrect restoration\".",
            "When different redundancies are in different operating states, the system should check and ensure the correct execution of the left and right brake setting functions, and handle situations where 'two or more redundancy states are inconsistent'."
        ]
    },
    {
        "requirement": "When an aircraft is returning and landing, if the conditions for safe landing are not met and the landing continues, it may affect the safety of the landing. To enhance the safety of aircraft landing, a go-around function is provided, enabling the aircraft to adjust its flight status and land again.",
        "safety_requirements": [
            "The system should have self-diagnosis and recovery mechanisms to ensure that the key status parameters of the go-around function are fully restored to normal operating mode after power recovery or reset due to program runaway.",
            "The system should be equipped with explicit fault recovery logic to ensure that the go-around function can be reinitialized through a predefined process and maintain flight status safety after an abnormal interruption.",
            "When the go-around function is triggered, the system shall immediately interrupt the current landing process and enforce synchronization of the execution status of core functions such as flight attitude adjustment and power output.",
            "The system shall continuously monitor the go-around status entry conditions, terminate the go-around process when the conditions change from satisfied to unsatisfied, and restart the status verification when the conditions are satisfied again.",
            "During the execution of the go-around function, if the conditions for a safe landing are re-met, the system should determine whether to terminate the go-around and resume the standard landing procedure based on the priority strategy.",
            "The system should implement interlock protection for the multi-state transition process of the go-around function, prohibiting unauthorized execution of critical operations such as power redistribution and control surface manipulation."
        ]
    },
    {
        "requirement": "After the aircraft enters the glide path in autonomous or manual correction mode, if it switches to remote control, and then switches back to autonomous control mode when the flight altitude is above the decision height (40m), the aircraft will automatically perform a go-around using a soft transition method from remote control to autonomous control.",
        "safety_requirements": [
            "After power recovery or reset, the system shall ensure restoration to the correct operating state of remote control or autonomous control mode, and match the go-around logic according to the current flight altitude (≥40m).",
            "When the software restarts after power loss, an integrity check should be performed on the flight mode status. If 'status not restored' or 'error recovery' occurs, the system should be forced into safe mode and autonomous control switching should be terminated.",
            "When the system reconnects after an interruption in interface data communication, it should verify the real-time consistency of flight altitude, mode status, and remote control commands, ensuring synchronized execution of the go-around command and soft switching.",
            "The fault recovery mechanism shall include go-around trigger conditions, mode switching smoothing algorithms, and communication interruption timeout thresholds, and shall prioritize executing a go-around rather than autonomous control when the altitude is ≥40m.",
            "During the mode transition control resolution process, dynamic verification of the current operating phase (glide, remote control, go-around) should be performed, and input commands not matching the current phase or state should be rejected."
        ]
    },
    {
        "requirement": "When both conditions 1) and 2) below are met, execute the go-around command:  \n1) The flight altitude is higher than the decision height (40m); if the control mode is not remote control, it must also meet the condition of being on the glide path.  \n2) Receive the flight switch command: \"Go-around\".",
        "safety_requirements": [
            "After power recovery or runaway reset, the system should ensure restoration to normal operating conditions and verify the status after rebooting, addressing situations such as 'status not restored' or 'incorrect recovery'.",
            "When the software restarts due to power loss, an integrity check of the interface data communication shall be performed to ensure correctness of outputs under conditions such as 'interruption, reconnection, and unrecoverable failure', avoiding erroneous execution of a go-around command.",
            "During the execution of a go-around command, a timeout judgment mechanism should be set for critical control operations. When the hardware status does not meet requirements for an extended period, the fault handling process should be triggered.",
            "The system should establish a clear fault recovery mechanism to ensure that in case of abnormal state execution or communication interruption, it can recover to a safe state through reasonable logic.",
            "After restarting the software, the current flight altitude, control mode, and go-around switch command should be re-verified to ensure that a go-around is allowed only when both conditions 1) and 2) are satisfied simultaneously."
        ]
    },
    {
        "requirement": "If the aircraft is in autonomous control mode, directly control the aircraft to perform a go-around; if the aircraft is not in autonomous control mode, automatically switch to autonomous control mode first, then control the aircraft to perform a go-around. The smoothing method is the same as that used during mode transition.",
        "safety_requirements": [
            "After a software power failure and restart, the system shall check the status recovery of the autonomous control mode. If \"status not restored\" or \"error recovery\" occurs, the system shall immediately enter a safe state and terminate the go-around operation.",
            "The system should monitor the data communication status of the interface during power failure and restart processes, and trigger the emergency communication protocol when 'communication interruption' or 'failure to recover' occurs, ensuring the integrity of control command output.",
            "After system power recovery or reset due to runaway, it shall complete self-test and return to the most recent valid operating state within 2 seconds; otherwise, it shall be forced into fail-safe mode.",
            "The system shall be equipped with a three-level fault recovery mechanism, including command retransmission, state rollback, and forced degradation control, and shall execute system isolation after 10 consecutive failed recovery attempts.",
            "When the system performs a mode transition, it should verify the input parameters for control solution based on the current flight phase characteristic values. Inputs that fail the phase/state consistency check shall be filtered out and audit logs shall be generated."
        ]
    },
    {
        "requirement": "When DH > 10m, transition to the descent phase, reset the airspeed control integrator to zero, and set the softening time limit to 2 seconds.",
        "safety_requirements": [
            "When the system transitions to the descent phase, it should check whether the mission duration is less than the specified time to ensure correct functional processing.",
            "The system should check the control solution results for the airspeed control integrator reset and softening time limit settings to ensure correct handling under normal, abnormal, boundary, maximum, and minimum value conditions.",
            "The system should detect situations where the redundancy switching time is excessively long and take appropriate measures to prevent abnormal conditions.",
            "After a power failure and subsequent restart, the system should check whether the restarted state is correctly restored to the descending phase state, and handle cases of 'not restored' or 'incorrect restoration'.",
            "The system should have a timeout detection mechanism for critical operations such as integrator reset and softening time setting, to handle situations where the hardware status fails to meet control requirements for an extended period."
        ]
    },
    {
        "requirement": "The system should support discretization calculations in both longitudinal and lateral directions.",
        "safety_requirements": [
            "The system should monitor the rate of change of longitudinal and lateral calculation parameters to ensure they remain within reasonable upper and lower slope limits, and clearly define handling strategies for data exceeding these slope limits.",
            "The system needs to check whether the discrete value range data bits take values from the enumerated values within the valid range to ensure output correctness.",
            "The system should check for abrupt value changes in discrete domain data bits between adjacent cycles, verify the reasonableness of the output, and handle abnormal jumps.",
            "The system shall ensure that the sequence and timing of control logic are coordinated consistently with the hardware, and control conditions must maintain completeness and consistency.",
            "The system shall detect abnormal values in discrete value range data bits (undefined values outside the valid range) and execute predefined fault-tolerant or error correction mechanisms."
        ]
    },
    {
        "requirement": "Push the throttle to 100% position, transition the flight phase to climb segment 2, control the aircraft longitudinally to climb to the final approach altitude, and laterally to intercept the final approach course from the current point. After reaching the final approach altitude and leveling off, the aircraft will exit the go-around status and set the flaps to 15°. Then re-enter the final approach course and land again.",
        "safety_requirements": [
            "After a power failure and subsequent restart, the system should perform an integrity check on the flight phase, flap position, and throttle status to ensure correct state recovery and verify compatibility with the altitude/path of the final approach.",
            "When power failure recovery or reset mechanism is initiated, the system shall force the throttle position to reset to a safe default value, re-detect the flight phase, and verify the continuity of climb logic and landing procedures.",
            "During the control solution process, the flight phase flag should be verified in real-time. When detecting an \"unconsidered operational phase/state\", the current command should be immediately terminated and the redundant solution module activated.",
            "The flap angle control command must perform boundary value verification (0°-15°-30°), triggering a safety alarm and freezing the actuator for calculated results exceeding physical limits or exhibiting non-continuous jumps.",
            "A sequential interlock mechanism should be established between the go-around status exit and flap position changes. Re-entry into the final approach course shall be prohibited if the previous flap setting to 15° has not been completed, while continuously monitoring the coupling relationship between flight altitude and heading."
        ]
    },
    {
        "requirement": "The setting of a starting point is not allowed during the go-around process, but changing the landing direction is permitted.",
        "safety_requirements": [
            "The system should return to normal operating status after power recovery or runaway reset, ensuring that the function of prohibiting setting a new starting point and allowing change of landing direction during go-around is executed properly.",
            "The system needs to establish a clear fault recovery mechanism; when a fault occurs during the go-around process, the logic after recovery should maintain the constraints that prohibit setting the start point and allow changing the landing direction.",
            "The system should assess the validity of operational commands, actively intercept instructions to set a starting point during the go-around phase, and only respond to landing direction adjustment requests that are consistent with the current scenario.",
            "The sequence and timing of system control must be synchronized and coordinated with the hardware to ensure that the go-around start setting function is strictly locked, and the triggering conditions for landing direction adjustment are complete and consistent.",
            "The system shall specify that any command not conforming to the go-around procedure must be rejected, and the abnormal operation event shall be recorded for audit and analysis."
        ]
    },
    {
        "requirement": "When the aircraft is flying at a constant altitude or in the first glide segment under autonomous or manual correction control mode, if the airspeed is judged to be continuously three times less than a certain value (see appendix for specific value) or the pitch angle is judged to be continuously three times greater than 10 degrees, the aircraft is considered to have entered a stall condition.",
        "safety_requirements": [
            "The system shall perform real-time checks on the conditions for entering a stall state (continuous three times below the threshold airspeed or continuous three times exceeding 10 degrees pitch angle) to ensure correct status determination when the conditions are met, not met, or met again.",
            "After a software power failure and restart, the system should verify the consistency between the current flight status and the stall determination conditions, and execute the safety recovery procedure if the status is not restored or is incorrectly restored.",
            "The system should clearly distinguish the current operating phase (constant altitude flight, glide segment 1) and status (autonomous/manual correction mode) during control calculation, and make stall determination based on correct input parameters.",
            "The system should check the entry conditions of the non-transfer relationship state to ensure that only the stall state determination conforming to the current flight logic is executed when multiple conditions are satisfied simultaneously.",
            "The system must verify the validity of all state transition conditions to ensure that they do not trigger erroneous state transitions when unset, perpetually satisfied, or unsatisfiable."
        ]
    },
    {
        "requirement": "Transition to climb phase 2, elevator airspeed control, advance throttle to 100%. If the aircraft has entered glide slope 1 and stalls, initiate go-around control.",
        "safety_requirements": [
            "After power recovery or runaway reset, the system should have a recovery mechanism to ensure it can return to the correct operating state of either 'Climb Segment 2' or 'Go-around Control', and pass reasonableness verification.",
            "Upon power interruption and restart of the software, an integrity check shall be performed on the current state to identify \"state not recovered\" or \"incorrect recovery\" conditions, and correct the state to match the appropriate flight phase.",
            "During the control solution process, verify whether the input data includes the current operational phase (e.g., Climb Phase 2, Descent Phase 1) and status identifiers to prevent solution errors caused by unrecognized phases or statuses.",
            "Implement multi-level checks on the results of elevator airspeed control and throttle thrust calculation, covering normal value, boundary value, and abnormal value scenarios. Terminate execution immediately and activate the fault handling process upon detecting anomalies.",
            "During go-around control activation, dual verification of the stall detection signal and the glide phase status shall be conducted to ensure that the go-around command is executed only under valid conditions, and an immutable trigger log shall be recorded."
        ]
    },
    {
        "requirement": "When the airspeed is judged to have increased beyond the given speed for five consecutive times, the aircraft exits the stall condition and transitions to either the climb phase 2 or level flight phase based on the current altitude deviation, continuing the flight.",
        "safety_requirements": [
            "The system shall check the conditions for entering a state to ensure that when the conditions are met simultaneously, during execution, or met again, the logic of switching to the climb phase 2 or level flight phase is correct and conforms to the altitude deviation judgment.",
            "The system shall verify all state transition conditions (including unset, always satisfied, never satisfied, and other exceptional cases) to ensure that the operation to exit the stall condition is accurately triggered when the airspeed exceeds the limit continuously for five times.",
            "When the system transitions between operating states, it should check for changes in the value or range of values of functional interface data, ensuring that the decision to transition into climb phase 2 or level-off phase is consistent with the current airspeed and altitude deviation.",
            "The system shall perform conflict detection on transition conditions for both single and multiple states, and prioritize state transitions that comply with flight safety logic when multiple transition conditions are simultaneously satisfied."
        ]
    },
    {
        "requirement": "The aileron deflection command needs to undergo rudder deflection command allocation before the control law-computed rudder deflection command is output to the actuator.",
        "safety_requirements": [
            "The system should ensure that the steps, timing, and control conditions of the rudder deflection command allocation are coordinated with the hardware, and verify the completeness and consistency of the control conditions before allocation.",
            "During the rudder command allocation process, the system must verify whether functional inputs consider the current operating phase and status, and handle exceptions for cases of 'not considering the operating phase' or 'not considering the operating status', ensuring the correctness of allocated commands.",
            "The system should implement a timeout detection mechanism for rudder deflection command allocation. When the hardware fails to meet the control requirements within the predetermined time, the corresponding fault handling procedure shall be triggered.",
            "The timing of rudder command allocation should meet the requirements of the flight scenario. The system needs to verify whether the timing of the output control commands matches the current operation phase, avoiding premature or delayed execution.",
            "After completing the rudder command allocation, the system should continuously monitor the actuator hardware status, determine its compliance with control requirements, and initiate an error correction mechanism when non-compliance is detected."
        ]
    },
    {
        "requirement": "The efficiency of the aileron upward deflection and downward deflection differs, with lower efficiency during upward deflection and higher efficiency during downward deflection. By allocating rudder deflection commands through different distribution coefficients, the goal is to achieve consistent control effectiveness.",
        "safety_requirements": [
            "The system should dynamically adjust the allocation coefficients based on the current operating phase and status during rudder deflection command allocation, and verify whether any operating phase or status parameter input has been missed.",
            "The system should perform real-time verification on control calculation results (normal values, abnormal values, boundary values, maximum and minimum values), and trigger preset handling strategies.",
            "The system should ensure that control commands are strictly synchronized with hardware execution timing, and verify the logical completeness and sequential consistency of control conditions.",
            "The system shall immediately perform redundancy synchronization verification and activate the fault-tolerant distribution mechanism upon detecting that different redundancies are in inconsistent operating states.",
            "The system should continuously monitor the actual control effects after rudder command allocation, and initiate the dynamic coefficient reallocation process if deviations from the expected effects occur."
        ]
    },
    {
        "requirement": "If the aileron deflection command δx > 0, then the left aileron deflection command δxL = k1 δx, and the right aileron deflection command δxR = k2.",
        "safety_requirements": [
            "The system should perform real-time checks on the data bit value accuracy of the aileron deflection commands δxL and δxR, ensuring they are within the set accuracy range, and trigger an error correction mechanism when the accuracy requirements are not met.",
            "The system shall verify the correctness of the left aileron deflection command δxL and the right aileron deflection command δxR outputs when a single redundancy fault or multiple redundancies faults occur, and automatically switch to the valid redundancy.",
            "The system needs to check the handling logic when the control calculation result is an abnormal value, boundary value, or extreme maximum/minimum value, ensuring that the aileron deflection commands δxL and δxR output comply with safety constraints.",
            "The system should monitor the operating status of different redundancies and ensure that the calculated results of aileron deflection commands δxL and δxR are consistent and meet flight control requirements when multiple redundancies are in different states."
        ]
    },
    {
        "requirement": "If the aileron deflection command δx < 0, then the left aileron deflection command δxL = k2 δx, and the right aileron deflection command δxR = k1 δx, where k1 is the upward deflection distribution coefficient and k2 is the downward deflection distribution coefficient.",
        "safety_requirements": [
            "The system should define reasonable ranges for the variation rates of the allocation coefficients k1 and k2 of the aileron deflection command δx, and clearly specify the handling strategy for over-slope data.",
            "The system should check the control calculation results of the aileron deflection commands δxL and δxR to ensure correct handling logic under normal, abnormal, boundary, maximum, and minimum value conditions.",
            "The system should verify the data bit value accuracy of interface data, and trigger an error correction or alarm mechanism when the accuracy is lower than required.",
            "The system shall execute a conflict resolution mechanism to ensure the correctness of function implementation when detecting multiple redundancies in different operating states.",
            "The system shall monitor the operational status differences of redundancies in real time and implement predefined fault-tolerant strategies when redundant states are inconsistent."
        ]
    },
    {
        "requirement": "The flight control and management software shall be capable of calculating the stall speed based on the given flight weight, altitude, and flight true airspeed.",
        "safety_requirements": [
            "The system shall perform adaptive correction on the stall speed calculation process when detecting abnormal external factors (such as high sea conditions, adverse weather conditions), and ensure the accuracy of the processing results.",
            "The system shall perform correlation checks on input parameters (flight weight, altitude, and true airspeed) with respect to the current operational phase and status, to prevent calculation errors caused by neglecting the current operational phase or status.",
            "The system shall perform integrity verification on the stall speed calculation results, covering scenarios of normal values, abnormal values, boundary values, and extreme maximum/minimum values, and shall trigger fault-tolerant processing upon detecting anomalies or out-of-bound conditions.",
            "The system needs to set a solution timeout threshold, terminate the calculation if the control solution process times out, and then initiate fault recovery or backup computation mechanisms.",
            "The system should ensure that the sequence and timing of control solutions are strictly coordinated with the hardware, with complete and consistent control logic conditions to avoid solution failure caused by timing conflicts."
        ]
    },
    {
        "requirement": "The system shall support the calculation of the specified airspeed during climb.",
        "safety_requirements": [
            "The system should set a timeout threshold for critical control commands when calculating the climbing airspeed, and trigger a safety response mechanism if the hardware status does not meet the control requirements.",
            "The system should define a safety threshold range for the airspeed calculation output, automatically switch to a preset safe value upon exceeding the limit, and generate an abnormal event record.",
            "The system shall verify the timing consistency between airspeed calculation control and hardware actuation to ensure that control conditions meet the flight phase integrity requirements.",
            "The system should clearly define the valid measurement range boundaries of the airspeed sensor. Data exceeding these limits should be marked as invalid and trigger the sensor fault diagnosis protocol.",
            "The system shall perform synchronization detection on the execution timing of redundant computing channels, and initiate the redundancy reconfiguration mechanism when the timing deviation exceeds the fault tolerance threshold."
        ]
    },
    {
        "requirement": "The flight control and management software should support stall speed calculations for different flap angles, particularly for a flap angle of 40°.",
        "safety_requirements": [
            "The system should check the operational status of different redundancies to ensure that the stall speed calculation function at flap 40° is correctly executed when two or more redundancies are in different states.",
            "When the system performs control calculations in different operating phases or states, it is necessary to verify whether the inputs take into account the current operating phase and state, to avoid calculation errors caused by neglecting relevant factors.",
            "The system shall check the redundant output data and maintain the correctness of flap angle stall speed calculations in case of a single redundancy failure or multiple redundancies failure, and trigger the fault handling mechanism.",
            "The system should adjust the parameters or algorithm for calculating stall speed when detecting abnormal external factors such as high sea states or severe weather conditions, ensuring the results conform to actual flight conditions."
        ]
    },
    {
        "requirement": "The ground waiting phase transitions to the takeoff ground segment (takeoff roll segment) after the traffic pattern altitude and airport pressure height have been set and a takeoff clearance has been received.",
        "safety_requirements": [
            "The system shall ensure that the timing of the control state output during the transition from the ground waiting phase to the takeoff ground segment strictly complies with the requirements of the five-side approach pattern, airport pressure altitude setting, and takeoff command scenarios.",
            "The system shall check the takeoff ground segment entry conditions during the ground waiting phase, analyze the correctness of state execution when the conditions are 'satisfied, not satisfied, satisfied again', and ensure the transition logic is error-free.",
            "The system shall immediately trigger a decision-making mechanism and implement safety measures upon detecting abnormal external factors such as high sea conditions or severe weather, and shall prohibit state transitions under non-safe conditions.",
            "The system should verify the consistency of entry and exit conditions for the takeoff ground phase to ensure that mode transitions are free of logical conflicts.",
            "Before issuing a ground segment takeoff command, the system must perform reasonableness verification based on real-time equipment status to prevent unintended triggering of hazardous control commands."
        ]
    },
    {
        "requirement": "During the takeoff roll phase, when the airspeed exceeds 30m/s and the altitude is greater than 15m, transition to the takeoff departure phase with a softening time limit of 2 seconds.",
        "safety_requirements": [
            "The system should perform a timeout judgment on the state transition from the takeoff roll phase to the lift-off phase within 2 seconds of the softening time limit. If the transition is not completed within the timeout period, the fault handling mechanism shall be triggered.",
            "The system must verify that the airspeed is greater than 30 m/s and the altitude is greater than 15 m before strictly executing the state transition with a 2-second softening time limit, ensuring the timing meets the scenario requirements.",
            "The system shall perform integrity checks on state transition conditions to ensure that the conditions are not unconfigured, always satisfied, or unsatisfiable, and shall abort the transition in case of anomalies.",
            "The system shall suspend automatic state transitions and activate manual intervention mode upon detecting abnormal external factors such as high sea conditions or severe weather.",
            "The system must ensure that the control timing of state transitions is synchronized with hardware actions, and that control condition logic is complete and consistent."
        ]
    },
    {
        "requirement": "During the takeoff departure phase, when the flight altitude exceeds the safety height of 80m, it transitions to climb segment 1. The elevator channel adopts a method of setting initial integral values for softening, while other channels do not require softening.",
        "safety_requirements": [
            "When the system transitions into Climb Phase 1, it should verify whether the functional inputs adequately consider the current operational phase and status, ensure correct softening treatment of the elevator channel integrator initial value, and confirm that other channels are not softened.",
            "The system should perform real-time checks on the elevator channel control calculation results, analyze whether they are normal values, abnormal values, or boundary values, and trigger the fault-tolerant mechanism in case of anomalies.",
            "The system needs to verify the sequence, timing, and hardware coordination of control solutions, ensuring that control conditions are complete and logically consistent.",
            "If the software loses power and restarts during state execution, the system should check whether the flight phase and elevator control status are accurately restored after the restart.",
            "The system shall monitor the task execution timing during the climbing phase and automatically correct or initiate safety protection procedures when the timing deviates from the specified requirements."
        ]
    },
    {
        "requirement": "During climb segment 1, start retracting the landing gear. If the landing gear is retracted, delay for 5 seconds before starting to retract the flaps. If the landing gear is still not retracted after 1 minute, directly retract the flaps to 0 degrees. If the flaps are retracted to 0 degrees, delay for 5 seconds before transitioning to climb segment 2. If more than 75 seconds have elapsed since entering climb segment 1 and the flaps have still not been retracted to 0 degrees, directly transition to climb segment 2. The softening time limit is 2 seconds when transitioning to climb segment 2.",
        "safety_requirements": [
            "After a software power failure and restart, the system should perform a recovery check on the status of Climb Phase 1 to ensure correct restoration of the landing gear and flap conditions, and trigger an error correction mechanism in case of abnormal recovery.",
            "When the system transitions between different operating phases, it should verify whether the control resolution process conforms to the current phase (e.g., climb phase 1 or phase 2), to avoid state handling errors caused by neglecting the operating phase.",
            "The system should monitor the duration of landing gear retraction and flap retraction during Climb Segment 1, ensuring that flap retraction and phase transition logic are correctly executed when the duration is either less than 1 minute or exceeds 75 seconds.",
            "The system shall check the communication status of interfaces related to landing gear and flap control during software restart, ensuring that correct control solution output can still be maintained after data interruption or reconnection.",
            "The system shall perform real-time validation on the control resolution results of the flap angle, including normal values (0 degrees), abnormal values, and boundary values, and shall terminate the softening time limit and forcibly transition to climb phase 2 upon detecting an anomaly."
        ]
    },
    {
        "requirement": "In the climb phase 2, if the aircraft does not stall, corresponding actions are taken based on the altitude difference DH between current and desired altitudes: 1) When DH > 10m, switch to the descent phase, set the softening time limit to 2 seconds, and use the method of setting integrator initial value for softening in the elevator channel. 2) When -10m ≤ DH ≤ 10m, switch to the altitude hold phase and set the softening time limit to 2 seconds.",
        "safety_requirements": [
            "During the system's transition in climb phase 2, it should check the current operational phase and status parameters of the functional inputs, ensure that the logic for handling DH values under non-stall conditions matches the flight phase, and verify the error handling mechanisms when operational phases or statuses are not considered.",
            "The system shall perform real-time validation on the calculation results of the climbing phase 2 control (command to transition to descent phase/constant altitude phase, softening time limit setting value), identify abnormal values, boundary values, and unreasonable parameter combinations, and trigger a safety fault-tolerant response.",
            "The system shall ensure that the timing sequence of elevator channel soft control is strictly synchronized with the hardware execution cycle, and verify that the trigger condition logic for transitioning into the descent phase/altitude hold phase is complete and that the state transition process is continuous and consistent.",
            "The system should dynamically adjust the DH threshold determination logic and activate anti-interference control strategies upon detecting abnormal external conditions such as high sea states or severe weather, in order to ensure robustness of state transition decisions.",
            "The system shall monitor the rate of change of DH parameters and immediately activate the data smoothing filter algorithm and record the out-of-limit event when an excessive slope (> upper limit or < lower limit) is detected, while maintaining the current flight phase until the parameters stabilize."
        ]
    },
    {
        "requirement": "Soften the initial values of the altitude hold control integrator, altitude tracking integrator, and throttle control integrator (calculate the initial value of the throttle control integrator based on a throttle position of 100%) to prepare for altitude hold control and altitude tracking control.",
        "safety_requirements": [
            "The system should check the control resolution results of the altitude control integrator, altitude tracking integrator, and throttle control integrator to ensure correct handling under \"normal value, abnormal value, boundary value, maximum and minimum value\" conditions.",
            "When the system sets the integrator initial value, it is necessary to verify the control sequence, timing, and coordination with hardware, and ensure that control conditions are complete and logically consistent.",
            "When setting the integrator initial value in different operating states or phases of the system, the input data should be verified for phase and state to avoid situations where \"the operating phase or state is not considered.\"",
            "After the system completes the integrator initial value setting, it should monitor the consistency between the actual hardware status and the control requirements, and execute the predefined handling strategy in case of mismatch.",
            "The system should set upper and lower limits for the rate of change of integrator parameters, and clearly define handling rules for data exceeding these limits (e.g., ignore, substitute value, or alarm)."
        ]
    },
    {
        "requirement": "If on the fifth leg of the traffic pattern flight and has entered the glide slope window, transition to Glide Slope Segment 1; otherwise, handle according to the difference DH between current altitude and desired altitude.",
        "safety_requirements": [
            "The system shall ensure the correctness of functional logic and state transitions when switching between high-priority and low-priority states (or vice versa) during flight along the five-side approach path.",
            "The system shall perform integrity checks on all state transition conditions (including the logic for entering glide slope segment 1 or DH handling), ensuring that no conditions are unconfigured, permanently satisfied, or impossible to satisfy.",
            "The system should define a reasonable range for the rate of change of the difference in height (DH) between the current and desired altitudes, and clearly specify the handling strategy for out-of-slope data.",
            "The system shall perform continuous periodic detection of the DH value, and when the difference between adjacent cycle data exceeds the set threshold, trigger slope fault handling to ensure output correctness.",
            "When the system transitions between states (e.g., entering Glide Phase 1), it should verify the values and value ranges of functional interface data to ensure that their changes conform to the expected logic."
        ]
    },
    {
        "requirement": "When DH > 50m, switch to the descent phase, set the softening time limit to 2s, and use the method of setting integrator initial value softening for the elevator channel.",
        "safety_requirements": [
            "When setting the softening time limit and integrator initial value, the system should monitor whether the parameter change rate is within a reasonable slope range, and trigger fault handling and alarms when the range is exceeded.",
            "The control logic for transitioning into the descending phase must be strictly coordinated with the hardware operation timing, and the condition judgments must include complete status parameters and remain consistent.",
            "The system shall perform real-time monitoring of the softening time limit duration. If the task execution time is detected to be less than the specified threshold, the current operation shall be immediately terminated and the exception handling mechanism shall be initiated.",
            "The sensor acquisition module should clearly define the valid range of DH values. When DH values exceed the upper or lower limits, the system should automatically flag a sensor fault and switch to a redundant data source.",
            "A timeout detection mechanism must be set during the execution of critical control commands. If the hardware fails to complete the state transition within the specified time, the current command should be terminated and reverted to safety mode."
        ]
    },
    {
        "requirement": "When DH < -50m, switch to climb phase 2, set the softening time limit to 2s, and use the method of setting integrator initial value softening for the elevator channel.",
        "safety_requirements": [
            "When setting the softening time limit and integrator initial value, the system should perform a slope check on the parameter variation rate, triggering an alarm and freezing parameter output when exceeding reasonable limits.",
            "The control logic for transitioning into climb phase 2 should verify the sequence, timing, and coordination with hardware to ensure completeness and logical consistency of control conditions such as DH threshold and elevator channel criteria.",
            "The system shall monitor the duration of the softening process. If the softening state is exited before reaching 2 seconds, an anomaly shall be recorded and the default control mode shall be restored.",
            "When the DH value collected by the sensor exceeds the preset range, the data should be immediately marked as invalid and the fault diagnosis process should be triggered.",
            "The elevator channel softening control needs to set a timeout judgment mechanism. If the hardware status does not reach the expected state within 2 seconds, the softening must be forcibly terminated and switched to the backup strategy."
        ]
    },
    {
        "requirement": "The system shall support the calculation and processing of heading deviations.",
        "safety_requirements": [
            "The system should dynamically correct the heading deviation calculation when detecting abnormal external factors such as high sea states and adverse weather conditions, and ensure the effectiveness of the handling strategy.",
            "The system should verify the heading deviation handling logic when the control solution results are normal values, abnormal values, boundary values, and extreme maximum or minimum values, to ensure that the output meets expectations.",
            "The system should set upper and lower limits on the rate of change for parameters related to heading deviation; data exceeding these slope limits should be filtered or replaced with predefined safety values.",
            "The system should trigger a timeout handling mechanism and adopt a default safety strategy to maintain heading stability when the control solution process times out without returning results.",
            "When the system experiences faults in one or multiple redundant output data channels, it should perform heading deviation processing based on valid redundant data. If all redundancies fail, the system shall enter safe mode."
        ]
    },
    {
        "requirement": "When the normal lateral control mode is changed from other modes to five-side flight, set the initial value of the altitude tracking integrator for softening; when the normal lateral control mode is changed from five-side flight to other modes, set the initial value of the altitude hold control integrator for softening.",
        "safety_requirements": [
            "When the lateral control flag changes, the parameter variation rate should be checked to ensure it is within the preset upper and lower slope limits; if exceeded, an explicit handling strategy should be executed.",
            "The system should monitor the data range collected by sensors in real time and trigger a sensor fault alarm when exceeding the upper or lower limit.",
            "The control solution results (normal values, abnormal values, boundary values, maximum and minimum values) should be classified and checked, and ensure the correct integrator initial value processing logic is applied during state transitions.",
            "The timing of outputting control status must strictly align with the timing requirements of the current flight scenario.",
            "The sequence and timing of the system executing the integrator initial value settings should be coordinated with the hardware control logic to ensure complete conditions and consistency."
        ]
    },
    {
        "requirement": "Process according to the value of the difference DH between current altitude and desired altitude: if -10m ≤ DH ≤ 10m, switch to the constant altitude phase, set the softening time limit to 2s, and initialize the softening process for the constant altitude control integrator, altitude tracking integrator, and throttle control integrator in preparation for constant altitude control and altitude tracking control.",
        "safety_requirements": [
            "When the system enters the altitude-hold phase, it should verify the coordination of control sequence, timing, and hardware, and check the completeness and consistency of control conditions.",
            "The system should perform anomaly detection on the altitude hold segment control calculation results. When the results are abnormal values, boundary values, or extreme maximum/minimum values, an alarm should be triggered and default safety parameters should be used for processing.",
            "The system should define a reasonable range for the rate of change of the height difference DH (slope upper and lower limits), perform clamping processing on data exceeding the slope limit, and record anomaly logs.",
            "When the system transitions states, it should check whether the functional inputs match the current operating phase and state. If they do not match, the softening process should be terminated, and the original control mode maintained.",
            "The system should dynamically verify the precision of interface data values and automatically correct or mark them as invalid when the precision exceeds the requirements."
        ]
    },
    {
        "requirement": "When DH < -10m, it transitions to the descending phase.",
        "safety_requirements": [
            "The system should ensure the correctness of the output when switching to the descent phase function and handle buffer overflow when the interface data receiving buffer capacity is less than the interface data volume.",
            "The system should monitor the rate of change of DH parameters within a specified slope range, define handling strategies for out-of-slope data, and execute alarm or correction actions.",
            "When the system transitions to the descent phase mission, it should check whether the duration meets the specified threshold, handle cases where the duration is not met as exceptions, and record the event.",
            "The system should clearly define the acquisition range (including upper and lower limits) of the DH sensor, immediately report a sensor failure and activate the redundancy mechanism when detecting values beyond the range.",
            "The system needs to classify and process the control resolution results during the transition to the descent phase, verifying the functional response correctness under normal values, abnormal values, boundary values, and extreme maximum and minimum value scenarios."
        ]
    },
    {
        "requirement": "Enter climb phase 2, set softening time limit to 2 seconds, and use the method of setting integrator initial value softening for the elevator channel.",
        "safety_requirements": [
            "The system should ensure that the timing of the integrator initial value softening for the elevator channel is coordinated with the hardware control, and that the softening time limit setting conditions are consistent before and after.",
            "The system should set upper and lower limits on the rate of change of integrator parameters and clearly define the real-time processing strategy for data exceeding these limits.",
            "The system shall continuously monitor the duration of the softening process and execute a preset compensation mechanism when the task duration is less than 2 seconds.",
            "The elevator channel softening control should have a timeout detection function, which triggers a downgrade handling strategy when the execution time exceeds 2 seconds.",
            "The system shall continuously monitor the duration of the softening process and initiate an abnormal termination protocol when the task duration exceeds 2 seconds."
        ]
    },
    {
        "requirement": "In glide phase 1, when the flight altitude is below 100m, switch to glide phase 2, reset the straight-side-slip control integrator and heading control hold integrator, prepare for flight control in glide phase 2, and set the soft time limit to 2 seconds.",
        "safety_requirements": [
            "The system should detect the reasonable range of the rate of change of flight altitude parameters (preset upper and lower slope limits) and execute a clearly defined data processing strategy when the slope limit is exceeded.",
            "The completeness of the transition conditions from Glide Slope Segment 1 to Glide Slope Segment 2 should be verified to ensure correct state transition logic when the condition is 'Not Set', 'Always Met', or 'Cannot Be Met'.",
            "In the zeroing operation of the integral controllers for steady straight sideslip control and heading control maintenance, a timeout detection mechanism must be set. If the hardware status does not meet the requirements within the softening time limit (2 seconds), a predefined control strategy should be triggered.",
            "The system shall ensure that the control sequence, timing, and hardware actions are strictly coordinated during the glide path segment transition, and that the control conditions maintain logical consistency before and after the transition.",
            "If the system powers off and restarts during state execution, a forced check of the integrator status and flight phase after restart is required to ensure correct state recovery or entry into a safe fault-tolerant mode."
        ]
    },
    {
        "requirement": "In the glide phase 2, when the flight altitude is below 17m, it transitions to the flare phase. The elevator channel adopts a method of setting initial values for the integrator to achieve softening, while other channels do not require softening.",
        "safety_requirements": [
            "The system should define a reasonable range for the rate of change of the elevator channel integrator initial value (upper and lower slope limits) and execute clear handling strategies when these limits are exceeded.",
            "The system shall ensure that the control sequence and timing during transition to the flare segment are coordinated with the hardware, and the control conditions must be complete and consistent.",
            "Before the system transitions from the glide phase 2 to the flare phase, it should check whether the functional inputs match the current operational phase and status, ensuring the correct execution of the elevator channel softening logic.",
            "The system should verify the calculation results of the elevator channel control to ensure correct handling of normal values, abnormal values, boundary values, and extreme maximum and minimum values.",
            "After a software power failure and restart, the system shall check and restore the flare phase status, handle situations of 'status not restored' or 'error recovery', and ensure that the elevator channel soft configuration is correct."
        ]
    },
    {
        "requirement": "During the flare segment, when the flight altitude is below 1.5m, transition to the roll correction segment, and no softening is applied to each channel.",
        "safety_requirements": [
            "The system should define a reasonable range for the rate of altitude change during the flare segment, specify the real-time processing strategy for data exceeding the slope threshold, and trigger corrective actions when the threshold is exceeded.",
            "The system should verify the state transition conditions from the flare segment to the roll-out segment, ensuring that the state switching logic is correct when the transition conditions are \"not set, always satisfied, or not satisfied.\"",
            "The system shall immediately activate the fault handling mechanism and maintain the current channel's safety status when redundancy switching conditions are met but the switching fails.",
            "The system must ensure that the control sequence and timing of the flare segment and the roll-out correction segment are strictly synchronized with the hardware, and that the control conditions maintain logical consistency before and after the switch.",
            "The system should implement a fault handling module based on wrap detection, and when a fault is detected, report the status according to the preset priority and perform channel hardening operations."
        ]
    },
    {
        "requirement": "During the roll-out phase, when any of the following conditions is met, transition to the landing rollout phase and set the softening time limit to 2 seconds:\n1) The gear fully compressed signal remains true for 12 consecutive frames;\n2) The remote control touchdown signal is true;\n3) The cumulative number of frames with abnormal remote control signal status reaches 75. Note that this condition only needs to be checked once.",
        "safety_requirements": [
            "After a power failure and subsequent restart of the software, the system should check the status recovery from the roll correction phase to the landing rollout phase, ensuring that transfer conditions can still be correctly executed even if the status is not recovered or is erroneously recovered.",
            "The system shall perform real-time validity verification on the trigger conditions for transitioning from the roll correction phase to the landing rollout phase (main gear fully compressed signal, remote landing signal, cumulative 75-pulse abnormal signal), ensuring the calculation results fall within the normal value range and the softening time limit is set to 2 seconds.",
            "The system shall ensure that the control sequence and timing for transitioning from the roll correction phase to the landing rollout phase are strictly synchronized with hardware actions, with complete and conflict-free control logic conditions.",
            "The system should verify the transition condition settings from the roll correction phase to the landing rollout phase, and prohibit erroneous state transitions while triggering an alarm when conditions are not set, always satisfied, or cannot be satisfied.",
            "The system should implement a timeout determination mechanism during the control process of transitioning into the landing rollout phase. When hardware status fails to meet requirements beyond the software-defined timeout period by 2 seconds, predefined safety operations shall be executed."
        ]
    },
    {
        "requirement": "During the landing rollout phase, after the flight control pre-shutdown command becomes effective, the system enters the ground waiting phase.",
        "safety_requirements": [
            "When the system triggers a pre-shutdown command for flight control during the landing rollout phase, it should perform a timeout check on the hardware status. If the control requirements are not met, the state transition should be terminated and the system should enter the safety handling process.",
            "After the system resumes due to power loss recovery or runaway reset, it shall ensure that the entry logic of the ground waiting phase is coordinated with the hardware status, and it can return to a controllable state before the pre-shutdown command takes effect.",
            "The control sequence and timing for transitioning into the ground waiting phase must be strictly synchronized with hardware actions, and the execution conditions should include a complete status verification and conflict detection mechanism.",
            "The timing for the system to enter the ground waiting phase must be matched in real-time with the physical state of the current landing rollout scenario; both delayed and premature triggering require fault-tolerant handling.",
            "Before executing the ground hold phase transfer, the validity of the command should be verified based on equipment sensor data. Control commands must not be issued under abnormal hardware conditions."
        ]
    },
    {
        "requirement": "If the engine stops in mid-air, the aircraft enters a gliding phase.",
        "safety_requirements": [
            "After power recovery or runaway reset, the system should verify its ability to return to normal operating conditions and maintain a safe state in the floating phase if recovery fails.",
            "When the system detects an in-flight engine shutdown and enters the drifting phase, it should perform a timeout check on the control commands. If the status transition is not completed within the timeout period, the safety response mechanism should be activated.",
            "Before the system enters the descent phase, a dual check of the engine status and operating phase should be conducted to prevent unintended activation caused by unconsidered in-flight shutdown conditions or the current phase.",
            "After a software restart, the system should verify the engine status and flight phase to ensure that the free-fall phase state is correctly restored and no erroneous configurations remain.",
            "When the system issues control commands for the descent phase, it should combine the aircraft's real-time status to perform a reasonableness check, avoiding dangerous commands that conflict with the current equipment status."
        ]
    },
    {
        "requirement": "Md2(k) = KvI · Md1(k)",
        "safety_requirements": [
            "The system should check for division by zero during data processing to ensure the correctness of the calculation Md2(k) = KvI · Md1(k).",
            "The system should perform classified checks on the control solution results to ensure the correctness of functional processing under conditions such as \"normal values, abnormal values, boundary values, maximum and minimum values\".",
            "The system should verify the data bit value accuracy of the interface data to ensure the correctness of the output results when the accuracy is less than required.",
            "The system should verify the data bit value accuracy of the interface data to ensure the correctness of the output results when the accuracy is greater than required.",
            "The system should check functional inputs under different states or operational phases to ensure correct handling when certain operational phases or states are not considered."
        ]
    },
    {
        "requirement": "When DH < -10m, transition to climb phase 2, set the initial value of the airspeed control integrator for softening",
        "safety_requirements": [
            "During the control solution process, the system should check whether the results are 'normal values, abnormal values, boundary values, maximum and minimum values', and ensure the correctness of functional processing.",
            "The system should verify the coordination of control sequences, timing, and hardware to ensure complete control conditions and consistent logical sequence.",
            "The system should clearly define the reasonable range of change rate (slope upper and lower limits) for the airspeed control integrator parameters, and establish real-time processing strategies for data exceeding the slope limits.",
            "Key control actions should be equipped with a timeout detection mechanism to handle situations where the hardware status cannot meet the control requirements for an extended period.",
            "When the system performs control calculations in different operating states or phases, it should check the functional inputs to ensure that the processing logic strictly matches the current state or phase."
        ]
    },
    {
        "requirement": "When -10m < DH < 10m, switch to the constant altitude phase, set the initial values of the constant altitude control integrator and the altitude tracking integrator for softening",
        "safety_requirements": [
            "When the system enters the altitude-holding phase, it should ensure that the control sequence, timing, and hardware coordination are properly aligned, with complete and consistent control conditions.",
            "The system should check the data bit value accuracy of interface data, analyze the output correctness when the precision is greater than or less than required, and ensure accurate initial value settings for the altitude control integrator and height tracking integrator.",
            "The system should verify the correctness of functional processing when the control solution results are normal values, abnormal values, boundary values, or extreme maximum/minimum values, and trigger the corresponding fault-tolerant mechanisms.",
            "The system should clearly define the upper and lower limits of the sensor's measurement range. If these limits are exceeded, the system should immediately report a sensor fault and implement a safety handling strategy.",
            "After transitioning to the altitude hold segment, the system should monitor the DH value in real time to ensure that the integrator softening process complies with the current flight status and safety boundaries."
        ]
    },
    {
        "requirement": "The softening time limit for the above phase transition is set to 2s.",
        "safety_requirements": [
            "The system should be equipped with a redundancy switch timeout mechanism, which triggers an exception handling process when the redundancy switching time exceeds the soft threshold (2 seconds).",
            "The system shall immediately activate the backup redundancy mechanism and issue a fault alarm when the redundancy switching condition is met but the switch fails.",
            "The system should monitor the duration of phase transition tasks in real time, and if the duration is less than the specified time, re-validate the execution logic.",
            "The system needs to integrate hardware status timeout detection during critical control operations. If the expected status is not reached within the timeout period (2s), the operation should be terminated and an error reported.",
            "The system shall perform integrity checks on state transition conditions to ensure that the current state is maintained or a safe failure mode is entered when conditions are unconfigured, perpetually satisfied, or unsatisfiable."
        ]
    },
    {
        "requirement": "When executing the takeoff command, transition to the takeoff roll phase.",
        "safety_requirements": [
            "Before issuing a takeoff roll command, the system should perform a reasonableness check based on the current equipment status to avoid issuing hazardous control commands.",
            "The system shall check the mission execution timing during the takeoff roll phase, and if it is inconsistent with the specified timing, immediately abort the transition and trigger an alarm.",
            "After power recovery or reset due to runaway, the system must ensure automatic restoration to the normal takeoff roll state, maintaining functional continuity.",
            "The sequence and timing of system control during the takeoff roll phase shall be coordinated with the hardware, and the control conditions must remain complete and logically consistent.",
            "The system should implement a timeout judgment for critical controls related to takeoff roll commands, and execute a safety response mechanism if the required status is not achieved within the timeout period."
        ]
    },
    {
        "requirement": "During the takeoff roll phase, when airspeed >30m/s and altitude is greater than 15m, transition to the takeoff climb phase without softening treatment.",
        "safety_requirements": [
            "When the system encounters abnormal external factors such as high sea states or severe weather conditions, it should effectively judge and handle the state transition from the takeoff runway phase to the takeoff departure phase, ensuring accurate determination of the conditions where airspeed > 30 m/s and altitude > 15 m.",
            "After a system power failure and restart, the correctness of status recovery should be checked and verified to prevent failures in transition sections during takeoff due to 'status not restored' or 'incorrect restoration'.",
            "The system should perform real-time filtering and anti-jitter processing during airspeed and altitude data acquisition to eliminate interference data and ensure the authenticity of input for state transition conditions.",
            "The sequence, timing, and hardware coordination logic of system control shall meet completeness requirements, ensuring consistency in the preconditions for determining airspeed and altitude."
        ]
    },
    {
        "requirement": "When the flight altitude is greater than the safety height of 80m, transition to climb phase 1 without softening treatment.",
        "safety_requirements": [
            "When abnormal external factors such as high sea states or severe weather occur, the system should make judgments and take actions to ensure that the decision to enter climb phase 1 complies with the condition of flight altitude greater than 80m and no softening treatment is applied.",
            "The system should clearly define the upper and lower limits of the sensor's measurement range. If the measured value exceeds this range, the sensor shall immediately report a fault and take corresponding handling measures.",
            "The system should perform filtering and anti-jitter processing when collecting flight altitude data, shielding interference data to ensure judgment accuracy.",
            "The system should be equipped with a fault handling mechanism based on wraparound detection, which reports status according to a reasonable strategy and performs safety operations in case of faults."
        ]
    },
    {
        "requirement": "When the landing gear full compression signal is true or the remote ground contact signal is true, transition to the landing rollout phase without softening processing.",
        "safety_requirements": [
            "When the system transitions into the landing rollout phase, it should ensure that the control sequence, timing, and hardware coordination are consistent, and that the control conditions for the fully compressed landing gear signal or the remote ground contact signal are complete and uniform.",
            "After a software power failure and restart, the system should perform a recovery check on the landing rollout phase status to ensure correct status recovery and avoid erroneous execution due to \"unrecovered\" or \"incorrectly recovered\" conditions.",
            "The system should verify the control solution results during transition to the landing roll phase, ensuring the correctness of processing logic under scenarios such as 'normal values, abnormal values, boundary values, maximum and minimum extreme values'.",
            "The system must implement anti-false alarm processing when detecting signals for full landing gear compression or remote ground contact, and ensure that alarm handling meets real-time requirements.",
            "The system should implement a timeout detection mechanism for control actions during the transition to the landing rollout phase, triggering emergency response when hardware status fails to meet control requirements for an extended period."
        ]
    },
    {
        "requirement": "Item d needs to be evaluated only once, while the other items must meet the corresponding conditions for five consecutive transitions before proceeding.",
        "safety_requirements": [
            "When the system switches states, it should verify the correctness of switching between high/low priority functions, ensuring that the state and function logic meet preset conditions.",
            "The system shall perform integrity checks on all logical judgment conditions and branches, identifying cases such as logic always false, always true, condition errors, or branch omissions, and ensure correct functional processing.",
            "The system should perform phase-related checks on functional inputs under different states or operational phases to ensure that the control solution process fully considers the current operational phase and state.",
            "The system should perform a range check on the control solution results to ensure correct handling logic under normal values, abnormal values, boundary values, maximum and minimum values.",
            "The system should monitor the consecutive satisfaction of phase transition conditions, and trigger a transition only when non-d condition is continuously satisfied for 5 times, while recording the execution process of d condition for each individual judgment.",
            "The system should perform an overrun check on task duration and trigger a fault-tolerant handling mechanism in case of timeout, ensuring the correctness of functional outputs."
        ]
    },
    {
        "requirement": "If the phase flag is \"floating down\", no phase transition will be performed.",
        "safety_requirements": [
            "When the system phase flag is set to 'Falling', it should check the entry conditions of all states to ensure that phase transitions are prohibited even in cases where conditions are simultaneously satisfied or met during execution.",
            "The system shall verify the state transition conditions related to the \"floating\" phase to ensure that unintended state transitions are not triggered when the transition conditions are \"not set, always satisfied, or never satisfied.\"",
            "If the redundancy switching condition is met but the switch fails, the system shall remain in the 'floating' phase state, record the error, and trigger an alarm.",
            "During the 'floating' phase, the system should check for functional transitions with priority differences to ensure that high/low priority transitions do not affect state stability under phase flag constraints.",
            "The system should ensure that during the 'floating' phase, the execution state (continuation or interruption) of the same function before and after the state transition is strictly consistent with the requirements for prohibiting phase transitions."
        ]
    },
    {
        "requirement": "If the 3 out of 2 result for the go-around flag is true, the aircraft phase transitions to climb phase 2, and the airspeed control integrator is reset to zero.",
        "safety_requirements": [
            "The system should have a fault recovery mechanism to ensure that after power recovery or runaway reset, the aircraft phase correctly transitions to climb phase 2 and the airspeed control integrator is reset to zero.",
            "Upon power failure restart, the system shall check the status recovery, handle exceptions such as \"status not recovered\" or \"error recovery\", and ensure the correctness of the aircraft phase and integrator status.",
            "The system should verify the control calculation results of the 3-out-of-2 go-around flag, including scenarios such as normal values, abnormal values, and boundary values, to ensure the correct execution of phase transitions and integrator reset.",
            "After power failure and restart, the system should check the data communication status of the interface, handle situations such as 'interrupted' or 'unrecoverable', and ensure the accuracy of the go-around flag and phase transition logic.",
            "The system should perform real-time anomaly detection on the control solution results during the go-around flag triggering phase transition, and trigger safety protection measures when anomalies such as maximum/minimum values are identified."
        ]
    },
    {
        "requirement": "Md 2(k) clamped [- XfSita, XfSita]",
        "safety_requirements": [
            "The system shall check output data from different redundancies to ensure that the Md 2(k) limiting function can still be executed correctly in case of a \"single redundancy failure\" or \"multiple redundancies failure\", and shall prioritize the use of valid redundancy data.",
            "The system should detect the consistency between the value range of interface data frames and the actual range of interface data. When the data frame's represented range is smaller than the actual range, out-of-range data of Md 2(k) should be handled according to a predefined strategy (e.g., truncation or output of a safety value).",
            "The system should clearly define the upper and lower limits of the sensor's acquisition range (-XfSita to XfSita). When the acquired value exceeds this range, the system must immediately report a sensor fault and activate the backup processing mechanism.",
            "The system should monitor the parameter change rate in real time, and if the slope exceeds the preset reasonable range, it should trigger a data anomaly handling strategy (such as using the previous value or slope limiting).",
            "When the system outputs data beyond the limit in Md 2(k), it should ensure that the output values remain within the range of [-XfSita, XfSita] according to a predefined strategy (such as truncating to the limit value or switching to a safety output mode)."
        ]
    },
    {
        "requirement": "Md 3(k ) = Kv · [vk (k ) - vg (k )] + Md 2(k )",
        "safety_requirements": [
            "Check the data bit value accuracy of the interface data to ensure the calculation result of Md3(k) = Kv·[vk(k) - vg(k)] + Md2(k) is correct when the accuracy is less than or greater than the specified requirement.",
            "Perform real-time checks on the control solution results of the functions to ensure that the processing logic of Md3(k) under normal values, abnormal values, boundary values, and extreme maximum/minimum values meets expectations.",
            "Verify the input cycle of the interface data to ensure that the system's output solution remains correct when the input cycle is greater than the specified cycle, less than the specified cycle, or when extreme maximum or minimum values occur.",
            "Dynamic checks of functional inputs are performed under different operating conditions and phases to ensure that the solution process of Md3(k) can still be correctly executed even when the current operating phase or condition is not taken into consideration."
        ]
    },
    {
        "requirement": "Md 3(k ) limit [- XfSita, XfSita]",
        "safety_requirements": [
            "When the system's interface data frame can represent a value range smaller than the interface data range, it should detect the validity of the clamping range [-XfSita, XfSita] and ensure the correctness of the output result.",
            "The system shall perform redundancy checks on output data with different redundancy levels, maintain the correctness of functional implementation in case of single or multiple redundancy failures, and trigger the fault isolation mechanism.",
            "The sensor's acquisition range must have clearly defined upper and lower limits. When the acquired value exceeds this range, the system should immediately report a sensor fault and initiate the safety handling process.",
            "The system should check the communication status of the interface data frame, and when a data frame is lost, use fault-tolerant algorithms or default values to ensure correct output.",
            "The system should verify whether the value accuracy of the interface data frame meets the requirements, and trigger fault-tolerant processing or an alarm prompt when the accuracy is insufficient."
        ]
    },
    {
        "requirement": "Jg (k ) = Md 3(k )",
        "safety_requirements": [
            "The system should check the data bit value accuracy of the interface data to ensure that when the value is less than or exceeds the required value, the control solution result Jg(k) = Md 3(k) is correct.",
            "The system should check the control solution results Jg(k) to ensure correct handling under normal values, abnormal values, boundary values, and extreme maximum/minimum value conditions.",
            "The system should check the period of the input data to ensure correct output results when the period is greater than the specified period, less than the specified period, or at extreme maximum or minimum values.",
            "The system should check functional inputs in different operational phases and states to ensure correct handling when the operational phase or state is not considered."
        ]
    },
    {
        "requirement": "δp (k) = 115%",
        "safety_requirements": [
            "The system should check the data bit value accuracy of δp (k) to ensure correct output even when the precision is higher or lower than required.",
            "The system should check the δp (k) control solution results to verify the correctness of its handling under normal values, abnormal values, boundary values, and extreme maximum/minimum values.",
            "The system should check the interface data cycle of δp (k) to ensure correct output when the input cycle is greater than, less than, or at the extreme value of the specified cycle.",
            "The system shall perform equivalence class checking on the continuous data bits of δp (k) to ensure correct handling of both normal and abnormal equivalence class inputs."
        ]
    },
    {
        "requirement": "Md1(k ) = Kg1 · Dz(k )",
        "safety_requirements": [
            "The system should check functional inputs under different states and operational phases to ensure that the control solution process correctly accounts for the operational phase and state, avoiding situations where \"operational phase is not considered\" or \"operational state is not considered\".",
            "The system should check the value accuracy of data bits in the interface data to ensure that the accuracy meets the requirements, and guarantee the correctness of output processing when the accuracy is greater than or less than the specified value.",
            "The system should check the control solution results (including normal values, abnormal values, boundary values, maximum and minimum values), and trigger corresponding processing mechanisms based on the check results.",
            "The system should check the input cycle of interface data to ensure the correctness and stability of functional processing when the cycle is greater than, less than the specified value, or when extreme maximum or minimum values occur."
        ]
    },
    {
        "requirement": "When DH < -10m, transition to climb phase 2, reset the airspeed control integrator, and set the softening time limit to 2 seconds.",
        "safety_requirements": [
            "When DH < -10m triggers transition to climb phase 2, check whether the status transition conditions are set correctly, and analyze the correctness of status transition under situations of 'not set', 'always satisfied', and 'never satisfied'.",
            "During the transition to Climb Phase 2, if the software experiences a power interruption and restarts, it is necessary to verify that the status correctly resumes to Climb Phase 2 after restarting, and that the airspeed control integrator is reset to zero and the softening time limit is set to 2 seconds.",
            "The system should perform a timeout check on the control commands for transitioning to climb phase 2, and trigger an exception handling mechanism when the hardware status does not meet requirements within the set time.",
            "Real-time check of the control solution results for the airspeed control integrator reset and softening time limit set to 2s, ensuring its output meets the processing requirements of \"normal value, abnormal value, boundary value, maximum and minimum values\".",
            "If the mission duration for transitioning to Climb Phase 2 is less than the specified time, ensure the functional processing logic is correct to avoid state execution errors due to insufficient time."
        ]
    },
    {
        "requirement": "Md1(k ) limited to [- XfCs,+XfCs]",
        "safety_requirements": [
            "The system shall ensure the correct execution of the Md1(k) limiting function and that the output remains within the range [-XfCs, +XfCs] in case of a single redundancy failure or simultaneous multiple redundancy failures.",
            "The system should check the representable value range of the interface data frame. If it is smaller than the actual range of the interface data, ensure that the clamping processing of Md1(k) complies with the preset [-XfCs, +XfCs] constraint.",
            "The system should monitor in real time the precision of data bit values at the interface, and when the precision is less than required, trigger an error correction mechanism to ensure the accuracy of the clamping results.",
            "The system should verify the precision of data bits at the interface. When the precision exceeds the required level, it must ensure that redundant precision does not affect the correctness of the amplitude limiting function.",
            "The system should verify that the control solution result is within normal, abnormal, boundary, or extreme values, and ensure that Md1(k) amplitude limitation complies with safety constraints, activating fault-tolerant processing under abnormal conditions."
        ]
    },
    {
        "requirement": "Md 2(k ) = D&Z  (k ) + Md1(k )  . Kg 2",
        "safety_requirements": [
            "The system should check the control solution result Md2(k) to ensure the correctness of functional processing when the output is a normal value, abnormal value, boundary value, or maximum/minimum value.",
            "The system should check the input data during control resolution processes at different operational stages and states, to ensure that the logic of the current operational stage and state has been properly considered.",
            "The system shall verify the precision of data bits in interface data, and ensure the correctness of functional output even when the precision is greater than or less than the required value.",
            "The system should monitor the input cycle of interface data and implement fault-tolerant handling for abnormal situations where the cycle is greater than, less than, or reaches an extreme value beyond the specified limits.",
            "The system should perform constraint checks on the boundary conditions of the control solution formula Md2(k) = D&Z(k) + Md1(k)·Kg2, to avoid abnormal outputs caused by computational overflow or precision truncation."
        ]
    },
    {
        "requirement": "Md 2(k ) limited [-XfGama, +XfGama]",
        "safety_requirements": [
            "The system should set a reasonable range (upper and lower slope limits) for the parameter variation rate of Md 2(k), and clearly adopt a safety value output or clamping strategy when the limit is exceeded.",
            "The system shall perform cross-redundancy consistency checks on output data in the case of a single redundancy failure or failures in all redundancies, and trigger the fault handling mechanism.",
            "The sensor acquisition range should be explicitly limited to [-XfGama, +XfGama]; if exceeded, the sensor fault status should be reported immediately.",
            "When the interface data frame represents a smaller range than the actual data range, the system should perform data validity verification and output safety boundary values.",
            "When the output of Md 2(k) exceeds the limit, a hard limiting strategy should be automatically executed to strictly constrain the value within the interval [-XfGama, +XfGama]."
        ]
    },
    {
        "requirement": "Md3(k) = ((2 - T)Md3(k - 1) + T.Md2(k) + T.Md2(k - 1)) / (T + 2)",
        "safety_requirements": [
            "The system shall perform validity verification on the output results and ensure that the calculation of Md3(k) meets the precision constraints when the data bit value accuracy of the interface data is less than the specified requirement.",
            "The system should truncate or make compatible adjustments to the output results when the data bit value accuracy of the interface data exceeds the specified requirements, to ensure the computational stability of Md3(k).",
            "The system should dynamically monitor the input cycle of interface data, and adjust the solution logic to ensure the timing correctness of Md3(k) when the cycle is less than, greater than the specified value, or when extreme maximum or minimum values occur.",
            "The system should perform polymorphic detection on the control resolution results, and when the results are abnormal values, boundary values, or extreme maximum or minimum values, activate the redundant verification mechanism to ensure that Md3(k) remains within the safe range.",
            "The system should compare the safety value of the interface data with the normal non-fault value, and when the difference between them exceeds the threshold, initiate the fault-tolerant algorithm to recalculate Md3(k) and output the corrected result."
        ]
    },
    {
        "requirement": "Heading control: yg = 0°",
        "safety_requirements": [
            "The system should ensure that the sequence and timing of heading control are coordinated with the hardware, and that control conditions are complete and consistent. \n\nNote: \"一致性\" is translated as \"consistent\" to maintain the original structure while indicating consistency before and after. If a more polished version is acceptable, it could be rephrased as \"temporally consistent.\" Let me know if you'd like that adjustment.",
            "The system should verify that the timing relationships, constraint relationships, concurrency relationships, and combination relationships of heading control logic comply with the design specifications.",
            "The system should perform validity checks on input data during different operational phases and state transitions to ensure that the heading control solution process conforms to the current operating conditions.",
            "The system should perform anomaly detection on the heading control solution results, covering scenarios such as normal values, abnormal values, boundary values, maximum and minimum values, and implement fault-tolerant handling.",
            "The system shall perform cross-validation on redundant output data to maintain the correctness and continuity of heading control functionality in the event of single or multiple redundancy failures."
        ]
    },
    {
        "requirement": "δp = 100%",
        "safety_requirements": [
            "The system should perform real-time checks on the data bit value accuracy of interface data to ensure that when the accuracy is greater than or less than required, the output result of δp = 100% is correct.",
            "The system should detect and prevent division by zero during data processing to ensure the safety of the calculation logic where δp = 100%.",
            "The system should check the input cycle of interface data, and when the analysis cycle is greater than, less than, or at the extreme value of the specified cycle, maintain δp = 100% accuracy.",
            "The system should verify the control solution results to ensure the correctness of δp = 100% under normal, abnormal, boundary, and extreme value conditions, and trigger the corresponding exception handling mechanism."
        ]
    },
    {
        "requirement": "During this phase, adjustments can be made through the throttle valve's fine-tuning amount.",
        "safety_requirements": [
            "When adjusting the system through throttle fine-tuning, it should ensure that the control sequence, timing, and hardware coordination are properly aligned, and that control conditions are complete and consistent.",
            "The system should check the input for fine-tuning functions of the throttle valve under different states and operational phases, ensuring the processing logic is correct when operational phases or states are not considered.",
            "The system should implement timeout detection for critical control settings during the throttle fine-tuning adjustment process to handle situations where the hardware status fails to meet requirements for an extended period.",
            "The system should check the control resolution results of the throttle valve fine adjustment, and correctly handle normal values, abnormal values, boundary values, as well as maximum and minimum values.",
            "The system should check the duration of the throttle valve fine-tuning task to ensure the processing logic is correct when the duration is less than the specified time."
        ]
    },
    {
        "requirement": "Change the limit value to [-10%, 0%]",
        "safety_requirements": [
            "When the redundancy switching condition is met but the switching fails, the system shall immediately execute the safety handling procedure and maintain the current stable state.",
            "The system should automatically clamp the output data to the limit boundary and output according to the preset safety value when the data exceeds the limit range of [-10%, 0%].",
            "The system should monitor the rate of change of the amplitude limit and activate the slope limiting module to make corrections when the preset slope range is exceeded.",
            "When the sensor acquisition value exceeds the valid range of [-10%, 0%], the system should trigger a sensor failure alarm and switch to the backup data source.",
            "If the redundancy switch operation exceeds the specified time limit, the system shall terminate the switching process and maintain the current valid configuration status."
        ]
    },
    {
        "requirement": "Md1(k) = Kg1 * Dz(k), Md1(k) is clamped within [- XfCs, XfCs]",
        "safety_requirements": [
            "The system should define reasonable range for the rate of change of Kg1 and Dz(k), and establish a strategy for handling over-slope data, ensuring that Md1(k) is clamped within [-XfCs, XfCs].",
            "The system shall perform real-time checks on the data bit value accuracy of Dz(k), ensuring that the calculation result of Md1(k) still meets the accuracy and amplitude limit requirements when the accuracy is greater than or less than the required value.",
            "The system should verify the processing logic of control solution results (normal values, abnormal values, boundary values, maximum and minimum values) to ensure the correct clamping and calculation of Md1(k).",
            "The system needs to check the applicability of functional inputs during different operational phases or states, ensuring that the calculation and processing of Md1(k), when not considering the operational phase or state, meets safety requirements."
        ]
    },
    {
        "requirement": "Md2(k) clamped [- XfGama, XfGama]",
        "safety_requirements": [
            "The system should monitor the rate of change of Md2(k); if it exceeds the preset upper or lower slope limits, execute rejection or correction and record the anomaly.",
            "In the case of single or multiple redundant faults, the system should perform redundancy cross-checking on the output data to ensure that the limiting function is correctly executed within [-XfGama, XfGama].",
            "The system should detect the sensor value of Md2(k) in real time, and if it exceeds the preset range [-XfGama, XfGama], immediately report a sensor fault and switch to safety mode.",
            "When the representable range of the interface data frame is smaller than the actual value range of Md2(k), the system should truncate the out-of-range data and trigger an alarm.",
            "When the output value of Md2(k) exceeds the saturation range, the system should automatically clamp it to the [-XfGama, XfGama] boundary and activate the fault-tolerant mechanism according to the predefined safety protocol."
        ]
    },
    {
        "requirement": "When -10m ≤ DH ≤ 10m, switch to the constant altitude phase, reset the constant altitude control integrator, and set the softening time limit to 2 seconds.",
        "safety_requirements": [
            "When the system enters the altitude hold phase, it should verify the coordination of control sequence, timing, and hardware to ensure that control conditions are complete and the condition boundary (-10 m ≤ DH ≤ 10 m) is consistently judged.",
            "The system needs to define the sensor's acquisition range, and trigger a sensor fault alarm when the DH value exceeds the preset upper or lower limits.",
            "The system should check the results of operations related to resetting the altitude control integrator and setting softening time limits, covering verification of correct handling of normal values, abnormal values, boundary values, and extreme values.",
            "When setting the softening time limit (2s), the system should perform real-time monitoring of the data bit value accuracy, and if the accuracy is below the required level, the operation must be forcibly terminated and an error code output.",
            "When setting the softening time limit (2s), the system should monitor the data bit value accuracy in real-time, retain the original data and trigger the fault-tolerant mechanism when the accuracy exceeds the allowable range."
        ]
    },
    {
        "requirement": "Yg(k) = -Md3(k)",
        "safety_requirements": [
            "The system should perform real-time checks on the input cycle of interface data to ensure the correctness of the output Yg(k) = -Md3(k) under conditions of \"greater than the specified cycle, less than the specified cycle, and extreme maximum and minimum values.\"",
            "The system should verify the control calculation results to ensure that the functional processing logic of Yg(k) = -Md3(k) is correct under conditions of 'normal values, abnormal values, boundary values, and extreme maximum/minimum values'.",
            "The system should monitor the data bit value accuracy of interface data, and when the accuracy exceeds the requirement, trigger an error correction mechanism to ensure the validity of the output results.",
            "The system should monitor the data bit value accuracy of interface data, and when the accuracy is less than required, initiate the fault-tolerant processing procedure to ensure computational reliability.",
            "The system shall perform a division-by-zero check during data processing, and immediately terminate the calculation and issue an error alarm upon detecting a division-by-zero operation."
        ]
    },
    {
        "requirement": "yg(k) = 0°",
        "safety_requirements": [
            "The system should check for division by zero during data processing to ensure that when yg(k) = 0°, a division by zero error is avoided.",
            "The system should check the state transition conditions to ensure that the state switching logic is correct under conditions where transitions are not set, always satisfied, or never satisfied.",
            "The system should validate the cycle of input data and ensure that the output meets expectations when the processing cycle is greater than, less than the specified value, or reaches an extreme value.",
            "The system should verify the precision of data bit values in interface data, and take fault-tolerant measures and record anomalies when the precision is lower than required.",
            "The system should check the entry conditions of states without transition relationships to ensure that the state execution logic is correct when the conditions are simultaneously met or triggered during execution."
        ]
    },
    {
        "requirement": "δp(k) = 100%",
        "safety_requirements": [
            "The system should check the interface data cycle to ensure that when the input cycle is greater than or less than the specified cycle, or when extreme maximum/minimum values occur, the output correctness of δp(k) = 100% is maintained.",
            "The system should check for the existence of division by zero during data processing and ensure the correct execution of δp(k) = 100%.",
            "The system should check whether the control solution results are normal values, abnormal values, boundary values, or maximum/minimum values, and ensure that the processing of δp(k) = 100% is correct.",
            "The system shall check the precision of data bits in interface data, and when the precision is greater than or less than the specified requirement, ensure δp(k) = 100% output correctness."
        ]
    },
    {
        "requirement": "Both the upper and lower underscored portions are clamped within [- XfSita, XfSita]",
        "safety_requirements": [
            "The system should clearly define the upper and lower limits of the sensor's measurement range, and trigger a sensor fault alarm when the value exceeds [-XfSita, XfSita].",
            "The system should set a reasonable slope range for parameter change rates, and data exceeding the slope limits should be handled using predefined strategies and recorded as anomalies.",
            "The system shall ensure output data validity checks in case of a single redundancy failure or multiple redundancy failures, and execute the redundant fault handling mechanism.",
            "The system shall define the valid value range of parameters as [-XfSita, XfSita]; out-of-limit data shall be rejected and the fault-tolerant processing procedure shall be initiated.",
            "The system shall check the value accuracy of interface data bits and automatically correct or mark as unavailable data when the accuracy is below the required level."
        ]
    },
    {
        "requirement": "hg is the given height, taken from the target waypoint height.",
        "safety_requirements": [
            "The system should check the value accuracy of data bits in interface data to ensure that the processing result of hg height data remains correct when the accuracy is greater than or less than the required value.",
            "The system shall verify the communication protocol of the interface data frame to ensure that an exception handling mechanism is executed when the data length exceeds or falls below the specified value.",
            "The system needs to clearly define the upper and lower limits of the hg sensor's measurement range and trigger a sensor fault alarm when these limits are exceeded.",
            "When the system detects abnormal external factors such as high sea conditions or severe weather, it should dynamically correct or apply fault-tolerant processing to the validity of hg height data."
        ]
    },
    {
        "requirement": "UG is the specified airspeed at constant altitude, calculated based on aircraft flight performance. Refer to the appendix for data, and apply amplitude limiting at boundary points.",
        "safety_requirements": [
            "The system should clearly define the upper and lower limits of the sensor's measurement range, and immediately report a sensor fault when the measured value exceeds the range.",
            "The system should strictly check the communication protocol of the interface data frame to ensure correct output when the data length is greater than or less than the specified length.",
            "The system shall verify the data bit value accuracy of interface data to ensure it meets the preset accuracy requirements, and execute exception handling procedures when the accuracy exceeds the limit.",
            "The system should perform real-time monitoring of control solution results to ensure functional processing under normal values, abnormal values, boundary values, maximum and minimum values meets expected requirements.",
            "The system should define reasonable ranges for parameter change rates (upper and lower slope limits) and clearly specify handling strategies for data exceeding these slope limits.",
            "The system needs to verify the limit logic of the given airspeed ug at the fixed altitude to ensure it meets the requirements of the appendix data for flight performance calculations."
        ]
    },
    {
        "requirement": "δp limit processing: The default minimum throttle limit values at 5000, 6000, 7000, and 8000 meters altitude are 12.5%, 27.5%, 42.5%, and 57.5% respectively, with linear interpolation applied in between; the maximum throttle limit is 100%.",
        "safety_requirements": [
            "The system should check the results of δp amplitude-limiting calculations to ensure that outputs conform to predefined amplitude-limiting logic and trigger corresponding warning mechanisms under normal, abnormal, boundary, maximum, and minimum value conditions.",
            "When the system calculates the δp limit, it needs to adjust the processing logic according to the current operating phase and status. If the relevant phase or status parameters are not detected, error handling should be executed immediately and an exception reported.",
            "The system shall support fault detection of redundant interface data, and automatically activate the redundant fault tolerance mechanism or use safe default values when a single redundancy failure or total redundancy failure (data anomaly, timing fault, etc.) occurs.",
            "The system needs to verify combinations of multiple input data (normal/abnormal equivalence classes, boundary values, default values, etc.), ensuring that δp limit calculation always complies with safety constraints under different combinations.",
            "The system should verify the data bit precision of the interface data. If a precision exceeding the required range is detected, the current solution process should be terminated and a safety recovery operation executed."
        ]
    },
    {
        "requirement": "The amplitude can be adjusted by fine-tuning the throttle valve. Above 5000 meters, the adjustment range is [0%, 40%]; below 5000 meters, no adjustment is allowed.",
        "safety_requirements": [
            "The system should clearly define the upper and lower limits of the sensor's measurement range, and immediately report a sensor fault when the measured value exceeds this range.",
            "The system should check the control resolution results of the throttle valve fine adjustment to ensure correct handling under conditions such as \"normal value, abnormal value, boundary value, maximum and minimum values\".",
            "The system shall check the data bit value accuracy of the interface data, analyze the output correctness when the accuracy is less than or greater than the required value, and ensure compliance with the preset accuracy range.",
            "The system should set a reasonable range (upper and lower slope limits) for the parameter variation rate of the throttle valve fine adjustment, and clearly define the handling strategy for data exceeding the slope limits.",
            "The system must limit the fine-tuning range to [0%, 40%] when the altitude is ≥5000 meters, and prohibit any changes when the altitude is below 5000 meters, while continuously verifying the accuracy of the altitude input data."
        ]
    },
    {
        "requirement": "Md2(k) = KhdI * Md1(k), with Md2(k) clamped within [-XfSita, XfSita]",
        "safety_requirements": [
            "The system shall check the value accuracy of data bits for interface data KhdI and Md1(k) to ensure that when the accuracy is less than or greater than required, the calculation result of Md2(k) is correct and limited within the range [-XfSita, XfSita].",
            "The system needs to verify the type of the control solution result Md2(k) (normal value, abnormal value, boundary value), ensuring that the clamping mechanism is triggered and anomalies are recorded when reaching the clamping threshold -XfSita or XfSita.",
            "The system should perform real-time comparison of continuous output data Md2(k) with different redundancies. If the value difference between redundancies exceeds the specified threshold, fault-tolerant processing and alarm triggering should be initiated.",
            "The system should check input parameters based on the current operating phase and status to ensure the control calculation process uses the corresponding logic, avoiding calculation errors caused by neglecting phases or statuses.",
            "The system should perform range validation on the values of KhdI and Md1(k) during the Md2(k) calculation process to prevent illegal inputs from causing computation results to exceed expected amplitude limits."
        ]
    },
    {
        "requirement": "Md3(k) = Khd · [h(k) - hg(k)] + Md2(k), with Md3(k) clamped to [-XfSita, XfSita]",
        "safety_requirements": [
            "The system should perform real-time checks on the control solution results to ensure that when Md3(k) is at normal values, abnormal values, boundary values, and extreme maximum or minimum values, the processing process complies with the amplitude limit range [-XfSita, XfSita].",
            "The system needs to verify the value accuracy of the interface data bits. When the accuracy is less than or greater than the required level, it should ensure that the calculation result of Md3(k) still meets the accuracy constraint conditions.",
            "The system should perform dynamic checks on functional inputs under different operating states and phases to ensure the consistency between the control solution process and the current state and phase.",
            "The system shall strictly verify the communication protocol of the interface data frame, and when the data length exceeds or is below the specified length, it must trigger an exception handling mechanism."
        ]
    },
    {
        "requirement": "When the flight altitude is not greater than 150m, phase transition processing is performed based on the current phase flag and status information such as current flight altitude and airspeed.",
        "safety_requirements": [
            "When the system transitions between states, it should verify the correctness of switching among functions with different priorities, ensure that the transition between high-priority and low-priority states meets predefined conditions, and validate the associated logic of phase flags, flight altitude, and airspeed.",
            "When the system transitions between operational states, it should validate the values and value ranges of functional interface data to ensure that the output results of phase transition processing are strictly consistent with status information such as flight altitude (≤150m) and airspeed.",
            "The system should verify the validity of all state transition condition settings, including cases where conditions are not set, always satisfied, or never satisfied, ensuring that flight phase transitions are triggered only under reasonable conditions.",
            "The system shall perform an integrity check on the communication protocol of the interface data frame. If the data length is greater than or less than the specified value, processing shall be immediately terminated and the anomaly recorded.",
            "The system should verify whether the control solution process is executed based on the current flight altitude, airspeed, and phase flag during different operational phases and states, ensuring that no phase or state parameters are missing."
        ]
    },
    {
        "requirement": "Jg(k) = -Md3(k)",
        "safety_requirements": [
            "The system should check the precision of data bits in interface data to ensure the correctness of the calculated result Jg(k) = -Md3(k) when the precision is less than the specified requirement.",
            "The system should check the data bit value accuracy of the interface data to ensure the correctness of the calculated result Jg(k) = -Md3(k) when the accuracy exceeds the specified requirement.",
            "The system should check the input cycle of interface data and analyze the correctness of outputs under conditions where the input cycle is \"greater than the specified cycle, less than the specified cycle, and extreme maximum/minimum values.\"",
            "The system should check whether the control calculation results are 'normal values, abnormal values, boundary values, maximum and minimum values' and ensure the correctness of the functional processing logic.",
            "The system should dynamically check the data processing process to identify and handle potential division by zero operations."
        ]
    },
    {
        "requirement": "When |DH| > 50m, the flight phase transitions from the constant altitude segment to climb phase 2 or descent segment.",
        "safety_requirements": [
            "The system should monitor the parameter change rate in real time during flight phase transitions, ensuring it complies with predefined upper and lower slope limits, and execute clear handling strategies upon limit exceedance.",
            "The system should clearly define the upper and lower limits of the sensor's acquisition range, and immediately trigger the sensor fault alarm mechanism when values exceeding the acquisition range are detected.",
            "During the transition of system operating states, the values or value ranges of functional interface data should be verified to ensure the accuracy of transitions from the flight phase to either climb 2 or descent segments.",
            "The system should check the priority switching logic between states with transition relationships to ensure that the execution of states and functions during transitions between high and low priority levels complies with safety constraints.",
            "The system shall verify the communication protocol length of the interface data frame, and when the data length is greater than or less than the specified range, execute the predefined error handling procedure and maintain flight status stability."
        ]
    },
    {
        "requirement": "Md2(k) = Kp1I * Md1(k), Md2(k) limited to [Xf, Xfx]",
        "safety_requirements": [
            "The system should perform real-time checks on the data bit value accuracy of interface data to ensure that when the precision is greater than or less than required, the calculation result of Md2(k) = Kp1I · Md1(k) is correct and complies with the amplitude limit range [Xf, Xfx].",
            "The system should check whether the control calculation results are normal values, abnormal values, boundary values, or extreme maximum/minimum values, and ensure that the output of Md2(k) is within the [Xf, Xfx] clamping range and meets the requirements of the current state.",
            "The system should validate functional inputs during different operational phases or states to ensure that the control calculation process considers the actual operational phase and state, avoiding calculation errors caused by unconsidered factors.",
            "The system should monitor the communication status of interface data frames and implement a predefined handling mechanism (e.g., maintaining the previous value or switching to a backup data source) in case of data frame loss, ensuring continuous and correct calculation of Md2(k)."
        ]
    },
    {
        "requirement": "Flight situation on the five-side route, longitudinal: the underscored sections are both limited to [-XfSita, XfSita]",
        "safety_requirements": [
            "The system should perform real-time checks on the operational status of different redundancies, and when \"two or more redundancies are in different states,\" it should automatically compare and select the correct state to achieve longitudinal limit function.",
            "The system should strictly limit the sensor's acquisition range, and immediately report a sensor failure and activate the protection mechanism when the value exceeds the upper and lower limits [-XfSita, XfSita].",
            "The system shall perform threshold checks on continuous output data with different redundancies, and when the difference between redundant output data exceeds the specified threshold, the error correction mechanism shall be triggered while maintaining the effectiveness of longitudinal limiting.",
            "The system shall check the same input data received with different redundancy levels, and in case of inconsistent data values, select the valid data source according to a predefined strategy and record the abnormal status.",
            "The system shall initiate dynamic limit adjustment and generate alarm messages when redundancy status is inconsistent or input/output data is abnormal, ensuring the reliability of longitudinal control during the flight's final approach."
        ]
    },
    {
        "requirement": "The system should be capable of calculating and providing the velocity resolution relationship for a 200m flight altitude on the five-side approach path.",
        "safety_requirements": [
            "The system should check the speed calculation results to ensure that the processing logic is correct when the control calculation results are normal values, abnormal values, boundary values, or extreme maximum/minimum values, and that it complies with the requirement of a 200m flight altitude during the final approach.",
            "The system should monitor for timeouts during the control solution process and execute a predefined exception handling procedure if results are not returned within the specified time.",
            "The system should perform a slope range check on the rate of change of speed parameters, and data exceeding the slope limit should be handled according to a clear strategy (e.g., amplitude limiting, anomaly marking).",
            "The system should verify that input parameters include current operational phase and status information under different operating conditions or phases, and trigger an error handling mechanism if such information is not included.",
            "The system shall dynamically adjust the speed resolution logic and ensure that the results meet safety redundancy requirements when detecting abnormal external factors such as high sea conditions and severe weather."
        ]
    },
    {
        "requirement": "The system should be capable of achieving lateral control, the same as in the climb phase 2.",
        "safety_requirements": [
            "The system shall ensure that the sequence and timing of lateral control are coordinated with the hardware, with complete and consistent control conditions.",
            "The system should verify the correctness of timing relationships, constraint relationships, concurrency relationships, and combination relationships among functional points in lateral control.",
            "The system should implement a timeout determination mechanism for critical actions in lateral control, triggering exception handling when hardware status remains unsatisfactory for an extended period.",
            "After implementing the lateral control, the system needs to monitor the consistency between hardware status and control requirements, and execute predefined measures when inconsistencies occur.",
            "The system shall ensure that the output timing of the lateral control status meets the requirements of the current flight scenario."
        ]
    },
    {
        "requirement": "The system should be capable of achieving closed-loop control of the throttle airspeed, where the reference airspeed ug is calculated based on the aircraft's flight performance, with data referring to the approach speed provided in the appendix.",
        "safety_requirements": [
            "The system should ensure that the sequence, timing, and hardware coordination of the throttle airspeed closed-loop control are properly ordered, with complete and consistent control conditions.",
            "The system should check the control solution results (normal values, abnormal values, boundary values, maximum and minimum values) to ensure the correctness of functional processing.",
            "The system should check functional inputs in different states and operational phases, and analyze the correctness of handling when operational phases or states are not considered.",
            "The system should verify the timing, constraints, concurrency, and combination relationships among control logics of each functional point to ensure their correctness.",
            "The system should check combinations of boundary values, initial values, safety values, and default values output by preceding functions to ensure correctness in multi-function processing.",
            "The system should perform integrity verification on the given airspeed ug based on the five-side flight speed data to ensure the input reliability of the airspeed closed-loop control."
        ]
    },
    {
        "requirement": "The system should be capable of performing discrete calculations, including the computation of Md2(k), Md3(k), and Jg(k), and should also implement amplitude limiting for Md2(k) and Md3(k).",
        "safety_requirements": [
            "The system should perform integrity checks on the control solution results (normal values, abnormal values, boundary values, maximum and minimum values) to ensure that the calculations and clamping processing of Md2(k), Md3(k), and Jg(k) comply with the predefined rules.",
            "The system shall perform consistency checks on discrete output data with different redundancies, and trigger error correction mechanisms to ensure correct functionality when redundant data values are inconsistent.",
            "The system should verify the applicability of input data under different states or operational phases, ensuring that the control solution process matches the current state and phase, to avoid erroneous handling due to unconsidered operational phases or states.",
            "The system should perform effective range enumeration checks on discrete value domain data bits to ensure that input data only accepts defined values within the valid range.",
            "The system shall perform outlier detection on discrete value range data bits and execute predefined fault-tolerant or alarm actions when detecting outliers outside the defined valid value range."
        ]
    },
    {
        "requirement": "The system should be capable of achieving longitudinal control during the descent phase, the same as in climb phase 1, where the given airspeed ug is calculated based on aircraft flight performance and boundary points are limited.",
        "safety_requirements": [
            "During longitudinal control of the system in the descent phase, the input airspeed ug should be checked for its operating phase and operational status to ensure the control calculation process correctly handles situations of 'unconsidered operating phase' or 'unconsidered operational status'.",
            "The system should ensure that the execution sequence and timing of longitudinal control are coordinated consistently with the hardware, and the control conditions must remain complete and logically conflict-free.",
            "The system shall perform boundary value and outlier detection on the results of longitudinal control calculations, and trigger a preset handling mechanism when abnormal values are identified.",
            "The system needs to verify the timing relationships, constraints, and concurrent combinations of each control logic during the descent phase, ensuring they comply with the physical limitations of the flight scenario.",
            "The timing of the system output control status should strictly match the timing requirements of the descent phase scenario, and execute fault-tolerant processing when detecting delays or advancements."
        ]
    },
    {
        "requirement": "The system should be capable of achieving lateral control during the descent phase, same as in climb phase 2.",
        "safety_requirements": [
            "During the descent phase of lateral control, the system should ensure that the control sequence, timing, and hardware coordination are properly aligned, and that control conditions are complete and consistent.",
            "The system shall check inputs for different operational phases (e.g., descent phase and climb phase 2) to ensure the control calculation process correctly accounts for the current operational phase and status.",
            "The system should verify the correctness of the timing relationships, constraint relationships, concurrency relationships, and combination relationships of the lateral control logic.",
            "The system should perform real-time checks on the control solution results to ensure correctness in handling normal values, abnormal values, boundary values, maximum and minimum values.",
            "The system should check the operating status of different redundancies to ensure the correctness of lateral control functions when multiple redundancies are in different states."
        ]
    },
    {
        "requirement": "During the phase transition process in non-remote control mode, a series of phase transitions may occur until switching to a flight phase suitable for the current state.",
        "safety_requirements": [
            "The system should check functional inputs during transitions between non-remote control modes to ensure the control resolution process has accurately identified the current operational phase and status.",
            "The system should implement a timeout detection mechanism for critical control actions, triggering safety degradation or alarm handling when hardware status does not meet control requirements.",
            "During the transition of operational states, it is necessary to check the value and range changes of functional interface data, and verify the consistency of output with flight phase adaptability.",
            "The system should perform multi-dimensional checks on the control solution results, covering mechanisms for identifying and handling normal values, abnormal values, boundary values, and extreme values.",
            "The functional priority logic should be verified during state transitions to ensure strict correspondence between flight control states and functions during high/low priority switching.",
            "During multiple phase transitions, the system should continuously verify the dynamic matching between control solution results and flight parameters."
        ]
    },
    {
        "requirement": "The system should be capable of achieving fixed throttle control, retracting the throttle according to the minimum throttle limit value, which can be adjusted through throttle fine-tuning. The default values should be provided for altitudes of 5000, 6000, 7000, and 8000 meters, with intermediate values obtained through linear interpolation. Above 5000 meters, the adjustment range during descent is [-10%.",
        "safety_requirements": [
            "The system should ensure that the sequence and timing of the fixed throttle control are coordinated with the hardware, and the control conditions must be complete and consistent.",
            "The system should perform real-time checks on the control calculation results (normal values, abnormal values, boundary values, maximum and minimum values) and ensure the correctness of the functional processing logic.",
            "The sensor's measurement range must have clearly defined upper and lower limits, and a sensor fault must be reported immediately upon exceeding these limits.",
            "During the control solution process of the system in different operational phases and states, the input data should be checked for phase and state correlation to ensure correct processing logic.",
            "The fault detection logic must be independent of the equipment's normal operation process, and the detection method must not interfere with the equipment's normal functioning.",
            "When the system changes the minimum throttle limit value, it should verify the validity of the fine adjustment to ensure that it complies with the constraint of a [-10%] decrease."
        ]
    },
    {
        "requirement": "Flight Phase Determination Functional Requirement: Automatically determine the current flight phase based on the aircraft's position information and motion parameter information.",
        "safety_requirements": [
            "The system shall perform integrity checks on input data at different operational phases and states to ensure the correct logical processing of the flight phase determination function without overlooking the current operational phase or state.",
            "The system shall verify the consistency between the computed result of the flight phase automatic determination function and the expected status when the input data values for task execution conditions are satisfied in advance.",
            "The system shall verify the consistency between the computational results of the flight phase automatic determination function and the expected state when the input data values for mission execution conditions are delayed.",
            "The system shall check the mapping relationship between software status and the current flight phase, and trigger the fault tolerance handling mechanism when 'no corresponding software status' or 'software and hardware status inconsistency' occurs.",
            "When external sensors or devices are in a degraded, maintenance, or other abnormal state, the system should validate the validity of their output data to ensure the robustness of the flight phase determination function."
        ]
    },
    {
        "requirement": "Ground waiting phase: The aircraft is in a stationary state before takeoff and after complete landing.",
        "safety_requirements": [
            "Before entering the ground waiting phase, the system should check the status entry conditions to ensure that it enters the shutdown state when the conditions are met, and maintains the correctness of state execution when the conditions are not met or are met again.",
            "The system shall ensure that the ground waiting phase is strictly isolated from other states without transfer relationships, in terms of state execution logic, when entry conditions are simultaneously satisfied or become satisfied during execution.",
            "After a power failure and restart, the system should perform a recovery check on the ground waiting phase status. If the status is not restored or incorrectly restored, the safety protection mechanism should be immediately triggered and an alarm issued.",
            "The system should monitor the output data of external devices (such as sensors, NVM) under non-operational conditions such as \"power-off, initialization\". If the data is abnormal, the control commands for the control surfaces shall be frozen.",
            "The system must verify during the ground waiting phase whether the functional input contains the current operational phase identifier. If the input does not distinguish phases or states, the control calculation should be terminated and an error code recorded."
        ]
    },
    {
        "requirement": "Takeoff ground phase (takeoff roll phase): Control the aircraft's lateral deviation and yaw angle relative to the runway centerline through differential braking of left and right wheels and rudder deflection; control the aircraft's longitudinal attitude according to a given pitch angle.",
        "safety_requirements": [
            "The system shall check during the takeoff ground phase whether the functional inputs take into account the current operational phase and flight status, ensuring the correct processing of lateral offset, yaw angle, and pitch angle in the calculation process for differential braking and rudder control.",
            "The system should perform real-time verification on control solution results (normal values, abnormal values, boundary values, etc.), and activate the safety fault-tolerant mechanism when detecting invalid or out-of-limit values.",
            "The system should ensure that control commands are strictly synchronized with hardware actions in terms of timing and sequence, and that the control condition logic is complete and free of conflicts.",
            "The system needs to monitor the operating status of multiple redundancies and automatically execute redundancy management strategies when inconsistencies occur between redundancies, maintaining continuity of lateral offset and heading control.",
            "The system should integrate boundary protection algorithms in the control solution to prevent actuator surface deflection beyond physical limit values."
        ]
    },
    {
        "requirement": "Takeoff climb segment: From the point where altitude and airspeed reach certain values to the safety altitude, primarily controlling the aircraft to climb at a specific pitch angle.",
        "safety_requirements": [
            "The system shall check functional inputs during the takeoff departure phase to ensure that the control solution process correctly accounts for the current operational phase and status, and accurately computes pitch angle to maintain a safe climb.",
            "The system should check the control solution results, handle normal values, abnormal values, boundary values, and extreme maximum/minimum values to ensure the accuracy and safety of pitch angle control.",
            "The system shall dynamically check the state entry conditions and ensure the correctness of state execution and flight attitude stability when the conditions are satisfied, not satisfied, or satisfied again.",
            "In the event of a control solution timeout, the system should immediately trigger the exception handling mechanism to ensure that the solution result is returned within the specified time and meets safety requirements.",
            "When the system is in different operating states across multiple redundancies, it should coordinate state differences and ensure the correct execution of pitch angle control functions."
        ]
    },
    {
        "requirement": "Climb Segment 1: From the safety altitude (80m) to the phase where flaps are retracted, primarily controlling the aircraft to continue climbing, transitioning longitudinal control to airspeed control, and retracting landing gear and flaps in sequence.",
        "safety_requirements": [
            "The system should perform the corresponding control resolution process during different operating phases of segment 1 climb (e.g., retracting landing gear, flaps, etc.), and verify that functional inputs have not missed the current operating phase or status, ensuring correct processing logic.",
            "Before entering the climb phase 1, the system should verify the status entry conditions (e.g., safety height ≥ 80m), and continuously monitor the condition compliance during execution, handling state transition anomalies when conditions are not met or re-met.",
            "The system should perform outlier and boundary value checks on the control solution results for climb phase 1 (airspeed command, landing gear/flap status commands), and trigger a safety fault-tolerant mechanism when the results are abnormal.",
            "The system shall follow the preset priority rules when handling the sequence of landing gear and flap retraction, ensuring the correct execution of high/low priority state transitions (such as emergency abort climb).",
            "During the system's transition from climb phase 1 to another operational state, functional interface data (such as altitude, airspeed, flap angle) should be checked for value or range changes to ensure output control commands match the current phase."
        ]
    },
    {
        "requirement": "Climb Segment 2: From flap retraction until reaching the required cruise altitude, or climbing from one altitude to a higher altitude, controlling the aircraft's longitudinal speed according to the specified airspeed and laterally maintaining the flight path along the pre-programmed route.",
        "safety_requirements": [
            "During the system's climb phase 2, it should check whether the control resolution function input includes current operational phase and status information, ensuring correct handling when operational phase or status is not considered.",
            "The system shall perform real-time comparison of continuous output data with different redundancy levels (e.g., airspeed, heading angle). If the value difference exceeds the threshold, an error correction mechanism must be triggered and an alarm generated.",
            "The system should verify whether the airspeed and route data output from the previous function are within normal equivalent class combinations, ensuring that subsequent lateral control functions can maintain a safe flight status even under abnormal inputs.",
            "The system shall monitor the operational status of the lateral control redundancy module, and when two or more redundancies are in different states, the abnormal redundancy shall be isolated and the backup control strategy shall be activated."
        ]
    },
    {
        "requirement": "Altitude Hold Phase: Longitudinally control the aircraft's altitude and airspeed, laterally control the lateral deviation, enabling the aircraft to fly at the required altitude and airspeed.",
        "safety_requirements": [
            "During the altitude hold phase, the system should check whether the functional input includes the flight phase and operational status parameters, and ensure that the processing logic of longitudinal altitude/airspeed control and lateral offset control complies with the requirements of the current flight phase.",
            "The system should implement categorized checks on the control solution results, identifying normal values, abnormal values, boundary values, and extreme maximum/minimum values, and establish corresponding exception handling mechanisms and warning strategies.",
            "The system should verify that the sequence and timing of control commands are synchronized and coordinated with the hardware devices, ensuring completeness and consistency of control conditions.",
            "The system shall set a control solution timeout threshold, and immediately activate the backup control strategy and trigger a fault alarm when a timeout occurs.",
            "The system should monitor differences in the operating status of multiple redundancies and automatically execute status synchronization or switch redundant channels when detecting inconsistent redundancy states."
        ]
    },
    {
        "requirement": "During descent below 5000 meters, the throttle limiter is set to no less than 6%, with a change range of [-6.5%, 10%].",
        "safety_requirements": [
            "The system should clearly define the upper and lower limits of the sensor's measurement range, and immediately report a sensor fault when the measured value exceeds this range.",
            "The system should set a reasonable range (upper and lower slope limits) for the parameter variation rate of the throttle valve. Data exceeding the slope limit should be automatically replaced with the previous valid value or a safety value.",
            "The system should define valid value ranges (upper and lower limits) for parameters, and execute truncation processing upon exceeding the limits or output according to preset safety values.",
            "When the output data exceeds the limit, the system shall immediately perform truncation or switch to a safety value, and record the event log.",
            "The system shall perform real-time classification checks (normal/abnormal/boundary/extreme value) on the throttle control calculation results, trigger safety mechanisms and limit outputs when abnormalities occur."
        ]
    },
    {
        "requirement": "When the aircraft passes through an altitude of 5000 meters, linearly reduce the throttle trim adjustment to zero at a rate of 5% per second.",
        "safety_requirements": [
            "The system should perform a division-by-zero check during the data processing phase when calculating the throttle fine-tuning amount to avoid division-by-zero errors.",
            "The system should clearly define the upper and lower limits of the sensor's measurement range and trigger a sensor fault alarm when an out-of-limit value is detected.",
            "The system should ensure that it can automatically recover to a normal operating state and maintain the throttle control logic after power recovery or runaway reset.",
            "When the system's throttle fine-tuning output exceeds the limit, a truncation or safety value output strategy should be adopted to ensure operational safety.",
            "The system should evaluate the impact of filter processing on real-time performance, ensuring that delays remain within acceptable limits to guarantee the timeliness of control commands."
        ]
    },
    {
        "requirement": "When the aircraft has already entered the descent phase, perform phase transition processing based on the current flight status.",
        "safety_requirements": [
            "When the system transitions between operational states, it should check the values of functional interface data, analyze the correctness of outputs in cases such as 'value changes', 'value range changes', or 'value remains unchanged', and ensure that the phase transition processing complies with the current flight status.",
            "The system should check transitions between states with different priorities (high to low, low to high) to ensure state and functional correctness.",
            "The system should check the conditions for entering a state, analyze situations such as \"satisfied, not satisfied, satisfied again\" during execution, and ensure correct state transitions.",
            "The system should check functional inputs under different states and operational phases, and analyze the correctness of control solution processing in scenarios such as 'unconsidered operational phase' or 'unconsidered operational state'."
        ]
    },
    {
        "requirement": "The longitudinal control for segment 1 glide slope is the same as that for the fixed height on the final approach, and the specified height shall refer to the glide path handling section in Volume 6.",
        "safety_requirements": [
            "The system should check whether the rate of change of the altitude parameter is within the preset upper and lower slope limits and clearly define the handling strategy for out-of-slope data.",
            "The system should define the valid value range (upper and lower limits) for the altitude parameter and establish a mechanism for handling out-of-range data.",
            "The system should ensure that longitudinal control sequences and timing are coordinated with the hardware, and control conditions must remain complete and logically consistent.",
            "The system should verify the correctness of the timing, constraints, concurrency, and combined relationships between the glide slope segment 1 and the final approach altitude control logic.",
            "The system should check functional inputs during different operational phases to ensure that the processing logic correctly covers all operational states and phases.",
            "The system should adjust the control solution process according to different flight statuses and operational phases, and verify the integrity of its input checks."
        ]
    },
    {
        "requirement": "The lateral control during the glide phase 1 is the same as that during the climb phase 2.",
        "safety_requirements": [
            "The system shall ensure control sequence, timing, and hardware coordination in lateral control, and verify the completeness and consistency of control conditions.",
            "The system should perform consistency checks on the mode entry/exit conditions for descent segment 1 and climb segment 2 to avoid logic conflicts.",
            "When the system performs lateral control during different operational phases or states, it needs to check whether the input data includes identifiers for the current phase and state, and verify the correctness of the control solution logic.",
            "The system should verify the timing relationships, constraints, and concurrent combinations of the lateral control logic to ensure consistency with functional requirements.",
            "The system should define the upper and lower limits of the slope for key parameters in lateral control, and clearly specify the handling strategy for out-of-limit data."
        ]
    },
    {
        "requirement": "The closed-loop control formula for the airspeed of the first segment flap during descent is δp = Kp (vg - vk), with δp clamped between [12.5%, 100%]. The reference airspeed is given in the appendix as the descent speed.",
        "safety_requirements": [
            "The system should check whether the input data contains explicit working phase and working state parameters, and prohibit the execution of the airspeed closed-loop control formula δp = Kp (vg - vk) when related parameters are not identified.",
            "The system must perform anomaly detection on the control solution result δp. When the calculation result exceeds the clamping range of [12.5%, 100%] or is an abnormal value, the safety fault-tolerant mechanism should be triggered immediately.",
            "The control solution timing should be strictly synchronized with the hardware execution cycle, completing the entire process calculation from parameter input to δp output within each control cycle.",
            "It is necessary to verify the timing constraints between the airspeed closed-loop control logic and other functional points, ensuring that throttle control does not conflict with actions of other control surfaces.",
            "The system should continuously monitor the state entry conditions, and when the conditions are not met or are met again during the execution of the glide phase 1, perform the predefined state holding or exit procedures.",
            "For the glide slope speed parameters defined in the appendix, data validity verification must be performed upon each invocation, including range value checking, update timeliness validation, and source integrity verification."
        ]
    },
    {
        "requirement": "The longitudinal control of glide segment 2 is the same as that of glide segment 1.",
        "safety_requirements": [
            "The system shall ensure that the longitudinal control logic of Glide Slope Segment 2 and Glide Slope Segment 1 has the same sequence, timing, and hardware coordination mechanism, and that the control conditions maintain completeness and consistency.",
            "The system needs to verify the timing, constraint, and combination relationships between segments 1 and 2 of the control logic to avoid concurrency conflicts.",
            "The system shall perform mandatory checks on the operational phase and status of input data during longitudinal control calculations to ensure correctness in processing under conditions of 'unconsidered operational phases' or 'unconsidered operational states'.",
            "The system shall perform synchronization checks on the timing of redundant executions to ensure the correctness of the longitudinal control function even in case of unsynchronized redundant execution timing.",
            "The system shall ensure that the entry conditions and exit conditions of mode transition between Glide Slope Segment 2 and Glide Slope Segment 1 are completely consistent across all modes to prevent abnormal state transitions."
        ]
    },
    {
        "requirement": "The two-segment longitudinal lateral roll control structure is shown in Figure 3-6. The heading control formula is yg = - (Kyz·Δy + KyzI∫ Kys·Δydt + Kyzd·wy), with the underlined part limited within [- XfFxd , XfFxd].",
        "safety_requirements": [
            "The system shall perform phase and status checks on input parameters during the heading control computation process to ensure that the formula yg = - (Kyz·Δy + KyzI∫ Kys·Δydt + Kyzd·wy) is applied in accordance with the current flight status.",
            "The system should implement categorized checks on the control calculation results, clearly defining strategies for handling normal values, abnormal values, boundary values, and data outside the [-XfFxd, XfFxd] clamping range.",
            "The system needs to verify the timing relationships, constraint relationships, and correctness of combinational logic among functional points in the lateral roll control structure.",
            "The system should set the parameter variation rate slope limits to [Xmin, Xmax], and define a real-time filtering or compensation mechanism for over-slope data.",
            "The sequence of system roll control execution must be strictly synchronized with the hardware operation timing, and the control conditions must include complete state trigger thresholds and consistency verification mechanisms."
        ]
    },
    {
        "requirement": "The glide 2 segment throttle airspeed closed-loop control is the same as that of glide 1 segment.",
        "safety_requirements": [
            "The system should ensure that the control sequence, timing, and hardware coordination between segments 2 and 1 of the glide path are properly managed, with complete and consistent control conditions.",
            "The system shall verify the correctness of temporal relationships, constraint relationships, concurrency relationships, and combination relationships among functional points in the airspeed closed-loop control of the glide slope segment 2 throttle.",
            "The system should check functional inputs during different operational phases or states to ensure the correctness of the control solution process under 'unconsidered operational phase' or 'unconsidered operational state' conditions.",
            "The system should check whether the entry and exit conditions for each mode in Glide Slope Segment 2 are consistent with those in Glide Slope Segment 1 to avoid condition conflicts.",
            "The system should check the operating status of different redundancies and ensure the correctness of function implementation when 'two or more redundancies are in different states', and trigger the exception handling mechanism."
        ]
    },
    {
        "requirement": "The discretization formula is Md2(k) = KxzI · Md1(k), with Md2(k) clamped between [- XfGama / 0.6, + XfGama].",
        "safety_requirements": [
            "The system should define reasonable ranges for parameter change rates (slope upper and lower limits) and clearly specify handling strategies for data exceeding these slope limits.",
            "The system shall perform consistency checks on redundant discrete output data to ensure the correctness of functional processing in case of \"inconsistent values\".",
            "The system should check cases where the control solution results are normal values, abnormal values, boundary values, or extreme maximum/minimum values, and verify the correctness of its handling logic.",
            "The system should monitor adjacent cycle transitions of discrete data bits to ensure the validity of transition outputs and compliance with system constraints.",
            "The system should identify outliers beyond the valid value range of discrete data bits and execute predefined fault-tolerant or error-reporting handling mechanisms.",
            "The system shall ensure that the clamping range of Md2(k) [- XfGama/0.6, + XfGama] is strictly enforced during the discretization process."
        ]
    },
    {
        "requirement": "Calculate Md3(k) = Kxz * Dz(k)",
        "safety_requirements": [
            "The system should check the control solution results of Md3(k) to ensure correctness in handling 'normal values, abnormal values, boundary values, and extreme values'.",
            "The control solution process of the system under different operating phases and states should be managed with differentiation, and it shall be verified whether the inputs have considered the \"operating phase and state\" to ensure correct solution calculation.",
            "The system should check the data bit value accuracy of the interface data, and analyze the output correctness when the accuracy is 'greater than or less than required'.",
            "The system should check the compliance of interface data cycles, ensure the correctness of outputs under conditions of \"greater than specified cycle, less than specified cycle, and extreme maximum/minimum values,\" and trigger an alert in case of anomalies."
        ]
    },
    {
        "requirement": "Calculate Md4(k) = Md2(k) + Md3(k) + Kxzd * Dz(k)",
        "safety_requirements": [
            "The system should check the control solution result Md4(k), analyze its handling correctness under normal value, abnormal value, boundary value, extremely large and small value conditions, and ensure that the calculation results meet the expected logic.",
            "The system should check the data bit value accuracy of interface data, verify the correctness of output results when the accuracy is higher than required, and prevent overfitting or accumulation of computational errors.",
            "The system should check the data bit value accuracy of interface data, verify the correctness of output results when the accuracy is less than required, and ensure computational reliability at the minimum accuracy level.",
            "The system should check input data based on the current state and operating phase, ensuring that the control solution process can still correctly handle and output reasonable results even when the operating phase or state is not taken into account.",
            "The system should monitor the execution time of the control solution process and trigger an exception handling mechanism if a timeout occurs, ensuring the timeliness and safety of functional outputs."
        ]
    },
    {
        "requirement": "Limit the value of Md5(k) within the range [-XfGama, XfGama]",
        "safety_requirements": [
            "The rate of change of Md5(k) should be set with upper and lower slope limits, and a predefined handling strategy should be executed when it exceeds the reasonable range.",
            "The sensor acquisition range for Md5(k) should be clearly defined as [-XfGama, XfGama], and a sensor fault alarm should be triggered immediately when the range is exceeded.",
            "It is necessary to perform state classification checks (normal value, abnormal value, boundary value, maximum and minimum values) on the Md5(k) after clipping processing to ensure correct handling logic.",
            "When the output value of Md5(k) exceeds [-XfGama, XfGama], it should be forced to truncate to the clipping boundary or output a preset safety value.",
            "In redundant design, the limiting results for single or multiple redundancy faults should be independently verified to ensure functional reliability."
        ]
    },
    {
        "requirement": "If the flight altitude is greater than the decision height (40m), control the aircraft to enter the go-around procedure.",
        "safety_requirements": [
            "The system should ensure that it can recover to a normal operating state and correctly execute the go-around procedure control logic after power recovery or reset due to runaway.",
            "The system must set a timeout judgment mechanism for critical control instructions of the go-around procedure, triggering predefined measures when hardware status does not meet control requirements.",
            "Before the system issues a command to enter the go-around procedure, dual reasonableness verification should be conducted based on data from the altimeter sensor and the status of the equipment.",
            "The system shall establish a clear fault recovery mechanism to ensure automatic switching to safety mode and recording of fault codes when an anomaly is triggered during the go-around procedure.",
            "The system shall dynamically adjust the go-around procedure execution strategy based on flight altitude thresholds when detecting abnormal external factors such as high sea states and adverse weather conditions."
        ]
    },
    {
        "requirement": "Calculate yg(k) = -Md5(k)",
        "safety_requirements": [
            "The system should check the data bit value accuracy of the interface data to ensure that the calculation result of yg(k) remains correct when the precision is greater than or less than the required value.",
            "The system should check the control calculation results to ensure that the calculation logic for yg(k) is correctly handled and the corresponding warnings are triggered under conditions such as \"normal values, abnormal values, boundary values, maximum and minimum values\".",
            "The system should check whether the functional inputs match the current phase and status during different operational phases or states, to ensure the correct calculation process of yg(k).",
            "The system should detect in real time whether there is a division by zero during data processing, and immediately terminate the calculation and generate an error log upon detection."
        ]
    },
    {
        "requirement": "Calculate Md2(k) = KyzI * Md1(k)",
        "safety_requirements": [
            "The system should perform real-time checks on the data bit value accuracy of interface data to ensure that the calculation result of Md2(k) still meets output correctness requirements when the accuracy is lower than required.",
            "The system should perform real-time checks on the data bit value precision of interface data to ensure that when the precision exceeds the requirement, the calculation result of Md2(k) still meets output correctness.",
            "The system should verify the processing logic when the control solution results are \"normal values, abnormal values, boundary values, maximum and minimum values\" to ensure correct calculation of Md2(k) and trigger the warning mechanism in case of anomalies.",
            "The system should check functional inputs under different operating conditions and phases to ensure the correctness and compliance of the Md2(k) calculation process regardless of the considered phase or state.",
            "The system should check the input cycle of interface data, analyze the correctness of the output when the cycle is \"greater than the specified cycle, less than the specified cycle, or at extreme maximum or minimum values,\" and trigger the corresponding fault-tolerant mechanisms."
        ]
    },
    {
        "requirement": "The Md2(k) is subjected to amplitude limiting within the range of [-XfFxd, XfFxd].",
        "safety_requirements": [
            "The system should define a reasonable range for the rate of change of Md2(k) (upper and lower slope limits) and execute a predefined handling strategy (e.g., clamping or error reporting) when the slope limit is exceeded.",
            "The system shall clearly define the sensor acquisition range, and immediately trigger a sensor fault alarm when the input value of Md2(k) exceeds the acquisition range.",
            "The system should perform clamping processing on the control solution result Md2(k) when it is within normal, abnormal, boundary, or extreme value ranges, and verify its correctness.",
            "The system shall ensure the correctness of Md2(k) amplitude limiting processing through redundancy data comparison or majority voting mechanism in case of single or multiple redundancy failures.",
            "When the output of Md2(k) exceeds [-XfFxd, XfFxd], the system shall perform truncation processing or switch to a preset safety value output."
        ]
    },
    {
        "requirement": "Calculate Md3(k) = Kyz * Δy(k) + Md2(k) + Kyzd * wy(k)",
        "safety_requirements": [
            "The system should check the control solution results to ensure the calculation process of Md3(k) = Kyz*Δy(k) + Md2(k) + Kyzd*wy(k) is correct under normal values, abnormal values, boundary values, or extreme maximum and minimum values.",
            "The system should verify the precision of data bit values at the interface. When the precision is greater than or less than the specified requirement, it must ensure that the output results still meet the calculation accuracy.",
            "The system should check whether the functional inputs include corresponding working phase and status parameters under different statuses or working phases, to avoid solving processes that do not take relevant factors into account.",
            "The system should monitor the input cycle of interface data, and maintain the stability of the Md3(k) solution logic when the cycle is greater than, less than the specified value, or when extreme values occur.",
            "The system must trigger the corresponding fault-tolerant mechanism upon detecting data bit precision anomalies or cycle deviations, to ensure the safety and reliability of the control solution output."
        ]
    },
    {
        "requirement": "The Md3(k) is clipped within the range of [-XfFxd, XfFxd]",
        "safety_requirements": [
            "The system should define a reasonable range for the rate of change of Md3(k) (upper and lower slope limits) and execute predefined handling strategies (such as clamping or alarm triggering) when the slope exceeds these limits.",
            "The system must clearly define the upper and lower limits of the sensor's measurement range. When the measured value exceeds these limits, the system shall immediately report a sensor failure and isolate the abnormal data.",
            "The system should execute predefined safety handling logic (such as using default safe values or switching to redundant data) when the control solution results are outliers, boundary values, or extreme maximum/minimum values.",
            "The system shall perform consistency checks on output data with different redundancies, switch to the normal redundancy in case of a single redundancy failure, and trigger the safety protection mechanism when multiple redundancies fail simultaneously.",
            "When the system exceeds the Md3(k) limit range, it should perform truncation processing and output a safe value, while simultaneously recording the over-limit event and reporting the status."
        ]
    },
    {
        "requirement": "Calculate yg(k) = -Md3(k)",
        "safety_requirements": [
            "The system shall perform categorized checks on the control solution results (normal values, abnormal values, boundary values, maximum and minimum values) to ensure the correctness of yg(k) calculations, and trigger an alarm or enter a safety state upon detecting abnormal values.",
            "The system should check functional inputs under different states and operational phases, and if they do not match the current operational phase or state, the computation must be terminated and a safety handling mechanism triggered.",
            "The system should check the bit precision of interface data, reject input data when the precision exceeds requirements, and use default values to ensure that the output yg(k) complies with precision specifications.",
            "The system shall verify the precision of interface data bits and reject input data while initiating default processing logic when precision is less than required, to maintain reliability of computational results.",
            "The system should monitor the data input cycle of the interface, and when the cycle is greater than or less than the specified range, activate the historical data or alarm mechanism to ensure the continuity of yg(k) calculation."
        ]
    },
    {
        "requirement": "In the longitudinal control during the flare phase, calculate h& as the vertical velocity from the radio altimeter after compensation with inertial navigation vertical acceleration.",
        "safety_requirements": [
            "In the longitudinal control during the flare phase, the system should check the current operating phase and status when calculating h&, analyze cases where the operating phase or status is not considered, and ensure that the processing logic is correct and the results meet the requirements.",
            "The system should ensure that the sequence and timing of longitudinal control during the flare segment are coordinated with the hardware, with complete control conditions and logically consistent sequencing.",
            "The system should perform real-time checks on the solution results of h&, including normal values, abnormal values, boundary values, and maximum/minimum values, and verify the correctness of its processing logic.",
            "The system should monitor the time taken for control solution processes, trigger a preset safety mechanism in case of timeouts, and record timeout events.",
            "The system should perform consistency checks on different redundancy operating states to ensure that functional implementation still meets safety requirements when redundancy states are inconsistent."
        ]
    },
    {
        "requirement": "In the longitudinal control of the flare segment, calculate vyg as the given vertical speed, where vyg = vyt + (h - ht)(vyf - vyt)",
        "safety_requirements": [
            "The system should check whether the functional inputs include current phase and status information during longitudinal control in the flare segment, and reject computation while triggering error handling mechanisms if the phase or status is not considered.",
            "The system should ensure that the sequence and timing of control solutions are coordinated with hardware actions, and the control conditions must cover all possible operating states and maintain logical consistency.",
            "The system shall perform real-time range checks on the vyg calculation results, identify normal values, boundary values, and abnormal values, and trigger correction or alarm procedures upon detecting anomalies.",
            "The system should verify the logical timing, constraint conditions, and concurrent combination relationships of the longitudinal control during the flare segment to ensure compliance with the aircraft's dynamic characteristics requirements.",
            "After the system completes the output of the lifting speed control command, it should monitor the rudder surface response status in real time, determine its consistency with the control objective, and initiate a compensation mechanism when a mismatch occurs."
        ]
    },
    {
        "requirement": "In the longitudinal control during the flare phase, calculate vygSemi as the automatic correction value for the given pitch rate",
        "safety_requirements": [
            "The system should check the normal values, abnormal values, boundary values, and extreme maximum and minimum values of the control resolution results to ensure the correctness of the vygSemi calculation in the longitudinal control during the flare segment.",
            "The system should verify the integrity of functional inputs under different states and operating phases, and analyze the correctness of vygSemi correction processing when 'unconsidered operating phase' or 'unconsidered operating state' occurs.",
            "The system should ensure that the sequence and timing of longitudinal control are coordinated consistently with the hardware, verifying the completeness of control conditions and logical consistency.",
            "The system should perform a timeout detection on the control solution process, and if no result is returned within the specified time, it needs to trigger the preset safety handling mechanism.",
            "The system shall ensure the correctness and continuity of vygSemi correction calculations under different redundancy output data scenarios (including single redundancy failure, multiple redundancies failure)."
        ]
    },
    {
        "requirement": "In the longitudinal control of the flare segment, duy is calculated as the given pitch acceleration.",
        "safety_requirements": [
            "The system should ensure that the sequence and timing of longitudinal control during the flare phase are coordinated with the hardware, and verify the completeness and consistency of control conditions before calculating duy.",
            "The system should perform dynamic checks on inputs during different operational phases and states, ensuring accurate identification and handling of scenarios involving 'unconsidered operational phases' or 'unconsidered operational states' when calculating duy.",
            "The system must perform real-time checks on the calculated results of the lifting acceleration duy, covering normal values, abnormal values, boundary values, and extreme maximum and minimum values, and take corresponding handling measures.",
            "The system shall implement a timeout determination mechanism in critical controls, which triggers a predefined safety response when the hardware status remains unmet for an extended period.",
            "The system should verify the timing relationships, constraint relationships, concurrent relationships, and combination relationships of each control logic in the flattening section to ensure compliance with design specifications."
        ]
    }
]