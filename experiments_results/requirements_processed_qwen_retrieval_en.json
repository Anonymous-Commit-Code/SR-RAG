[
    {
        "requirement": "Determine which flight phase should be entered based on the aircraft's current flight altitude, status, and other motion information.",
        "safety_requirements": [
            "The system should check functional inputs under different states and operational phases to ensure the correctness of functional processing in cases where the operational phase or state has not been considered.",
            "The system should check the state entry conditions to ensure the correctness of state execution when the entry conditions are \"satisfied, not satisfied, satisfied again\", etc., during state execution.",
            "The system should check the control calculation results to ensure the correctness of functional processing under conditions such as \"normal values, abnormal values, boundary values, maximum and minimum values\" in the control calculation results.",
            "The system should check the execution sequence of each task to ensure that the task execution order is consistent with the specified sequence and the correctness of functional processing.",
            "When the system is performing control, it should ensure that the control sequence and timing are coordinated with the hardware, and that control conditions are complete and consistent."
        ]
    },
    {
        "requirement": "If the flight altitude is not greater than the decision altitude, phase transition processing is performed based on the current phase flag and flight altitude.",
        "safety_requirements": [
            "When the system is at a flight altitude not exceeding the decision height, it should check the current phase flag and flight altitude to ensure the correctness of phase transition processing, especially in cases of high-priority switching to low-priority and low-priority switching to high-priority.",
            "When the conditions for redundancy switching are met, the system shall ensure the correctness and reliability of the redundancy switch. If the redundancy switch fails, there shall be a proper handling mechanism to ensure the safety and stability of the system.",
            "The system should check the duration of each task to ensure that the task duration is less than the specified time, thereby ensuring the correctness and timeliness of phase transition processing.",
            "When the system transitions between operational states, the values of the functional interface data should be checked to ensure the correctness of the output during phase transition processing under the condition that 'the values have not changed'.",
            "The system should check whether the rate of change of flight altitude is within a reasonable range. If an out-of-range slope occurs, there should be a clear handling strategy to ensure the accuracy and safety of phase transition processing."
        ]
    },
    {
        "requirement": "When the flight altitude is less than 2.1 meters, the given vertical speed automatic correction value vygSemi begins to take effect, and is calculated based on the aircraft's pitch angle using the following formula, then limited to the range [-2, 2].",
        "safety_requirements": [
            "The system should check the sensor's measurement range to ensure the upper and lower limits of the altitude sensor are clearly defined, and report a sensor fault when the measurement exceeds the range.",
            "The system should check the rate of change of the lifting speed automatic correction value vygSemi, ensuring it remains within reasonable limits (upper and lower slope bounds), and implement a clear handling strategy when exceeding these limits.",
            "The system should check the communication protocol of the interface data frame to ensure the data length complies with specifications, and when the data length is greater than or less than the specified length, it should ensure correct output.",
            "The system should check the value accuracy of data bits at the interface to ensure that the accuracy meets the requirements. When the data bit value accuracy is less than the required accuracy, the correctness of the output should be ensured.",
            "The system should check the data bit value accuracy of the interface data to ensure that its accuracy meets the requirements. When the data bit value accuracy exceeds the required accuracy, the correctness of the output should be ensured.",
            "The system shall ensure that when the flight altitude is less than 2.1 meters, the calculated value of the vertical speed automatic correction quantity vygSemi is limited to [−2, 2], and the warning mechanism is triggered in abnormal situations."
        ]
    },
    {
        "requirement": "If the inertial navigation acceleration is invalid at this time, the vertical acceleration feedback will not be included.",
        "safety_requirements": [
            "The system should determine the validity of the inertial navigation acceleration; if invalid, it should not include the vertical acceleration feedback and should indicate an anomaly on the user interface.",
            "The system should validate the parameters set by personnel and provide warnings or no response for abnormal parameters.",
            "The system should make reasonable judgments on personnel operations and not respond to instructions that do not conform to the current scenario or state.",
            "The system should perform status detection on the output circuit without affecting normal output, to ensure the circuit's proper operation.",
            "The system should specify requirements for handling incorrect or invalid operations to ensure proper handling under abnormal conditions."
        ]
    },
    {
        "requirement": "δp = Kp (vg - vk) + f(J), with δp clamped within [3%, 100%]",
        "safety_requirements": [
            "The system should check the value accuracy of data bits in the interface data to ensure the calculation result of δp is correct when the data bit value accuracy is greater than the required precision.",
            "The system should check the data bit value accuracy of the interface data to ensure that when the data bit value accuracy is less than the required precision, the calculation result of δp is correct.",
            "The system should check the control solution results to ensure that the calculation result of δp is correct when the control solution result is a normal value, abnormal value, boundary value, maximum or minimum value.",
            "The system should check the values of continuous output data with different redundancies to ensure that when two or more redundant output data values are inconsistent (i.e., the difference between values exceeds a specified threshold), the calculated result of δp is correct.",
            "The system shall clearly define the sensor acquisition range (upper and lower limits), and report a sensor fault when the sensor value exceeds the acquisition range."
        ]
    },
    {
        "requirement": "vg = Vt + (h - ht)(Vs - Vt) / (hf - ht)",
        "safety_requirements": [
            "The system should check the data bit value accuracy of the interface data to ensure that when the data bit value accuracy is greater than the required accuracy, the calculation result of vg is correct.",
            "The system should check the data bit value accuracy of the interface data to ensure the calculation result of vg is correct when the data bit value accuracy is less than the required accuracy.",
            "The system should check functional inputs to ensure the correct calculation of vg under different states and operational phases, preventing errors caused by overlooking operational phases or states.",
            "The system should check the control solution results of the functions to ensure that the calculation results of vg are correct when the control solution results are normal values, abnormal values, boundary values, maximum and minimum values, etc., and trigger the alarm mechanism in case of abnormalities.",
            "The system should check the cycle of interface data to ensure that the calculation result of vg is correct when the input value cycle is greater than the specified cycle, less than the specified cycle, or at extreme maximum or minimum values."
        ]
    },
    {
        "requirement": "If the calculated value of the automatic correction factor vygSemi for lifting speed results in J < 3.5, the throttle opening δp shall be reduced to zero.",
        "safety_requirements": [
            "When the system calculates the automatic correction value vygSemi for lifting speed, it should check the value of J to ensure it is within the normal range. When J < 3.5, the throttle opening δp shall be reduced to zero, without affecting the normal operation of other functions.",
            "The system should perform real-time consistency checks on the calculated throttle amount δp to ensure it matches the value of J, and trigger a warning mechanism in case of anomalies.",
            "The system should ensure that the data bit value accuracy meets the requirements when processing J < 3.5, avoiding calculation errors caused by insufficient accuracy.",
            "The system should ensure that no division by zero occurs during data processing when J < 3.5, to prevent system crashes or abnormalities.",
            "The system should ensure that the data bit value accuracy does not exceed requirements when handling cases where J < 3.5, avoiding computational resource waste caused by excessive precision."
        ]
    },
    {
        "requirement": "Lateral control is the same as in the second glide segment.",
        "safety_requirements": [
            "When the system performs lateral control and glide slope segment 2 control, it should ensure that the control sequence and timing are coordinated with the hardware, and that control conditions are complete and consistent.",
            "The system shall ensure the correctness of timing, constraints, concurrency, and combination relationships between lateral control and glide slope segment 2 control logic.",
            "When the system performs lateral control and glide phase 2 control under different states and operating stages, the function inputs shall be checked to ensure correct function handling in cases such as 'operating stage not considered, operating state not considered'.",
            "When the system performs lateral control and glide path segment 2 control under different redundancy states, it should verify the correctness of function implementation in cases such as 'two or more redundancies being in different states'.",
            "When the system performs lateral control and glide path control in different redundancy states, it should ensure the correctness of function implementation to avoid functional failure caused by inconsistent redundancy states."
        ]
    },
    {
        "requirement": "Discretization vyg",
        "safety_requirements": [
            "The system should check data bits in the interface data that have discrete value ranges to ensure that when the data bit takes a value of \"undefined exception value outside the valid range,\" the discretized vyg output is correct.",
            "The system should check data bits in the interface data that have discrete value ranges, ensuring that when the data bits take on each enumerated value within the valid range, the discretized vyg output is correct.",
            "The system should check data bits with discrete value ranges in the interface data to ensure that the discretized vyg output is correct when the data values jump between consecutive cycles.",
            "The system should check the discrete output data values of different redundancies to ensure that when two or more redundant output data values are \"inconsistent,\" the discretization vyg function is correctly implemented.",
            "The system should check the values of discrete interface data with different redundancies to ensure that the discretization function operates correctly when two or more redundant interface data values are inconsistent."
        ]
    },
    {
        "requirement": "Calculate(k) = vyt + (h(k) - ht)(vyf - vyt)/(hf - ht)",
        "safety_requirements": [
            "The system should check the result of the calculation(k) = vyt + (h(k) - ht )(vyf  - vyt ) /(hf  - ht ), ensuring the calculation result is correct under normal values, abnormal values, boundary values, maximum and minimum values, etc.",
            "The system should check the data bit value accuracy of the interface data to ensure correct calculation results when the data bit value accuracy is higher than the required precision.",
            "The system should check the data bit value accuracy of the interface data to ensure correct calculation results when the data bit value accuracy is less than the required precision.",
            "The system should check functional inputs under different states and operational phases to ensure correct calculation results, even when the operational phase or state is not considered.",
            "The system should check the cycle of interface data to ensure that the calculation results are correct when the input value cycle is greater than the specified cycle, less than the specified cycle, or at extreme maximum or minimum values."
        ]
    },
    {
        "requirement": "Md 2(k ) = KLI . Md 1(k )",
        "safety_requirements": [
            "The system should check the data bit value accuracy of the interface data to ensure that when the data bit value accuracy is less than the required precision, the calculation result of Md 2(k) is correct.",
            "The system should check the data bit value accuracy of the interface data to ensure that when the data bit value accuracy is greater than the required accuracy, the calculation result of Md 2(k) is correct.",
            "The system should check the data processing process to ensure that no division by zero occurs during data processing, preventing computational anomalies.",
            "The system should check the control solution results to ensure that Md 2(k) is calculated correctly when the control solution results are normal values, abnormal values, boundary values, maximum or minimum values.",
            "The system should check the cycle of interface data to ensure that the calculation result of Md 2(k) is correct when the input value cycle is greater than the specified cycle, less than the specified cycle, or at extreme maximum/minimum values."
        ]
    },
    {
        "requirement": "Md 2(k ) is limited to [- XfSitaF , XfSitaF ]",
        "safety_requirements": [
            "The system shall ensure the correctness of output data for Md 2(k) within the limit range [- XfSitaF, XfSitaF] in case of a single redundancy failure or simultaneous failures of multiple redundancies.",
            "When the range of values represented by the interface data frame is smaller than the range of the interface data, the system should ensure the correctness of the output data from Md 2(k) after clamping it within [-XfSitaF, XfSitaF].",
            "The system should check whether the rate of change of Md 2(k) is within a reasonable range (upper and lower slope limits) and clearly define the handling strategy for out-of-slope data.",
            "The system shall ensure the correctness of the output data from the Md 2(k) limiter [- XfSitaF, XfSitaF] in case of data frame loss.",
            "The system shall ensure the correctness of the output data of Md 2(k) with clamping [- XfSitaF, XfSitaF] when the data bit value accuracy of the interface data is less than the required accuracy."
        ]
    },
    {
        "requirement": "Record the given attitude angles (roll, yaw, and pitch) old values before switching as the softening start point.",
        "safety_requirements": [
            "When the system transitions between operational states, the values of the functional interface data should be checked to ensure that whenever there is a change in value or a change in the value range, the accuracy of the previous attitude angle (roll, yaw, and pitch) values before the transition is recorded.",
            "The system shall check the transition conditions between every two states in the software state space, ensuring the correctness of recorded previous attitude angles (roll, yaw, and pitch) when transition conditions such as \"not set,\" \"always satisfied,\" or \"never satisfied\" occur.",
            "When the system transitions between operating states, the values of the functional interface data should be checked to ensure that the values have not changed, and to record the accuracy of the previous attitude angle (roll, yaw, and pitch) values before the transition.",
            "The system should check the operating status of different redundancies to ensure the correctness of the recorded previous attitude angles (roll, yaw, and pitch) before switching, in cases where two or more redundancies are in different states."
        ]
    },
    {
        "requirement": "dvyg (k) = h&(k)(vyf - vyt ) / (hf - ht )",
        "safety_requirements": [
            "The system should check the data bit value accuracy of the interface data to ensure that when the data bit value accuracy is greater than the required accuracy, the calculation result of dvyg(k) is correct.",
            "The system should check the data bit value accuracy of the interface data to ensure that when the data bit value accuracy is less than the required accuracy, the calculation result of dvyg(k) is correct.",
            "The system should check the cycle of interface data to ensure that the calculation result of dvyg(k) is correct when the input value cycle is \"greater than the specified cycle, less than the specified cycle, maximum and minimum values\", etc.",
            "The system should check the control solution results of the functions to ensure that dvyg (k) is handled correctly under conditions such as \"normal value, abnormal value, boundary value, maximum and minimum value\".",
            "The system should check the communication status of interface data frames to ensure that the output result of dvyg(k) is correct in cases such as \"data frame loss.\""
        ]
    },
    {
        "requirement": "Md3(k ) = Md 2(k ) + KL  . [vyg (k ) - h&(k )]+ KLd  . [dvyg (k ) - &(k )]",
        "safety_requirements": [
            "The system should check the control solution result Md3(k) to ensure that functional processing is correct under normal values, abnormal values, boundary values, maximum and minimum values.",
            "The system should check the data bit value accuracy of the interface data to ensure that the output result is correct when the accuracy requirement is less than the specified precision.",
            "The system should check the data bit value accuracy of the interface data to ensure that the output result is correct when the accuracy exceeds the required level.",
            "The system should check the cycle of interface data to ensure that the output is correct when the cycle is greater than the specified cycle, less than the specified cycle, or at extreme maximum or minimum values.",
            "The system should check functional inputs under different states and operational phases to ensure correct functional processing even when the operational phase or state has not been considered."
        ]
    },
    {
        "requirement": "Md 4(k ) = [(22.0 - T) * Md 4(k - 1) + (T + 4) * Md 3(k ) + (T - 4) * Md 3(k - 1)] / (22.0 + T)",
        "safety_requirements": [
            "The system should check the data bit value accuracy of the interface data to ensure that when the data bit value accuracy is less than the required precision, the calculation result of Md 4(k) is correct.",
            "The system should check the data bit value accuracy of the interface data to ensure the correct calculation result of Md 4(k) when the data bit value accuracy is greater than the required accuracy.",
            "The system should check the cycle of interface data to ensure that the calculation result of Md 4(k) is correct when the input value cycle is greater than the specified cycle, less than the specified cycle, or at extreme maximum or minimum values.",
            "The system should check the safety values of interface data to ensure the correct calculation of Md 4(k) when the difference between the safety value and the normal value of the interface data under non-fault conditions is excessively large.",
            "The system should check the control calculation results of the functions to ensure that Md 4(k) is handled correctly under conditions such as normal values, abnormal values, boundary values, maximum and minimum values."
        ]
    },
    {
        "requirement": "Md 4(k ) limiting [- XfSitaF , XfSitaF ]",
        "safety_requirements": [
            "The system should analyze the correctness of Md 4(k) clamping output within [- XfSitaF, XfSitaF] when the value range represented by interface data frames is smaller than the value range of interface data.",
            "The system shall check output data of different redundancies to ensure the correctness of the Md 4(k) limit function [- XfSitaF , XfSitaF ] implementation in case of a single redundancy failure or multiple redundancies failures.",
            "The system should clearly define the sensor's measurement range (upper and lower limits) and report a sensor fault when the measured value exceeds this range.",
            "The system should check the communication status of the interface data frame to ensure the correctness of the Md 4(k) clamping [- XfSitaF, XfSitaF ] output in cases such as data frame loss.",
            "The system should check the data bit value accuracy of the interface data to ensure the correctness of the Md 4(k) clamping output within [- XfSitaF, XfSitaF] when the data bit value accuracy is less than the required precision."
        ]
    },
    {
        "requirement": "Jg (k ) = Md 4(k )",
        "safety_requirements": [
            "The system should check the data bit value accuracy of the interface data to ensure that when the data bit value accuracy is less than the required accuracy, the output result of Jg(k) = Md4(k) is correct.",
            "The system should check the data bit value accuracy of the interface data to ensure that when the data bit value accuracy is greater than the required accuracy, the output result of Jg(k) = Md4(k) is correct.",
            "The system should check the cycle of interface data to ensure that when the input value cycle is greater than the specified cycle, less than the specified cycle, or at extreme maximum or minimum values, the output result of Jg(k) = Md4(k) is correct.",
            "The system should check the control solution results of the functions to ensure that Jg(k) = Md4(k) is correctly processed under conditions such as normal values, abnormal values, boundary values, maximum and minimum values.",
            "The system should check functional inputs under different states and operational phases to ensure that the functional processing of Jg(k) = Md4(k) is correct, even when the operational phase or state has not been considered."
        ]
    },
    {
        "requirement": "δp (k ) = Kp (vg (k ) - vk (k )) + f (J(k ))",
        "safety_requirements": [
            "The system should check the data bit value accuracy of the interface data to ensure the calculation result of δp(k) is correct when the data bit value accuracy is greater than the required accuracy.",
            "The system should check the data bit value accuracy of the interface data to ensure that when the data bit value accuracy is less than the required accuracy, the calculation result of δp(k) is correct.",
            "The system should check the control solution results to ensure that δp (k) is calculated correctly when the control solution results are normal values, abnormal values, boundary values, maximum or minimum values.",
            "The system should check the control solution process under different states and working phases to ensure that the calculation result of δp (k) is correct in cases such as when the working phase is not considered or the working state is not considered.",
            "The system should check the cycle of interface data to ensure that δp (k) is calculated correctly when the input value cycle is greater than, less than, or at extreme maximum and minimum values relative to the specified cycle."
        ]
    },
    {
        "requirement": "δp (k ) limited to [3%, 100 % ]",
        "safety_requirements": [
            "The system should check the continuous output data δp(k) of different redundancies to ensure that the values of two or more redundant outputs are consistent, i.e., the difference between their values does not exceed the specified threshold, to guarantee the correctness of function implementation.",
            "The system should check the range of the sensor measurement δp (k) to ensure it is within [3%, 100%], and a sensor fault should be reported if it exceeds this range.",
            "The system should check the value accuracy of the data bits for δp (k) to ensure that the accuracy is greater than or equal to the required precision, in order to guarantee the correctness of the output.",
            "The system should check the value accuracy of the data bits for δp (k) to ensure that the accuracy is less than or equal to the required precision, in order to guarantee the correctness of the output.",
            "The system should check whether the rate of change of δp(k) is within a reasonable range (upper and lower slope limits), and data exceeding this range should be handled according to a clear processing strategy."
        ]
    },
    {
        "requirement": "f (J(k )) = 3J(k )",
        "safety_requirements": [
            "The system should check the value accuracy of data bits in interface data to ensure correctness of output when the value accuracy of data bits is less than the required precision.",
            "The system should check the value accuracy of data bits in interface data to ensure the correctness of the output when the value accuracy of data bits exceeds the required precision.",
            "The system should check the cycle of interface data to ensure the correctness of outputs when input values are in situations such as \"greater than specified cycle, less than specified cycle, maximum and minimum values\".",
            "The system should check the control solution results of the functions to ensure the correctness of functional processing when the control solution results are \"normal values, abnormal values, boundary values, maximum and minimum values\", etc.",
            "The system should check the process of functional control resolution according to different states and working phases, ensuring the correctness of functional handling in cases such as \"working phase not considered\" or \"working state not considered\"."
        ]
    },
    {
        "requirement": "At the end of the flare phase, the system needs to calculate the aileron deflection command for the ground loop based on δx 0.",
        "safety_requirements": [
            "At the end of the system's flare phase, the aileron deflection command calculation result of the roll control loop should be checked to ensure the correctness of functional processing under conditions such as normal values, abnormal values, boundary values, maximum and minimum values.",
            "At the end of the flare phase, the system should check the calculation process of the aileron deflection command in the ground deflection loop to ensure that no division by zero occurs during data processing.",
            "At the end of the flare phase, the system should check the input for calculating the aileron deflection command in the ground deflection loop, ensuring correct functional processing under different states and operational phases.",
            "At the end of the flare phase, the system shall ensure that the control sequence and timing are coordinated with the hardware, and that the control conditions are complete and consistent.",
            "At the end of the flare phase, the system should check the operational status of different redundancies to ensure the correctness of functional implementation in cases where two or more redundancies are in different states."
        ]
    },
    {
        "requirement": "The system needs to calculate the yg value, with the formula: yg = - (Kyz·Δy + KyzI∫ Kys·Δy dt + Kyzd·wy), and the yg value must be limited within the range [- XfFxd , XfFxd].",
        "safety_requirements": [
            "The system should check the calculated yg value to ensure correct functional handling under normal values, abnormal values, boundary values, maximum and minimum values, etc., and limit the yg value within the range of [-XfFxd, XfFxd].",
            "The system should check the rate of change of each parameter during the yg calculation process to ensure they are within reasonable ranges, and there should be clear handling strategies when the slope exceeds the upper or lower limits.",
            "The system should check the precision of data bits in interface data during the calculation process to ensure that the output result is correct when the precision is greater than the required accuracy.",
            "The system should check the precision of data bits in interface data during the yg calculation process to ensure the output result is correct when the precision is less than the required accuracy.",
            "The system should check the inputs for yg calculation under different states and operational phases to ensure that functional processing is correct even when the operational phase or state is not considered."
        ]
    },
    {
        "requirement": "When switching between remote control modes with and without an internal loop, record the previous value of the rudder deflection command before switching, to be used as a softening start point.",
        "safety_requirements": [
            "When the system switches to non-internal loop remote control mode, it should record the previous rudder deflection command value before switching and use it as a softening starting point to ensure smoothness and continuity during the switching process.",
            "The system should have a timeout detection mechanism when switching modes to handle situations where the hardware status fails to meet control requirements for an extended period, ensuring system stability and safety.",
            "When the system switches modes, it should check the values of the functional interface data to ensure that the calculation results of the rudder deflection command are correct and comply with the current operating status in case of \"value changes or range changes\".",
            "The system should check functional inputs under different states and operational phases to ensure the correctness and consistency of functional processing in scenarios such as 'unconsidered operational phases' or 'unconsidered operating states'.",
            "The system should perform real-time consistency checks on the rudder command after switching modes, ensuring the correctness and safety of functional processing when the command is within normal range, abnormal values, boundary values, maximum or minimum values, and trigger a warning mechanism under abnormal conditions."
        ]
    },
    {
        "requirement": "The throttle airspeed closed-loop control should be the same as that during the flare phase.",
        "safety_requirements": [
            "During the flare phase when the system performs throttle airspeed closed-loop control, it should ensure that the control sequence and timing are coordinated with the hardware, and that the control conditions are complete and consistent.",
            "When the system performs throttle airspeed closed-loop control during the flare segment, it should ensure the correct timing, constraint, concurrency, and combination relationships between functional control logic points.",
            "After the system performs throttle airspeed closed-loop control, it should monitor and determine the compatibility between hardware status and control requirements to ensure that the control outcome meets expectations.",
            "The system should ensure that the entry conditions and exit conditions for each mode are consistent when entering and exiting the closed-loop control of throttle airspeed during the flare segment.",
            "The system should have a timeout detection mechanism when performing critical throttle airspeed closed-loop control to handle situations where the hardware status fails to meet control requirements for an extended period."
        ]
    },
    {
        "requirement": "In the discretization process, Md 2(k) = KyzI · Md1(k), and Md 2(k) must be limited within the range [- XfFxd , XfFxd].",
        "safety_requirements": [
            "During the discretization process, the system should check the data bits in the interface data that have discrete value ranges to ensure that when the data values of two consecutive cycles change abruptly, the calculation result of Md 2(k) is correct.",
            "The system should ensure that the rate of change of Md 2(k) remains within a reasonable range, and there should be a clear handling strategy for superslope data.",
            "During the discretization process, the system should check the data bits in the interface data that have discrete value domains to ensure that when the data bits take each enumerated value within the valid value range, the calculation result of Md 2(k) is correct.",
            "During the discretization process, the system should check data bits in the interface data that have discrete value ranges to ensure that when a data bit takes on an \"undefined abnormal value outside the valid range,\" the calculation result of Md 2(k) is correct and the exception handling mechanism is triggered.",
            "The system should check the discrete output data values with different redundancy in the interface data to ensure the correctness of function implementation when two or more redundant output data have 'inconsistent values', and trigger the corresponding handling mechanism."
        ]
    },
    {
        "requirement": "In the discretization process, Md 3(k) = Kyz · Δy(k) + Md 2(k) + Kyzd · wy(k), and Md 3(k) must be limited within the range [- XfFxd , XfFxd].",
        "safety_requirements": [
            "During the discretization process, the system should check the data bits in the interface data that have discrete value ranges to ensure that the calculation result of Md 3(k) is correct when the data values jump between two consecutive cycles.",
            "During the discretization process of the system, the rate of change of Md 3(k) should be checked to ensure it falls within a reasonable range (upper and lower slope limits), and a clear strategy for handling data that exceeds these slope limits should be defined.",
            "During the discretization process, the system should check the data bits in the interface data that have discrete value domains to ensure that when the data bits take each enumerated value within the valid value range, the calculation result of Md 3(k) is correct.",
            "During the discretization process, the system should check data bits in the interface data that have discrete value ranges to ensure that when a data bit takes on an 'undefined abnormal value outside the valid range', the calculation result of Md 3(k) is correct and the exception handling mechanism is triggered.",
            "During the discretization process, the system should check the discrete output data values of different redundancies to ensure the correctness of function implementation when two or more redundant output data values are inconsistent, and trigger the redundancy handling mechanism."
        ]
    },
    {
        "requirement": "In the discretization process, yg(k) = -Md3(k).",
        "safety_requirements": [
            "During the discretization process, the system should check the data bits in the interface data that have discrete value ranges to ensure that when the data values of two consecutive cycles change abruptly, the output yg (k) = -Md 3(k) is correct.",
            "During the discretization process, the system should check the data bits in the interface data that have discrete value domains to ensure that when the data bits take each enumerated value within the valid value range, the output of yg (k) = -Md 3(k) is correct.",
            "During the discretization process, the system should check data bits in the interface data that have discrete value ranges to ensure that when the data bit takes a value of \"undefined exception value outside the valid range,\" the output yg(k) = -Md 3(k) is correct and triggers the exception handling mechanism.",
            "During the system discretization process, the data processing procedures of the functions should be checked to ensure that no division by zero occurs during data processing, preventing computational errors.",
            "The system should check the interface data when discretized under different states and operational phases, to ensure correct handling of cases such as 'operational phase not considered' or 'operational state not considered', where yg(k) = -Md3(k)."
        ]
    },
    {
        "requirement": "The longitudinal control during landing rollout is the same as that during the ground phase of takeoff.",
        "safety_requirements": [
            "When the system is performing longitudinal control during landing rollout, it should ensure that the control sequence and timing are coordinated with the hardware, and that control conditions are complete and consistent.",
            "The system shall ensure consistency in the entry and exit conditions between the longitudinal control during landing rollout and the ground segment control during takeoff.",
            "The system shall ensure the correct timing, constraints, concurrency, and combination relationships among functional points during longitudinal control of landing rollout.",
            "After power recovery or activation of the runaway reset mechanism, the system shall be able to return to normal operation, ensuring continuity and reliability of longitudinal control during landing rollout.",
            "The system shall ensure that the timing of outputting the longitudinal control status during landing rollout meets the scenario requirements, to avoid safety risks caused by inappropriate timing."
        ]
    },
    {
        "requirement": "In the lateral control during landing rollout, yg decreases linearly from -δx 0 / Ky to 0 within 2 seconds.",
        "safety_requirements": [
            "The system should have a timeout judgment mechanism during lateral control in the landing rollout process, ensuring that when hardware status fails to meet control requirements for an extended period during the linear decrease of yg from -δx 0 / Ky to 0 within 2 seconds, timely actions can be taken.",
            "The system should check the control solution results of YG to ensure their correctness under conditions such as \"normal values, abnormal values, boundary values, and extreme maximum/minimum values\".",
            "The system should check the duration of the landing roll lateral control task to ensure the correctness of function processing when the task duration is less than the specified time.",
            "The system should check the control solution data processing process of YG to ensure that no division by zero occurs during data processing.",
            "The system should ensure that the rate of change of yg remains within a reasonable range (upper and lower slope limits) and clearly define the handling strategy for data exceeding these slope limits."
        ]
    },
    {
        "requirement": "In the lateral control during landing rollout, yg(k) = Kyg(Kz·Dz(k) + Kz·Dz(k) - K·Δy(k) - K·wy(k)) + 0.5yg0, where yg0 is the outer loop control output of the rudder channel at the end of the roll correction phase.",
        "safety_requirements": [
            "The system should check the calculation results of lateral control during landing rollout to ensure correct control handling under conditions such as \"normal values, abnormal values, boundary values, and extreme maximum/minimum values\".",
            "The system should check the inputs for lateral control during landing rollout under different states and operational phases, to ensure correct control processing in cases such as 'operational phase not considered' or 'state not considered'.",
            "When the system is performing lateral control during landing rollout, it should ensure that the control sequence and timing are coordinated with the hardware, and that control conditions are complete and consistent.",
            "The system should ensure the correct timing, constraint, concurrency, and combination relationships between functional control logics to guarantee the reliability of lateral control during landing rollout.",
            "The system should check the parameter variation rate of lateral control during landing rollout to ensure it is within a reasonable range (upper and lower slope limits), and clearly define the handling strategy for data exceeding the slope limit."
        ]
    },
    {
        "requirement": "During the engine in-flight start process, the throttle valve control follows the start-up procedure. After a successful engine in-flight start, the aircraft exits the glide phase and enters the corresponding phase, with the throttle valve control following that phase's requirements. If the engine in-flight start fails, the throttle valve position shall be set to 0%.",
        "safety_requirements": [
            "The system shall check functional inputs during the engine in-flight start process to ensure the correctness of throttle control under different states and operating phases, preventing control errors caused by failure to consider the operating phase or state.",
            "The system should check the control calculation results during the in-flight engine start process to ensure the correctness of functional handling when the values are normal, abnormal, at boundaries, or at maximum/minimum extremes, and trigger a warning mechanism in case of anomalies.",
            "During the engine in-flight start process, if a software power failure and restart occur, the system should check the status after restart to ensure correct state recovery and prevent control errors caused by incomplete or incorrect state recovery.",
            "During the engine in-flight start process, the system should check the control computation process to ensure the correctness of functional handling in case of a timeout (failure to return a result within the specified time), and trigger a warning mechanism in case of a timeout.",
            "During the engine in-flight start process, if power loss recovery or runaway reset mechanism is activated, the system shall ensure that it can recover to a normal operating state to prevent control errors caused by failed recovery."
        ]
    },
    {
        "requirement": "When autonomous control cannot achieve satisfactory control performance, manual correction control can be employed to make minor adjustments to the autonomous control. The correction inputs are introduced into the flight control computer through three remote control stick channels (elevator input, aileron input, rudder input) and airspeed correction combined commands. After corresponding scaling conversion, these inputs are incorporated into the control laws, thereby achieving the purpose of adjusting the control performance. The significance of the correction terms varies across different flight phases.",
        "safety_requirements": [
            "The system should check functional inputs under different states and operational phases to ensure the correctness of the control solution process in cases such as 'unconsidered operational phase' or 'unconsidered working state'.",
            "The system should check the control calculation results to ensure their correctness under conditions such as \"normal values, abnormal values, boundary values, maximum and minimum values\".",
            "The system should check the control solution process to ensure its correctness in cases such as timeouts (failure to return results within the specified time).",
            "During the system state execution, if a power failure or restart occurs in the software, the state after the restart should be checked to ensure the correctness of state execution in scenarios such as 'state not recovered' and 'error recovery'.",
            "When the system is performing control, it should ensure that the sequence and timing of control are coordinated with the hardware, and that control conditions are complete and consistent."
        ]
    },
    {
        "requirement": "Different manual correction amounts are required for control in each flight phase, and the relationship between manual correction amount and control input is linear.",
        "safety_requirements": [
            "The system should check functional inputs during different flight phases to ensure that the control solution process takes into account the current operating phase and status, avoiding errors caused by neglecting the operating phase or status.",
            "When the system performs control calculations, it should ensure that the control sequence and timing are coordinated with the hardware, control conditions are complete and consistent, to avoid control errors caused by inconsistent timing or conditions.",
            "The system should monitor the rate of change of manual corrections to ensure it remains within reasonable limits (upper and lower slope bounds). A clear handling strategy should be in place for data exceeding these limits, to prevent abnormal data from affecting control performance.",
            "The system should ensure the correctness of timing relationships, constraint relationships, concurrency relationships, and combination relationships among control logics of various functional points, to avoid control failure caused by logic relationship errors.",
            "The system should check the control calculation results to ensure that control processing is correct under normal values, abnormal values, boundary values, maximum and minimum values, etc., to prevent control failure caused by incorrect calculation results."
        ]
    },
    {
        "requirement": "When switching between remote control modes with the inner loop, record the previous set attitude angles (roll, yaw, and pitch) as the soft start reference.",
        "safety_requirements": [
            "When the system switches between remote control modes with the in-band loop, it should record the previous set attitude angles (roll, yaw, and pitch) before the switch and ensure their accuracy as the soft start point.",
            "When the system transitions between operational states, the values of functional interface data should be checked to ensure that the recorded previous attitude angle values are correct in cases where the value or the value range has changed.",
            "The system shall check the transition conditions between every pair of states in the software state space to ensure correct state transitions under circumstances such as \"unset, always satisfied, and never satisfied\".",
            "The system should check external devices (such as sensors, NVM, databases, other systems, etc.) to ensure the correctness of recorded previous attitude angle values when the devices are in states such as \"power-off\" or \"initialization\".",
            "The system should check the control solution results of the functions to ensure that the recorded old values of the specified attitude angles are handled correctly when the control solution results are 'normal values, abnormal values, boundary values, maximum and minimum values', etc.",
            "The system should ensure that the timing of output control status meets the scenario requirements, especially when switching between remote control modes with in-band loops."
        ]
    },
    {
        "requirement": "The control law used in manual correction control is the same as that of automatic control (Equation 2-1, Equation 2-2, Equation 2-3), except that a correction term is added to the corresponding control variable.",
        "safety_requirements": [
            "When the system is under manual correction control, it should ensure that the control laws are the same as those in automatic control, and add the correction value to the corresponding control output. At the same time, the control sequence and timing must be coordinated with the hardware, ensuring complete and consistent control conditions.",
            "The system should check the input of manual correction control under different states and working phases to ensure the correctness of the control solution process in cases such as \"working phase not considered, working state not considered\".",
            "The system should check the results of manually corrected calculations to ensure the correctness of control calculation results under conditions such as \"normal values, abnormal values, boundary values, maximum and minimum values\", and trigger an early warning mechanism in case of abnormalities.",
            "The system should check the resolution process of manually corrected control to ensure the correctness of the control resolution process in cases such as timeout (failure to return results within the specified time), and take appropriate measures.",
            "The system shall ensure the correctness of timing relationships, constraint relationships, concurrency relationships, and combination relationships among control logics of various functional points, to prevent control failure caused by logic errors."
        ]
    },
    {
        "requirement": "Command control mode is a control mode used during aircraft cruise, in which the flight status or position of the aircraft is changed through command control according to the actual conditions at that time.",
        "safety_requirements": [
            "The system should check functional inputs under different states and operational phases to ensure correct handling of command control modes in cases such as 'unconsidered operational phase' or 'unconsidered operational state'.",
            "The system should check the state entry conditions to ensure the correctness of state execution under circumstances such as the entry conditions being \"satisfied, not satisfied, satisfied again,\" etc.",
            "The system should check the control solution process of the command control mode to ensure the correctness of function processing in cases such as timeout during the control solution process (failure to return results within the specified time).",
            "The system should check the software status corresponding to the system status, operation phase, or system task, ensuring the correctness of status execution in cases such as 'no corresponding software status exists' or 'software and system statuses are inconsistent'.",
            "During the execution of system status, if a power failure or restart occurs in the software, the status after restarting should be checked to ensure the correctness of status execution in cases such as \"status not recovered\" or \"error recovery\"."
        ]
    },
    {
        "requirement": "The command control mode does not change the control law structure under autonomous control mode.",
        "safety_requirements": [
            "When the system is in command control mode, it should ensure that the control law structure remains consistent with that in autonomous control mode to avoid control anomalies caused by changes in the control law structure.",
            "When the system is under control, it should ensure that the control sequence and timing are coordinated with the hardware, and that control conditions are complete and consistent to prevent control failure or errors.",
            "After the system performs hardware control, it should monitor and determine the consistency between the hardware status and the control requirements to ensure that the hardware status meets expectations.",
            "When there is no transition relationship between two or more states in the system, the correctness of entry conditions should be checked to ensure the proper execution of states under conditions such as \"simultaneously satisfied\" or \"satisfied during state execution.\"",
            "The system should have a timeout detection mechanism when performing critical controls or actions to handle situations where the hardware status fails to meet control requirements for an extended period, ensuring system safety.",
            "The system should check functional inputs under different states and operational phases to ensure correct functional processing under scenarios such as 'unconsidered operational phase' or 'unconsidered operating state', avoiding functional anomalies."
        ]
    },
    {
        "requirement": "The instruction control commands for the setup have lateral direction.",
        "safety_requirements": [
            "When setting up lateral command control, the system should ensure that the sequence and timing of control are coordinated with the hardware, and that control conditions are complete and consistent.",
            "After the system performs lateral command control, it should monitor and determine the consistency between hardware status and control requirements to ensure the control effect meets expectations.",
            "When the system receives lateral command parameters set by personnel, it should perform validity checks and provide alerts or no response for abnormal parameters.",
            "The system should ensure the correct timing relationships, constraint relationships, concurrent relationships, and combination relationships between lateral command control logics to avoid logic conflicts.",
            "The system should perform a rationality check based on the device status when issuing hazardous lateral control commands or actions, to ensure the safety of the commands."
        ]
    },
    {
        "requirement": "Supports command control modes such as \"Left Turn\", \"Right Turn\", \"Figure Eight Flight\", \"Temporary Waypoint\", longitudinal \"Constant Altitude\", \"Altitude Setting\", and speed control modes \"Constant Speed\" and \"Speed Setting\".",
        "safety_requirements": [
            "The system shall check functional inputs under different states and operational phases to ensure the correct handling of command control modes (left turn, right turn, figure-eight flight, temporary waypoints, constant altitude, altitude setting, constant speed, speed setting) in scenarios such as 'operational phase not considered' or 'operational state not considered'.",
            "The system should check the operating status of different redundancies to ensure the correctness of the command control mode in cases such as \"two or more redundancies are in different states\".",
            "The system shall ensure the correct timing relationships, constraint relationships, concurrency relationships, and combination relationships among control logics of various functional points to guarantee the correct execution of command control modes.",
            "The system should ensure that the timing of output control status meets the scenario requirements to guarantee the correctness and safety of the command control mode."
        ]
    },
    {
        "requirement": "Under autonomous control or command control mode, between the climb phase 2 and the completion of the route turn to the final approach course (excluding the final approach course itself), issuing any of the aforementioned commands will switch the system to command control mode.",
        "safety_requirements": [
            "The system should check functional inputs under different states and operational phases to ensure that the control solution process is correct and can properly transition to command control mode, even in cases where the operational phase or state has not been considered.",
            "The system should check the control calculation results to ensure their correctness under conditions such as \"normal values, abnormal values, boundary values, maximum and minimum values,\" and be able to correctly switch to the command control mode.",
            "During the system state execution, if the software experiences a power failure and restarts, the state after restart should be checked to ensure correct state recovery and proper transition into command control mode.",
            "The system should check the state entry conditions to ensure that during state execution, the state is executed correctly under conditions where the entry criteria are \"satisfied, not satisfied, satisfied again\", and it can correctly transition to the command control mode.",
            "The system shall ensure the timing of output control status meets the scenario requirements, and ensures that during the flight phase from the climb segment 2 to the completion of the route before intercepting the final approach course (excluding the final approach course), issuing any of the aforementioned commands correctly transitions the system into command control mode under autonomous control or command control mode."
        ]
    },
    {
        "requirement": "During Climb Phase 1, only the \"Constant Speed\" and \"Airspeed Setting\" commands are valid; all other commands are invalid.",
        "safety_requirements": [
            "The system should verify the validity of the 'Constant Speed' and 'Airspeed Setting' commands set by personnel, and provide warnings or no response for abnormal parameters.",
            "The system should perform timeout detection for the \"constant speed\" and \"airspeed setting\" commands to handle situations where the hardware status fails to meet control requirements for an extended period.",
            "The system should check the duration of the climb phase 1 mission to ensure the correctness of functional processing when the mission duration is less than the specified time.",
            "When the system is in control during segment 1 of the ascent, it shall ensure that the control sequence and timing are coordinated with the hardware, with complete and consistent control conditions.",
            "During phase 1 of system climbing, functional inputs should be checked to ensure the correctness of functional processing in cases where operational phases or operating conditions are not considered."
        ]
    },
    {
        "requirement": "In the command control mode, commands of the same type can be retransmitted, and the new command will replace the old one.",
        "safety_requirements": [
            "The system should check the functional inputs under command control mode in different states and operational phases to ensure that new commands can correctly replace old ones when the \"operational phase and state are not considered\".",
            "The system shall check the execution of functions in command control mode before and after state transitions, to ensure that new commands can correctly replace old ones under conditions such as \"start execution, continue execution, interrupt execution\" after the state transition.",
            "When the system is in command control mode, it should ensure that the sequence and timing of control are coordinated with the hardware, and that control conditions are complete and consistent to prevent confusion or conflicts during command execution.",
            "When the system is in command control mode, it should analyze whether multiple functional points may operate on the same actuator to ensure that simultaneous execution of multiple functional points does not lead to conflicts or failures in the actuator.",
            "When the system is in command control mode, a timeout detection mechanism should be implemented for critical controls or actions to handle situations where hardware status fails to meet control requirements for an extended period, ensuring system stability and safety."
        ]
    },
    {
        "requirement": "During \"altitude hold\" command control, the commanded altitude in the flight control law is set to the flight altitude at the moment the \"altitude hold\" command is received.",
        "safety_requirements": [
            "When the system receives the \"altitude hold\" command, it should check the state entry conditions to ensure that during the execution of the state, the set altitude value is correct and consistent under conditions such as \"entry condition satisfied, not satisfied, satisfied again,\" etc.",
            "When the system is under 'altitude hold' command control, it should ensure that the control sequence and timing are coordinated with the hardware, with complete and consistent control conditions.",
            "When the system is under 'altitude hold' command control, it should check functional inputs to ensure correct processing under different states and operational phases, avoiding errors caused by neglecting operational phases or states.",
            "When the system is under 'altitude hold' command control, it should ensure that the timing of output control status meets the scenario requirements to avoid control failure caused by improper timing.",
            "When the system is under 'altitude hold' command control, it should have a timeout judgment mechanism to handle situations where the hardware status fails to meet control requirements for an extended period, ensuring system safety."
        ]
    },
    {
        "requirement": "When the \"Altitude Setting\" command is active, the commanded altitude in the flight control law is set to the specified altitude value.",
        "safety_requirements": [
            "When the system is under the control of the 'Height Setting' command, it should check the control solution results to ensure the correctness of the given height values under normal, abnormal, boundary, maximum, and minimum conditions.",
            "When the system is under the control of the 'Height Setting' command, it should ensure that the sequence and timing of control are coordinated with the hardware, and that control conditions are complete and consistent.",
            "The system should check the control solution process for the \"altitude setting\" command under different states and operational phases to ensure correct functional handling, even in cases where the operational phase or state is not considered.",
            "When the system is under the control of the 'altitude setting' command, it should check the continuous output data values of different redundancies to ensure that the output data values of two or more redundancies are consistent, i.e., the difference between the values does not exceed the specified threshold.",
            "When the system issues a 'height setting' command, it should make a reasonableness judgment based on the device status to prevent issuing dangerous control commands or actions."
        ]
    },
    {
        "requirement": "When switching between the inner loop remote control and non-inner loop remote control modes, record the previous value of the rudder deflection command before switching as the soft start point.",
        "safety_requirements": [
            "When the system switches between in-band loop remote control and non-in-band loop remote control modes, it should record the previous value of the rudder deflection command before the switch, ensuring that the control sequence and timing are coordinated with the hardware, and that control conditions are complete and consistent.",
            "The system should check functional inputs when performing control calculations under different states and operational phases, to ensure correct functional processing even if the operational phase or state is not considered.",
            "The system should have a timeout detection mechanism when performing critical control operations or actions, in order to handle situations where hardware status fails to meet control requirements for an extended period.",
            "The system should check the control solution results when switching between in-loop remote control and non-in-loop remote control modes, ensuring correct functional handling under normal values, abnormal values, boundary values, maximum and minimum values, etc.",
            "During the execution of the system state, if a power failure or restart occurs in the software, the state after the restart should be checked to ensure correct state recovery after the restart, avoiding situations where the state is not recovered or incorrectly recovered."
        ]
    },
    {
        "requirement": "The target altitude in the autonomous control mode is the altitude of the target waypoint.",
        "safety_requirements": [
            "When the system is in autonomous control mode, it should ensure that the given altitude is consistent with the altitude of the target waypoint, and that the temporal relationships, constraint relationships, concurrent relationships, and combination relationships between functional point control logics are correct.",
            "The system in autonomous control mode shall ensure that the sequence and timing of control are coordinated with the hardware, with complete and consistent control conditions.",
            "In autonomous control mode, the system should check the results of control calculations to ensure correct functional handling under conditions such as \"normal values, abnormal values, boundary values, and extreme maximum/minimum values.\"",
            "When the system is in autonomous control mode, it shall check functional inputs to ensure correct functional processing under conditions such as \"unconsidered operation phase\" and \"unconsidered operating status\".",
            "When the system is in autonomous control mode, a timeout determination mechanism should be in place for critical controls or actions to handle situations where the hardware status fails to meet control requirements for an extended period."
        ]
    },
    {
        "requirement": "In the command control mode, the navigation algorithm or waypoint switching method can be varied according to the commands, but the control laws remain the same as in autonomous control.",
        "safety_requirements": [
            "The system should check the inputs of the navigation algorithm or waypoint switching method under different states and operational phases, to ensure the correctness of the control solution process in cases such as 'operational phase not considered, operational state not considered'.",
            "When the system is in command control mode, it should ensure that the control laws are consistent with autonomous control, and verify the control sequence and timing to ensure coordination with hardware, completeness, and consistency of control conditions.",
            "The system should check the control solution results of the navigation algorithm or waypoint switching method to ensure the correctness of functional processing under conditions such as \"normal values, abnormal values, boundary values, maximum and minimum values\".",
            "The system should ensure the correct temporal relationships, constraint relationships, concurrent relationships, and combination relationships between functional control logics to avoid logic conflicts and timing errors.",
            "The system should check the control solution process of the navigation algorithm or waypoint switching method to ensure the correctness of function handling in cases such as timeout (failure to return results within the specified time)."
        ]
    },
    {
        "requirement": "The specified airspeed in the flight control law is taken as the airspeed value at the moment the \"constant speed\" command is received when under \"constant speed\" command control.",
        "safety_requirements": [
            "When the system is under 'constant speed' command control, the control solution results should be checked to ensure that the specified airspeed value is correct and matches the airspeed at the moment the 'constant speed' command was received, under normal conditions, abnormal conditions, boundary values, maximum and minimum values.",
            "The system shall check the control resolution process for responding to the \"constant speed\" command under different states and operational phases, to ensure that the specified airspeed value is correct even when the operational phase or state is not taken into account.",
            "During the execution of system states, the state entry conditions shall be checked to ensure that the specified airspeed values are correct when the state entry conditions are met, not met, or met again.",
            "When the system is under \"constant speed\" command control, it should ensure that the control sequence and timing are coordinated with the hardware, and that control conditions are complete and consistent.",
            "During the control solution process for the 'constant speed' command, the system should check whether the control solution process has timed out (failed to return a result within the specified time), and ensure the correctness of functional processing in such cases."
        ]
    },
    {
        "requirement": "The specified airspeed in the flight control law is taken as the set airspeed value during \"speed setting\".",
        "safety_requirements": [
            "When the system is in 'speed setting' mode, it should check the control solution results of the given airspeed to ensure the correctness of functional processing when the value is normal, abnormal, at boundary, or at maximum/minimum extremes.",
            "The system should check the control resolution process for \"speed setting\" under different states and operational phases to ensure the correctness of functional processing, regardless of whether the operational phase or state is considered or not.",
            "When the system is performing 'speed setting' control, it should ensure that the control sequence and timing are coordinated with the hardware, and that control conditions are complete and consistent.",
            "During the execution of the system in the 'Speed Setting' state, the conditions for entering the state should be checked to ensure the correctness of state execution when the entry conditions are met, not met, or met again.",
            "When the system is in 'speed setting', it should ensure the correct timing relationships, constraint relationships, concurrent relationships, and combination relationships between functional points' control logic."
        ]
    },
    {
        "requirement": "The specified airspeed in the flight control law during autonomous control is a value stored in the flight control computer, calculated based on flight performance.",
        "safety_requirements": [
            "The system should check the control solution results of the specified airspeed in the flight control laws to ensure correct processing results under conditions such as \"normal values, abnormal values, boundary values, maximum and minimum values\".",
            "The system should verify the control solution process of the specified airspeed in the flight control laws under different states and operational phases, ensuring correct processing results in cases such as 'operational phase not considered, operational state not considered'.",
            "The system should check the control solution process of the specified airspeed in the flight control laws to ensure that the processing result is correct in case of a timeout (no result returned within the specified time).",
            "The system shall ensure that the control sequence and timing of the specified airspeed in the flight control laws are coordinated with the hardware, with complete and consistent control conditions.",
            "The system shall implement a timeout detection mechanism for critical control or actuation actions related to the specified airspeed in the flight control laws, in order to handle situations where hardware status fails to meet control requirements for an extended period."
        ]
    },
    {
        "requirement": "The airspeed setting limit is set to (25 m/s, 65 m/s).",
        "safety_requirements": [
            "The system shall clearly define the measurement range of the airspeed sensor (25 m/s, 65 m/s), and report a sensor fault when the airspeed exceeds this range.",
            "The system should have a timeout detection mechanism to ensure that when the airspeed setting limit is (25 m/s, 65 m/s), appropriate action is taken if the hardware status fails to meet the control requirements for an extended period.",
            "The system should check the control solution results for airspeed limit settings to ensure the correctness of functional processing under conditions such as \"normal values, abnormal values, boundary values, maximum and minimum values\".",
            "When the system controls the airspeed setting limit values, it should ensure that the control sequence and timing are coordinated with the hardware, and that the control conditions are complete and consistent.",
            "The system should have a clear handling strategy, such as clamping or outputting according to safety values, when the airspeed setting exceeds the limit range (25 m/s, 65 m/s)."
        ]
    },
    {
        "requirement": "When sending the \"Cancel Altitude Hold\" command, exit from the \"Altitude Hold\" or \"Altitude Setting\" command control, and the target waypoint altitude is taken as the reference altitude.",
        "safety_requirements": [
            "The system should perform a timeout check when sending the \"Cancel Altitude Hold\" command to handle situations where the hardware status fails to meet control requirements for an extended period.",
            "When the system transitions between operational states, the values of functional interface data should be checked to ensure that the values remain unchanged upon exiting from 'altitude hold' or 'altitude setting' command control, and the target waypoint altitude is set as the commanded altitude.",
            "The system should have a clear handling strategy when outputting the altitude of the target waypoint, such as truncating or outputting according to safety values, to prevent output data from exceeding limits.",
            "When the system issues a \"Cancel Altitude Hold\" command, it should make a rationality judgment based on the device status to ensure the safety of the command.",
            "When the system checks the timing of interface data acquisition, it should analyze the correctness of outputs in cases where the input timing is \"too early stop, too late stop,\" etc., to ensure the accuracy of command execution."
        ]
    },
    {
        "requirement": "When the \"Cancel Cruise\" command is issued, exit from \"Cruise\" or \"Speed Setting\" command control, and the set speed value becomes the same as autonomous control.",
        "safety_requirements": [
            "When the system sends a \"Cancel Cruise Control\" command, it should perform a timeout check to ensure that the hardware status meets control requirements within the specified time; otherwise, the exception handling mechanism is triggered.",
            "When the system sends a \"Cancel Cruise Control\" command, it should ensure that the control sequence and timing are coordinated with the hardware, with complete and consistent control conditions.",
            "When the system sends a \"Cancel Cruise\" command, it should ensure that the entry and exit conditions are consistent to prevent mode switching errors.",
            "When the system sends a \"Cancel Cruise\" command, it should check the function input to ensure correct function processing under different operational phases and conditions.",
            "When the system sends a \"Cancel Cruise Control\" command, it should ensure the timing of the output control status meets the scenario requirements, preventing control delays or premature actions."
        ]
    },
    {
        "requirement": "When sending the \"Resume Route\" command, exit from lateral command control and transition from the current position to the original route to the point.",
        "safety_requirements": [
            "After power recovery or runaway reset, the system should be able to return to normal operation, ensuring that when the \"Resume Route\" command is sent, it exits from lateral command control and resumes the original route to the destination point from the current position.",
            "After the transmitting end recovers from an exception and resumes data transmission, the receiving end should be able to properly receive the \"Resume Route\" command again, ensuring exit from lateral command control and resuming the original route to the destination from the current position.",
            "When the redundancy switching condition is met, the system shall ensure that the output value of the currently executing 'recovery route' function does not become abnormal, guaranteeing a safe exit from lateral command control and transitioning from the current position back to the original route to the waypoint.",
            "During the execution of the state, after a power failure and subsequent restart of the software, the system should check the state after restart to ensure correct execution of the 'route recovery' command in cases such as 'state not recovered' or 'error recovered'.",
            "The system shall ensure the correctness of timing relationships, constraint relationships, concurrency relationships, and combination relationships among control logics of each functional point, and shall ensure that the system exits from lateral command control and resumes the original route to the target point from the current position upon receiving a \"Resume Route\" command."
        ]
    },
    {
        "requirement": "The commands \"Cancel Altitude Hold,\" \"Cancel Speed Hold,\" and \"Resume Route\" are only valid when in the command control mode and after the corresponding command to enter command control has been sent.",
        "safety_requirements": [
            "After a software power failure and restart, the system shall check the status after restarting to ensure correct status recovery, especially in cases such as \"status not recovered\" and \"error recovery\", the commands \"cancel altitude hold\", \"cancel speed hold\" and \"recover route\" under command control mode shall still be executed correctly.",
            "The system shall check functional inputs under different states and operational phases to ensure the correct handling of commands such as 'Cancel Altitude Hold', 'Cancel Speed Hold', and 'Resume Route' in command control mode, even in cases such as 'operational phase not considered' or 'operational state not considered'.",
            "After a software power failure and restart, the system should check the interface data communication to ensure the correctness of output for commands such as 'Cancel Altitude Hold', 'Cancel Speed Hold', and 'Resume Route' under command control mode in cases of 'interruption, reconnection, and unrecoverable failures'.",
            "The system should check the control resolution results for the commands \"Cancel Altitude Hold,\" \"Cancel Speed Hold,\" and \"Resume Route\" to ensure the correctness of command processing under conditions such as normal values, abnormal values, boundary values, and extreme maximum/minimum values.",
            "The system should perform timeout checks on key controls or actions related to the commands \"Cancel Altitude Hold,\" \"Cancel Speed Hold,\" and \"Resume Route\" to handle situations where hardware status fails to meet control requirements for an extended period."
        ]
    },
    {
        "requirement": "When a phase transition occurs or a control mode switch related to the remote control mode takes place, record the previous value of the throttle deflection command before the transition as the softening starting point.",
        "safety_requirements": [
            "The system should record the previous value of the throttle command before the transition when switching phases or changing control modes related to remote control mode, and use it as a soft start point to ensure correct functional processing in cases where the control calculation results are normal values, abnormal values, boundary values, maximum or minimum values, etc.",
            "When the system transitions between operating states, the values of the functional interface data should be checked to ensure that the recorded old value of the throttle valve deflection command and the setting of the soft start point are correct when the value or the value range changes.",
            "When the system performs control calculations under different states and operation phases, it should check functional inputs to ensure the correctness of functional processing, regardless of whether the operation phase or state has been considered.",
            "During the execution of system states, after a power failure and subsequent software restart, the system should check the state after restarting to ensure correct state recovery and avoid situations where the state is not recovered or incorrectly recovered.",
            "The system should ensure coordination with the hardware and that control conditions are complete and consistent throughout the control sequence and timing, especially during phase transitions or control mode switches."
        ]
    },
    {
        "requirement": "After the effective processing of the commands \"Cancel Altitude Hold,\" \"Cancel Speed Hold,\" and \"Resume Route,\" the control mode will revert to autonomous control only when the longitudinal, lateral, and speed aspects are all exited from command control. Otherwise, the command control mode remains active.",
        "safety_requirements": [
            "After a power failure and subsequent restart of the system software, the system should check the status after restart to ensure correct recovery of the control mode in cases such as 'status not recovered' or 'error recovery', maintaining the command control mode until the longitudinal, lateral, and speed aspects have all exited the command control state.",
            "The system shall check functional inputs when processing commands such as 'Cancel Altitude Hold', 'Cancel Speed Hold', and 'Resume Route' to ensure the correctness of function handling in cases such as 'working phase not considered, working status not considered'.",
            "The system should check the control solution results for the commands \"Cancel Altitude Hold,\" \"Cancel Speed Hold,\" and \"Resume Route\" to ensure the correctness of functional processing under conditions such as normal values, abnormal values, boundary values, maximum and minimum values.",
            "The system should have a timeout detection mechanism when handling critical controls or actions, to manage situations where hardware status fails to meet control requirements for an extended period, ensuring correct recovery of the control mode.",
            "When the system switches control modes, it should ensure that the control sequence and timing are coordinated with the hardware, that control conditions are complete and consistent before and after, and that the control mode reverts to autonomous control only after command control has been exited in all three aspects: longitudinal, lateral, and speed."
        ]
    },
    {
        "requirement": "The remote control mode is divided into two types: remote control with internal loop and remote control without internal loop.",
        "safety_requirements": [
            "The system should check the functional inputs in different states and working stages to ensure the correctness of the remote control mode processing without considering the working stage or working state.",
            "When the system is performing remote control, it should ensure that the control sequence and timing are coordinated with the hardware, and that control conditions are complete and consistent.",
            "The system should check the control resolution results under remote control mode to ensure the correctness of functional processing in cases such as \"normal values, abnormal values, boundary values, maximum and minimum values\".",
            "The system should ensure the correctness of timing relationships, constraint relationships, concurrent relationships, and combination relationships among control logics of each functional point, in order to guarantee the reliability of remote control mode.",
            "The system should check the control resolution process of the remote control mode to ensure correct functional handling in cases such as timeout (no result returned within the specified time)."
        ]
    },
    {
        "requirement": "Directly control the flight control surfaces (elevator, aileron, and rudder) via remote control without internal feedback loops, converting the remote control inputs to appropriate proportional outputs.",
        "safety_requirements": [
            "The system should check remote control inputs under different states and operational phases to ensure the correctness of the control solution process, regardless of the operational phase or state.",
            "The system should ensure that the control sequence and timing are coordinated with the hardware, and that control conditions are complete and consistent during control calculations.",
            "The system should check the control solution results to ensure correct functional handling under conditions such as \"normal values, abnormal values, boundary values, maximum and minimum values\".",
            "The system shall check the operating status of different redundancies to ensure correct functionality when two or more redundancies are in different states."
        ]
    },
    {
        "requirement": "The in-band loop remote control converts the remote control input into the corresponding target attitude angle, and calculates the corresponding rudder deflection control command to control the control surfaces through autonomous control laws (Equations (2-1), (2-2), and (2-3)).",
        "safety_requirements": [
            "The system should verify the correctness of functional inputs under different states and operational phases, ensuring that remote control commands are correctly converted into target attitude angles even in cases such as 'operational phase not considered' or 'operational state not considered'.",
            "The system should check the control calculation results of converting remote control inputs into target attitude angles to ensure that the calculated rudder deflection control commands are correct under conditions such as \"normal values, abnormal values, boundary values, maximum and minimum values\".",
            "The system shall ensure that the control sequence and timing are coordinated with the hardware during control computation, with complete and consistent control conditions.",
            "The system should check the control resolution process to ensure that functions are handled correctly in cases such as timeouts (failure to return results within the specified time), without affecting system safety.",
            "The system shall ensure the correctness of timing relationships, constraint relationships, concurrency relationships, and combination relationships among control logics of various functions to prevent safety issues caused by logic errors."
        ]
    },
    {
        "requirement": "In both remote control modes, the remote control of the throttle valve is the same.",
        "safety_requirements": [
            "The system shall ensure that the remote control sequence and timing of the throttle valve are coordinated with the hardware in both remote control modes, with complete and consistent control conditions.",
            "The system should ensure that the entry and exit conditions for each mode are consistent under the two remote control modes.",
            "After the system performs throttle remote control, it should monitor and determine the consistency between the hardware status and the control requirements to ensure that the control outcome meets expectations.",
            "The system should check the control resolution process of the throttle valve remote control under different states and working phases to ensure the correctness of functional processing when the working phase or working state is not considered.",
            "The system should have a timeout detection mechanism when performing critical throttle remote control to handle situations where the hardware status fails to meet control requirements for an extended period."
        ]
    },
    {
        "requirement": "Remote control has the highest control authority and can switch to remote control mode at any time under any circumstances.",
        "safety_requirements": [
            "The system in remote control mode should have a timeout judgment mechanism to handle situations where the hardware status fails to meet control requirements for an extended period, ensuring system safety.",
            "When the system switches to remote control mode under different states and operational phases, the functional inputs should be checked to ensure the correctness of functional processing regardless of the operational phase or state.",
            "When the system switches to remote control mode, it should ensure that the control sequence and timing are coordinated with the hardware, the control conditions are complete and consistent, and control confusion is prevented.",
            "When the system is in remote control mode, it should check the results of control resolution to ensure the correctness of functional processing under normal values, abnormal values, boundary values, maximum and minimum values.",
            "When the system is in remote control mode, if the software experiences a power failure and restarts, the status after restart should be checked to ensure correct recovery and prevent safety issues caused by incomplete or incorrect state recovery."
        ]
    },
    {
        "requirement": "When the aircraft is on the ground, the rudder deflection command for in-band loop remote control is calculated using the following formula: δy = KyY · Y + [Kyg (K · (-yg) + Ky · wy)] + Kywy · wy.",
        "safety_requirements": [
            "When the aircraft is in a ground state, the system should verify the inputs to the rudder deflection command calculation formula, ensuring the correctness and completeness of input data under different states and operational phases, to prevent calculation errors caused by unconsidered operational phases or states.",
            "The system should check the calculation results of the rudder deflection angle command to ensure correctness and consistency of the results under normal values, abnormal values, boundary values, maximum and minimum values, etc.",
            "When the system calculates the rudder deflection command, it should ensure that the control sequence and timing are coordinated with the hardware, control conditions are complete and consistent, to prevent calculation errors caused by control sequence or timing issues.",
            "When the system calculates the rudder deflection angle command, it should check the value precision of the data bits in the interface data to ensure that the data bit value precision is greater than the required precision, preventing calculation errors caused by insufficient precision.",
            "When the system calculates the rudder deflection command, it should check the value accuracy of the data bits in the interface data to ensure that the data bit value accuracy is less than the required precision, preventing calculation errors caused by excessive precision."
        ]
    },
    {
        "requirement": "Given the linear relationship between the attitude angles and the throttle deflection δp with the remote control inputs.",
        "safety_requirements": [
            "When the system controls the linear correspondence between attitude angles, throttle deflection δp, and remote control inputs, it should ensure that the control sequence and timing are coordinated with the hardware, and that control conditions are complete and consistent.",
            "The system should ensure the correct timing, constraint, concurrency, and combination relationships between each functional control logic to guarantee the correctness of the linear correspondence between attitude angles, throttle deflection δp, and remote control inputs.",
            "The system should monitor the rate of change of attitude angles and throttle deflection δp to ensure they remain within reasonable limits (upper and lower slope bounds), and clearly define handling strategies for data exceeding these slope limits.",
            "After the system performs hardware control, it should monitor and determine the consistency between the hardware status and the control requirements, ensuring the correct execution of the linear relationship between attitude angles, throttle deflection δp, and remote control inputs.",
            "The system should check the operating status of different redundancies, and analyze the correctness of the linear relationship between attitude angles, throttle deflection δp, and remote control inputs in cases such as \"two or more redundancies are in different states\"."
        ]
    },
    {
        "requirement": "The system should be capable of flying along pre-bound routes.",
        "safety_requirements": [
            "When the system is performing control, it should ensure that the sequence and timing of control are coordinated with the hardware, control conditions are complete and consistent, to guarantee the correctness and safety of flight along the route.",
            "The system should check the task execution sequence to ensure that it is consistent with the specified sequence. If inconsistencies are detected, appropriate handling measures should be taken and an alarm mechanism should be triggered.",
            "The system shall ensure that software-related safety requirements are adequately and accurately implemented in the software requirements or design documentation to guarantee the safety of flight operations.",
            "The system should analyze whether multiple functional points may operate on the same actuator to ensure that no conflicts or hazardous situations arise during concurrent multitasking.",
            "The system should perform a reasonableness check based on the equipment status when issuing control commands or actions, to ensure the safety and effectiveness of the commands."
        ]
    },
    {
        "requirement": "The system should control the aircraft to maintain a constant altitude during the final approach phase, and when the navigation mode is set to final approach navigation, the flight phase should be reported as the final approach phase with control methods consistent with the constant altitude segment.",
        "safety_requirements": [
            "When the system controls the aircraft to be in a fixed altitude flight state during the five sided flight segment, it should check the functional inputs to ensure the correctness of the control calculation process under different states and working stages, especially when the working stage and working state are not considered.",
            "When the system controls the aircraft to maintain a constant altitude during the final approach phase, it should check the control solution results to ensure the correctness of functional processing under normal values, abnormal values, boundary values, maximum and minimum values, etc.",
            "When the system controls the aircraft to maintain a constant altitude during the final approach phase, it should ensure that the control sequence and timing are coordinated with the hardware, and that the control conditions are complete and consistent.",
            "When the system controls the aircraft to maintain a constant altitude during the final approach phase, it should check the functional priorities of two or more states with transition relationships, ensuring the correctness of state and function transitions when switching from high priority to low priority or from low priority to high priority.",
            "When the system controls the aircraft to maintain a constant altitude during the final approach phase, it should check the state entry conditions to ensure the correctness of state execution when the entry conditions are satisfied, not satisfied, or satisfied again during the execution process."
        ]
    },
    {
        "requirement": "The FCC collects necessary aircraft motion information, compares it with the required motion, obtains the deviation between the actual and ideal motion of the aircraft, then generates control signals by solving the control laws based on this deviation, and inputs these control signals to the relevant actuators, enabling the control surfaces to deflect in a specific manner, thereby achieving control of the aircraft's attitude and motion.",
        "safety_requirements": [
            "The system should check functional inputs under different states and operational phases to ensure the correctness of the control solution process in cases where the operational phase or state has not been considered.",
            "The system should check the control calculation results to ensure their correctness under conditions such as \"normal values, abnormal values, boundary values, and extreme maximum/minimum values\".",
            "The system should check the control solution process to ensure its correctness in case of a timeout (failure to return results within the specified time).",
            "The sequence and timing of system control should be coordinated with the hardware to ensure complete and consistent control conditions.",
            "For critical controls or actions, the system should have a timeout detection mechanism to handle situations where the hardware status fails to meet control requirements for an extended period."
        ]
    },
    {
        "requirement": "In the first glide phase, the system should control the aircraft to descend along the pre-set glide path from the five-mile final approach altitude to the end height of the first glide phase at 100 m, with longitudinal control tracking the glide path height and lateral control eliminating any side displacement of the aircraft relative to the airport axis. In the presence of crosswind, the aircraft shall have no sideslip angle.",
        "safety_requirements": [
            "The system should verify the correctness of functional inputs under different states and operational phases, ensuring the accuracy of the control solution process in scenarios such as 'operational phase not considered' or 'state not considered'.",
            "The system should check the control calculation results to ensure their correctness under conditions such as \"normal values, abnormal values, boundary values, maximum and minimum values\".",
            "The system shall ensure that the control sequence and timing for controlling the aircraft's glide path height and eliminating lateral offset are coordinated with the hardware, and that control conditions are complete and consistent.",
            "The system should check interface data with different redundancies to ensure the correctness of function implementation in cases of \"single redundancy failure, all redundancies failure (such as data anomaly, timing fault, communication fault, destination device fault, etc.)\".",
            "The system should clearly define the sensor's measurement range (upper and lower limits) and report a sensor fault when the measured value exceeds this range."
        ]
    },
    {
        "requirement": "The system should control the aircraft during the second glide segment to descend from the end height of the first glide segment (100m) to the flare height (17m), enabling the aircraft to glide in a straight sideslip manner.",
        "safety_requirements": [
            "The system should ensure that the control sequence and timing are coordinated with the hardware, and that control conditions are complete and consistent throughout the process of controlling the aircraft from the end of glide segment 1 at an altitude of 100 m to the flare altitude of 17 m.",
            "The system should check the control calculation results of the glide slope segment 2 to ensure the correctness of functional processing under conditions such as \"normal values, abnormal values, boundary values, maximum and minimum values\".",
            "After power recovery or activation of the runaway reset mechanism, the system should be able to return to normal operating status and continue controlling the aircraft to glide in a straight sideslip manner.",
            "The system should check functional inputs under different states and operational phases to ensure the correctness of functional processing in scenarios such as 'unconsidered operational phase' or 'unconsidered operational state'.",
            "The system should clearly define the sensor's measurement range (upper and lower limits) and report a sensor fault when the measured value exceeds this range."
        ]
    },
    {
        "requirement": "During the flare phase, the system should level off the aircraft's flight path angle so that the aircraft lands with a small descent rate. The lateral control mode is the same as during the latter part of the glide.",
        "safety_requirements": [
            "During the system's control phase in the leveling process, it should ensure that the control sequence and timing are coordinated with the hardware, and that control conditions are complete and consistent.",
            "The system shall check functional inputs under different states and operational phases to ensure that the flare control is handled correctly, regardless of the operational phase or state being considered.",
            "The system should check the control solution results during the leveling phase to ensure correct control processing under normal values, abnormal values, boundary values, maximum and minimum values, etc.",
            "When the system is in different redundancy states, the correctness of function implementation should be checked to ensure the correctness and consistency of leveling control under different redundancy states."
        ]
    },
    {
        "requirement": "The system should transition from the roll-out phase at a height of 1.5 meters to meet the conditions for switching to the landing rollout segment.",
        "safety_requirements": [
            "During the roll-to-level phase, the system should ensure that the sequence and timing of control are coordinated with the hardware, with complete and consistent control conditions, to guarantee a smooth transition from the roll-to-level height of 1.5m to the conditions required for switching to the landing rollout phase.",
            "During the roll-out phase of the system, the rate of parameter changes from a height of 1.5m during roll-out to landing rollout shall be monitored to ensure it remains within reasonable limits, and a strategy for handling data exceeding slope limits shall be clearly defined.",
            "During the roll-to-level phase of the system, the transition conditions between each pair of states in the software state space should be checked to ensure their correctness, especially in cases where the transition conditions are \"not set, always satisfied, or never satisfied.\"",
            "During the roll-out phase, the system should check the priority of two or more states with transition relationships to ensure the correctness of states and functions under conditions such as \"high-priority switching to low-priority\" or \"low-priority switching to high-priority\".",
            "During the roll-to-level phase, the system should perform timeout checks on critical control actions or operations to handle situations where hardware status fails to meet control requirements for an extended period, ensuring system safety."
        ]
    },
    {
        "requirement": "The system should enter the landing rollout phase after receiving a remote control touchdown signal, a fully compressed landing gear signal, or following 75 frames of abnormal link during the landing rollout phase, using the rudder and brakes to correct the aircraft's lateral deviation and yaw angle relative to the runway axis.",
        "safety_requirements": [
            "After power recovery or activation of the runaway reset mechanism, the system should be able to return to normal operating conditions, ensuring correct entry and execution of the landing rollout phase.",
            "The system should check the control calculation results to ensure that the rudder and brake control are properly handled under conditions such as \"normal values, abnormal values, boundary values, maximum and minimum values\", thereby correcting the lateral deviation distance and yaw angle of the aircraft relative to the runway axis.",
            "The system should check functional inputs under different states and operational phases to ensure correct handling of rudder and brake controls in cases such as 'unconsidered operational phase' or 'unconsidered operating state'.",
            "After a software power failure and restart during system state execution, the state after restart should be checked to ensure correct control handling of the rudder and brakes in cases such as 'state not restored' or 'error recovery'.",
            "The sequence and timing of system control should be coordinated with the hardware to ensure complete and consistent control conditions, and the control of rudder and brakes shall be effectively executed during the landing rollout phase."
        ]
    },
    {
        "requirement": "The system should control the aircraft to enter the descent phase after engine shutdown during the floating phase.",
        "safety_requirements": [
            "During the system's flare phase control of the aircraft entering the flare segment, it should ensure that the control sequence and timing are coordinated with the hardware, and that control conditions are complete and consistent.",
            "After power recovery or activation of the runaway reset mechanism, the system should be able to return to normal operating conditions, ensuring that control during the aircraft's descent phase remains unaffected.",
            "The system should have a timeout determination mechanism when controlling the aircraft to enter the descent phase, to handle situations where hardware status fails to meet control requirements for an extended period, ensuring safety.",
            "The system should check functional inputs under different states and operational phases to ensure the correctness of functional processing in scenarios such as \"operational phase not considered\" or \"state not considered\".",
            "The system should check the control solution results to ensure the correctness of functional processing under conditions such as \"normal values, abnormal values, boundary values, maximum and minimum values,\" preventing the execution of incorrect control commands."
        ]
    },
    {
        "requirement": "The remote control input corresponds to the rudder surface deflection command and throttle deflection command. The linear relationship between the rudder deflection and throttle command with respect to the remote control input is as follows: δz (-28º~+28º), δx (-20º~+20º), δy (-25º~+25º), δp (0~115%). The limit range is [-30°, +20°].",
        "safety_requirements": [
            "The system should check the control surface deflection commands and throttle position commands corresponding to the remote control inputs, ensuring the correctness of the control solution results under normal values, abnormal values, boundary values, and maximum/minimum extreme values.",
            "The system should ensure that the sequence and timing of control solutions are coordinated with the hardware, and that control conditions are complete and consistent.",
            "The system should clearly define the sensor's measurement range (upper and lower limits) and report a sensor fault when the measured value exceeds this range.",
            "The system should define reasonable ranges for the rate of parameter changes (upper and lower slope limits) and clearly specify the handling strategy for data exceeding these slope limits.",
            "The system should check functional inputs under different states and operational phases to ensure the correctness of the control solution process when operational phases and states are not considered."
        ]
    },
    {
        "requirement": "Elevator control (0-255), aileron control (0-255), rudder control (0-255), throttle control (0-255).",
        "safety_requirements": [
            "The system should check the rate of change of elevator, aileron, rudder, and throttle control inputs to ensure they are within reasonable limits (upper and lower slope thresholds), and clearly define handling strategies for data exceeding these slope limits.",
            "The system shall check the control resolution results of elevator, aileron, rudder, and throttle inputs to ensure correct functional processing under conditions such as \"normal values, abnormal values, boundary values, maximum and minimum values\".",
            "The system should check the operating status of different redundancies to ensure the correctness of function implementation in cases such as \"two or more redundancies are in different states\".",
            "The system should check the functional control resolution process under different states and operational phases to ensure the correctness of functional handling in cases such as 'operational phase not considered, operational status not considered'."
        ]
    },
    {
        "requirement": "By means of remote control switch commands, the aileron and elevator deflections are attenuated to two-thirds of the above values respectively, thereby changing the corresponding relationships to: δz (-20º~+20º), δx (-13º~+13º), δy (-25º~+25º), δp (0~115%).",
        "safety_requirements": [
            "The system should check the parameter variation rate of the remote control switch command to ensure it is within a reasonable range (upper and lower slope limits), and clearly define the handling strategy for data exceeding the slope limits.",
            "The system should check the control solution results after aileron and elevator deflection attenuation to ensure the correctness of functional processing under conditions such as \"normal values, abnormal values, boundary values, maximum and minimum values\".",
            "The system should clearly define the sensor's measurement range (upper and lower limits) and report a sensor fault when the measured value exceeds this range.",
            "The system should check functional inputs under different states and operating phases to ensure the correctness of functional processing in cases such as 'unconsidered operating phase, unconsidered operating state'.",
            "The system should check the values of continuous output data with different redundancy to ensure the correctness of function implementation in cases such as \"value inconsistency, i.e., the difference between values exceeds the specified threshold.\""
        ]
    },
    {
        "requirement": "Control range and accuracy requirements for elevator control (0–255), aileron control (0–255), rudder control (0–255), and throttle control (0–255)",
        "safety_requirements": [
            "The system should check the control solution results for elevator, aileron, rudder, and throttle inputs to ensure correct processing of control quantities under normal, abnormal, boundary, maximum, and minimum values.",
            "The system shall check the data bit value accuracy of control inputs for elevator, aileron, rudder, and throttle to ensure correct output of control quantities when the data bit value accuracy exceeds the required precision.",
            "The system shall check the data bit value accuracy of control inputs for elevator, aileron, rudder, and throttle to ensure correct output of control quantities when the data bit value accuracy is less than the required accuracy.",
            "The system shall check the control resolution process of the manipulations for elevator, aileron, rudder, and throttle to ensure correct processing of functional inputs under different states and operational phases, taking into account the effects of operational phases and states.",
            "The system shall ensure that the control sequence and timing of elevator, aileron, rudder, and throttle movements are coordinated with the hardware, with complete and consistent control conditions."
        ]
    },
    {
        "requirement": "When the aircraft is in the ground waiting phase, the elevator deflection command, aileron deflection command, and rudder deflection command are all set to 0°.",
        "safety_requirements": [
            "During the aircraft ground waiting phase, the system should evaluate the validity of crew operations to ensure that elevator deflection command, aileron deflection command, and rudder deflection command are all set to 0°, and any commands not applicable to the current scenario or status shall not be executed.",
            "During the aircraft ground waiting phase, the system should verify whether the received control commands are reasonable, ensuring that hazardous control commands or actions are not executed when the equipment status does not meet safety requirements.",
            "When the system is in the aircraft ground waiting phase, it should check the operating status of different redundancies to ensure that the functions for setting elevator deflection angle commands, aileron deflection angle commands, and rudder deflection angle commands to 0° are correctly implemented in cases where \"two or more redundancies are in different states\".",
            "When the system is in the ground waiting phase of the aircraft, it should check whether there is a transition relationship between two or more states to ensure the correctness of state execution and prevent the entry of abnormal states when the entry conditions are met simultaneously or during the state execution process."
        ]
    },
    {
        "requirement": "Implementation of five flight control modes: autonomous control, manual correction control, command control, attitude remote control, and control surface remote control.",
        "safety_requirements": [
            "The system should ensure the correct sequence relationships, constraint relationships, concurrency relationships, and combination relationships among the five flight control modes: autonomous control, manual correction control, command control, attitude remote control, and control surface remote control.",
            "The system should check functional inputs under different states and operational phases to ensure the correctness of the flight control mode's control solution process, even in cases where the operational phase or state has not been considered.",
            "The system should check the control solution results of the five flight control modes to ensure the correctness and reliability of the control solution results under normal values, abnormal values, boundary values, maximum and minimum values, etc.",
            "When the system controls the five flight control modes, it should ensure that the control sequence and timing are coordinated with the hardware, and that the control conditions are complete and consistent.",
            "The system should check the control solution process for the five flight control modes to ensure the correctness and timeliness of functional processing in cases such as timeout (failure to return results within the specified time) during the control solution process."
        ]
    },
    {
        "requirement": "Special handling during control mode switching",
        "safety_requirements": [
            "When switching control modes, the control solution results should be checked to ensure the correctness of functional processing under normal values, abnormal values, boundary values, maximum and minimum values.",
            "During the transition of system operating scenarios, all control functions should be evaluated to ensure they do not trigger potential hazards, and appropriate preventive measures should be taken.",
            "When switching control modes, the functional inputs should be checked according to the current status and operational phase to ensure correct handling of functions in cases where the operational phase or status has not been considered.",
            "Key controls or actions should have a timeout detection mechanism to handle situations where hardware status fails to meet control requirements for an extended period, ensuring system safety.",
            "If the redundancy switching time is too long, the software should be able to handle it correctly to prevent system function failure or safety risks."
        ]
    },
    {
        "requirement": "In the autonomous control mode, issuing any of the commands described in section 3.2.4 during the phase from (including) the climb phase 2 to (excluding) the completion of the route intercepting the final approach course will switch the system to command control mode.",
        "safety_requirements": [
            "During the phase from climb segment 2 (inclusive) to completion of the route before intercepting the final approach course (exclusive) under autonomous control mode, the system shall verify functional inputs to ensure that issuing any of the commands specified in section 3.2.4 under different states and operational phases can correctly transition into command control mode.",
            "The system should check the control solution results for commands issued during the phase from climb segment 2 (inclusive) to completion of the en-route track before intercepting the final approach leg (exclusive), ensuring the correctness of functional processing in cases where the solution results are normal values, abnormal values, boundary values, maximum or minimum values.",
            "The system shall ensure that the temporal relationships, constraint relationships, concurrency relationships, and combination relationships among functional points are correct during the phase from the climb segment 2 (inclusive) to the completion of the en-route transition to the final approach course (exclusive).",
            "During the phase from Climb Segment 2 (inclusive) to completion of the route turn to the base leg (exclusive), if a software power failure and restart occurs while the system is in autonomous control mode, the system status after restart should be checked to ensure correct status recovery, avoiding situations where the status is not recovered or incorrectly recovered.",
            "The system should verify the control solution process during the phase from climb segment 2 (inclusive) to completion of the en-route transition to the final approach course (exclusive), ensuring the correctness of functional handling in cases such as timeout in the control solution process (failure to return results within the specified time)."
        ]
    },
    {
        "requirement": "In command control mode, sending the \"Autonomous Control\" command can switch back to autonomous control mode.",
        "safety_requirements": [
            "When the system is in command control mode and receives a \"self-control\" command to switch back to autonomous control mode, it should check the current status to ensure the correctness of the mode transition.",
            "After a software power failure and restart, the system should check the status after restart to ensure correct recovery of the state, and trigger an early warning mechanism if the state is not recovered or recovered incorrectly.",
            "The system should check functional inputs under different states and operational phases to ensure the correctness of functional processing, especially in cases where the operational phase or state has not been considered.",
            "The system should check the interface data communication during software power failure and restart to ensure continuity of communication, and analyze the correctness of outputs under conditions such as communication interruption, reconnection, and failure to recover.",
            "The system should check the control solution results to ensure the correctness of functional processing under conditions such as normal values, abnormal values, boundary values, maximum and minimum values.",
            "When the system is performing control, it should ensure that the sequence and timing of control are coordinated with the hardware, and that control conditions are complete and consistent."
        ]
    },
    {
        "requirement": "Switching between autonomous control and command control does not alter the control law and does not require softening treatment.",
        "safety_requirements": [
            "When the system switches between autonomous control and command control, it should ensure that the control law remains unchanged and does not require softening treatment, in order to maintain control consistency and stability.",
            "When the system performs control switching, it should ensure that the sequence and timing of control are coordinated with the hardware, and that control conditions are complete and consistent to avoid control failure or anomalies.",
            "The system should be equipped with a timeout judgment mechanism when performing critical control or actions, in order to handle situations where the hardware status fails to meet control requirements for an extended period, ensuring the safety and reliability of the system.",
            "The system should check functional inputs under different states and operational phases to ensure the correctness and safety of functional processing in cases of 'unconsidered operational phases' or 'unconsidered operating states'.",
            "After the system performs hardware control, it should monitor and determine the consistency between the hardware status and the control requirements to ensure that the execution effect of the control command meets expectations.",
            "The system should check the control solution results to ensure the correctness and safety of functional processing under conditions such as \"normal values, abnormal values, boundary values, maximum and minimum values\"."
        ]
    },
    {
        "requirement": "In autonomous control mode, issuing the \"manual correction\" command switches to manual correction mode.",
        "safety_requirements": [
            "When the system is in autonomous control mode and receives a \"manual correction\" command, it should ensure that the state switches to manual correction mode, and after a software power failure restart, check the state after restart to ensure correct state recovery.",
            "When the system is in autonomous control mode and receives a \"manual correction\" command, it should check the control solution results to ensure the correctness of functional processing under conditions such as normal values, abnormal values, boundary values, maximum and minimum values.",
            "When the system is in autonomous control mode and receives a \"manual correction\" command, it should check the functional inputs to ensure the correctness of functional processing under different states and operational phases, avoiding situations where the operational phase or state is not considered.",
            "When the system in autonomous control mode receives a \"manual correction\" command, it should check the integrity of the interface data communication to ensure the correctness of outputs under conditions such as interruption of interface data communication after software power failure and restart, reconnection, or inability to recover.",
            "When the system is in autonomous control mode and receives a \"manual correction\" command, it should have a timeout detection mechanism to handle situations where the hardware status fails to meet control requirements for an extended period."
        ]
    },
    {
        "requirement": "When switching from manual correction to autonomous control, remove the manual correction amount from the control law; no smoothing treatment is required.",
        "safety_requirements": [
            "When the system manually corrects and switches to autonomous control, it should ensure that the process of removing the manual correction amount from the control law is coordinated with the hardware, and that the control conditions are complete and consistent before and after.",
            "When the system manually corrects and switches to autonomous control, it should check the control solution results to ensure the correctness of functional processing under conditions such as \"normal values, abnormal values, boundary values, maximum and minimum values.\"",
            "The system should have a timeout determination mechanism when manually switching to autonomous control, to handle situations where the hardware status fails to meet control requirements for an extended period.",
            "When manually correcting and switching to autonomous control under different system states and operation phases, the functional inputs should be checked to ensure correct function processing in cases such as 'operation phase not considered, system state not considered'.",
            "During the process of manually correcting and switching to autonomous control, if the software experiences a power failure and restarts, the system should check the status after restarting to ensure correct status recovery and avoid situations such as 'status not recovered' or 'incorrect recovery'."
        ]
    },
    {
        "requirement": "When switching from autonomous control to attitude remote control, the control law structure changes. It is necessary to soften the given attitude angle with a softening time of 2 seconds, and also to soften the throttle command with a softening time of 2 seconds.",
        "safety_requirements": [
            "When the system switches from autonomous control to attitude remote control, it should ensure that the control law structure change is coordinated with the hardware, and that control conditions are complete and consistent before and after the switch.",
            "When the system is in attitude remote control mode, it should ensure that the time for softening the given attitude angle and throttle command is 2 seconds, and after software power-off restart, check the status after restart to ensure correct status recovery.",
            "The system in attitude remote control mode should have a timeout detection mechanism to handle situations where the hardware status fails to meet control requirements for an extended period.",
            "The system shall check functional inputs under different states and operational phases to ensure the correctness of functional processing regardless of the operational phase or state being considered.",
            "When the system is in attitude remote control mode, it should check the control calculation results to ensure the correctness of functional processing under conditions such as normal values, abnormal values, boundary values, maximum and minimum values of the control calculation results."
        ]
    },
    {
        "requirement": "When switching from attitude remote control to autonomous control, the control law structure changes, and the given attitude angles need to be softened with a softening time of 2 seconds. If the aircraft is in cruise (climb 2, altitude hold, or descent), the target latitude and longitude will be changed from the designated point to the current position of the aircraft to guide it back to the original target point. The throttle command also needs to be softened with a softening time of 2 seconds.",
        "safety_requirements": [
            "When the system switches from attitude remote control to autonomous control, it should check the current status to ensure the correctness of state execution, especially after a software power failure and restart, the state can be correctly restored.",
            "When the system switches from attitude remote control to autonomous control, it should perform a softening process on the given attitude angle, with a softening time of 2 seconds, and ensure the correctness and consistency of functional inputs under different states and operational phases.",
            "When the system switches from attitude remote control to autonomous control, it should ensure that the control law structure changes in coordination with the hardware, that the control sequence and timing are correct, and that the control conditions are complete and consistent before and after the switch.",
            "When the system switches from attitude remote control to autonomous control, it should perform a timeout check on critical control actions to handle situations where hardware status fails to meet control requirements for an extended period.",
            "When the system switches from attitude remote control to autonomous control, it should check the transition conditions between each pair of states in the software state space to ensure the transition conditions are correctly set, avoiding situations where conditions are not set, always satisfied, or never satisfied."
        ]
    },
    {
        "requirement": "When switching from autonomous control to rudder surface remote control, it changes to direct rudder surface control, softens the rudder deflection command with a 2-second softening time, and also requires softening of the throttle command with a 2-second softening time.",
        "safety_requirements": [
            "When the system switches from autonomous control to servo remote control, it should ensure that after a software power-off restart, the state can be correctly restored, and check and ensure that the softening process of the servo deflection command and throttle command is functioning properly.",
            "When the system switches from autonomous control to control surface remote control, it should ensure that the control sequence and timing are coordinated with the hardware, and that control conditions are complete and consistent.",
            "When the system switches from autonomous control to control surface remote control, functional inputs shall be checked to ensure that during different operational phases and states, the softening process of control surface deflection commands and throttle commands is properly handled.",
            "When the system switches from autonomous control to rudder surface remote control, it should check the control calculation results of the rudder deflection command and throttle command to ensure the correctness of functional processing under normal values, abnormal values, boundary values, maximum and minimum extreme values, etc.",
            "The system should set a timeout judgment when switching from autonomous control to rudder surface remote control, to handle situations where hardware status fails to meet control requirements for an extended period, ensuring reliability of critical control or actions."
        ]
    },
    {
        "requirement": "The system should be capable of real-time acquisition and processing of the aircraft's motion information, including but not limited to data such as position, velocity, and attitude.",
        "safety_requirements": [
            "The system should make corresponding judgments and treatments when abnormal external factors (such as high sea conditions, severe weather conditions, etc.) occur, to ensure the accuracy of motion information acquisition and processing.",
            "The system should clearly define the sensor's measurement range (upper and lower limits) and report a sensor fault when the measured value exceeds the defined range.",
            "The system should implement timeout checks for critical controls or actions to handle situations where hardware status fails to meet control requirements for an extended period, and trigger the corresponding early warning mechanism.",
            "The system should check external devices (such as sensors, NVM, databases, other systems, etc.) to ensure the correctness of outputs when the source device is in a 'degraded, maintenance' or similar state.",
            "The sequence and timing of system control should be coordinated with the hardware to ensure complete and consistent control conditions, preventing control errors caused by timing issues."
        ]
    },
    {
        "requirement": "When switching from rudder surface remote control to autonomous control, specific operations are required, but the document does not provide detailed descriptions. It is recommended to further clarify the specific control law changes and softening processing.",
        "safety_requirements": [
            "When the system remotely switches control from manual to autonomous mode, it should ensure that the control sequence and timing are coordinated with the hardware, and that control conditions are complete and consistent.",
            "The system should have a timeout judgment mechanism when switching from remote control of the control surfaces to autonomous control, in order to handle situations where the hardware status fails to meet control requirements for an extended period.",
            "The system should check functional inputs under different states and operational phases to ensure the correctness of the control solution process, regardless of the operational phase or state being considered.",
            "When the system switches from remote control of the control surfaces to autonomous control, it should ensure that the parameter variation rate remains within a reasonable range (upper and lower slope limits), and clearly define the handling strategy for data exceeding these slope limits.",
            "The system shall ensure that the timing of output control status meets the scenario requirements when switching from rudder surface remote control to autonomous control."
        ]
    },
    {
        "requirement": "Sending the \"Autonomous Control\" command can realize this transition, exiting direct control surface control and softening the control surface deflection command with a softening time set to 2 seconds. If the aircraft is in cruise flight (climb phase 2, altitude hold, or descent) at this time, the target point will be changed from the original waypoint coordinates to the aircraft's current position coordinates to guide the aircraft back toward the original destination. Throttle command softening must also be performed with a softening time set to 2 seconds.",
        "safety_requirements": [
            "After a software power failure and restart, the system should check the status after restart to ensure correct status recovery and avoid situations such as \"status not recovered\" or \"incorrect recovery\" that may affect the execution of autonomous control commands.",
            "When the system experiences a power failure and restarts, it should check interface data communication to ensure the correctness and consistency of autonomous control command output in cases such as communication interruption, reconnection, and failure to recover.",
            "When the system executes autonomous control commands, it should ensure that the control sequence and timing are coordinated with the hardware, that control conditions are complete and consistent, and that control confusion or failure is avoided.",
            "The system should check functional inputs under different states and operational phases to ensure the correctness and safety of handling autonomous control commands in scenarios such as 'unconsidered operational phases' or 'unconsidered operating states'.",
            "During the redundancy switch-over process, the system shall ensure that the switching time does not exceed the specified time limit. The software shall correctly handle situations where the redundancy switch-over time is excessively long, avoiding any impact on the execution of autonomous control commands."
        ]
    },
    {
        "requirement": "Sending the \"rudder surface remote control\" command can achieve this switching, converting to direct rudder surface control, and smoothing the rudder deflection command with a smoothing time set to 2 seconds.",
        "safety_requirements": [
            "When the system issues a \"rudder surface remote control\" command, it should ensure that the control sequence and timing are coordinated with the hardware, and that control conditions are complete and consistent.",
            "The system should properly handle situations where the redundancy switching time is too long, ensuring the safety and reliability of the switching process.",
            "The system should be properly handled when the redundancy switching conditions are met but the switching fails, to ensure that the system can recover to a safe state.",
            "When the system is controlling the 'rudder surface remote control' command, it should have a timeout detection mechanism to handle situations where the hardware status fails to meet control requirements for an extended period, ensuring system safety.",
            "When the system performs control calculations for 'rudder surface remote control' commands under different states and operating phases, it should check the functional inputs to ensure correct functional processing in cases such as 'operating phase not considered, operating state not considered'."
        ]
    },
    {
        "requirement": "Sending the \"attitude remote control\" command can achieve this transition, exiting direct control surface control and softening the control surface deflection command with a softening time set to 2 seconds.",
        "safety_requirements": [
            "During the attitude remote control command switching process, the system should ensure that the redundancy switching time does not exceed 2 seconds. If this time is exceeded, an exception handling mechanism should be triggered.",
            "When the system switches to attitude remote control mode, it should ensure that the control sequence and timing are coordinated with the hardware, and perform status checks before and after the switch to ensure complete and consistent control conditions.",
            "If the redundancy switch condition is met but the switch fails, the system should immediately trigger the fault handling mechanism, record the fault log, and issue an alarm.",
            "When the system is in attitude remote control mode, if a software power failure and restart occur, the status after restart should be checked to ensure correct state recovery and avoid control errors caused by situations such as \"state not recovered\" or \"incorrect recovery.\"",
            "In attitude remote control mode, the system should implement a timeout judgment for critical control actions. If the hardware status does not meet the control requirements within the specified time, the timeout handling mechanism should be triggered, logging the event and issuing an alarm."
        ]
    },
    {
        "requirement": "The \"attitude remote control\" command can achieve this switching, softening the given attitude angle with a softening time set to 2 seconds. Throttle command softening is required, with a softening time set to 2 seconds.",
        "safety_requirements": [
            "After a power failure and subsequent restart of the system software, the system should check the post-restart status to ensure the correct execution of attitude remote control commands in scenarios such as 'status not restored' and 'error recovery'.",
            "The system should properly handle situations where the redundancy switching time is too long, to ensure that the execution of attitude remote control commands is not affected.",
            "The system should properly handle situations where the redundancy switching condition is met but the switching fails, to ensure the correct execution of attitude remote control commands.",
            "When the system is controlling attitude remote commands, it should ensure that the control sequence and timing are coordinated with the hardware, and that control conditions are complete and consistent.",
            "The system should check the input of attitude remote control commands under different states and working phases to ensure the correctness of command processing in cases such as \"working phase not considered, working state not considered\"."
        ]
    },
    {
        "requirement": "Sending the \"rudder surface remote control\" command can achieve this switch, softening the rudder deflection command with a softening time set to 2 seconds. Throttle command softening is required, with the softening time set to 2 seconds.",
        "safety_requirements": [
            "When the system switches rudder surface remote control commands, it should ensure the softening time is set to 2 seconds and that the software can properly handle situations where the redundancy switching time is too long, ensuring switching reliability.",
            "When the system switches to rudder surface remote control commands, it should ensure that the control sequence and timing are coordinated with the hardware, control conditions are complete and consistent before and after, to prevent control confusion.",
            "The system shall ensure successful redundancy switching when the switching conditions are met. If the switching fails, the software shall be able to handle it correctly and trigger the corresponding fault handling mechanism.",
            "During the process of switching remote control commands for the control surfaces, if a power failure or restart occurs in the software, the system status after restart should be checked to ensure correct state recovery and prevent control anomalies caused by incomplete or incorrect recovery.",
            "The system should check the control resolution process of rudder surface remote control commands and throttle commands under different states and operational phases, ensuring the correctness and integrity of input data to prevent functional processing errors caused by neglecting operational phases or states."
        ]
    },
    {
        "requirement": "Sending the attitude remote control command can achieve this switch, softening the given attitude angle for 2 seconds. The throttle command needs to be softened for 2 seconds.",
        "safety_requirements": [
            "After a power failure and subsequent restart of the system software, the system should check the status after restart to ensure that the softening time for attitude remote control commands and throttle commands remains 2 seconds in cases such as 'status not recovered' and 'error recovery', and that the status is executed correctly.",
            "The system should properly handle situations where the redundancy switching time is too long, ensuring that the softening time for attitude remote control commands and throttle commands remains 2 seconds and that the system status is normal.",
            "The system shall properly handle the situation when the redundancy switching condition is met but the switch fails, ensuring that the softening time for attitude remote control commands and throttle commands remains 2 seconds and the system status is normal.",
            "When the system is under control, it should ensure that the control sequence and timing are coordinated with the hardware, control conditions are complete and consistent, and the softening time for attitude remote control commands and throttle commands is correctly executed.",
            "The system shall check functional inputs under different states and operational phases to ensure that the softening time for attitude remote control commands and throttle commands remains 2 seconds, and functional processing is correct, even in cases such as 'operational phase not considered' or 'operational state not considered'."
        ]
    },
    {
        "requirement": "Sending the \"rudder surface remote control\" command can achieve this switching, softening the rudder deflection command with a softening time set to 2 seconds.",
        "safety_requirements": [
            "The system should properly handle situations where the redundancy switching time is too long and ensure that the rudder deflection command smoothing time is set to 2 seconds.",
            "When the system's redundancy switching conditions are met, if redundancy switching fails, it should be properly handled and ensure that the rudder deflection command softening time is set to 2 seconds.",
            "When the system performs remote control switching of the control surfaces, it should ensure that the control sequence and timing are coordinated with the hardware, and that the control conditions are complete and consistent.",
            "The system should have a timeout detection mechanism when performing critical control or actions, to handle situations where the hardware status fails to meet control requirements for an extended period, ensuring the rudder deflection command softening time is set to 2 seconds.",
            "During the remote control switching process of the system's control surfaces, if a power failure and subsequent software restart occur, the system status after restart should be checked to ensure correct state execution in cases such as 'status not recovered' or 'error recovery', and to ensure the softening time for rudder deflection commands is set to 2 seconds."
        ]
    },
    {
        "requirement": "Sending the \"rudder surface remote control\" command can achieve this switch, softening the rudder deflection command with a softening time set to 2 seconds.",
        "safety_requirements": [
            "The system should properly handle situations where the redundancy switching time is too long and ensure that the rudder deflection command smoothing time is set to 2 seconds.",
            "The system shall properly handle the situation and trigger the fault alarm mechanism when the redundancy switching condition is met but the switch fails.",
            "When the system performs remote control switching of the control surfaces, it should ensure that the control sequence and timing are coordinated with the hardware, and that the control conditions are complete and consistent.",
            "The system should have a timeout detection mechanism when performing critical control or operations (such as remote switching of control surfaces) to handle situations where hardware status fails to meet control requirements for an extended period.",
            "During the remote control switching process of the system's control surfaces, if a power failure and subsequent restart occur in the software, the system status after restart should be checked to ensure the correctness of state execution in situations such as 'status not restored' or 'error recovery'."
        ]
    },
    {
        "requirement": "Throttle command smoothing is required, with a smoothing time set to 2 seconds.",
        "safety_requirements": [
            "When the system is performing throttle command smoothing, it should ensure that the control sequence and timing are coordinated with the hardware, and that control conditions are complete and consistent.",
            "The system should have a timeout detection mechanism when performing throttle command smoothing, to handle situations where the hardware status fails to meet control requirements for an extended period.",
            "When the system is performing throttle command smoothing, it should ensure that the software can properly handle situations where the redundancy switching time is too long, to avoid affecting system stability.",
            "When the system is performing throttle command softening, if the software experiences a power failure and restarts, the status after restart should be checked to ensure correct state execution in cases such as \"status not restored\" or \"error recovery\".",
            "The system should have a fault detection mechanism with false alarm prevention during throttle command smoothing, and ensure that the false alarm prevention meets the real-time requirements for alarm handling."
        ]
    },
    {
        "requirement": "The system should be capable of adjusting control strategies and parameters according to different flight phases, ensuring the stability and safety of the aircraft in each phase.",
        "safety_requirements": [
            "When the system adjusts control strategies and parameters during different flight phases, it should ensure that the control sequence and timing are coordinated with the hardware, and that control conditions are complete and consistent.",
            "The system should check functional inputs when adjusting control strategies and parameters during different flight phases, ensuring correct functional processing even if the operating phase or status is not considered.",
            "During the transition of the system through different flight phases, potential hazards caused by various control functions should be examined, and corresponding safety measures must be taken.",
            "The system should check the control calculation results to ensure that the functional processing is correct when the control calculation results are normal values, abnormal values, boundary values, maximum or minimum values.",
            "The system should have a timeout judgment mechanism when performing critical control or actions, to handle situations where the hardware status fails to meet control requirements for an extended period."
        ]
    },
    {
        "requirement": "The softening priority during control mode switching is higher than that of phase transition; therefore, if a phase transition occurs during mode switching, only the softening for mode switching will be performed.",
        "safety_requirements": [
            "When the system switches control modes, it should prioritize smoothing the mode transition, ensuring the correctness of states and functions when switching from high priority to low priority or from low priority to high priority.",
            "When the system switches control modes, it should check the function inputs to ensure the correctness of function processing regardless of the operational phase or status.",
            "The system should ensure that the control sequence and timing are coordinated with the hardware during control mode transitions, with complete and consistent control conditions.",
            "When the conditions for redundant switching are met, if the redundant switching fails, the software shall handle it correctly to ensure the system's safety and stability.",
            "During the execution of system states, if a power failure or restart occurs in the software, the state after restart should be checked to ensure correct state recovery, avoiding situations where the state is not recovered or incorrectly recovered."
        ]
    },
    {
        "requirement": "When switching from command control to autonomous control, if the aircraft is in altitude hold mode, exit altitude hold; if the aircraft is in speed hold mode, exit speed hold; if the aircraft is in left turn, right turn, figure-eight flight, or flying toward a temporary waypoint state, resume the route and perform normal navigation.",
        "safety_requirements": [
            "When the system switches from command control to autonomous control, it should check the current operating status and phase to ensure that the appropriate exit or recovery operations are correctly performed under different conditions.",
            "During the execution of the system state, if a power failure or restart occurs in the software, the state after restarting should be checked to ensure correct state recovery, avoiding situations where the state is not recovered or incorrectly recovered.",
            "The system should check the control calculation results when switching from command control to autonomous control, ensuring the correctness of functional processing in cases where the calculation results are normal values, abnormal values, boundary values, maximum or minimum values.",
            "The system shall check interface data communication during software power failure and restart to ensure the correctness of outputs in cases of interruption, reconnection, and unrecoverable conditions.",
            "The system should check the control solution process when switching from command control to autonomous control, ensuring the correctness of functional processing in cases such as timeout (failure to return results within the specified time)."
        ]
    },
    {
        "requirement": "When switching from autonomous or command control to remote control, if the navigation solution flag indicates no navigation solution (0), then the current position and target point will be updated to runway points 6 and 7. When switching from command control to remote control, lateral control will be set to normal navigation, longitudinal control will be set to normal, and speed control will be set to normal. If lateral control is flying towards a temporary waypoint, the target point will be reverted to the original target point.",
        "safety_requirements": [
            "When the system autonomously or command-switches to remote control, it should check the navigation solution flag. Ensure that in the case of no navigation solution (0), the from and to points are updated to runway 6 and 7 points, lateral control is set to normal navigation, longitudinal control is set to normal, and speed hold control is set to normal.",
            "When the system switches command control to remote control, if lateral control is flying toward a temporary waypoint, it should ensure that the arrival point is updated back to the original arrival point, and the control solution result is correct.",
            "The system should check function inputs when performing functional control calculations under different states and operational phases, to ensure correct function processing even when the operational phase or state is not considered.",
            "During the execution of the system status, if a power failure or restart occurs in the software, the status after the restart should be checked to ensure correct status recovery and to avoid situations where the status is not recovered or incorrectly recovered.",
            "The system should check the control calculation results to ensure correct functional handling under normal values, abnormal values, boundary values, maximum and minimum values, etc.",
            "The system shall check interface data communication during software power failure and restart to ensure correct output in cases of interruption, reconnection, or unrecoverable conditions.",
            "During the system's control calculation process, the calculation process should be monitored to ensure correct functional handling in cases such as timeouts (failure to return results within the specified time)."
        ]
    },
    {
        "requirement": "To smooth the data and prevent sudden jumps, the data needs to be softened (faded in and out).",
        "safety_requirements": [
            "The system shall ensure data correctness and prevent data loss or overflow when the receiving buffer capacity is less than the interface data volume during the inspection of the interface data receiving buffer.",
            "The system should have a clear handling strategy when output data exceeds limits, such as truncation or outputting according to safety values, to ensure data reliability.",
            "When the system checks data bits with discrete value ranges in the interface data, it should ensure the correctness of the output data when the data values change abruptly between two consecutive cycles, preventing sudden data jumps.",
            "When the system is performing data smoothing, it should check whether division by zero occurs during the data processing to prevent system exceptions caused by division-by-zero errors.",
            "The system should ensure that the rate of data change remains within a reasonable range (upper and lower slope limits). There should be a clear handling strategy for data exceeding these slope limits to prevent abrupt data changes from affecting system stability."
        ]
    },
    {
        "requirement": "During the softening time, a weighted processing of both the old value and the new value is performed to obtain the softened value: softened value = old value × (1 - t / softening time limit) + new value × t / softening time limit",
        "safety_requirements": [
            "During the system's softening time, the transition conditions between every two states in the software status space should be checked to ensure the correctness of state transitions under conditions such as 'not set', 'always satisfied', 'never satisfied', etc.",
            "The system should check the duration of interface data values during the softening time to ensure correctness of the output when the duration is \"greater than the specified time, less than the specified time\", etc.",
            "The system should check the cycle of interface data during the softening time to ensure the correctness of outputs under conditions such as input value cycles being \"greater than the specified cycle, less than the specified cycle, maximum and minimum values.\"",
            "During the softening time of the system, the control calculation results should be checked to ensure the correctness of functional processing under conditions such as 'normal values, abnormal values, boundary values, maximum and minimum values'.",
            "During the system's softening time, the rate of parameter change should be checked to ensure it is within reasonable limits (upper and lower slope limits), and a clear strategy for handling out-of-slope data should be defined."
        ]
    },
    {
        "requirement": "The softening method for initial values of the integrator is specifically used to provide softened attitude angles (Jg, Yg, yg) and throttle command during phase switching in control laws that include an integrator.",
        "safety_requirements": [
            "The system checks the transition conditions between pairs of states in the software state space to ensure the correctness of state transitions under conditions such as \"not set,\" \"always satisfied,\" and \"never satisfied.\"",
            "The system checks the control resolution process of functions under different states and working phases to ensure the correctness of function handling in cases such as 'unconsidered working phase' or 'unconsidered working state'.",
            "The system checks the state entry conditions to ensure the correctness of state execution under conditions such as 'satisfied, not satisfied, satisfied again' during the state execution process.",
            "The system checks the control resolution results of functions to ensure the correctness of functional processing in cases such as \"normal values, abnormal values, boundary values, maximum and minimum values\".",
            "The system checks functions with different priorities under two or more states that have transition relationships, ensuring the correctness of states and functions in scenarios such as 'high-priority switching to low-priority' and 'low-priority switching to high-priority'.",
            "When the system switches to a phase with an integrator in the control law, the softening method for the initial value of the integrator should be checked to ensure that the softening process for the given attitude angles (Jg, Yg, yg) and throttle command is correct and error-free."
        ]
    },
    {
        "requirement": "When switching to a control law with an integrator, in order to achieve a smooth transition, the corresponding reference attitude angle Jg or Yg or yg should not simply set the initial value of the integrator in the next stage to zero. Instead, the initial value of the integrator is determined by calculating based on setting the reference attitude angle of the next stage equal to that of the previous stage.",
        "safety_requirements": [
            "When the system switches to a control law with an integrator, functional inputs should be checked to ensure the correctness of the control solution process under different states and operational phases, especially in cases where \"operational phases and operational states are not considered.\"",
            "When there is no transition relationship between two or more states in the system, the entry conditions of these states should be checked to ensure the correctness of state execution under situations such as \"simultaneously meeting entry conditions\" or \"meeting entry conditions during state execution.\"",
            "The system should check the control solution results after switching control laws to ensure the correctness of functional processing under conditions such as \"normal values, abnormal values, boundary values, maximum and minimum values\".",
            "The system checks functions with different priorities under two or more states with transition relationships, ensuring the correctness of states and functions in cases such as \"high priority switching to low priority\" and \"low priority switching to high priority\".",
            "The system shall check the state entry conditions when the state entry conditions change, to ensure the correctness of state execution under conditions such as 'satisfied, not satisfied, satisfied again' during state execution.",
            "When the system switches to a control law with an integrator, it should ensure that the desired attitude angle of the next phase equals that of the previous phase in order to calculate the initial value of the integrator and ensure a smooth transition."
        ]
    },
    {
        "requirement": "At the transition from the takeoff departure segment to climb segment 1, let Jg be the calculated reference pitch angle at the moment before switching from the takeoff departure segment to climb segment 1, and let x be the initial value of the airspeed integrator. Then x is calculated as follows: x = Jg - Kv [nk (k) - ng (k)] / K vI",
        "safety_requirements": [
            "The system shall check the functional inputs when switching between the takeoff departure segment and climb phase 1, to ensure that the calculated reference pitch angle Jg and the initial value x of the airspeed integrator are correct, without considering the operational phase and working status.",
            "The system should check the calculated given pitch angle Jg and the initial value x of the airspeed integrator to ensure that the calculation results are correct under normal values, abnormal values, boundary values, maximum and minimum values, and other conditions.",
            "The system should check the data bit value accuracy of the calculated given pitch angle Jg and the initial value x of the airspeed integrator, ensuring that the calculation results are correct when the data bit value accuracy is greater than the required precision.",
            "The system should check the value accuracy of the data bits for the calculated pitch angle Jg and the initial value x of the airspeed integrator, ensuring that the calculation results are correct when the data bit value accuracy is less than the required precision.",
            "When the system switches between the takeoff departure segment and climb segment 1, it should check two or more states with transition relationships and functions set with different priorities, ensuring correctness of states and functions when switching from high priority to low priority, or from low priority to high priority."
        ]
    },
    {
        "requirement": "Softening of the two altitude type data during high-type switching.",
        "safety_requirements": [
            "The system should check the equivalence classes of interface data when switching between high-level types, to ensure the correctness of outputs when data values switch between different output equivalence classes.",
            "When the system switches between highly typed categories, it should check the equivalence classes of interface data to ensure the correctness of outputs when data values switch between different equivalence classes.",
            "The system should have a proper handling strategy when the redundancy switching time is too long, to ensure data continuity and consistency.",
            "When the system switches between high-type categories, it should check whether the parameter change rate is within a reasonable range (upper and lower slope limits) and clearly define the handling strategy for out-of-slope data.",
            "The system should set priorities among two or more states with transition relationships and verify the correctness of states and functions when switching between high and low priority levels, including high-to-low and low-to-high transitions."
        ]
    },
    {
        "requirement": "Softening of rudder deflection command and throttle deflection command during switching with remote control of control surfaces.",
        "safety_requirements": [
            "When the system switches to remote control of the control surfaces, it should ensure that the sequence and timing of control are coordinated with the hardware, with complete and consistent control conditions.",
            "The system should have a timeout detection mechanism when switching to remote rudder control, to handle situations where the hardware status fails to meet control requirements for an extended period.",
            "When the system switches to rudder surface remote control, it should ensure that the rate of change of the rudder deflection command and the throttle deflection command remains within a reasonable range. There should be clear handling strategies when exceeding the upper or lower slope limits.",
            "When the conditions for redundancy switching are met, if redundancy switching fails, there should be a proper handling mechanism to ensure system safety.",
            "The system should have a proper handling mechanism to ensure safety when the redundancy switching time is too long."
        ]
    },
    {
        "requirement": "When the flight altitude is greater than 150m, the landing gear compressed signal is false, and the flight phase is not greater than the descent phase, the stage transition is performed according to the DH value.",
        "safety_requirements": [
            "The system should verify the correctness of functional inputs under different states and operational phases, ensuring that the processing results for phase transitions based on DH values are correct even when the operational phase or state is not considered.",
            "The system should check the control resolution results for phase transitions based on DH values to ensure the correctness of functional processing under conditions such as \"normal values, abnormal values, boundary values, maximum and minimum values\".",
            "The system should check functions with different priorities when in two or more states with transition relationships, to ensure the correctness of states and functions under scenarios such as \"high priority switching to low priority\" and \"low priority switching to high priority\".",
            "The system should clearly define the sensor acquisition range (upper and lower limits) and report a sensor fault when the sensor value exceeds the acquisition range.",
            "When the system transitions between operational states, the values of the functional interface data should be checked to ensure correct phase transition output based on the DH value in cases where the value changes or the value range changes."
        ]
    },
    {
        "requirement": "Longitudinal control law: δz = KJ (J - Jg) + Kwz · wz",
        "safety_requirements": [
            "The system shall check the control solution results of the longitudinal control law δz = KJ (J-Jg) + Kwz · wz to ensure correct handling under conditions such as normal values, abnormal values, boundary values, and maximum/minimum values.",
            "The system should check the input of the longitudinal control law δz = KJ (J-Jg) + Kwz · wz under different states and operational phases, ensuring correct handling in cases such as 'operational phase not considered, state not considered'.",
            "When the system is under longitudinal control law δz = KJ (J-Jg) + Kwz · wz, it should ensure that the control sequence and timing are coordinated with the hardware, and that control conditions are complete and consistent.",
            "The system shall ensure the correct timing, constraint, concurrency, and combination relationships among the functional points of the longitudinal control law δz = KJ (J-Jg) + Kwz · wz.",
            "The system should check the control solution process of the longitudinal control law δz = KJ (J-Jg) + Kwz · wz to ensure correct handling in cases such as timeout (results not returned within the specified time)."
        ]
    },
    {
        "requirement": "Softening of the given attitude angles (Jg, Yg, yg) during autonomous transition to attitude remote control and from attitude remote control back to autonomous mode.",
        "safety_requirements": [
            "When the system autonomously switches to attitude remote control or switches from attitude remote control to autonomous mode, it should check the transition conditions between each pair of states in the software state space, ensuring the correctness of state transitions under conditions such as \"not set\", \"always satisfied\", and \"never satisfied\".",
            "When the system transitions between operational states, the values of the functional interface data should be checked to ensure that the softening process results for the given attitude angles (Jg, Yg, yg) are correct under conditions where \"the value changes or the value range changes\".",
            "The system should check the functions with assigned priorities under two or more states that have transition relationships, ensuring the correctness of states and functions when switching between high and low priority levels, such as 'high priority overriding low priority' or 'low priority switching to high priority'.",
            "The system should check the control solution process of functions under different states and working phases to ensure the correctness of function handling in cases such as 'working phase not considered' or 'working state not considered'.",
            "The system should check the state entry conditions to ensure the correctness of state execution in cases where the entry conditions are \"satisfied, not satisfied, satisfied again,\" etc., during the state execution process."
        ]
    },
    {
        "requirement": "Smoothing of the given attitude angles (Jg, Yg, yg) during the transition to the landing rollout phase, and smoothing of the given attitude angles (Yg, yg) and throttle deflection command during transitions in other phases.",
        "safety_requirements": [
            "During the system's transition to the landing roll phase, the softening process of the given attitude angles (Jg, Yg, yg) should be checked to ensure the correctness of state transition conditions, including cases such as 'not set, always satisfied, not achievable'.",
            "When the system transitions to other phases, it should check the smoothing process of the given attitude angles (Yg, yg) and throttle deflection command, ensuring the correctness of state transition conditions, including cases such as 'not set, always satisfied, not satisfiable'.",
            "When the system is in the landing rollout phase, it should check the correctness of the state entry conditions to ensure the correct execution of states under conditions such as \"satisfied,\" \"not satisfied,\" and \"satisfied again\" during state execution.",
            "The system should check the correctness of state entry conditions when transitioning between other states, ensuring the correct execution of states under conditions such as 'satisfied, not satisfied, satisfied again' during state execution.",
            "When the system transitions between operating states, the values of the functional interface data should be checked to ensure that the given attitude angles (Jg, Yg, yg) and the throttle command smoothing results are correct in cases where the value changes or the value range changes.",
            "The system should check the software status corresponding to the system status, operation phase, or system task, ensuring the correctness of status execution in cases such as 'no corresponding software status exists' or 'software and system statuses are inconsistent'.",
            "The system should check the operating status of different redundancies to ensure the correctness of the attitude angle (Jg, Yg, yg) and throttle deflection command smoothing function implementation when two or more redundancies are in different states."
        ]
    },
    {
        "requirement": "Softening of the given pitch angle during phase switching in longitudinal control law with integrator.",
        "safety_requirements": [
            "When the system switches to the phase where the longitudinal control law includes an integrator, it should ensure that the sequence and timing of control are coordinated with the hardware, and that control conditions are complete and consistent.",
            "During the system switching phase, a reasonableness check on the variation rate of the pitch angle softening parameters shall be performed to ensure the slope remains within an acceptable range, and a handling strategy for over-slope data shall be clearly defined.",
            "During the system switching phase, the timing of output control status should be ensured to meet the requirements of the scenario, avoiding control errors caused by improper timing.",
            "The system should check the transition conditions between every two states in the software state space to ensure the correctness of state transitions under conditions such as \"transition condition not set, always satisfied, never satisfied\", etc.",
            "The system should check functional inputs under different states and operational phases to ensure the correctness of functional processing in scenarios such as 'unconsidered operational phases' or 'unconsidered operating states'."
        ]
    },
    {
        "requirement": "Softening of the throttle deflection command during transition from climbing to altitude hold and from descending to altitude hold. The initial value of the throttle controller integrator is directly set to 100.0 when transitioning from climbing to altitude hold, and directly set to 50.0 when transitioning from descending to altitude hold.",
        "safety_requirements": [
            "During the transition from climbing to altitude hold and from descending to altitude hold, the system should ensure that the parameter variation rate during the softening process of throttle deflection command remains within a reasonable range, and there should be a clear handling strategy for over-slope data.",
            "When the system transitions from climbing to fixed altitude or descending to fixed altitude, it should check the transition conditions between every two states in the software state space to ensure the correctness of the transition conditions, including cases such as \"not set\", \"always satisfied\", and \"never satisfied\".",
            "When the system transitions between operational states, the values of the functional interface data should be checked to ensure that the initial value assignment for the throttle valve control integrator is correct in cases where the value or the value range changes.",
            "The system should check the control calculation results during transitions from climbing to altitude hold and from descending to altitude hold, ensuring the correctness of functional processing under conditions such as \"normal values, abnormal values, boundary values, maximum and minimum values\".",
            "When the system controls the transition from climbing to fixed altitude and from descending to fixed altitude, it should ensure that the control sequence and timing are coordinated with the hardware, and the control conditions should be complete and consistent."
        ]
    },
    {
        "requirement": "When switching from attitude remote control to autonomous mode, the longitudinal control integrator is reset to zero. If in altitude hold phase, the throttle control integrator initial value is directly set to 50.0.",
        "safety_requirements": [
            "When the system switches from attitude remote control to autonomous mode, it should verify the correctness of longitudinal control integrator reset, ensuring that during different operational phases and states, the control computation results—whether normal values, abnormal values, boundary values, or extreme maximum/minimum values—are handled correctly by the function.",
            "During the altitude hold phase, the system should verify the correctness of the throttle control integrator's initial value directly set to 50.0, ensuring that the control computation process is coordinated with the hardware under different operating phases and conditions, and that the control criteria are complete and consistent throughout.",
            "The system should perform timeout checks during the control process to ensure timely handling and triggering of corresponding early warning mechanisms when hardware status fails to meet control requirements for an extended period.",
            "When the system switches from attitude remote control to autonomous mode, if a software power failure and restart occur, the status recovery after restart should be checked to ensure that the function is properly handled when the status is not recovered or incorrectly recovered."
        ]
    },
    {
        "requirement": "The softening of the throttle command during the transition from climbing to altitude hold is performed using two simultaneous softening methods, whereas the softening of the throttle command during the transition from descending to altitude hold employs only the integrator initial value softening method.",
        "safety_requirements": [
            "The system should check the method of softening the throttle command during the transition from climb to constant altitude, ensuring correctness when both softening methods are applied simultaneously under state transition conditions, especially in cases where the transition condition is 'not set', 'always satisfied', or 'never satisfied'.",
            "The system should check the softening method of the throttle valve deflection command during the transition from descent to fixed altitude, ensuring correctness when only using the integrator initial value softening method under state transition conditions, particularly in cases where the transfer condition is 'not set, always satisfied, or not satisfied'.",
            "The system shall ensure that during the softening process of the throttle deflection command when transitioning from climbing to altitude hold and descending to altitude hold, the parameter change rate remains within a reasonable range (upper and lower slope limits), and clearly define the handling strategy for data exceeding these slope limits.",
            "The system sets different priorities for functions during the softening process of elevator deflection commands when transitioning from climbing to altitude hold and descending to altitude hold, ensuring correct status and functionality under conditions such as switching from high priority to low priority or low priority to high priority.",
            "The system should check the operating status of different redundancies to ensure the correctness of the softening function for throttle deflection commands during altitude climbing to level-off and descending to level-off transitions, especially in cases such as 'two or more redundancies being in different states'."
        ]
    },
    {
        "requirement": "In order to suppress sensor noise and external interference with the sensor output data, it is necessary to perform filtering on some of the input sensor data.",
        "safety_requirements": [
            "The system should perform filtering and debouncing when acquiring sensor data to ensure interference data is shielded and data accuracy is improved.",
            "When the system performs filtering, it should ensure that the real-time performance of the processed data is not affected, or that any impact remains within an acceptable range.",
            "The system should check external devices (such as sensors, NVM, databases, other systems, etc.), analyze the correctness of outputs when source devices are in conditions such as 'degraded' or 'maintenance', and ensure that the data after filtering remains reliable."
        ]
    },
    {
        "requirement": "A prefilter is used to filter the input data. The cutoff frequency wc of the filter is transformed using the Tustin bilinear transformation to obtain the filtering formula y(k) = a0y(k-1) + a1[x(k)+x(k-1)], where a0 and a1 take different values depending on wc.",
        "safety_requirements": [
            "The system should use a front-end filter to perform filtering and debouncing when acquiring input data, in order to eliminate interference data and ensure the accuracy and reliability of the input data.",
            "The system should check the input data of the filter under different states and operational phases to ensure the correctness and consistency of the filtering process in cases where the operational phase or state has not been considered.",
            "After the system completes filtering processing, it should ensure that real-time performance is not affected, or that any impact remains within an acceptable range, to meet the system's real-time requirements."
        ]
    },
    {
        "requirement": "Different wc are selected for different sensor data, and the corresponding a0 and a1 also vary; see Table 3-21 for specific parameters.",
        "safety_requirements": [
            "The system shall clearly define the acquisition range (upper and lower limits) of the sensor, and report a sensor fault when the sensor data exceeds the acquisition range.",
            "The system should perform accuracy checks on the wc, a0, and a1 parameters of different sensor data to ensure correct output results when the data bit value accuracy is greater than or equal to the required accuracy.",
            "The system should perform accuracy checks on the wc, a0, and a1 parameters of different sensor data to ensure correct output results when the data bit value accuracy is less than the required accuracy.",
            "The system should check the control solution results to ensure correct functional handling under normal values, abnormal values, boundary values, maximum and minimum values, etc.",
            "The system shall perform consistency checks on the same input data received through different redundancy channels to ensure correct functionality when data values are inconsistent."
        ]
    },
    {
        "requirement": "Compensate the vertical speed of the radio altimeter and the atmospheric machine using the inertial navigation vertical acceleration to improve their accuracy.",
        "safety_requirements": [
            "When the system is in different redundancy states and operating conditions, the correctness of the inertial navigation vertical acceleration compensation function for the radio altimeter's climb/descent rate and the air data computer's climb/descent rate should be checked to ensure the accuracy of the output results.",
            "The system should monitor the vertical acceleration variation rate of the inertial navigation in real time to ensure it remains within a reasonable range. When exceeding either the upper or lower slope limit, a clear handling strategy should be implemented and a warning mechanism triggered.",
            "The system should check the interface data for continuous value range of inertial navigation vertical acceleration data bits, analyze cases where the difference between data values across multiple cycles exceeds the specified threshold, and ensure the correctness of the output results.",
            "The system should check the value accuracy of the inertial navigation vertical acceleration data bits at the interface to ensure that the accuracy meets the requirements, and trigger a warning mechanism when the accuracy exceeds the required limits."
        ]
    },
    {
        "requirement": "Lateral control law: δx = KY · (Y - Yg)",
        "safety_requirements": [
            "When the system performs lateral control law calculations (δx = KY · (Y - Yg)), it should ensure that the control sequence and timing are coordinated with the hardware, and that control conditions are complete and consistent.",
            "The system should check the results of lateral control law calculations to ensure the correctness of control calculation results under conditions such as \"normal values, abnormal values, boundary values, maximum and minimum values\".",
            "The system shall ensure the correctness of timing relationships, constraint relationships, concurrency relationships, and combination relationships between the lateral control laws and the control logic of other functional points.",
            "When the system performs lateral control law calculations under different states and operating phases, the functional inputs should be checked to ensure the correctness of the control solution process in cases such as 'operating phase not considered, operating state not considered'.",
            "The system should ensure that the parameter variation rates in the lateral control law calculations remain within reasonable ranges (upper and lower slope limits) and clearly define handling strategies for data exceeding these slope limits."
        ]
    },
    {
        "requirement": "The method of implementing combined filtering includes reading inertial navigation vertical acceleration data and applying it to compensation calculations for radio altimeter and atmospheric engine lift speed.",
        "safety_requirements": [
            "When the system reads vertical acceleration data from the inertial navigation, it should check the values of the same input data received through different redundancy channels to ensure the correctness and reliability of the combined filtering method when the values are inconsistent.",
            "The system should perform filtering and anti-jitter processing when reading the INS vertical acceleration data, shielding interference data to ensure the accuracy and stability of the data.",
            "After the system performs combined filtering, it should ensure that real-time performance is not affected, or the impact remains within an acceptable range, to guarantee the timeliness and accuracy of compensation calculations for radio altimeter and atmospheric pressure-based climb/descent rate."
        ]
    },
    {
        "requirement": "The system needs to compensate for the atmospheric unit's lifting speed based on vertical acceleration.",
        "safety_requirements": [
            "When the system performs vertical acceleration compensation, it should ensure that the control sequence and timing are coordinated with the hardware, and that control conditions are complete and consistent.",
            "The system should monitor the rate of parameter change for vertical acceleration to ensure it remains within reasonable limits (upper and lower slope thresholds), and clearly define the handling strategy for data exceeding these slopes.",
            "The system should have a clear fault recovery mechanism to ensure reasonable recovery in case of faults, without affecting the compensation function for the lifting speed of the atmospheric machine.",
            "The system should make corresponding judgments and treatments under abnormal external factors such as high sea conditions and adverse weather conditions to ensure the normal operation of the compensation function for the lifting speed of the atmospheric machine.",
            "The system's compensation control for the atmospheric chamber lifting speed should include a timeout detection mechanism to handle situations where the hardware status fails to meet control requirements for an extended period."
        ]
    },
    {
        "requirement": "The system needs to compensate for the radio altimeter's rate of climb based on vertical acceleration.",
        "safety_requirements": [
            "When the system performs vertical acceleration compensation, it should ensure that the control sequence and timing are coordinated with the hardware, and that control conditions are complete and consistent.",
            "The system should monitor the rate of parameter change for vertical acceleration to ensure it remains within reasonable limits (upper and lower slope bounds), and there should be a clear handling strategy for data that exceeds these limits.",
            "The system shall check the continuous value range data bits in the radio altimeter vertical speed compensation, and analyze the output correctness when the difference between data values over multiple cycles exceeds the specified threshold (i.e., slope fault).",
            "The system should check the communication status of the interface data frame for radio altimeter climb/descent rate compensation, and analyze the correctness of the output under conditions such as \"data frame loss\".",
            "The system should clearly define the sensor's measurement range (upper and lower limits), and a sensor fault should be reported when values exceed this range."
        ]
    },
    {
        "requirement": "The system needs to use the Tustin bilinear transformation to obtain the unified filtering formula.",
        "safety_requirements": [
            "When the system adopts the Tustin bilinear transformation to obtain the unified filtering formula, it should ensure that the control sequence and timing are coordinated with the hardware, and that the control conditions are complete and consistent.",
            "When the system collects data, it should perform filtering and anti-jitter processing to block interference data and ensure the accuracy of the filtering formula.",
            "The system should perform filtering and debouncing during data acquisition to eliminate interference data and ensure the accuracy of the filter formula.",
            "When the system uses the Tustin bilinear transformation to obtain the unified filtering formula, it should set a reasonable range for the rate of parameter changes (upper and lower slope limits) and clearly define the handling strategy for data exceeding these slope limits.",
            "When the system checks the data bit value accuracy of the interface data, it should ensure that the data bit value accuracy is greater than the required accuracy for the output result to be correct."
        ]
    },
    {
        "requirement": "The system needs to calculate the values of H1(k) and Hbc(k).",
        "safety_requirements": [
            "The system shall check the value timing of the interface data when calculating H1(k) and Hbc(k), to ensure the correctness of the output results in cases where the input value timing is \"maximum, minimum\", etc.",
            "The system shall check the control calculation results when computing H1(k) and Hbc(k), ensuring the correctness of functional processing under conditions where the control calculation results are \"normal values, abnormal values, boundary values, maximum or minimum values\", etc.",
            "The system shall check the value accuracy of the interface data bits when calculating H1(k) and Hbc(k), ensuring the correctness of output results when the data bit value accuracy is higher than the required precision.",
            "The system shall check the value accuracy of the interface data bits when calculating H1(k) and Hbc(k), ensuring the correctness of output results in case the data bit value accuracy is lower than the required accuracy.",
            "The system shall check the cycle of interface data when calculating H1(k) and Hbc(k), ensuring the correctness of output results under input value cycle conditions such as \"greater than specified cycle, less than specified cycle, maximum and minimum values\"."
        ]
    },
    {
        "requirement": "When H is taken as Hb and Hr respectively, the system needs to calculate the compensated lifting and lowering speed Hbc corresponding to uy and h.",
        "safety_requirements": [
            "When the system calculates the compensated lifting and lowering speed Hbc, it should check the control solution results to ensure the correctness of functional processing under normal values, abnormal values, boundary values, maximum and minimum values.",
            "When the system calculates the compensated lifting and lowering speed Hbc under different states and operation phases, it should check the function inputs to ensure the correctness of functional processing when operation phase or state is not considered.",
            "The system should check the value accuracy of the interface data bits when calculating the compensated lifting and lowering speed Hbc to ensure the correctness of the output when the accuracy exceeds the required level.",
            "When the system calculates the compensated lifting and lowering speed Hbc, it should check the value accuracy of the interface data bits to ensure correctness of the output when the accuracy is less than the required precision.",
            "The system should check the cycle of interface data when calculating the compensated lifting and lowering speed Hbc, to ensure the correctness of output under conditions such as input value cycle being greater than, less than the specified cycle, or extreme maximum/minimum values."
        ]
    },
    {
        "requirement": "The system needs to calculate the values of H1(k) and H2(k) according to the formula at each sampling period T=20ms.",
        "safety_requirements": [
            "The system shall check the cycle of interface data at each sampling period T=20ms, ensuring that the input value cycle is 20ms, and that calculation results of H1(k) and H2(k) are correct under conditions such as 'greater than 20ms, less than 20ms, maximum value, minimum value', etc.",
            "The system should check the transmission and reception cycles of interface data to ensure they are matched, so as to guarantee the accuracy of the calculation results for H1(k) and H2(k).",
            "The system should check the timing of interface data values to ensure that the input timing is within the specified range, avoiding abnormal calculation results of H1(k) and H2(k) caused by situations such as \"early input\" or \"late input.\"",
            "The system should check the duration of interface data values to ensure that the duration is 20ms, and that the calculation results of H1(k) and H2(k) are correct in cases such as \"greater than 20ms\" or \"less than 20ms\"."
        ]
    },
    {
        "requirement": "Determine the flight phase under autonomous control, manual correction, and command control modes.",
        "safety_requirements": [
            "The system should verify the correctness of functional inputs under different states and operational phases, ensuring accurate determination of flight phases even in cases such as 'unconsidered operational phase' or 'unconsidered operating state'.",
            "The system should ensure the correctness of timing relationships, constraint relationships, concurrency relationships, and combination relationships among control logics of various functional points, preventing errors in flight phase determination caused by logic errors.",
            "The system should check the control solution results to ensure that the determination of flight phases is correct under conditions such as \"normal values, abnormal values, boundary values, and extreme maximum/minimum values\".",
            "The sequence and timing of system control should be coordinated with the hardware to ensure complete and consistent control conditions, preventing errors in determining flight phases due to timing errors.",
            "The system should check the state entry conditions to ensure the correctness of state execution when the entry conditions are \"satisfied, not satisfied, satisfied again,\" and so on during state execution."
        ]
    },
    {
        "requirement": "The determination of the flight phase under remote control mode (with or without internal loop remote control) is different.",
        "safety_requirements": [
            "When the system is in remote control mode (with or without inner loop remote control), it should check functional inputs according to different flight phases and operational states, ensuring the correctness of function processing under conditions where \"the flight phase or operational state is not considered\".",
            "When the system is in remote control mode, it should ensure that the sequence and timing of control are coordinated with the hardware, with complete and consistent control conditions.",
            "When the system is in remote control mode, it should have a timeout detection mechanism for critical controls or actions to handle situations where the hardware status fails to meet control requirements for an extended period.",
            "When the system is in remote control mode, it should ensure that the timing of output control status meets the scenario requirements.",
            "When the system is in remote control mode, it should ensure the correct timing relationships, constraint relationships, concurrent relationships, and combination relationships between the control logic of each function point."
        ]
    },
    {
        "requirement": "When switching between control modes, perform corresponding processing and phase determination.",
        "safety_requirements": [
            "When switching control modes, the system should check the function inputs to ensure the correctness of function processing in different states and working stages, especially in the case of 'not considering working stages, not considering working states'.",
            "The system should check the control solution results to ensure the correctness of functional processing under conditions such as \"normal values, abnormal values, boundary values, maximum and minimum values\".",
            "The system shall ensure that the control sequence and timing are coordinated with the hardware during control mode transitions, with complete and consistent control conditions before and after the transition.",
            "The system shall ensure the correct timing relationships, constraint relationships, concurrent relationships, and combination relationships between the control logics of each functional point.",
            "The system should have a timeout judgment mechanism when performing critical control or actions to handle situations where the hardware status fails to meet control requirements for an extended period."
        ]
    },
    {
        "requirement": "Lateral control law: δy = KyY · (Y - Yg) + Kywy · wy",
        "safety_requirements": [
            "When the system performs lateral control law calculations, it should ensure that the control sequence and timing are coordinated with the hardware, and that the control conditions are complete and consistent.",
            "The system should check the results of lateral control law calculations to ensure the correctness of control computation results under conditions such as \"normal values, abnormal values, boundary values, and extreme maximum/minimum values\".",
            "The system should ensure the correct timing, constraint, concurrency, and combination relationships among the control logic of each functional point to avoid logic conflicts.",
            "When the system performs lateral control law calculations under different states and operating phases, it should check the functional inputs to ensure correct functional processing in cases such as 'operating phase not considered, operating state not considered'.",
            "The system should ensure that the rate of change of parameters in the lateral control law calculation remains within a reasonable range (upper and lower slope limits), and clearly define the handling strategy for data exceeding these slope limits."
        ]
    },
    {
        "requirement": "During flight phase transitions and control mode switches, soften the given attitude angles, control surface commands, or throttle inputs.",
        "safety_requirements": [
            "The system should apply smoothing to the given attitude angles, control surface commands, or throttle inputs during flight phase transitions and control mode switches, ensuring the correctness of functional inputs under different states and operational phases.",
            "The system should ensure that the control sequence and timing are coordinated with the hardware during control computation, and that control conditions are complete and consistent.",
            "The system should check the control solution results to ensure the correctness of functional processing under normal values, abnormal values, boundary values, maximum and minimum values, etc.",
            "The system should check the status after reboot to ensure correct state recovery and avoid situations where the state is not recovered or incorrectly recovered, when a software power failure and restart occurs during flight phase transition and control mode switching.",
            "The system should check the transition conditions between every pair of states in the software state space to ensure the transition conditions are properly set, avoiding situations where transition conditions are not set, always satisfied, or never satisfied."
        ]
    },
    {
        "requirement": "Select two softening methods: one for softening during switching between control modes with inner loops or flight phase transitions, and another for softening during switching of remote control modes without inner loops.",
        "safety_requirements": [
            "The system should verify the correctness of functional inputs under different states and operational phases, ensuring that the selection of softening methods and the control solution process are correct even in cases where the operational phase or state has not been considered.",
            "The system should check the transition conditions between every pair of states in the software state space to ensure the correctness and safety of state transitions under circumstances such as \"not set, always satisfied, not satisfied\".",
            "The system should check the functions with assigned priorities when it is in two or more states with transition relationships, ensuring the correctness and safety of states and functions under scenarios such as \"high-priority switching to low-priority\" and \"low-priority switching to high-priority.\"",
            "The system should check the operating status of different redundancies to ensure the correctness and safety of functional implementation in cases such as 'two or more redundancies are in different states'.",
            "The system should ensure the correct selection and execution of softening methods when switching between control modes involving inner loops or transitioning between flight phases, to prevent functional failure in abnormal conditions.",
            "When the system switches to remote control mode without internal loop, it should ensure correct selection and execution of the softening method to prevent functional failure under abnormal conditions."
        ]
    },
    {
        "requirement": "The flight control system must have a notch filter function to attenuate airframe structural vibration mode signals and ensure system stability.",
        "safety_requirements": [
            "When the flight control system performs the notch filtering function, it should ensure that the control sequence and timing are coordinated with the hardware, and that control conditions are complete and consistent.",
            "When the flight control system collects structural vibration mode signals, it should perform filtering and anti-jitter processing to shield interference data.",
            "The flight control system should check the results of control calculations after notch filtering to ensure correct functional processing under conditions such as \"normal values, abnormal values, boundary values, maximum and minimum values\".",
            "The flight control system should have a timeout detection mechanism when performing critical controls or actions to handle situations where the hardware status fails to meet control requirements for an extended period."
        ]
    },
    {
        "requirement": "The elevator channel in the flight control system should include two notch filters, one located between the control law output and the servo loop, and the other after the vertical acceleration prefilter.",
        "safety_requirements": [
            "The system should ensure that the two notch filters of the elevator channel are sequenced and timed in coordination with the hardware, between the control law output and the actuator loop as well as after the elevator acceleration prefilter, with complete and consistent control conditions.",
            "The system should have a detection mechanism to monitor the output loop status of the elevator channel without affecting normal output.",
            "The system should ensure that during different states and operational phases, input checks are performed on the control resolution process of the elevator channel, to guarantee the correctness of functional processing under conditions such as \"operational phase not considered\" or \"state not considered\".",
            "The system should ensure that the timing of the elevator channel's output control status meets the scenario requirements to avoid safety issues caused by improper timing."
        ]
    },
    {
        "requirement": "The notch filter parameters between the control law output and the actuator loop should be set as x1z = 0.1, x2z = 0.6, wn1z = 24.3, wn2z = 24.3.",
        "safety_requirements": [
            "When setting the notch filter parameters of the system as x1z = 0.1, x2z = 0.6, wn1z = 24.3, and wn2z = 24.3, coordination and timing consistency between the control law output and the actuator loop should be ensured.",
            "The system should perform real-time checks on the notch filter parameters between the control law output and the actuator loop, ensuring the correctness and reliability of the control solution results under normal values, abnormal values, boundary values, maximum and minimum values.",
            "The system should check the notch filter parameter settings between the control law output and the actuator loop under different states and operational phases to ensure the correctness and consistency of functional processing when operational phases and states are not considered.",
            "The system should have an output loop detection mechanism to periodically check the status of the output loop without affecting normal output, ensuring the proper operation of the loop."
        ]
    },
    {
        "requirement": "The specific parameters of the notch filter after the lifting acceleration pre-filter should be configured in the system.",
        "safety_requirements": [
            "When configuring the notch filter parameters of the system after setting up the lift acceleration prefilter, ensure that the control sequence and timing are coordinated with the hardware, and that control conditions are complete and consistent.",
            "After the system performs hardware control, it should monitor and determine the consistency between the hardware status and the control requirements, ensuring that the hardware status meets expectations.",
            "The system should set reasonable range for the variation rate (upper and lower slope limits) of notch filter parameters after the lift acceleration pre-filter, and clearly define the handling strategy for out-of-slope data.",
            "The system should check the control solution results of the notch filter parameters after the elevator acceleration pre-filter to ensure the correctness of functional processing under conditions such as 'normal values, abnormal values, boundary values, maximum and minimum values'.",
            "The system should have a timeout detection mechanism for critical controls or actions to handle situations where hardware status fails to meet control requirements for an extended period."
        ]
    },
    {
        "requirement": "The vertical acceleration in the longitudinal control law during the flare phase needs to be processed through vertical acceleration notch filter 2.",
        "safety_requirements": [
            "During the longitudinal control law in the flare phase of the system, when the vertical acceleration is processed by the vertical acceleration notch filter 2, it should be ensured that the control sequence and timing are coordinated with the hardware, and that the control conditions are complete and consistent.",
            "The system should have a timeout detection mechanism when the vertical acceleration goes through the vertical acceleration notch filter 2 during the longitudinal control law in the flare phase, to handle situations where the hardware status fails to meet control requirements for an extended period.",
            "During the flare phase of the system's longitudinal control law, when the vertical acceleration is processed through the vertical acceleration notch filter 2, the function inputs shall be checked to ensure correct function processing under different states and operational phases.",
            "During the longitudinal control law in the flare phase of the system, when the pitch acceleration is processed through the pitch acceleration notch filter 2, the control calculation results should be checked to ensure correct functional handling under normal values, abnormal values, boundary values, maximum and minimum extreme values.",
            "During the longitudinal control law in the flare phase of the system, when the pitch acceleration is processed through the pitch acceleration notch filter 2, it should be ensured that the parameter variation rate remains within a reasonable range, and there should be a clear processing strategy for superslope data."
        ]
    },
    {
        "requirement": "The notch filter parameters for the aileron channel are x1x = 0.1, x2x = 0.6, wn1x = 24.3, wn2x = 24.3.",
        "safety_requirements": [
            "The system should ensure that the variation rates of the notch filter parameters x1x, x2x, wn1x, and wn2x in the aileron channel remain within reasonable ranges, and clear handling strategies should be applied when exceeding the upper or lower slope limits.",
            "The system should check the communication protocol of the interface data frame to ensure that the data length is within the specified range, and output the correct processing result when the data length is greater than or less than the specified length.",
            "The system shall ensure that the sensor acquisition range is within clearly defined upper and lower limits, and shall report a sensor fault when values exceed the acquisition range.",
            "The system should check the communication status of interface data frames to ensure correct processing results in cases such as data frame loss.",
            "The system should check the receiving buffer of the interface data to ensure that the buffer capacity is not less than the amount of interface data. When the buffer capacity is less than the interface data amount, the correct processing result should be output."
        ]
    },
    {
        "requirement": "The notch filter parameters for the rudder channel are x1y = 0.1, x2y = 0.5999922, wn1y = 40.81997, wn2y = 25.11991.",
        "safety_requirements": [
            "The system should ensure that the variation rates of the rudder channel notch filter parameters x1y, x2y, wn1y, and wn2y remain within reasonable ranges, and clear handling strategies should be applied when exceeding the upper or lower slope limits.",
            "The system shall check the rudder channel notch filter parameters in the interface data that have continuous value ranges, analyze the output correctness when the difference between data values from multiple cycles exceeds the specified threshold, and ensure timely detection and handling of slope faults.",
            "The system should clearly define the sensor acquisition range (upper and lower limits) for the rudder channel notch filter parameters, and a sensor fault should be reported when the values exceed the acquisition range.",
            "The system should check the input of the rudder channel notch filter parameters under different states and operational phases to ensure the correctness of functional processing, regardless of the operational phase or state being considered.",
            "The system should evaluate the impact of filtering processing of the rudder channel notch filter parameters on real-time performance, ensuring that the impact remains within an acceptable range."
        ]
    },
    {
        "requirement": "The discretized notch filter formula obtained using the Tustin bilinear transformation is δd(k) = [- Kd12δd(k-1) - Kd22δd(k-2) + Kd01δ(k) + Kd11δ(k-1) + Kd].",
        "safety_requirements": [
            "The system should check the interface data of the discretized notch filter to ensure the correctness of the output results when the data values of two consecutive cycles experience a sudden change.",
            "The system should perform real-time checks on the filtering results of the discretized notch filter to ensure that the filtering process does not have an unacceptable impact on real-time performance.",
            "The system should check the control solution results of the discretized notch filter to ensure the correctness of functional processing under normal values, abnormal values, boundary values, maximum and minimum values, etc.",
            "The system should check the functional inputs of the discretized notch filter to ensure the correctness of functional processing under different states and operational phases, avoiding situations where operational phases or states are not considered."
        ]
    },
    {
        "requirement": "The system should be able to calculate the rudder deflection angles δz, δx, and δy based on the current flight state and target state.",
        "safety_requirements": [
            "The system should ensure coordination with the hardware and that control conditions are complete and consistent when executing control sequences and timing, to guarantee accurate calculation of the rudder deflection angles δz, δx, and δy.",
            "The system should check the operating status of different redundancies to ensure that the calculated values of the rudder deflection angles δz, δx, and δy are correct in the case where \"two or more redundancies are in different states.\"",
            "The system should check functional inputs under different states and working phases to ensure that the calculation results of rudder deflection angles δz, δx, and δy are correct in cases where \"working phase and working state are not considered\".",
            "The system should check the control calculation results of the rudder deflection angles δz, δx, and δy to ensure correct functional processing under conditions such as \"normal values, abnormal values, boundary values, maximum and minimum values,\" and trigger a warning mechanism in case of abnormalities."
        ]
    },
    {
        "requirement": "The software system needs to implement the functionality of the lifting acceleration notch filter 2, including parameter setting and filtering processing.",
        "safety_requirements": [
            "When the system controls the lifting acceleration notch filter 2, it should ensure that the control sequence and timing are coordinated with the hardware, and that the control conditions are complete and consistent.",
            "The system should check the control resolution results of the lifting acceleration notch filter 2 to ensure the correctness of the filtering process under conditions such as \"normal values, abnormal values, boundary values, maximum and minimum values\".",
            "The system should have a timeout detection mechanism during critical control operations or actions to handle situations where the hardware status fails to meet control requirements for an extended period.",
            "When the system performs control calculations for the lift acceleration notch filter 2 under different states and operating phases, the functional inputs shall be checked to ensure the correctness of the filtering process in cases such as \"operating phase not considered, operating state not considered\".",
            "The system should check the execution conditions of the lifting acceleration notch filter 2 to ensure the correctness of the filtering process under conditions such as 'not met, met again' during function execution."
        ]
    },
    {
        "requirement": "The software system needs to implement the notch filter function for the aileron channel, including parameter setting and filtering processing.",
        "safety_requirements": [
            "When implementing the notch filter function for the aileron channel, the system should ensure that the control sequence and timing are coordinated with the hardware, and that control conditions are complete and consistent.",
            "The system should make corresponding judgments and treatments under abnormal external conditions such as high sea states and adverse weather conditions, to ensure the normal operation of the aileron channel notch filter function.",
            "The system should check the control solution results of the roll channel notch filter function to ensure the correctness of functional processing under conditions such as 'normal values, abnormal values, boundary values, maximum and minimum values'.",
            "The system should check the execution conditions of the roll channel notch filter function to ensure the correctness of function handling in cases such as 'condition not met, condition met again' during function execution.",
            "The system should have a timeout detection mechanism when performing critical control or actions (such as the notch filter function in the aileron channel) to handle situations where the hardware status fails to meet control requirements for an extended period."
        ]
    },
    {
        "requirement": "The software system needs to implement the notch filter function for the rudder channel, including parameter setting and filtering processing.",
        "safety_requirements": [
            "When the system controls the rudder channel's notch filter function, it should ensure that the control sequence and timing are coordinated with the hardware, and that control conditions are complete and consistent.",
            "The system should have a timeout detection mechanism when controlling the rudder channel notch filter function, to handle situations where hardware status fails to meet control requirements for an extended period.",
            "The system should check the control solution results of the rudder channel's notch filter function to ensure the correctness of functional processing under conditions such as \"normal values, abnormal values, boundary values, maximum and minimum values\".",
            "The system should check the execution conditions of the rudder channel notch filter function to ensure the correctness of function handling when the execution conditions are 'not satisfied, satisfied again' during function execution.",
            "The system should check the inputs to the rudder channel notch filter function to ensure correct functional processing under different states and operational phases, avoiding situations such as \"failure to consider operational phase\" or \"failure to consider operational state.\""
        ]
    },
    {
        "requirement": "The software system needs to implement the Tustin bilinear transform discretization to generate the discrete notch filter formula.",
        "safety_requirements": [
            "When the system performs discretization using the Tustin bilinear transformation, it should check the data bits in the interface data that have discrete value ranges, to ensure that the output of the discretized notch filter formula is correct when the data values jump between two consecutive cycles.",
            "The system should check the rate of parameter changes during the Tustin bilinear transformation process, ensure they are within reasonable limits (upper and lower slope bounds), and implement a clear handling strategy when out-of-slope data occurs.",
            "The system shall check the transition conditions between every two states in the software state space to ensure the correctness of state transitions under conditions such as \"transition condition not set, always satisfied, never satisfied\", etc.",
            "When the system performs discretization using the Tustin bilinear transform, it should check the data bits in the interface data that have discrete value ranges, ensuring that the output of the discretized notch filter formula is correct when the data bits take values such as \"undefined abnormal values outside the valid range.\"",
            "When the system undergoes discretization using the Tustin bilinear transformation, it should ensure that the control sequence and timing are coordinated with the hardware, and that control conditions are complete and consistent."
        ]
    },
    {
        "requirement": "The flaps can be extended or retracted according to the needs of different flight phases or remote control, and have three deflection positions: 0°, 15°, and 40°.",
        "safety_requirements": [
            "When the system's operating status under different redundancy levels is inconsistent, the correctness of function implementation should be checked to ensure the flap extension/retraction function is correctly executed under different redundancy conditions.",
            "The system should check functional inputs under different operating phases and conditions to ensure correct handling of flap extension and retraction functions in each phase and state.",
            "The system should check the same input data values received with different redundancies to ensure the correct implementation of the flap extension and retraction function when the values are inconsistent.",
            "The system shall check output data of different redundancies to ensure correct implementation of flap extension and retraction functions in case of single redundancy failure or multiple redundancies failure."
        ]
    },
    {
        "requirement": "The system should be capable of automatically adjusting the flap deflection position based on information provided by the flight phase identification module.",
        "safety_requirements": [
            "When adjusting the flap deflection position, the system should ensure that the control sequence and timing are coordinated with the hardware, with complete and consistent control conditions.",
            "The system should have a timeout determination mechanism when adjusting the flap deflection position to handle situations where the hardware status fails to meet control requirements for an extended period.",
            "The system should check the control calculation results of the flap deflection position to ensure the correctness of functional processing under conditions such as \"normal value, abnormal value, boundary value, maximum and minimum values\".",
            "The system shall check inputs during different flight phases and operating conditions to ensure the correctness of functional processing in cases such as \"unconsidered flight phase, unconsidered operating condition\".",
            "The system should verify the implementation of functions under different redundancy operating conditions, ensuring the correctness of function implementation in cases such as \"two or more redundancies being in different states.\""
        ]
    },
    {
        "requirement": "The system should support manually adjusting the flap deflection position via remote control.",
        "safety_requirements": [
            "When the system performs remote control and manual adjustment of the flap deflection position, it should ensure that the control sequence and timing are coordinated with the hardware, and that control conditions are complete and consistent.",
            "The system should have a timeout determination mechanism when performing remote control manual adjustment of the flap deflection position, to handle situations where the hardware status fails to meet control requirements for an extended period.",
            "After the system performs remote control to manually adjust the flap deflection position, it should monitor and determine the consistency between hardware status and control requirements, ensuring that the control effect meets expectations.",
            "The system should ensure that the timing of outputting control status meets the requirements of the scenario, avoiding control failure or misoperation caused by improper timing.",
            "The system should check the results of manual adjustment of flap deflection position via remote control, ensuring the correctness and safety of functional processing under conditions such as 'normal values, abnormal values, boundary values, maximum and minimum values'."
        ]
    },
    {
        "requirement": "The system should be capable of receiving and processing data provided by the flight phase identification module to determine the current flight phase.",
        "safety_requirements": [
            "The system should check the transmission and reception cycles of data from the received flight phase identification module to ensure cycle matching, so as to correctly determine the current flight phase.",
            "After the system starts executing a task, it should analyze the correctness of functional processing when input data is received again and execution conditions are met once more, to ensure accurate determination of the flight phase.",
            "The system should check the communication status of data frames received from the flight phase identification module to ensure output correctness and system stability in cases such as 'continuous failure to receive new data'.",
            "The system should check the communication protocol of the data frames received from the flight phase identification module to ensure correctness of output and stability of the system under circumstances such as 'data frame identification'.",
            "The system should check the communication status of the received flight phase identification module data frames to ensure the correctness of the output and the stability of the system in cases such as 'data frame loss'."
        ]
    },
    {
        "requirement": "The system should be able to select the appropriate flap deflection position based on the current flight phase.",
        "safety_requirements": [
            "When selecting flap deflection positions, the system should ensure that the control sequence and timing are coordinated with the hardware, and that control conditions are complete and consistent.",
            "The system shall ensure that the timing of output control status meets the requirements of the current flight phase.",
            "The system should check the rate of parameter changes in flap deflection position to ensure it is within a reasonable range and clearly define the handling strategy for excessive slope data.",
            "The system should check the operating status of different redundancies to ensure that the flap deflection position is correctly selected in the case where 'two or more redundancies are in different states'.",
            "The system shall have a handling mechanism for inconsistent redundancy states to ensure that the selection of flap deflection positions meets the requirements of the current flight phase."
        ]
    },
    {
        "requirement": "The system should be capable of recording and displaying the current flap angle position.",
        "safety_requirements": [
            "The system shall ensure that the control sequence and timing are coordinated with the hardware when recording and displaying the current flap deflection position, with complete and consistent control conditions.",
            "The system should check the operating status of different redundancies to ensure that the functions for recording and displaying flap deflection positions are correctly implemented in the case where 'two or more redundancies are in different states'.",
            "After system recovery, it should be ensured that the recorded current flap angle position still meets the real-time requirements.",
            "The system should check output data with different redundancies to ensure that the functions of recording and displaying flap angle positions are correctly implemented in cases of \"single redundancy failure, multiple redundancies failure.\""
        ]
    },
    {
        "requirement": "The system needs to calculate the values of δz(k), δx(k), and δy(k) through bilinear transformation based on the given pitch angle Jg, roll angle Yg, and rudder control input yg.",
        "safety_requirements": [
            "The system should check the variation rates of pitch angle Jg, roll angle Yg, and rudder control input yg to ensure they remain within reasonable ranges. Clear handling strategies should be in place for data exceeding the upper or lower slope limits.",
            "The system should ensure that the control sequence and timing are coordinated with the hardware, and the control conditions should be complete and consistent before and after.",
            "The system should check the control solution results of the calculated δz (k), δx (k), and δy (k) to ensure the correctness of functional processing under normal values, abnormal values, boundary values, maximum and minimum values, etc.",
            "The system should check data bits in the interface data that have discrete value ranges to ensure the correctness of the output when the data values change abruptly between two consecutive cycles.",
            "The system should verify functional inputs to ensure the correctness of functional control resolution processes under different states and operational phases, particularly in scenarios where operational phases and states are not considered."
        ]
    },
    {
        "requirement": "During the aircraft's ground waiting phase, the flaps are set to 0°.",
        "safety_requirements": [
            "The system should check the data processing procedure for flap position set to 0° during the aircraft ground waiting phase to ensure that division by zero does not occur.",
            "During the aircraft ground waiting phase, the system should assess the reasonableness of operator actions and not respond to commands that are inconsistent with the current scenario or status.",
            "The system should have a proper handling mechanism to ensure safety in case of a failed redundancy switch during the aircraft's ground waiting phase, when the redundancy switch conditions are met.",
            "When the system's operating status changes during the aircraft ground waiting phase, the values of functional interface data should be checked to ensure that the output of the flap being set to 0° is correct under the condition that \"the values remain unchanged.\"",
            "The system should validate the parameters set by personnel during the aircraft ground waiting phase, and provide alerts or no response for abnormal parameters."
        ]
    },
    {
        "requirement": "When the aircraft begins takeoff, from the start of the ground roll phase, the flaps are deflected to 15°.",
        "safety_requirements": [
            "After power recovery or reset due to runaway, the system shall be able to return to normal operation and ensure the correct execution of the control command for the flap to deflect to 15°.",
            "The system should ensure that the rate of change of flap deflection angle remains within a reasonable range, and excessive slope data should be effectively processed to prevent abnormal deflection angles from affecting flight safety.",
            "The system should check the communication status of the interface data frames to ensure the correctness of the flap angle control command output in cases such as \"data frame loss\".",
            "The system should ensure that the control sequence and timing of flap deflection angles are coordinated with the hardware, that control conditions are complete and consistent, and that control conflicts or delays are prevented.",
            "The system should check the operating status of different redundancies to ensure the correct implementation of the flap angle control function in cases such as \"two or more redundancies are in different states\"."
        ]
    },
    {
        "requirement": "Start timing when reaching climb segment 1; if the landing gear is retracted within 1 minute, delay for 5 seconds after retraction before retracting flaps to 0°.",
        "safety_requirements": [
            "The system starts timing when the aircraft flies to the climb phase 1. It should check whether the mission duration is less than 1 minute, and ensure the function of delaying 5 seconds after landing gear retraction to correctly handle the flaps retracted to 0° is properly processed.",
            "The system starts timing when the aircraft flies to the climb phase 1. The mission duration should be checked to ensure it is greater than 1 minute, and the function handling for delaying 5 seconds after landing gear retraction to retract flaps to 0° must be processed correctly.",
            "The system starts timing when the aircraft flies to the climb phase 1. The execution sequence of tasks should be checked to ensure the function of delaying 5 seconds after landing gear retraction before retracting flaps to 0° is properly handled.",
            "The system starts timing when the aircraft flies to the climb phase 1. The interface data sampling moment shall be checked to ensure that, when the input sampling moment is set as \"early stop\", the function of delaying 5 seconds after landing gear retraction to retract flaps to 0° is processed correctly.",
            "The system starts timing when the aircraft flies to the climb phase 1. The interface data sampling time shall be checked to ensure that when the input sampling time is set to \"stop too late,\" the function of delaying 5 seconds after gear retraction to retract flaps to 0° is handled correctly.",
            "The system starts timing when the aircraft flies to the climb phase 1. The interface data sampling time shall be checked to ensure that when the input sampling time is \"too early,\" the function of delaying 5 seconds after gear retraction to retract flaps to 0° is handled correctly.",
            "The system starts timing when the aircraft climbs to segment 1. The interface data sampling time shall be checked to ensure that when the input timing is \"late input\", the function of delaying 5 seconds after gear retraction to retract flaps to 0° is handled correctly."
        ]
    },
    {
        "requirement": "If the landing gear has not been retracted after 1 minute, directly retract the flaps to 0°.",
        "safety_requirements": [
            "The system should check the duration of the landing gear retraction task to ensure it is completed within 1 minute; if not completed, the flaps should be retracted directly to 0°.",
            "The system should ensure that it can properly handle and recover functions in case of excessive redundancy switching time, to guarantee the normal execution of landing gear retraction tasks.",
            "When the system meets the conditions for redundancy switching, if the switch fails, it should be able to handle the situation correctly and trigger the early warning mechanism to ensure the normal execution of the landing gear retraction task.",
            "The system should perform a timeout judgment on the landing gear retraction task. If the hardware status does not meet the control requirements for an extended period, it should trigger a warning mechanism and take corresponding measures.",
            "The system should check the communication status of the interface data frames during the landing gear retraction task, ensuring that it can properly handle situations such as 'continuously not receiving new data' and correctly trigger the early warning mechanism."
        ]
    },
    {
        "requirement": "When the aircraft flies to the fourth leg of the five-leg traffic pattern, if the distance to the destination point is less than 1500m, deploy flaps to 15°.",
        "safety_requirements": [
            "The system should check the operating status of different redundancies when the aircraft is flying on the fourth leg of the five-leg approach pattern, to ensure that the function of extending flaps to 15° is correctly implemented in cases where 'two or more redundancies are in different states'.",
            "The system should check the sensor's acquisition range to ensure that when the distance to the target is less than 1500m, the sensor's acquired value is within the upper and lower limits. If the value exceeds the acquisition range, a sensor fault should be reported.",
            "The system shall check output data of different redundancies to ensure that the function of extending flaps to 15° is correctly implemented under conditions of \"single redundancy failure, multiple redundancies failure.\"",
            "The system should check the rate of change of the distance to the point, ensuring it remains within a reasonable range; excessive slope data should trigger an exception handling mechanism."
        ]
    },
    {
        "requirement": "When flying to the fifth side, deploy flaps to 40° when the distance from the intended landing point is less than Hw / tgλ + 1020 m and greater than Hw / tgλ + 20 m.",
        "safety_requirements": [
            "When the system flies to the fifth side, it should ensure that the control state output timing for deploying flaps to 40° meets the scenario requirements when the distance from the predetermined landing point is less than Hw / tgλ + 1020 m and greater than Hw / tgλ + 20 m.",
            "The system should clearly define the upper and lower limits of the sensor's measurement range and report a sensor fault when the measured value exceeds this range.",
            "The system shall ensure that the output status of extending flaps to 40° meets the duration constraint requirements.",
            "The system should check the operating status of different redundancies to ensure that the function of extending flaps to 40° is correctly implemented when \"two or more redundancies are in different states\".",
            "The system shall check the operating status of different redundancies to ensure that the function of extending flaps to 40° is correctly implemented when two or more redundancies are in different states."
        ]
    },
    {
        "requirement": "If the aircraft does not enter the glide slope window, the flaps are retracted to 15° (with corresponding changes in Vg) after the aircraft levels off again.",
        "safety_requirements": [
            "The system shall ensure that the flaps are correctly retracted to 15° after the aircraft levels off again when no new data is continuously received, and shall trigger the warning mechanism.",
            "When the system meets the conditions for redundancy switching, if the redundancy switching fails, there should be a proper handling mechanism to ensure that the operation of retracting the flaps to 15° after the aircraft stabilizes at the target altitude is not affected.",
            "The system shall ensure that the aircraft correctly executes the operation of retracting flaps to 15° after regaining altitude following data frame loss, and shall trigger the warning mechanism.",
            "In the event of communication interruption, the system shall ensure that the aircraft correctly executes the operation of retracting flaps to 15° after re-establishing altitude, and triggers the early warning mechanism.",
            "The system should have a clear fault recovery mechanism to ensure that, in any fault condition, the operation of retracting the flaps to 15° after the aircraft levels off again can be reasonably restored."
        ]
    },
    {
        "requirement": "If the aircraft enters the glide slope window, the flaps remain at 40° until landing is completed.",
        "safety_requirements": [
            "After the aircraft enters the glide slope window, the system should ensure that the flaps remain at 40° until landing is completed, and should recover and maintain this state even after a software power cycle restart.",
            "After a software power failure and restart, the system shall check the integrity of interface data communication to ensure the correctness and consistency of the flap status, maintaining the flaps at 40° even in case of communication interruption or reconnection.",
            "The system should verify the correctness of functional inputs under different states and operational phases, ensuring that the flaps remain at 40° after entering the glide window until touchdown is completed, regardless of the operational phase or state.",
            "The system should check the conditions for the aircraft to enter the glide slope window, ensuring that during the execution of the state, the flaps remain at 40° until landing is complete, even if the entry conditions are met or not met again.",
            "During the system's redundancy switching process, it should ensure that the switching time does not affect the flaps remaining at 40°; even if the switching time is excessively long, it should be properly handled while maintaining the flap status."
        ]
    },
    {
        "requirement": "During normal landing, the system starts deploying flaps to 15° at point A and deploys flaps to 40° at point B; during reverse landing, the system starts deploying flaps to 15° at point C and deploys flaps to 40° at point D.",
        "safety_requirements": [
            "The system shall ensure the correct sequence, constraints, concurrency, and combination relationships of flap deployment at points A, B, C, and D during both normal and reverse landings.",
            "The system should check functional inputs under different states and operational phases to ensure the correctness of flap deployment function processing, even in cases where the operational phase or state is not considered.",
            "The system should coordinate with the hardware in controlling the sequence and timing of flap deployment to ensure complete and consistent control conditions.",
            "The system should verify the correctness of functional implementation under different redundancy operating conditions, ensuring the correct performance of the flap deployment function when two or more redundancies are in different states.",
            "The system should verify the correctness of functional implementation under different redundancy states, ensuring the correctness of flap deployment function when two or more redundancies are in different states."
        ]
    },
    {
        "requirement": "In remote control mode, when the system receives the \"Flap Position 0\" command from the remote control, it sends a flap 0° control signal; when receiving the \"Flap Position 1\" command, it sends a flap 15° control signal; when receiving the \"Flap Position 2\" command, it sends a flap 40° control signal.",
        "safety_requirements": [
            "The system should check the flap position control commands sent by remote control under different states and working phases to ensure the correctness of command processing and avoid errors caused by ignoring the working phase or state.",
            "The system shall check the control resolution results of the flap position control command to ensure the correctness of functional processing when the resolution results are normal values, abnormal values, boundary values, or maximum/minimum values.",
            "When the system issues flap control signals, it should ensure that the control sequence and timing are coordinated with the hardware, with complete and consistent control conditions.",
            "After a power failure and subsequent restart of the system software, the system should check its status after restarting to ensure correct state recovery and prevent functional abnormalities caused by incomplete or incorrect state restoration.",
            "The system should check the operating status of different redundancies to ensure the correctness of function implementation when two or more redundancies are in different states."
        ]
    },
    {
        "requirement": "The system needs to set different reference attitude angles according to different flight phases during the takeoff and departure phase, specifically as follows: longitudinal Jg = 4.5°, lateral yg = 0°.",
        "safety_requirements": [
            "During the takeoff and departure phase, the system should set different reference attitude angles according to various flight phases, ensuring longitudinal Jg = 4.5° and lateral yg = 0°, while meeting scenario requirements in the output control state.",
            "The system should check the operating status of different redundancies to ensure the correctness of function implementation in the case where 'two or more redundancies are in different states'.",
            "The system should check functional inputs under different states and operational phases to ensure the correctness of functional processing in scenarios such as 'unconsidered operational phases' or 'unconsidered working states'.",
            "The sequence and timing of system control should be coordinated with the hardware to ensure complete and consistent control conditions."
        ]
    },
    {
        "requirement": "The retraction control of the landing gear is initiated by a retraction signal, and the retracted status is verified through a lock-up signal. The extension control of the landing gear is initiated by an extension signal, and the extended status is verified through a lock-down signal. In case of unsuccessful extension, an emergency deployment signal can be used to activate the emergency pump.",
        "safety_requirements": [
            "The system should check inputs for landing gear extension and retraction control under different states and operational phases, ensuring correct handling of control signals even when the operational phase or state is not considered.",
            "The system shall check the results of landing gear extension/retraction control calculations to ensure correct handling of control signals when the calculation results are within normal ranges, abnormal values, boundary values, or extreme maximum/minimum values.",
            "During the process of landing gear extension and retraction control, if a software power failure and restart occur, the system should check the status after restart to ensure correct state recovery and avoid situations where the state is not recovered or incorrectly recovered.",
            "When the system controls the extension and retraction of the landing gear, it should ensure that the control sequence and timing are coordinated with the hardware, and that control conditions are complete and consistent.",
            "When the system is controlling the landing gear extension and retraction, it should check the control resolution process to ensure that the resolution process does not time out. If a timeout occurs, it should be properly handled and trigger the warning mechanism."
        ]
    },
    {
        "requirement": "The landing gear can be retracted or deployed in autonomous control, manual correction, and remote control modes. During autonomous control or manual correction, the flight control system automatically retracts or deploys the landing gear based on the aircraft's position and motion information. In remote control mode, the ground control station can issue commands at any time to retract or deploy the landing gear.",
        "safety_requirements": [
            "The system should verify the correctness of functional inputs under different states and operational phases, ensuring that landing gear deployment and retraction control is properly handled in cases such as 'operational phase not considered' or 'state not considered'.",
            "After power recovery or the activation of the runaway reset mechanism, the system should be able to return to normal operating conditions, ensuring the landing gear extension and retraction control functions operate normally.",
            "The system should check the results of landing gear extension/retraction control calculations to ensure correct control handling under conditions such as \"normal values, abnormal values, boundary values, and extreme maximum/minimum values.\"",
            "The sequence and timing of the system's control for landing gear extension and retraction should be coordinated with the hardware to ensure complete and consistent control conditions.",
            "The system should check the computation process of landing gear extension and retraction control to ensure correct functional handling in cases such as computation timeout (failure to return results within the specified time)."
        ]
    },
    {
        "requirement": "When the aircraft takes off and reaches the first climb phase with the landing gear in the down position, the system shall set the landing gear retraction signal to high level, and simultaneously send left and right brake signals (brake pressure at 50% FS).",
        "safety_requirements": [
            "After power recovery or activation of the runaway reset mechanism, the system shall be able to return to normal operation, ensuring correct output of the landing gear retraction signal and brake signal.",
            "The system shall verify functional inputs when the aircraft takes off and reaches climb phase 1 with the landing gear in the down position, ensuring correct handling of the landing gear retraction signal and brake signal without considering the operating phase or status.",
            "The system shall check external devices (such as sensors, NVM, databases, other systems, etc.) when the aircraft takes off and reaches climb phase 1 with the landing gear in the down position, ensuring correct output of landing gear retraction signals and brake signals when the equipment is in a power-off or initialization state.",
            "The system shall ensure that the timing of output control status meets scenario requirements when the aircraft takes off and reaches climb phase 1 with the landing gear in the down position, and shall promptly issue signals for retracting the landing gear and applying brakes.",
            "During the execution of system status, after a software power failure and restart, the system should check the status after restart to ensure correct status recovery, and verify that the execution of landing gear retraction signal and brake signal is error-free."
        ]
    },
    {
        "requirement": "After 1s, the system should check the gear retraction lock signal. If the gear retraction lock signal is low, continue to check the landing gear extension/retraction status.",
        "safety_requirements": [
            "After 1 second, when the system checks the landing gear retraction lock signal, if a low level is detected, it should continue to monitor the landing gear extension/retraction status, and ensure that after software power-off restart, the status is correctly restored upon restart, avoiding situations where the status fails to recover or recovers incorrectly.",
            "The system should check the control solution results for the retracted lock signal to ensure the correctness of functional processing when the values are normal, abnormal, boundary, or extreme maximum/minimum values.",
            "The system should ensure that the control sequence and timing are coordinated with the hardware and that the control conditions are complete and consistent when checking the retraction lock signal and the landing gear retraction/extension status.",
            "The system should check functional inputs under different states and operational phases to ensure the correctness of functional processing, regardless of the operational phase or state being considered.",
            "After power recovery or activation of the runaway reset mechanism, the system shall be able to return to normal operation, ensuring the proper functioning of the retracted lock signal and landing gear retraction/extension status check capabilities."
        ]
    },
    {
        "requirement": "If the landing gear is in the down position, the system shall set the landing gear retraction signal to low level, set the left and right brake signals to 0, and set the landing gear retraction fault flag.",
        "safety_requirements": [
            "After a power failure and subsequent restart of the system software, the landing gear status should be checked to ensure correct status recovery after restart, preventing situations such as \"status not restored\" or \"incorrect restoration.\"",
            "The system should check the control resolution results of the landing gear retraction signal, left and right brake signals, and landing gear retraction fault flag to ensure the correctness of functional processing under conditions such as \"normal value, abnormal value, boundary value, maximum and minimum values\".",
            "The system shall be equipped with a false alarm prevention mechanism to ensure that, when a landing gear retraction failure is detected, the false alarm prevention meets the real-time requirements of alarm handling.",
            "The system should check the control resolution process for landing gear retraction/deployment signals, left/right brake signals, and landing gear retraction fault flags under different states and operational phases, ensuring correct functional handling in cases such as \"operational phase not considered, operational status not considered\".",
            "After power recovery or activation of the runaway reset mechanism, the system should be able to return to normal operation, ensuring correct processing of landing gear up/down signals, left/right brake signals, and landing gear retract fault flags."
        ]
    },
    {
        "requirement": "If the landing gear is in the retracted position, the system shall set the landing gear retraction signal to low level and set both left and right brake signals to 0.",
        "safety_requirements": [
            "The system should check the control resolution results of the landing gear retraction signal and the left/right brake signals, ensuring correct handling of signals set to low level and zero under normal values, abnormal values, boundary values, maximum and minimum values.",
            "After a software power failure and restart, the system should check the status of the landing gear retraction signal and the left/right brake signals to ensure correct state recovery after restart, avoiding situations where the state is not recovered or incorrectly recovered.",
            "The system shall check the control resolution process for landing gear retraction signals and left/right brake signals under different states and operational phases, to ensure the correctness of functional processing when operational phases or states are not considered.",
            "When the system controls the landing gear retraction signal and the left/right brake signals, it should ensure that the control sequence and timing are coordinated with the hardware, and that control conditions are complete and consistent.",
            "The system should have a timeout detection mechanism when controlling the landing gear retraction signal and left/right brake signals, to handle situations where hardware status fails to meet control requirements for an extended period."
        ]
    },
    {
        "requirement": "If the retraction lock signal is high, the system should periodically check the retraction lock signal.",
        "safety_requirements": [
            "The system should periodically check the retract lock signal when it is at a high level, and trigger a timeout detection mechanism if the signal does not meet control requirements for an extended period.",
            "The system should check the control solution results for the retracted lock signal to ensure the correctness of functional processing under conditions such as \"normal value, abnormal value, boundary value, maximum and minimum values\".",
            "The system should have a detection mechanism in the output circuit to ensure continuous monitoring of the circuit status without affecting normal output.",
            "When the system controls the retraction and locking signal, it should ensure that the control sequence and timing are coordinated with the hardware, and that control conditions are complete and consistent."
        ]
    },
    {
        "requirement": "If the uplock signal becomes low within 1 minute, the system should set the landing gear retraction signal to low, set both left and right brake signals to 0, and set the landing gear status to retracted.",
        "safety_requirements": [
            "After a power failure and subsequent restart of the system software, the system should check its status after restarting to ensure correct state recovery and prevent functional abnormalities caused by situations such as 'state not recovered' or 'incorrect recovery'.",
            "The system should check the control resolution results of the landing gear retraction signal, left and right brake signals, and landing gear status to ensure correct handling under conditions such as \"normal values, abnormal values, boundary values, maximum and minimum values.\"",
            "The system shall check the integrity of interface data communication during software power failure and restart, ensuring correct output under scenarios such as 'interruption, reconnection, and unrecoverable'.",
            "The system should implement a timeout mechanism when performing landing gear retraction operations to handle situations where hardware states remain unresponsive to control requirements for extended periods, ensuring safety.",
            "After power recovery or activation of the runaway reset mechanism, the system shall be able to return to normal operating conditions, ensuring continuity and reliability of system functions."
        ]
    },
    {
        "requirement": "If the retraction lock signal remains high after 1 minute, the system should set the landing gear retraction signal to low, set both left and right brake signals to 0, and set the landing gear retraction failure flag.",
        "safety_requirements": [
            "After a software power failure and restart, the system shall check the status after restart to ensure correct recovery of the state, and in cases such as \"status not recovered\" or \"error occurred during recovery\", correctly execute setting the landing gear retraction signal to low level, setting the left and right brake signals to 0, and setting the landing gear retraction fault flag.",
            "When the system experiences a power failure and restarts, it should check the interface data communication to ensure that landing gear retraction signals are set to low level, left and right brake signals are set to 0, and a landing gear retraction fault flag is set, in cases of \"interruption, reconnection, or unrecoverable failure\".",
            "The system should implement false alarm prevention measures for fault detection of the retract lock signal, and ensure that the false alarm prevention process meets the real-time requirements of alarm handling.",
            "The system should check the control solution results for the retraction lock signal to ensure that the landing gear retraction signal is set to low level, the left and right brake signals are set to 0, and the landing gear retraction fault flag is set, correctly executed under conditions such as \"normal value, abnormal value, boundary value, maximum and minimum values\".",
            "The system should perform timeout checks on critical control actions (such as setting the landing gear retraction signal to low level, and setting the left and right brake signals to 0) to handle situations where hardware status fails to meet control requirements for an extended period."
        ]
    },
    {
        "requirement": "When the aircraft returns to the third leg of the five-leg traffic pattern and the distance to the destination point is less than 5000m, the system should set both left and right brakes to 100% and set the landing gear deployment signal to high level.",
        "safety_requirements": [
            "After power recovery or activation of the runaway reset mechanism, the system shall be able to return to normal operating status, ensuring that upon returning to the third side of the five-side approach pattern, when the distance to the landing point is less than 5000m, the left and right brakes are set to 100% and the landing gear deployment signal is set to high level.",
            "The system shall check the control solution results when the aircraft returns to the third leg of the five-leg route and the distance from the departure/arrival point is less than 5000m, ensuring that functions are correctly handled in situations such as \"normal values, abnormal values, boundary values, maximum and minimum values\", including setting both left and right brakes to 100% and placing the landing gear deployment signal at a high level.",
            "During the system state execution, after software power failure and restart, the state after restart should be checked to ensure that under conditions such as \"state not recovered\" or \"error recovery\", when returning to the third leg of the five-leg flight path and the distance to the target point is less than 5000m, the left and right brakes are set to 100% and the landing gear extension signal is set to high level, the function processing is correct.",
            "The system shall check interface data with different redundancy levels to ensure that, in cases of \"single redundancy failure, all redundancies failed (e.g., data anomaly, timing fault, communication failure, destination device failure, etc.)\", the functionality is correctly implemented to fly back to the third leg of the traffic pattern, and when the distance to the waypoint is less than 5000m, set both left and right brakes to 100% and output a high-level signal for landing gear deployment.",
            "The system should check the control solution process when returning to the third leg of the five-leg flight path under different states and operation phases, and the distance from the current position to the destination point is less than 5000 m, ensuring that functions are correctly handled in conditions such as \"operation phase not considered\" and \"status not considered,\" including setting left and right brakes to 100% and gear deployment signal to high level."
        ]
    },
    {
        "requirement": "The system needs to calculate the value of yg based on the lateral offset Dz, lateral offset velocity Dz, and Δy using a formula.",
        "safety_requirements": [
            "The system should check whether the lateral offset Dz, lateral offset velocity Dz, and the rate of change of Δy are within reasonable ranges to ensure that the handling strategy for superslope data is clearly defined.",
            "The system shall ensure that the control sequence and timing are coordinated with the hardware, with complete and consistent control conditions.",
            "The system should check the calculated yg value to ensure the correctness of functional processing under conditions such as \"normal value, abnormal value, boundary value, maximum and minimum values\".",
            "The system should check the data bit value accuracy of the interface data to ensure correctness of the output when the data bit value accuracy is higher than the required precision.",
            "The system should check the data bit value accuracy of the interface data to ensure correctness of the output when the data bit value accuracy is less than the required precision."
        ]
    },
    {
        "requirement": "The system should check the unlock signal after 1s.",
        "safety_requirements": [
            "The system should have a timeout mechanism when checking the unlock signal after 1s, to handle situations where the hardware status fails to reach the control requirements within the expected time.",
            "After 1 second, when the system checks for the unlock signal, it should ensure that the control sequence and timing are coordinated with the hardware, and that control conditions are complete and consistent.",
            "After power recovery or activation of the runaway reset mechanism, the system should be able to return to normal operation, ensuring the check function for the unlock signal operates normally.",
            "During the execution of system status, if a power failure or restart occurs due to software issues, the status after restart should be checked to ensure correct execution under conditions such as 'status not restored' and 'error recovery'. Particular attention should be paid to the checking function for releasing the lockout signal.",
            "The system should have a clear fault recovery mechanism to ensure that after fault recovery, the check function of releasing the lock signal can be properly restored and operate normally."
        ]
    },
    {
        "requirement": "If the downlock signal is low, indicating a landing gear extension circuit fault, set the emergency landing gear extension signal to high. After 1 minute, set both the landing gear extension and emergency landing gear extension signals to low (in this case, the downlock signal cannot be checked), set the left and right brakes to their respective preset values, and activate the landing gear extension fault flag.",
        "safety_requirements": [
            "After a software power failure and restart, the system should check the status after restart to ensure correct state recovery, preventing landing gear deployment fault flags from being invalidated or misjudged due to situations such as 'state not recovered' or 'incorrect recovery'.",
            "When the system restarts after a software power failure, it should check interface data communication to ensure correct handling of signals for landing gear deployment and emergency landing gear deployment in cases such as communication interruption, reconnection, and unrecoverable conditions, preventing unintended operations.",
            "系统应具备防虚警处理机制，确保故障检测的准确性，并满足告警处置的实时性要求，防止误报或漏报。",
            "The system should check the control calculation results to ensure correct handling of emergency landing gear deployment signals and brake pre-selection values under conditions such as \"normal values, abnormal values, boundary values, maximum and minimum values,\" preventing erroneous operations.",
            "The system should be designed with reasonable fault detection logic to ensure that the detection method does not affect the normal operation of the equipment, preventing false alarms or incorrect operations."
        ]
    },
    {
        "requirement": "If the gear down lock signal is high, periodically check the gear down lock signal: if the gear down lock signal becomes low within 1 minute, it indicates that the landing gear has been lowered; set the gear down signal to low, set the landing gear status to down, set the left and right brakes to their respective preset values, and set the landing gear deployment fault flag to invalid.",
        "safety_requirements": [
            "After a software power failure and restart, the system should check the status after restart to ensure correct state recovery and prevent incorrect handling of landing gear status due to situations such as 'state not recovered' or 'incorrect recovery'.",
            "The system shall check interface data communication during software power failure and restart, ensuring the correct handling of landing gear status and related signals under conditions such as communication interruption, reconnection, and unrecoverable states.",
            "The system should check the control solution results for the lowered and locked signal to ensure the correct handling of landing gear status and related signals under conditions such as \"normal value, abnormal value, boundary value, maximum/minimum value\", etc.",
            "The system should be equipped with a false alarm prevention mechanism to ensure that, when a change in the unlock signal is detected, the false alarm prevention process meets the real-time requirements for alarm handling.",
            "The system should check the safety values of interface data to ensure the correct processing of landing gear status and related signals when the difference between safety values and normal values under fault-free interface data is excessive."
        ]
    },
    {
        "requirement": "If the gear down lock signal is high, periodically check the gear down lock signal: if after 1 minute the gear down lock signal remains high, it indicates a landing gear extension fault; then set the emergency landing gear extension signal to high and periodically check the gear down lock signal again after 1 second.",
        "safety_requirements": [
            "After a power failure and subsequent restart of the system software, the system should check its status to ensure correct state recovery and prevent landing gear deployment failures caused by situations such as 'state not recovered' or 'incorrect recovery'.",
            "When the system restarts due to a software power failure, it should check the interface data communication to ensure correct detection and handling of lockout signals under conditions such as communication interruption, reconnection, and unrecoverable failures.",
            "The system should check the control solution results for the lowered lock signal to ensure the correctness and consistency of functional processing under conditions such as \"normal values, abnormal values, boundary values, maximum and minimum values.\"",
            "The system should be designed with reasonable logic for detecting landing gear deployment faults, ensuring that the detection method does not affect the normal operation of the equipment.",
            "The system should have a false alarm prevention mechanism to ensure that, when a landing gear deployment fault is detected, the false alarm prevention meets the real-time requirements for alarm handling."
        ]
    },
    {
        "requirement": "If the lock release signal remains high after 1 minute, it indicates a failure in the emergency landing gear deployment. Both the landing gear deployment and emergency deployment signals are set to low, the left and right brakes are set to their respective preset values, and the landing gear deployment fault flag is activated.",
        "safety_requirements": [
            "After a software power failure and restart, the system should check the status after restart to ensure correct state recovery and prevent landing gear deployment faults caused by situations such as 'state not recovered' or 'incorrect recovery'.",
            "The system should have an anti-false alarm processing mechanism to ensure the real-time performance and accuracy of fault detection, preventing false alarms and missed alarms.",
            "When the system restarts due to software power loss, it shall check the integrity of interface data communication, ensure the correctness of data communication output under conditions such as 'interruption, reconnection, and unrecoverable failure', and prevent landing gear deployment faults.",
            "The system should check the control solution results to ensure the correctness and reliability of functional processing under conditions such as \"normal values, abnormal values, boundary values, maximum and minimum values,\" preventing landing gear deployment faults.",
            "The system should fully consider and implement all possible fault items to ensure the comprehensiveness and effectiveness of fault detection, preventing landing gear deployment faults."
        ]
    },
    {
        "requirement": "If the lock release signal goes low within 1 minute, it indicates successful emergency landing gear deployment. After a 2-second delay, both the landing gear deployment and emergency deployment signals are set to low level, the landing gear status is set to deployed, the left and right brakes are set to their respective preset values, and the landing gear deployment fault flag is set to invalid.",
        "safety_requirements": [
            "After a software power failure and restart, the system should check the status after restarting to ensure correct status recovery and prevent situations such as 'status not recovered, incorrect recovery' that may lead to emergency landing gear deployment failure.",
            "The system should have a false alarm prevention mechanism to ensure the accuracy of fault detection and meet the real-time requirements for alarm handling.",
            "The system should check the control solution results for emergency landing gear deployment to ensure the correctness and reliability of functional processing under conditions such as \"normal values, abnormal values, boundary values, maximum and minimum values\".",
            "When the system experiences a power failure and restarts, the status of interface data communication should be checked to ensure the correct output of the landing gear emergency release function in cases of communication 'interruption, reconnection, or failure to recover'.",
            "The system should check functional inputs under different states and operational phases to ensure correct handling of the landing gear emergency deployment function in cases such as 'unconsidered operational phase, unconsidered working state'."
        ]
    },
    {
        "requirement": "During ground power-up, the system should initialize all signals and statuses to ensure the landing gear and brake systems are in the correct initial state.",
        "safety_requirements": [
            "During ground power-up, the system should check the status of all external devices (such as sensors, NVM, databases, other systems, etc.) to ensure they are in the correct operating state, such as 'powered off, initialized', before initializing signals and states.",
            "During system initialization, the sequence and timing of controls should be coordinated with the hardware, ensuring complete and consistent control conditions to verify the correct initial status of the landing gear and brake systems.",
            "After the system's power failure recovery or runaway reset mechanism is activated, it should be able to return to normal operating conditions, ensuring the initial states of the landing gear and braking systems are correct.",
            "When issuing control commands or actions, the system should make reasonableness judgments based on the equipment status to ensure the safety and effectiveness of the commands.",
            "During state execution, if the software experiences a power loss and restarts, the system should check the state after restarting to ensure the correctness of state execution in cases such as 'state not recovered' or 'error recovery', and ensure the correct initial state of the landing gear and braking system."
        ]
    },
    {
        "requirement": "Remote control commands for extending or retracting the landing gear can be issued in any control mode as required.",
        "safety_requirements": [
            "When the system issues remote control commands to extend or retract the landing gear in any control mode, it should ensure that the control sequence and timing are coordinated with the hardware, and that control conditions are complete and consistent.",
            "When the system issues remote control commands to deploy or retract the landing gear, it should have a timeout detection mechanism to handle situations where the hardware state fails to meet control requirements for an extended period.",
            "When the system issues remote control commands to extend or retract the landing gear, it should make a rational judgment based on the equipment status to prevent issuing hazardous control commands or actions.",
            "When the system issues remote control commands to deploy or retract the landing gear under different states and operational phases, it should check the function inputs to ensure the correctness of function processing in cases where the operational phase or state is not considered.",
            "When the system issues remote control commands to deploy or retract the landing gear, it should ensure the correct timing relationships, constraint relationships, concurrency relationships, and combination relationships among the control logic of each functional point."
        ]
    },
    {
        "requirement": "Upon receiving the \"Retract Landing Gear\" remote command, if the flight phase is not Ground Waiting and the flight altitude is no less than 80m, the handling specified in 3.2.11.3 item 1) shall be performed (excluding its conditions).",
        "safety_requirements": [
            "When the system receives the remote command \"Retract landing gear\", it should check whether the current flight phase is ground waiting. If not and the flight altitude is no less than 80m, the handling specified in 3.2.11.3 item 1) shall be executed.",
            "When the system receives a remote command to \"retract landing gear\", if the flight phase is ground waiting or flight altitude is below 80m, it should reject the command execution and trigger the warning mechanism.",
            "When the system receives a remote command to \"retract landing gear,\" it should assess the reasonableness of the command. If the command is not consistent with the current flight status or scenario, the system should reject execution and log the event.",
            "When the system receives the remote command \"Retract landing gear\", it should check the function inputs to ensure the correctness and safety of function processing, regardless of the operational phase or status.",
            "When the system issues the \"retract landing gear\" control command, it should make a rationality judgment based on the equipment status to ensure the safety and effectiveness of the control command."
        ]
    },
    {
        "requirement": "When receiving the remote control command \"Lower Landing Gear\", proceed according to item 2) of 3.2.11.3 (excluding its conditions).",
        "safety_requirements": [
            "When the system receives a remote control command of \"landing gear extension\", it should assess the validity of the operator's action, and not respond to commands that are inconsistent with the current scenario or status.",
            "The system should specify requirements for handling misoperations and invalid operations, ensuring appropriate processing when invalid commands are received.",
            "The system should specify response handling for non-compliant operational procedures to ensure appropriate handling when operational procedures are incorrect.",
            "When the system issues a control command for \"landing gear extension\", it should make a reasonableness judgment based on the equipment status to prevent issuing hazardous control commands or actions.",
            "The system should have a timeout judgment mechanism for the critical control action of \"landing gear deployment\" to handle situations where the hardware state fails to meet control requirements for an extended period."
        ]
    },
    {
        "requirement": "The system should support adjusting the throttle valve opening during the takeoff phase by fine-tuning the throttle valve micro-adjustment, with the adjustment limit range of [-15%, 0%].",
        "safety_requirements": [
            "The system should ensure that the rate of change of the throttle fine adjustment remains within a reasonable range, with clear upper and lower slope limits, and implement defined handling strategies in case of slope exceedance.",
            "The system should clearly define the sensor's acquisition range, and when the throttle valve adjustment exceeds this range, a sensor fault should be reported.",
            "When the system is adjusting the throttle valve micro-adjustment, it should coordinate with the hardware, and the control sequence and timing should be complete and consistent.",
            "The system should check the control adjustment resolution results of the throttle valve to ensure the correctness of functional processing under normal values, abnormal values, boundary values, maximum and minimum values.",
            "The system shall ensure that the output value of the currently running throttle fine-tuning function does not become abnormal when the redundancy switching condition is met."
        ]
    },
    {
        "requirement": "Each of the two rear wheels of the aircraft has an independent braking system. The braking system uses a PWM control scheme. The flight control computer sends a 2 kHz pulse width modulation signal to the braking system, where the brake torque is proportional to the duty cycle of the PWM signal. The duration of braking corresponds to the duration of the PWM signal.",
        "safety_requirements": [
            "The system should check the correctness of functional inputs under different states and operational phases, ensuring that the control calculation process of the braking system complies with the current operational state and phase, preventing functional processing errors caused by neglecting the operational phase or state.",
            "When the system performs brake control, it should ensure that the control sequence and timing are coordinated with the hardware, that control conditions are complete and consistent, and prevent brake failure or malfunction caused by timing errors.",
            "The system should have a timeout judgment mechanism during critical control or actions to handle situations where hardware status fails to meet control requirements for an extended period, ensuring the reliability and safety of the braking system.",
            "After power recovery or reset from a runaway condition, the system should be able to return to normal operation, ensuring the brake system functions properly and preventing brake failure caused by the reset.",
            "The system should check the brake control calculation results to ensure the correctness of functional processing under normal values, abnormal values, boundary values, maximum and minimum values, etc., to prevent brake anomalies caused by calculation errors."
        ]
    },
    {
        "requirement": "If the full compression signal of the landing gear is valid and the airspeed is less than a certain speed threshold vk_may_brake, differential braking is used for course correction.",
        "safety_requirements": [
            "The system should perform a timeout check when the landing gear full compression signal is valid and the airspeed is less than the speed threshold vk_may_brake, to ensure that the differential braking correction function can be promptly addressed if the hardware status fails to meet control requirements for an extended period.",
            "The system should check the control calculation results of the differential braking correction function to ensure the correctness of functional processing under conditions such as \"normal values, abnormal values, boundary values, maximum and minimum values.\"",
            "The system shall verify the control solution process when the landing gear full compression signal is valid and the airspeed is less than the speed threshold vk_may_brake, under different states and operational phases, ensuring correct functional handling in cases such as 'operational phase not considered, operational state not considered'.",
            "During the execution of system status, if a power failure or restart occurs in the software, the status after restart should be checked to ensure correct state execution in situations such as \"status not restored\" or \"error recovery\".",
            "When the system performs differential braking for deviation correction control, it should ensure that the control sequence and timing are coordinated with the hardware, and that control conditions are complete and consistent."
        ]
    },
    {
        "requirement": "In autonomous control mode, the differential brake control law is: δb = -(Kz * Dz + Kz * Dz - K * Δy - Ky * wy)",
        "safety_requirements": [
            "When the system is in autonomous control mode, it should check the control solution results of the differential braking control law δb = -(Kz * Dz + Kz * Dz - K * Δy - Ky * wy) to ensure the correctness of functional processing under normal values, abnormal values, boundary values, maximum and minimum values.",
            "The system should check the inputs of the differential brake control law under different states and operational phases to ensure the correctness of functional processing in cases where the operational phase or state is not considered.",
            "When the system performs differential braking control, it should ensure that the control sequence and timing are coordinated with the hardware, and that the control conditions are complete and consistent.",
            "The system should have a timeout judgment mechanism when performing differential brake control to handle situations where the hardware status fails to meet control requirements for an extended period.",
            "During the differential brake control process, the system should ensure the correct timing relationships, constraint relationships, concurrency relationships, and combination relationships between each functional point's control logic."
        ]
    },
    {
        "requirement": "In manual correction mode, the differential brake control law is: δb = -[Kz * (Dz - DzgSemi - DzsemiOld) + Kz * Dz - K * Δy - Ky * wy], where DzsemiOld is the lateral offset correction value during the flare segment.",
        "safety_requirements": [
            "When the system is in manual correction mode, it should check the input parameters of the differential brake control law to ensure their correctness and integrity under different states and operational phases, preventing erroneous calculations caused by unconsidered operational phases or states.",
            "The system should check the calculation results of the differential brake control law to ensure that the results are within the normal value range. For abnormal values, boundary values, maximum and minimum values, the corresponding exception handling mechanism should be triggered.",
            "When the system executes the differential braking control law, it should ensure that the control sequence and timing are coordinated with the hardware, the control conditions are complete and consistent, and prevent control failure caused by timing issues.",
            "The system shall ensure the correctness of timing relationships, constraint relationships, concurrency relationships, and combination relationships between the differential brake control laws and the control logic of other functional points, to prevent control errors caused by logic conflicts.",
            "The system should monitor the calculation process of the differential brake control law to ensure that the calculation results are returned within the specified time. In case of a timeout, the corresponding timeout handling mechanism should be triggered to prevent control failure caused by the timeout."
        ]
    },
    {
        "requirement": "In the attitude control mode with in-band loop remote control, the differential brake control law is: δb = K * (-yg) + Ky * wy",
        "safety_requirements": [
            "In the in-band loop remote control (attitude remote control) mode, the system shall ensure that the control sequence and timing of the differential brake control law δb = K * (-yg) + Ky * wy are coordinated with the hardware, and that the control conditions are complete and consistent.",
            "The system should check the control solution results of the differential brake control law δb = K * (-yg) + Ky * wy to ensure the correctness of functional processing under conditions such as normal values, abnormal values, boundary values, and maximum/minimum values.",
            "The system should check the input of the differential brake control law δb = K * (-yg) + Ky * wy under different states and operational phases to ensure correct functional processing in cases such as 'operational phase not considered, operational state not considered'.",
            "The system should have a timeout detection mechanism when executing the differential braking control law δb = K * (-yg) + Ky * wy, to handle situations where the hardware status fails to meet control requirements for an extended period.",
            "The system shall ensure the correctness of timing relationships, constraint relationships, concurrency relationships, and combination relationships between the differential brake control law δb = K * (-yg) + Ky * wy and control logic of other function points."
        ]
    },
    {
        "requirement": "In the non-internal-loop remote control (control surface remote control) mode, the specific formula for the differential braking control law is not provided, but the corresponding control logic needs to be implemented.",
        "safety_requirements": [
            "When the system is in remote control mode without internal loop, it should ensure that the sequence and timing of the differential braking control logic are coordinated with the hardware, with complete and consistent control conditions.",
            "When the system is in remote control mode without inner loop, it should perform timeout detection on critical control operations or actions to handle situations where hardware status fails to meet control requirements for an extended period.",
            "The system should check the inputs of the differential brake control logic under different states and operational phases to ensure the correctness of functional processing, regardless of the operational phase or state being considered or not.",
            "When the system is in remote control mode without internal loop, it should ensure that the output control status timing of the differential braking control logic meets the scenario requirements.",
            "When the system is in remote control mode without internal loop, it should have an output loop detection mechanism to perform loop status detection without affecting normal output."
        ]
    },
    {
        "requirement": "During the ground waiting phase, the differential brake control laws under autonomous and manual correction modes are: δb = 0.",
        "safety_requirements": [
            "The system should have a timeout determination mechanism during the ground waiting phase to ensure that the differential brake control law δb = 0 is executed in a timely manner when the hardware status fails to meet control requirements for an extended period.",
            "During the ground waiting phase of the system, functional inputs should be checked to ensure that the calculation result of the differential brake control law δb = 0 is correct, without considering the operating phase or operating status.",
            "During the ground waiting phase, the system should check the computational results of the differential brake control law δb = 0 to ensure correct handling under normal values, abnormal values, boundary values, maximum and minimum values.",
            "During the ground waiting phase, the system should ensure that the control sequence and timing are coordinated with the hardware, and that control conditions are complete and consistent to guarantee the correct execution of the differential brake control law δb = 0.",
            "During the ground waiting phase, the system should check the state entry conditions to ensure the correctness of state execution when the entry conditions are met, not met, or met again during the execution process."
        ]
    },
    {
        "requirement": "In remote control mode, it is the same as during the taxi phase, where vk_may_brake = 80 km/h.",
        "safety_requirements": [
            "In remote control mode, the system should have a timeout detection mechanism to handle situations where the hardware status fails to meet control requirements for an extended period, ensuring the control requirement of vk_may_brake = 80 km/h is satisfied.",
            "In remote control mode, the system's control sequence and timing should be coordinated with the hardware to ensure complete and consistent control conditions, especially during the taxiing phase.",
            "In remote control mode, the system shall verify functional inputs to ensure the correctness of functional processing without considering the work phase or operating status, particularly meeting the control requirement of vk_may_brake = 80 km/h.",
            "In remote control mode, the system should clearly define the sensor measurement range (upper and lower limits), and report a sensor fault when the sensor value exceeds the measurement range, ensuring the control requirement of vk_may_brake = 80 km/h.",
            "In remote control mode, the system should check the control solution results of the function to ensure the correctness of function handling when the control solution result is a normal value, abnormal value, boundary value, maximum or minimum value, etc., especially for the control requirement of vk_may_brake = 80 km/h."
        ]
    },
    {
        "requirement": "If the full landing gear compression signal is valid and the airspeed is not less than vk_may_brake, then δb = 0.",
        "safety_requirements": [
            "The system shall ensure that the control sequence and timing for δb = 0 are coordinated with the hardware, and that the control conditions are complete and consistent when the landing gear full compression signal is valid and the airspeed is not less than vk_may_brake.",
            "The system should check the control solution results for δb = 0 when the landing gear full compression signal is valid and the airspeed is not less than vk_may_brake, ensuring the correctness of functional handling under conditions such as \"normal values, abnormal values, boundary values, maximum and minimum values\".",
            "The system should be equipped with a fault detection mechanism to prevent false alarms in the δb = 0 control when the landing gear full compression signal is valid and the airspeed is no less than vk_may_brake, and shall meet the real-time requirements for alarm handling.",
            "The system shall check the effectiveness of the full landing gear compression signal and ensure that the control input δb = 0 is handled correctly when the airspeed is not less than vk_may_brake, under different states and operational phases, to guarantee correct functional processing even in cases such as 'operational phase not considered' or 'operational status not considered'.",
            "The system should perform a timeout check on the critical control of δb = 0 when the landing gear full compression signal is valid and the airspeed is not less than vk_may_brake, in order to handle situations where the hardware status fails to meet control requirements for an extended period."
        ]
    },
    {
        "requirement": "δb is limited within [-XfB, XfB]. XfB is the maximum proportional braking amount, which can be set via remote control, default value is 40%.",
        "safety_requirements": [
            "The system should clearly define the range of sensor acquisition δb, and when the acquired value exceeds [ -XfB, XfB ], a sensor fault should be reported.",
            "The system should check the control solution results for δb to ensure correct functional handling under conditions such as 'normal values, abnormal values, boundary values, and extreme maximum/minimum values'.",
            "The system shall ensure that the output data of δb is within the range [ -XfB, XfB ]; when exceeding the range, it shall output or truncate according to safety values.",
            "The system should perform timeout detection on critical controls or actions of δb to handle situations where the hardware status fails to meet control requirements for an extended period.",
            "The system should check the control solution process for δb to ensure that functional input is processed correctly under different states and operational phases."
        ]
    },
    {
        "requirement": "The system should support autonomous throttle control for climb segment 1.",
        "safety_requirements": [
            "During the autonomous throttle control for the first climbing phase, the system should ensure that the control sequence and timing are coordinated with the hardware, with complete and consistent control conditions.",
            "When the system performs autonomous throttle control during climb phase 1, a timeout determination mechanism should be set for critical control or actions to handle situations where hardware status fails to meet control requirements for an extended period.",
            "When the system performs autonomous throttle control during climb phase 1, it should ensure the correctness of timing relationships, constraint relationships, concurrency relationships, and combination relationships between functional control logics.",
            "After the system performs autonomous throttle control during the first climbing phase, it should monitor and assess the consistency between hardware status and control requirements to ensure the control outcome meets expectations.",
            "The system should check the autonomous throttle control resolution results for climb phase 1 to ensure the correctness of functional processing under conditions such as \"normal values, abnormal values, boundary values, maximum and minimum values\"."
        ]
    },
    {
        "requirement": "If δb < 0, then δbL = -δb + YzBL + YjB, δbR = YzBL + YjB; otherwise δbL = YzBL + YjB, δbR = δb + YzBR + YjB.",
        "safety_requirements": [
            "The system should check the cycle of interface data to ensure that the calculation results of δbL and δbR are correct when the input value cycle is \"greater than the specified cycle, less than the specified cycle, maximum and minimum values,\" etc.",
            "The system should check the data bit value accuracy of the interface data to ensure the calculation results of δbL and δbR are correct when the data bit value accuracy is \"less than the required accuracy\" or similar conditions.",
            "The system should check the data bit value accuracy of the interface data to ensure the correct calculation of δbL and δbR when the data bit value accuracy is \"greater than the required precision\" or similar conditions.",
            "The system should check the control solution results to ensure that δbL and δbR are calculated correctly when the control solution results are in situations such as \"normal value, abnormal value, boundary value, maximum and minimum values\".",
            "The system should check the data processing procedures of the functions to ensure that no division by zero occurs during data processing, in order to prevent calculation errors."
        ]
    },
    {
        "requirement": "YzBL and YzBR are the preset values for left and right brakes respectively, which can be set via remote control, with a default value of 10%.",
        "safety_requirements": [
            "The system should check the control resolution results of YzBL and YzBR to ensure the correctness of functional processing under normal values, abnormal values, boundary values, maximum and minimum values.",
            "The system should check the inputs of YzBL and YzBR according to different states and working phases, ensuring the correctness of functional processing regardless of the working phase or state being considered.",
            "After a software power failure and restart, the system should check the status of YzBL and YzBR to ensure correct status recovery after restart, avoiding situations where the status is not recovered or incorrectly recovered.",
            "The system should clearly define the sensor acquisition range (upper and lower limits) for YzBL and YzBR, and report a sensor fault when the acquired value exceeds the defined range.",
            "The system should be equipped with a shielding detection mechanism against inadvertent button presses, ensuring that the settings of YzBL and YzBR are not affected by accidental operations."
        ]
    },
    {
        "requirement": "YjB is the emergency brake offset, which is 0 under normal conditions and 30% when the link is interrupted.",
        "safety_requirements": [
            "The system should check the safety values of interface data to ensure that YjB is 30% when the link is interrupted, compare it with the normal value of 0, and analyze whether the output is correct when the difference between the safety value and the normal value under non-fault conditions is excessively large.",
            "The system should check the timing of interface data values to ensure that YjB outputs correctly when the input timing is \"premature stop,\" \"delayed stop,\" or similar cases.",
            "The system should check the control solution results of YjB to ensure the correctness of functional processing under conditions such as \"normal value, abnormal value, boundary value, maximum and minimum value\".",
            "The system should check the communication status of the interface data frame to ensure the correctness of YjB's output in cases such as \"communication interruption\".",
            "The system should have a false alarm prevention mechanism for fault detection and ensure that the false alarm prevention meets the real-time requirements for alarm handling."
        ]
    },
    {
        "requirement": "After performing the calculation according to a), the resulting max(δbL ,δbR ) ≤1.",
        "safety_requirements": [
            "The system should check the calculation result max(δbL, δbR) to ensure correct functional handling under normal values, abnormal values, boundary values, maximum and minimum values, etc.",
            "The system should check for division by zero during the data processing to ensure the correctness and safety of data handling.",
            "The system should check functional inputs under different states and operational phases to ensure correct functional processing even when the operational phase or state is not considered.",
            "The system should check the data bit value accuracy of the interface data to ensure that the data bit value accuracy meets the requirements and avoid output errors caused by insufficient accuracy.",
            "The system should have a clear handling strategy when output data exceeds limits, such as truncation or outputting according to safety values, to ensure the correctness and safety of the output data."
        ]
    },
    {
        "requirement": "The specific softening time should be determined according to control requirements, actual needs, and previous control experience.",
        "safety_requirements": [
            "The system shall ensure that the control sequence and timing are coordinated with the hardware when determining the softening time, with complete and consistent control conditions.",
            "The system should have a timeout detection mechanism when performing critical control operations or actions, to handle situations where hardware status fails to meet control requirements for an extended period.",
            "The system should ensure that the timing of outputting control status meets the requirements of the scenario, avoiding control failure caused by improper timing.",
            "After the system performs hardware control, it should monitor and determine the consistency between the hardware status and the control requirements to ensure that the control effect meets expectations.",
            "The system should ensure the correctness of timing relationships, constraint relationships, concurrency relationships, and combination relationships among control logics of various functional points, avoiding control anomalies caused by logic conflicts."
        ]
    },
    {
        "requirement": "The transition into and out of the ground waiting phase is made more reliable through a two-out-of-three switching command selection.",
        "safety_requirements": [
            "When the system enters and exits the ground waiting phase, a three-out-of-two switching command mechanism should be used to improve reliability, ensuring that high-priority states can correctly transition to low-priority states, and vice versa.",
            "When the system enters and exits the ground waiting phase, the sequence and timing of control should be checked for coordination with the hardware to ensure complete and consistent control conditions.",
            "When the system enters and exits the ground waiting phase, the operating status of different redundancies should be checked to ensure the correctness of function implementation when two or more redundancies are in different states.",
            "The system should perform timeout checks on critical controls or actions when entering or exiting the ground waiting phase, in order to handle situations where hardware status fails to meet control requirements for an extended period."
        ]
    },
    {
        "requirement": "The transition conditions for other phases should be judged multiple times according to specific circumstances, and phase transition should only occur when the results of five consecutive judgments are consistent, in order to reduce the probability of misjudgment.",
        "safety_requirements": [
            "When the system performs a phase transition, it should make multiple judgments based on specific conditions. The phase transition will only occur when five consecutive judgments yield the same result, thereby reducing the probability of misjudgment.",
            "The system should check the transition conditions between the same state and multiple other states to ensure the correctness of state transitions when multiple transition conditions are satisfied simultaneously.",
            "The system should check the correctness of states and functions in scenarios where two or more states with transition relationships have different priority levels, ensuring proper behavior during transitions such as \"high priority switching to low priority\" and \"low priority switching to high priority\".",
            "The system should check for cases where there is no transition relationship between two or more states, ensuring the correctness of state execution under conditions such as \"entry conditions being simultaneously satisfied\" or \"conditions being satisfied during state execution.\"",
            "The system shall check execution requirements of the same function for two or more states with transition relationships, ensuring correctness of state and function behavior when transitioning between states where the function is allowed in some states and disallowed in others, including scenarios such as \"continuing execution\" or \"interrupting execution\" during state transitions.",
            "The system should check the state entry conditions to ensure the correctness of state execution when the entry conditions are \"satisfied, not satisfied, satisfied again,\" etc., during state execution."
        ]
    },
    {
        "requirement": "After the flight control computer is powered on the ground or the aircraft is fully landed and the flight control pre-shutdown command is issued, it enters the ground waiting phase.",
        "safety_requirements": [
            "After the system powers on the flight control computer on the ground or issues a pre-shutdown command upon complete landing of the aircraft, it should check the current operational phase and status to ensure correctness of function processing and prevent errors caused by unconsidered operational phases or statuses.",
            "During the execution of system status, if a software power failure and restart occurs, the status after restart should be checked to ensure correct recovery of the status, preventing functional abnormalities caused by incomplete or incorrect status recovery.",
            "After the system powers on the flight control computer on the ground or issues a flight control pre-shutdown command upon complete landing of the aircraft, it should perform a timeout judgment to handle situations where hardware status remains unable to meet control requirements for an extended period, ensuring reliability of critical control or actions.",
            "The system should check the control calculation results after issuing a pre-shutdown command to the flight control computer upon ground power-up or full aircraft landing, ensuring correct functional handling under conditions such as normal values, abnormal values, boundary values, and maximum/minimum values.",
            "The system shall check the control calculation process after the flight control computer is powered on the ground or the aircraft is fully landed and a pre-shutdown command is issued, to ensure that the control calculation process returns results within the specified time, preventing functional processing errors caused by timeouts."
        ]
    },
    {
        "requirement": "During the ground taxiing phase (including takeoff and landing roll), after receiving a ground hold command sent remotely, the system transitions to the ground hold phase.",
        "safety_requirements": [
            "After receiving a ground hold command during the ground taxi phase, the system should check its current operating phase and status to ensure correct command processing and prevent functional anomalies caused by ignoring the operating phase or status.",
            "After power recovery or reset due to a runaway condition, the system shall be able to return to normal operating status and ensure the proper execution of functions during the ground waiting phase.",
            "After receiving the ground waiting command, the system should perform a timeout judgment to handle situations where the hardware status fails to meet control requirements for an extended period, ensuring system safety.",
            "The control sequence and timing of the system during the ground waiting phase should be coordinated with the hardware to ensure complete and consistent control conditions, preventing functional anomalies caused by timing inconsistencies.",
            "When the system performs ground waiting tasks, it should check the execution sequence of the tasks to ensure that the task execution order is consistent with the specified sequence, preventing functional anomalies caused by inconsistent sequencing."
        ]
    },
    {
        "requirement": "When max(δbL, δbR) > 100%, if δbL ≥ δbR, set δbR = δbR - (δbL - 100), δbL = 100%; if δbR > δbL, set δbL = δbL - (δbR - 100), δbR = 100%. This ensures that the left and right braking meet the requirement of differential travel.",
        "safety_requirements": [
            "The system should check the control solution results when max(δbL, δbR) > 100%, to ensure the adjustment of δbL and δbR complies with the correctness of functional processing under conditions such as 'normal values, abnormal values, boundary values, maximum and minimum values'.",
            "The system shall check functional inputs under different states and operational phases to ensure that the adjustment processing of δbL and δbR is correct in cases such as \"operational phase not considered, operational state not considered\".",
            "The system should check the data bit value accuracy of the interface data to ensure that when the data bit value accuracy is less than the required accuracy, the adjustment outputs of δbL and δbR are correct.",
            "The system should check the data bit value accuracy of the interface data to ensure that when the data bit value accuracy is greater than the required accuracy, the adjustment outputs of δbL and δbR are correct.",
            "The system should check the safety values of interface data, compare the safety values with the normal values of the interface data when no fault occurs, and ensure that the adjustment outputs of δbL and δbR are correct when the difference between the safety value and the normal value without fault is too large."
        ]
    },
    {
        "requirement": "The system should support adjusting the throttle valve opening during climb phase 1 by fine-tuning the throttle valve, with the limit range set to [-15%, 0%].",
        "safety_requirements": [
            "The system should ensure that the rate of change of the throttle valve fine adjustment remains within a reasonable range, with clear upper and lower slope limits, and implement defined handling strategies in case of out-of-slope conditions.",
            "The system should clearly define the upper and lower limits of the sensor's measurement range. When the measured value exceeds this range, a sensor fault should be reported.",
            "When adjusting the throttle valve trimming, the system should ensure that the control sequence and timing are coordinated with the hardware, and the control conditions should be complete and consistent.",
            "The system should check the control resolution results of the throttle valve fine adjustment to ensure the correctness of functional processing under normal values, abnormal values, boundary values, maximum and minimum values.",
            "The system should be designed with reasonable detection logic for fault items to ensure that the detection method does not affect the normal operation of the equipment."
        ]
    },
    {
        "requirement": "The brake command issued by the remote control has the highest priority. Regardless of the current control mode, when a \"brake\" command is received, the aircraft will superimpose the full brake value onto the left and right brake control outputs respectively, followed by over-limit processing. The full brake value can be remotely set, with a default value of 80%.",
        "safety_requirements": [
            "When the system receives a \"brake\" command, it should immediately execute full brake application and output after over-limit processing, ensuring the highest priority of the brake command.",
            "The system should perform a timeout check on the execution of brake commands. If the hardware status does not meet the control requirements for an extended period, the exception handling mechanism should be triggered.",
            "The system shall check the input of brake commands under different control modes to ensure correct handling of brake commands in cases such as \"ignoring operational phase\" or \"ignoring operating status.\"",
            "The system should check the control calculation results for brake commands to ensure correct handling of brake commands under conditions such as \"normal values, abnormal values, boundary values, maximum and minimum values\".",
            "The system should have a clear handling strategy when output data exceeds limits, such as truncation or outputting according to safe values, to ensure the safe execution of braking commands.",
            "After a power failure and subsequent restart of the system software, the system should check the status after restart to ensure correct execution of brake commands in cases such as 'status not restored' or 'error recovery'."
        ]
    },
    {
        "requirement": "When receiving the \"release brake\" command, braking is performed according to the calculated left and right brake amounts (i.e., without superimposing the full brake amount). At this time, if the calculated brake amount δb is 0, both left and right brakes take the corresponding brake preset values.",
        "safety_requirements": [
            "The system should verify the correctness of functional inputs under different states and operational phases, ensuring that when the calculated braking amount δb is 0 in the case of 'operational phase not considered, operational state not considered', both left and right brakes take the corresponding brake preset values.",
            "The system should verify the calculated brake amount δb to ensure the correctness of functional processing under conditions such as \"normal value, abnormal value, boundary value, maximum and minimum values\", and trigger a warning mechanism in case of abnormalities.",
            "During the system state execution, if a power failure and subsequent restart occur in the software, the status after restart should be checked to ensure that under the conditions of 'state not recovered, error recovered', when the calculated brake amount δb is 0, both left and right brakes take the corresponding brake preset values.",
            "The system should check the control calculation process for the resolved brake amount δb to ensure the correctness of functional processing in case of a timeout (failure to return results within the specified time), and trigger a warning mechanism in the event of a timeout.",
            "The system should check the continuous output data values of different redundancies, ensuring that when two or more redundant output data values are inconsistent (i.e., the difference exceeds the specified threshold), the calculated brake input δb is 0, and both left and right brakes adopt the corresponding brake preset values."
        ]
    },
    {
        "requirement": "When receiving a vehicle command or a brake release command, the left and right brake control amounts are taken as the left and right ground inspection brake amounts, respectively.",
        "safety_requirements": [
            "When the system's operating status is inconsistent under different redundancy conditions, the values of the left and right brake control quantities should be checked to ensure their correctness, and an early warning mechanism should be triggered in abnormal situations.",
            "The system should check the control resolution results of the left and right brake control quantities to ensure the correctness of functional processing under conditions such as normal values, abnormal values, boundary values, maximum and minimum values.",
            "When the system receives inconsistent values of the same input data under different redundancy configurations, it should check the values of the left and right brake control quantities to ensure their correctness and trigger a warning mechanism in case of anomalies.",
            "The system should check the functional inputs in different states and working stages to ensure the correctness of the values of the left and right brake control variables without considering the working stage or working state."
        ]
    },
    {
        "requirement": "Upon receiving the flight control pre-shutdown command, set the left and right brake control values to 0, i.e., clear the left and right brake presets.",
        "safety_requirements": [
            "After the system receives the flight control pre-shutdown command, it should ensure that the brake control values for both left and right sides are set to 0, and check the restart status after software power-down and reboot to ensure correct status recovery, avoiding situations such as \"status not recovered\" or \"incorrect recovery\".",
            "The system shall check the left and right brake control quantities after receiving the flight control pre-shutdown command, ensuring the control calculation results are within normal ranges, and verifying the correctness of functional processing under abnormal values, boundary values, maximum and minimum extremes.",
            "The system should check the input of flight control pre-shutdown commands under different states and operational phases to ensure the correctness of functional processing in cases such as 'operational phase not considered' or 'operational status not considered'.",
            "The system should have a timeout determination mechanism when executing flight control pre-shutdown commands to handle situations where hardware status fails to meet control requirements for an extended period.",
            "The system should avoid division by zero during the processing of flight control pre-shutdown command data to ensure the correctness and safety of the data processing process."
        ]
    },
    {
        "requirement": "Brake command processing is performed only during ground waiting, takeoff roll, and landing roll phases.",
        "safety_requirements": [
            "When the system processes brake commands during ground waiting, takeoff roll, or landing roll phases, it should make reasonableness judgments based on the equipment status to ensure the safety of issued control commands or actions.",
            "The system should have a timeout detection mechanism when processing brake commands to handle situations where hardware status fails to meet control requirements for an extended period, and take appropriate safety measures after the timeout.",
            "The system should specify requirements for handling misoperations and invalid operations when processing brake commands, ensuring that the system can properly handle invalid commands upon receipt, thereby avoiding hazardous situations.",
            "When processing brake commands, the system should assess the validity of operator actions, ignoring commands that are inconsistent with the current scenario or status to ensure operational safety.",
            "The system should specify response handling for non-compliant operations when processing brake commands, ensuring appropriate measures can be taken to prevent hazards in case of non-compliance with the operational procedures."
        ]
    },
    {
        "requirement": "When retracting the landing gear, both left and right brake quantities are set to 50%; when extending the landing gear, both left and right brake quantities are set to 100%. At the end of landing gear retraction, both left and right brake quantities are set to 0%; at the end of landing gear extension, both left and right brake quantities are set to the preset value.",
        "safety_requirements": [
            "The system should verify functional inputs under different states and operational phases of landing gear deployment and retraction to ensure correct brake setting regardless of the operational phase or state considered.",
            "The system should check the brake control calculation results during landing gear extension and retraction to ensure that brake settings are correct under normal, abnormal, boundary, maximum, and minimum conditions.",
            "During the process of extending or retracting the landing gear, if a power failure occurs and the software restarts, the system should check the status after the restart to ensure correct status recovery and avoid situations where the status is not recovered or incorrectly recovered.",
            "During the process of extending or retracting the landing gear, the system should check the operational status of different redundancies to ensure the correctness of function implementation when two or more redundancies are in different states.",
            "During the process of extending or retracting the landing gear, the system should check the operational status of different redundancies to ensure the correctness of function implementation when two or more redundancies are in different states."
        ]
    },
    {
        "requirement": "When an aircraft is returning and landing, if the conditions for safe landing are not met and the landing continues, it may affect the safety of the landing. To enhance the safety of aircraft landing, a go-around function is provided, enabling the aircraft to adjust its flight status and land again.",
        "safety_requirements": [
            "After power recovery or reset due to program runaway, the system should be able to return to normal operation, ensuring the aircraft can safely perform a go-around or land again.",
            "The system should have a clear fault recovery mechanism, and ensure that this mechanism is reasonable and capable of rapidly restoring the aircraft to a normal flight condition after a fault occurs.",
            "The system shall ensure the correct execution of the go-around function when transitioning between different flight states. It shall continue execution in states where a go-around is permitted, interrupt execution in states where a go-around is not permitted, and perform consistency checks before and after state transitions.",
            "When the system enters the go-around mode, it should check the entry conditions to ensure that the execution of the go-around mode is correct and error-free when the entry conditions are met, not met, or met again.",
            "When the system is performing the go-around function, it should check the execution conditions to ensure that the function is handled correctly when the execution conditions are not met or are met again, and trigger an alert mechanism in abnormal situations."
        ]
    },
    {
        "requirement": "After the aircraft enters the glide path in autonomous or manual correction mode, if it switches to remote control, and then switches back to autonomous control when the flight altitude is above the decision height (40m), the aircraft will automatically perform a go-around using a smooth transition method from remote control to autonomous control.",
        "safety_requirements": [
            "When the system is in remote control mode, if the flight altitude is higher than the decision height (40m), upon switching back to autonomous control mode, it shall automatically perform a go-around and employ a smooth transition method from remote control to autonomous control.",
            "After power recovery or reset due to runaway, the system should be able to return to normal operating conditions and ensure the correctness and safety of the aircraft status.",
            "During the execution of system status, if a power failure or restart occurs in the software, the status after restart should be checked to ensure correct status recovery, avoiding situations such as 'status not recovered' or 'incorrect recovery'.",
            "The system shall check interface data communication during software power failure and restart, ensuring the continuity and integrity of data communication, and avoiding situations such as 'interruption, reconnection, and unrecoverable failures' that may affect system functionality.",
            "The system should have a clear fault recovery mechanism to ensure the correct control solution process of functions under different states and working phases, avoiding functional processing errors caused by situations such as \"not considering the working phase\" or \"not considering the working state.\""
        ]
    },
    {
        "requirement": "The instruction \"Go Around\" is executed when the following conditions 1) and 2) are met simultaneously:\n1) Flight altitude is higher than the decision height (40m). If the control mode is not remote control, the aircraft must also have entered the glide path.\n2) The flight switch command \"Go Around\" is received.",
        "safety_requirements": [
            "After power recovery or runaway reset, the system should be able to return to normal operating status, ensuring correct execution of the go-around command.",
            "During the execution of the system state, if a power failure or restart occurs in the software, the system should check the state after restarting to ensure correct state recovery, and trigger an alarm mechanism in cases such as \"state not recovered\" or \"error recovery\".",
            "The system shall check interface data communication during software power failure and restart, ensuring the correctness of outputs under conditions such as 'interruption, reconnection, unrecoverable', to prevent errors in executing go-around commands.",
            "The system should have a timeout determination mechanism when executing a go-around command to handle situations where hardware status fails to meet control requirements for an extended period, ensuring the timeliness and effectiveness of the go-around command.",
            "The system should have a clear fault recovery mechanism to ensure that in the event of a fault during the execution of a go-around command, it can recover properly and continue executing the go-around command."
        ]
    },
    {
        "requirement": "If the aircraft is in autonomous control mode, directly control the aircraft to perform a go-around; if the aircraft is not in autonomous control mode, automatically switch to autonomous control mode first, and then control the aircraft to perform a go-around. The smoothing method is the same as that used during mode transitions.",
        "safety_requirements": [
            "When the system is in autonomous control mode, if a software power failure and restart occur, the status after restart should be checked to ensure correct state recovery and normal execution of the go-around function.",
            "When the system is in autonomous control mode, if the software experiences a power loss and restarts, the interface data communication should be checked to ensure normal communication recovery and correct output of the go-around function.",
            "When the system is in non-autonomous control mode, if a software power failure and restart occur, the system should check its status after restarting to ensure correct state recovery, automatically switch back to autonomous control mode, and properly execute the go-around function.",
            "When the system is in non-autonomous control mode, if the software experiences a power failure and restarts, it should check the interface data communication to ensure normal communication recovery, automatically switch back to autonomous control mode, and correctly output the go-around function.",
            "The system should have a clear fault recovery mechanism to ensure that it can return to normal operation after power failure recovery or runaway reset, and the go-around function can be executed properly.",
            "The system should check functional inputs under different states and operational phases to ensure the control resolution process of the go-around function is correct and matches the current state and phase."
        ]
    },
    {
        "requirement": "When DH > 10m, transition to the descent phase, reset the airspeed control integrator to zero, and set the softening time limit to 2 seconds.",
        "safety_requirements": [
            "When the system enters the descent phase with DH > 10m, the mission duration shall be checked to ensure correct function handling under the condition that the mission duration is less than the specified time.",
            "When the system enters the descent phase with DH > 10m, the control calculation results should be checked to ensure correct functional handling under conditions such as 'normal values, abnormal values, boundary values, maximum and minimum values'.",
            "When the system enters the descent phase with DH > 10m, it shall ensure that the redundancy switching time does not exceed the specified time limit, and the software shall correctly handle situations where the redundancy switching time is excessively long.",
            "When the system enters the descent phase with DH > 10m, if a software power failure and restart occur, the status after restart should be checked to ensure correct state recovery and avoid situations such as 'state not recovered' or 'incorrect recovery'.",
            "When the system enters the descent phase with DH > 10m, a timeout detection should be set up to handle situations where hardware status fails to meet control requirements for an extended period, ensuring reliability of critical control or actions."
        ]
    },
    {
        "requirement": "The system should support discretization calculations in both longitudinal and lateral directions.",
        "safety_requirements": [
            "The system should check the rate of change of parameters in longitudinal and lateral discretization calculations to ensure they are within reasonable limits, and have clear handling strategies when exceeding upper or lower slope thresholds.",
            "The system should check data bits in the interface data that have discrete value domains to ensure that the output result is correct when each data bit takes any of the enumerated values within the valid range.",
            "The system should check data bits in the interface data that have discrete value ranges to ensure correct output results when data values jump between adjacent cycles.",
            "When the system performs longitudinal and lateral discretization calculations, it should ensure that the control sequence and timing are coordinated with the hardware, and that control conditions are complete and consistent.",
            "The system should check data bits in the interface data that have discrete value ranges to ensure that when the data bit takes a value of \"undefined abnormal value outside the valid range\", the output result is correct and the exception handling mechanism is triggered."
        ]
    },
    {
        "requirement": "Push the throttle to 100% position, transition the flight phase to climb segment 2, control the aircraft longitudinally to climb to the final approach altitude, and laterally to intercept the final approach course from the current position. Once reaching the final approach altitude and maintaining level flight, the aircraft will exit the go-around status and set flaps to 15°. Then re-enter the final approach course and land again.",
        "safety_requirements": [
            "After a software power failure and restart, the system should check the status after restart to ensure correct state recovery and avoid situations such as 'state not recovered' or 'incorrect recovery', ensuring the correctness of operations including transition to climb phase 2, longitudinal control for climbing to the final approach altitude, and lateral control for intercepting the final approach course from the current position.",
            "After power recovery or activation of the runaway reset mechanism, the system should be able to return to normal operation, ensuring the correctness and continuity of operations such as transitioning the flight phase to climb segment 2, longitudinally controlling the aircraft to climb to the final approach altitude, and laterally controlling the aircraft to intercept the final approach course from the current position.",
            "The system shall check functional inputs under different states and operational phases to ensure the correctness of functional processing in scenarios such as 'operational phase not considered' or 'state not considered', and to ensure the correct execution of operations including advancing the throttle to 100% position, transitioning flight phase to climb segment 2, longitudinally controlling the aircraft to climb to the final approach altitude, and laterally controlling the aircraft to intercept the final approach course from the current point.",
            "The system should check the control solution results of the functions to ensure the correctness of functional processing under conditions such as \"normal values, abnormal values, boundary values, maximum and minimum values\". It should also ensure the correctness and safety of operations including pushing the throttle to 100% position, transitioning the flight phase to climb segment 2, longitudinally controlling the aircraft to climb to the final approach altitude, and laterally controlling the aircraft to intercept the final approach course from the current position.",
            "During the multi-function serial execution of the system, the correctness of multi-function processing should be analyzed under conditions such as \"satisfied, changing from satisfied to unsatisfied, unsatisfied, and changing from unsatisfied to satisfied\" of the preceding function execution. This ensures the correctness and continuity of operations including advancing the throttle to 100% position, transitioning the flight phase to climb segment 2, vertically controlling the aircraft to climb to the glide slope height, laterally controlling the aircraft to intercept the glide path from the current point, exiting the go-around status after reaching and maintaining the glide slope altitude, setting flaps to 15°, re-entering the glide path, and landing again."
        ]
    },
    {
        "requirement": "The setting of a starting point is not allowed during the go-around process, but changing the landing direction is permitted.",
        "safety_requirements": [
            "After power recovery or reset from a runaway condition, the system should be able to return to normal operation, ensuring that during the go-around process, setting a new starting point is not allowed, but changing the landing direction functions normally.",
            "The system should have a clear fault recovery mechanism to ensure that during the go-around process, setting a starting point is not allowed, and the function of changing the landing direction remains operational after fault recovery.",
            "The system should have a reasonableness judgment mechanism and should not respond to commands that do not conform to the current go-around scenario or status, such as setting a start point command.",
            "During the go-around process, the system's control sequence and timing shall be coordinated with the hardware to ensure completeness and consistency of the control conditions for changing the landing direction.",
            "The system should specify response handling mechanisms for non-compliant operational procedures, ensuring that during the go-around process, instructions that do not conform to operational procedures, such as setting the starting point instruction, are handled with appropriate responses."
        ]
    },
    {
        "requirement": "In autonomous or manual correction control mode, if the airspeed is less than a certain value for three consecutive judgments (see Appendix for specific values) or the pitch angle is greater than 10 degrees for three consecutive judgments during fixed altitude flight or one segment of descent flight, the aircraft is considered to have entered a stall state.",
        "safety_requirements": [
            "When the system is in autonomous or manual correction control mode, it should check the conditions for entering the stall state during level flight or during the first glide phase of the aircraft, ensuring that the airspeed and pitch angle meet the criteria. Specifically, the aircraft should correctly determine the occurrence of a stall when the airspeed is judged to be continuously below a certain value for three consecutive times or the pitch angle is judged to be greater than 10 degrees for three consecutive times.",
            "During the execution of the system status, if a power failure or restart occurs in the software, the status after restarting should be checked to ensure correct status recovery and avoid situations where the status is not recovered or incorrectly recovered.",
            "The system should check functional inputs under different states and operational phases to ensure the correctness of functional processing, regardless of the operational phase or state being considered.",
            "When there is no transition relationship between two or more states in the system, the entry conditions of these states should be checked to ensure the correctness of state execution when the entry conditions are simultaneously satisfied or during the state execution process.",
            "The system shall check the transition conditions between every pair of states in the software state space to ensure the correctness of state transitions when transition conditions are not set, always satisfied, or never satisfied."
        ]
    },
    {
        "requirement": "Enter climb stage 2, control the elevator airspeed, and push the throttle to 100%. If the aircraft has entered glide slope 1 and stalls, enter go around control.",
        "safety_requirements": [
            "After power recovery or reset from runaway, the system should be able to return to normal operating conditions, ensuring correct execution of actions such as transitioning to climb phase 2, elevator airspeed control, and advancing the throttle to 100%.",
            "After a software power failure and restart, the system should check the status after restart to ensure correct status recovery and prevent flight control anomalies caused by situations such as 'status not recovered' or 'incorrect recovery'.",
            "The system should check functional inputs under different states and operational phases to ensure the correctness and safety of functional processing in scenarios such as 'unconsidered operational phases' or 'unconsidered operating states'.",
            "The system should check the control solution results to ensure the correctness and safety of functional processing under conditions such as \"normal values, abnormal values, boundary values, maximum and minimum values,\" preventing flight control errors caused by abnormal solution results.",
            "The system should have a clear fault recovery mechanism to ensure that in emergency situations such as entering go-around control, the recovery mechanism is reasonable and effective, guaranteeing flight safety."
        ]
    },
    {
        "requirement": "When the airspeed is judged to have increased beyond the given speed for five consecutive times, the aircraft exits the stall condition and proceeds to continue flying by determining which phase to enter (climb phase 2 or level flight phase) based on the current altitude deviation.",
        "safety_requirements": [
            "The system should check the condition of airspeed increasing to greater than the given speed, ensuring the correctness of state execution under conditions where the requirement is met, not met, or met again during state execution.",
            "The system should check the transition conditions between the state where airspeed increases to a value greater than the given speed and other states, ensuring the correctness of state transitions under conditions such as transition conditions not set, always satisfied, or never satisfied.",
            "When the system transitions between operational states, the values of functional interface data should be checked to ensure the correctness of state transition outputs in cases where the value or value range changes.",
            "The system should check the transition conditions between the state where airspeed increases to greater than a given speed and multiple other states, ensuring the correctness of state transitions when multiple transition conditions are satisfied simultaneously.",
            "The system shall ensure that when airspeed is judged to increase beyond the given speed for five consecutive times, the aircraft exits the stall condition, and according to the altitude deviation at that time, transitions into either climb phase 2 or level flight phase, ensuring correctness and consistency of state transitions during the subsequent flight."
        ]
    },
    {
        "requirement": "The aileron deflection command needs to undergo rudder deflection command allocation before the control law-computed rudder deflection command is output to the actuator.",
        "safety_requirements": [
            "Before the system outputs the calculated control surface deflection command from the control law to the actuator, it should ensure that the aileron deflection command allocation is coordinated with the hardware, the control sequence and timing are correct, and the control conditions are complete and consistent.",
            "The system should perform input checks on the aileron deflection angle commands calculated by the control law under different states and operational phases, to ensure correct allocation and output processing of the aileron deflection angle commands when in the condition of 'operational phase not considered' or 'operational state not considered'.",
            "The system should perform timeout detection during critical control or operations to handle situations where hardware status fails to meet control requirements for an extended period, ensuring the timeliness and effectiveness of rudder angle commands.",
            "The system should ensure that the timing of outputting control status meets the requirements of the scenario, avoiding control failure or errors caused by inappropriate timing.",
            "After the system performs hardware control, it should monitor and determine the consistency between the hardware status and the control requirements, ensuring that the execution of the rudder deflection angle command meets expectations."
        ]
    },
    {
        "requirement": "The efficiency of the aileron upper and lower deflections differs, with lower deflection being more efficient. By allocating different distribution coefficients in the control surface deflection command allocation, the objective of achieving consistent control effectiveness is attained.",
        "safety_requirements": [
            "The system should check the upward and downward efficiency of the aileron control surfaces under different states and operating phases to ensure the correctness of functional input, and handle exceptions without considering the operating phase or state.",
            "The system should check the control resolution results of the aileron surfaces to ensure the correctness of functional processing under normal values, abnormal values, boundary values, maximum and minimum values, and trigger a warning mechanism in case of abnormalities.",
            "When the system controls the aileron surfaces, it should ensure that the control sequence and timing are coordinated with the hardware, the control conditions are complete and consistent, and control failures caused by timing issues are avoided.",
            "The system should check the control of the aileron surfaces under different redundancy operating conditions to ensure the correctness and consistency of function implementation when two or more redundancies are in different states.",
            "The system should check the control of the aileron surfaces under different redundancy operating conditions to ensure the correctness and consistency of function implementation when two or more redundancies are in different states."
        ]
    },
    {
        "requirement": "If the aileron deflection command δx > 0, then the left aileron deflection command δxL = k1 δx, and the right aileron deflection command δxR = k2.",
        "safety_requirements": [
            "When the system receives an aileron deflection command δx > 0, it shall check the value accuracy of the data bits in the interface data to ensure the data bit value accuracy meets the requirements, and verify that the calculated results of the left aileron deflection command δxL and the right aileron deflection command δxR are correct.",
            "When the system receives an aileron deflection command δx > 0, it shall check the output data of different redundancies to ensure correct calculation results for the left aileron deflection command δxL and right aileron deflection command δxR in case of single redundancy failure or multiple redundancy failures.",
            "When the system receives an aileron deflection command δx > 0, it should check the control calculation results to ensure that the calculated values of the left aileron deflection command δxL and the right aileron deflection command δxR are correct under conditions such as normal values, abnormal values, boundary values, maximum and minimum extreme values.",
            "When the system receives an aileron deflection command δx > 0, it should check the value precision of the data bits at the interface to ensure that the calculated results of the left aileron deflection command δxL and the right aileron deflection command δxR are correct when the data bit value precision is greater than the required precision.",
            "When the system receives an aileron deflection command δx > 0, it shall check the operating status of each redundancy channel to ensure that the calculated left aileron deflection command δxL and right aileron deflection command δxR are correct in cases where two or more redundancy channels are in different states."
        ]
    },
    {
        "requirement": "If the aileron deflection command δx < 0, then the left aileron deflection command δxL = k2 δx, and the right aileron deflection command δxR = k1 δx, where k1 is the upward deflection distribution coefficient and k2 is the downward deflection distribution coefficient.",
        "safety_requirements": [
            "The system should check whether the rate of change of the aileron deflection command δx is within a reasonable range, ensure that its slope does not exceed the upper and lower limits, and adopt a clear handling strategy in case of excessive slope.",
            "The system should check the control solution results for the aileron deflection command δx, ensuring that the calculated values of the left aileron deflection command δxL and the right aileron deflection command δxR are correct under conditions such as 'normal values, abnormal values, boundary values, maximum and minimum values'.",
            "The system should check the data bit value accuracy of the aileron deflection command δx to ensure that its accuracy meets the requirements, and output correct results when the accuracy is below the required level.",
            "The system should check the operating status of different redundancies to ensure that aileron deflection commands δxL and δxR are calculated correctly in cases such as \"two or more redundancies are in different states.\""
        ]
    },
    {
        "requirement": "The flight control and management software shall be capable of calculating the stall speed based on the given flight weight, altitude, and flight true airspeed.",
        "safety_requirements": [
            "The flight control and management software should make corresponding judgments and take appropriate actions when abnormal external factors (such as high sea states, adverse weather conditions, etc.) occur, ensuring the accuracy of stall speed calculations.",
            "The flight control and management software shall check functional inputs under different states and operational phases to ensure the correctness of stall speed calculation processing, regardless of the operational phase and state.",
            "The flight control and management software shall check the calculation results of stall speed control to ensure the correctness of stall speed computation under normal, abnormal, boundary, maximum, and minimum values.",
            "The flight control and management software shall check the calculation process for stall speed control to ensure the correctness of stall speed computation processing in cases such as timeout (failure to return results within the specified time).",
            "The flight control and management software shall ensure that the sequence and timing of control during stall speed calculation are coordinated with the hardware, and that control conditions are complete and consistent."
        ]
    },
    {
        "requirement": "The system shall support the calculation of the target airspeed during climb.",
        "safety_requirements": [
            "When calculating the given airspeed during climb, the system should have a timeout judgment mechanism to handle situations where the hardware status fails to meet control requirements for a long time.",
            "The system should have a clear strategy for handling output data that exceeds limits when calculating the given airspeed during climb, such as truncation or outputting a safety value.",
            "The system shall ensure that the control sequence and timing are coordinated with the hardware and that the control conditions are complete and consistent when calculating the given airspeed during climb.",
            "The system should clearly define the sensor measurement range (upper and lower limits) when calculating the given airspeed during climb. A sensor fault should be reported if the measured value exceeds this range.",
            "The system shall check the execution timing of different redundancies when calculating the given airspeed during climb, ensuring the correctness of function implementation in cases such as \"two or more redundancies having unsynchronized execution timing.\""
        ]
    },
    {
        "requirement": "The flight control and management software should support stall speed calculations for different flap angles, particularly for a flap angle of 40°.",
        "safety_requirements": [
            "When the flight control and management software operates in different redundancy states, it should ensure the correctness of stall speed calculations, especially for stall speed calculations with flaps at 40°.",
            "The flight control and management software shall check functional inputs under different states and operational phases to ensure the correctness of stall speed calculations, especially for stall speed calculations with flaps at 40°.",
            "The flight control and management software shall check the output data of different redundancy channels to ensure the correctness of stall speed calculations in case of a single channel failure or multiple channel failures, especially for stall speed calculations when the flaps are at 40°.",
            "The flight control and management software shall make corresponding judgments and treatments when abnormal external factors (e.g., high sea states, severe weather conditions, etc.) occur, ensuring the accuracy of stall speed calculations, particularly under flap 40° conditions."
        ]
    },
    {
        "requirement": "The ground holding phase transitions to the takeoff ground segment (takeoff roll segment) after the final approach pattern and airport pressure altitude have been set and a takeoff clearance has been received.",
        "safety_requirements": [
            "During the ground waiting phase of the system, it should be ensured that the final approach path and airport pressure altitude are pre-set, and only after receiving the takeoff command can the system transition to the ground takeoff segment (takeoff roll segment), while checking whether the timing of the output control status meets the scenario requirements.",
            "When the system enters the takeoff ground phase, it should check the state entry conditions to ensure the correctness of state execution during the process under conditions such as 'satisfied', 'not satisfied', 'satisfied again', etc.",
            "The system should make corresponding judgments and take appropriate actions in the event of abnormal external factors (e.g., high sea states, severe weather conditions, etc.) to ensure safety.",
            "The system should ensure consistency in the entry and exit conditions of each mode to avoid safety issues caused by inconsistencies during state transitions.",
            "The system should perform a reasonableness check based on the equipment status when issuing hazardous control commands or actions, to ensure the safety and validity of the commands."
        ]
    },
    {
        "requirement": "During the takeoff roll phase, when the airspeed exceeds 30 m/s and the altitude is greater than 15 m, transition to the takeoff departure phase with a softening time limit set to 2 seconds.",
        "safety_requirements": [
            "The system should set a timeout judgment mechanism when switching from the takeoff roll phase to the takeoff departure phase, under conditions that airspeed is greater than 30m/s and altitude is greater than 15m, to ensure proper handling in case hardware status fails to meet control requirements for an extended period.",
            "When the system transitions into the takeoff phase at an airspeed greater than 30m/s and a height greater than 15m, it should ensure the timing of the output control status meets scenario requirements, avoiding premature or delayed control actions.",
            "The system should check the state transition conditions between the takeoff roll phase and the takeoff airborne phase to ensure the transition conditions are properly set, avoiding state transition errors caused by situations such as 'not set', 'always satisfied', or 'never satisfied'.",
            "The system should make corresponding judgments and take appropriate actions when encountering abnormal external factors such as high sea states or adverse weather conditions, to ensure safe transition into the takeoff departure phase.",
            "The system shall coordinate with the hardware when controlling the sequence and timing of the takeoff roll phase and the takeoff departure phase, to ensure complete and consistent control conditions, avoiding conflicts or omissions in control actions."
        ]
    },
    {
        "requirement": "During the takeoff departure phase, when the flight altitude exceeds the safety height of 80m, it transitions to climb segment 1. The elevator channel adopts a method of setting initial values for the integrator to achieve softening, while other channels do not require softening.",
        "safety_requirements": [
            "During the takeoff departure phase, when the flight altitude exceeds the safety height of 80m and transitions into climb segment 1, the function inputs shall be checked to ensure the correctness of the control calculation process under different states and operation phases.",
            "When the system transitions to Climb Segment 1 after takeoff, upon the flight altitude exceeding the safety height of 80m, the control solution results shall be verified to ensure correct functional handling under conditions such as normal values, abnormal values, boundary values, maximum and minimum values.",
            "During the takeoff departure phase, when the flight altitude exceeds the safety height of 80m and transitions into climb segment 1, the control sequence and timing shall be coordinated with the hardware to ensure complete and consistent control conditions.",
            "When the system transitions to climb phase 1 after takeoff, if the flight altitude is greater than the safety height of 80m, following a software power interruption and restart, the status after restart shall be checked to ensure correct status recovery, avoiding situations where the status is not recovered or incorrectly recovered.",
            "During the takeoff departure phase, when the aircraft's altitude exceeds the safety height of 80m and transitions into climb segment 1, checks shall be performed on the execution sequence of various tasks to ensure consistency between actual task execution timing and specified timing."
        ]
    },
    {
        "requirement": "During climb segment 1, start retracting the landing gear. If the landing gear is retracted, delay for 5 seconds before starting to retract the flaps. If the landing gear has not been retracted after 1 minute, directly retract the flaps to 0 degrees. If the flaps are retracted to 0 degrees, delay for 5 seconds before transitioning to climb segment 2. If more than 75 seconds have elapsed since entering climb segment 1 and the flaps have still not been retracted to 0 degrees, transition directly to climb segment 2. The softening time limit during transition to climb segment 2 is 2 seconds.",
        "safety_requirements": [
            "During the execution of the system's climb phase 1 status, if a software power failure and restart occur, the status after restart should be checked to ensure correct status recovery and avoid functional abnormalities caused by situations such as \"status not recovered\" or \"incorrect recovery\".",
            "During the execution of the system's climb phase 1 status, functional inputs shall be checked to ensure the correct control solution process of functions under different statuses and operating phases, avoiding functional anomalies caused by situations such as \"operating phase not considered\" or \"operating status not considered\".",
            "During the execution of the system's climb phase 1 status, the duration of each task should be checked to ensure compliance with specified requirements, avoiding functional abnormalities caused by situations such as task durations being shorter than specified.",
            "During the execution of the system's climb phase 1 status, if a software power failure and restart occur, the interface data communication should be checked upon restart to ensure normal interface data communication, avoiding functional abnormalities caused by situations such as 'interruption, reconnection, and inability to recover'.",
            "During the execution of climb stage 1, the system should check the control solution results of the functions to ensure that the control solution results are normal values and avoid functional abnormalities caused by 'outliers, boundary values, minima' and other situations.The system should have an anti false alarm processing mechanism to ensure the accuracy of fault detection and meet the real-time requirements of alarm handling, preventing false alarms or omissions",
            "The system should check the landing gear status after a 5-second delay following landing gear retraction, to ensure that the landing gear is fully retracted before beginning flap retraction, thereby avoiding safety issues caused by initiating flap retraction while the landing gear is not fully retracted.",
            "The system should directly retract the flaps to 0 degrees and check the flap status if the landing gear has not been retracted within 1 minute after takeoff, ensuring the flap retraction process is correct to avoid safety issues caused by abnormal flap retraction.",
            "When the system delays for 5 seconds and enters climb phase 2 after the flaps are retracted to 0 degrees, the flap status should be checked to ensure the flaps have been fully retracted, avoiding safety issues caused by entering climb phase 2 with the flaps not fully retracted.",
            "If the system exceeds the 75-second time limit without the flaps being retracted to 0 degrees after entering Climb Segment 1, it should directly transition to Climb Segment 2 and check the flap status to ensure proper flap retraction and avoid safety issues caused by abnormal flap retraction.",
            "When the system transitions to Climb Phase 2, the softening time limit for status transition should be checked to ensure it is 2 seconds, avoiding functional abnormalities caused by abnormal softening time limits."
        ]
    },
    {
        "requirement": "In the climb phase 2, if the aircraft does not stall, handle according to the difference between current altitude and desired altitude (DH): 1) When DH > 10 m, switch to the descent phase, set the softening time limit to 2 seconds, and use the method of setting integrator initial value for softening in the elevator channel. 2) When -10 m ≤ DH ≤ 10 m, switch to the altitude hold phase, set the softening time limit to 2 seconds.",
        "safety_requirements": [
            "The system should check functional inputs under different states and operating phases to ensure that the logic for handling phase 2 climb is correct in cases where the operating phase or state has not been considered.",
            "The system should check the control resolution results of climb phase 2 to ensure correct handling logic under conditions such as 'normal values, abnormal values, boundary values, maximum and minimum values'.",
            "When the system is controlling the second climbing phase, it should ensure that the control sequence and timing are coordinated with the hardware, and that control conditions are complete and consistent.",
            "The system should make corresponding judgments and take appropriate actions when abnormal external factors (e.g., high sea states, adverse weather conditions) occur, to ensure the correct logic for handling segment 2 of the climb.",
            "During the processing of segment 2 climb, the system should check whether the rate of change of parameters is within a reasonable range (upper and lower slope limits), and clearly define the handling strategy for data exceeding the slope limits."
        ]
    },
    {
        "requirement": "Soften the initial values of the altitude hold control integrator, altitude tracking integrator, and throttle control integrator (calculate the initial value of the throttle control integrator assuming the throttle position is 100%) to prepare for altitude hold control and altitude tracking control.",
        "safety_requirements": [
            "When setting the initial values for the altitude control integrator, altitude tracking integrator, and throttle control integrator, the system should check the control calculation results to ensure correct functional processing under conditions such as normal values, abnormal values, boundary values, maximum and minimum values.",
            "When the system performs altitude control and height tracking control, it should ensure that the control sequence and timing are coordinated with the hardware, and that control conditions are complete and consistent.",
            "When setting the integrator initial values for the system under different states and operating phases, functional inputs should be checked to ensure the correctness of functional processing in cases where operating phases or operating states are not considered.",
            "After the system performs hardware control, it should monitor and determine the consistency between the hardware status and the control requirements to ensure that the control outcome meets expectations.",
            "When setting the integrator initial value in the system, it should be ensured that the parameter rate of change is within a reasonable range (upper and lower slope limits), and the handling strategy for out-of-slope data should be clearly defined."
        ]
    },
    {
        "requirement": "If on the fifth leg of the traffic pattern flight and has entered the glide path window, transition to Glide Path Segment 1; otherwise, handle according to the difference DH between current altitude and desired altitude.",
        "safety_requirements": [
            "When the system enters the glide window on the fifth leg of the traffic pattern flight, it should correctly transition to Glide Segment 1 to ensure the correctness of the state transition.",
            "When the system does not enter the glide path window during the fifth leg of the traffic pattern flight, it should handle the situation according to the difference (DH) between the current altitude and the target altitude, ensuring the correctness of the status and functionality.",
            "When the system transitions from a high-priority state to a low-priority state, it should verify the correctness of the state and functionality to ensure proper handling when entering the glide path window during the fifth leg of the traffic pattern flight.",
            "When the system transitions from a low-priority state to a high-priority state, it should verify the correctness of the state and functionality to ensure proper handling when entering the glide slope window during the fifth leg of the traffic pattern flight.",
            "When the transition conditions between system states are not set, always satisfied, or never satisfied, the correctness of state transitions should be checked to ensure proper handling when entering the glide slope window on the fifth leg of the traffic pattern flight.",
            "When the system transitions between operational states, the values of functional interface data should be checked to ensure correct handling when entering the glide path window on the fifth leg of the traffic pattern flight, in cases where the value changes or the value range changes.",
            "The system should check the parameter variation rate when entering the glide slope window on the fifth leg of the traffic pattern flight, ensuring the slope remains within a reasonable range, and there should be a clear handling strategy for excessive slope data.",
            "The system shall check the data bits with continuous value ranges in the interface data when entering the glide path window during the fifth leg of the traffic pattern flight, and analyze the correctness of output values where the difference between data values across multiple cycles exceeds the specified threshold."
        ]
    },
    {
        "requirement": "When DH > 50m, switch to the descent phase, set the softening time limit to 2s, and use the method of setting integrator initial value softening for the elevator channel.",
        "safety_requirements": [
            "The system should check whether the rate of change of DH parameters is within a reasonable range (upper and lower slope limits) and adopt clear handling strategies in cases of excessive slope.",
            "When the system enters the descent phase, it should ensure that the control sequence and timing are coordinated with the hardware, and that the control conditions are complete and consistent.",
            "The system should check the duration of the softening time limit setting task to ensure that the task duration is less than the specified time, and the function is processed correctly.",
            "The system should clearly define the sensor's measurement range (upper and lower limits) and report a sensor fault when the measured value exceeds this range.",
            "The system should have a timeout detection mechanism when softening the elevator channel, to handle situations where the hardware status fails to meet control requirements for an extended period."
        ]
    },
    {
        "requirement": "When DH < -50m, switch to climb phase 2, set the softening time limit to 2s, and use the method of setting integrator initial value softening for the elevator channel.",
        "safety_requirements": [
            "The system should check whether the rate of change of DH parameters is within a reasonable range, ensure that its slope does not exceed upper and lower limits, and adopt a clear handling strategy in case of excessive slope.",
            "When the system transitions into Climb Phase 2, it should ensure that the control sequence and timing are coordinated with the hardware, and that control conditions are complete and consistent before and after the transition.",
            "The system should check the duration of the transition to climb phase 2 mission to ensure that the mission duration complies with the specified requirements and properly handle the function when the mission duration is less than the specified time.",
            "The system should clearly define the upper and lower limits of the sensor's acquisition range. When the DH sensor value exceeds the acquisition range, a sensor fault should be reported.",
            "The system should set a timeout judgment for the elevator channel softening operation to handle situations where the hardware status fails to meet control requirements for an extended period."
        ]
    },
    {
        "requirement": "The system should support the calculation and processing of heading deviations.",
        "safety_requirements": [
            "The system should make corresponding judgments and treatments when abnormal external factors (such as high sea conditions, severe weather conditions, etc.) occur, to ensure the accuracy of heading deviation calculation and processing.",
            "The system should check the control solution results for heading deviation to ensure the correctness of heading deviation handling under conditions such as \"normal values, abnormal values, boundary values, and extreme maximum/minimum values\".",
            "The system should monitor the rate of parameter changes in heading deviation to ensure it remains within reasonable limits (upper and lower slope bounds), and a clear handling strategy should be in place for data exceeding these slope limits.",
            "The system should check the control solution process for heading deviation to ensure the correctness of heading deviation handling in cases such as timeout (failure to return results within the specified time).",
            "The system should check the heading deviation output data of different redundancies to ensure the correctness of heading deviation processing in cases of \"single redundancy failure, multiple redundancies all failed\"."
        ]
    },
    {
        "requirement": "When the general flag lateral control flag is changed from another mode to five-side flight, set the initial value of the altitude tracking integrator for softening; when the general flag lateral control flag is changed from five-side flight to another mode, set the initial value of the altitude hold control integrator for softening.",
        "safety_requirements": [
            "When the system changes from other modes to five-side flight in the general sign lateral control sign, the initial value setting of the altitude tracking integrator should be checked to ensure its rate of change is within a reasonable range, and there should be a clear handling strategy for overrun data.",
            "When the system changes the lateral control mode from normal approach to other modes, the initial value setting of the altitude hold control integrator should be checked to ensure its rate of change is within a reasonable range, and a clear handling strategy for over-slope data should be provided.",
            "When setting the initial values for the altitude tracking integrator and the fixed-altitude control integrator, the system should check the sensor acquisition range to ensure it is within the upper and lower limits. A sensor fault should be reported if the value exceeds the acquisition range.",
            "The system should check the control calculation results after setting the initial values of the altitude tracking integrator and fixed-altitude control integrator to ensure correct functional processing under conditions such as normal values, abnormal values, boundary values, maximum and minimum values.",
            "After setting the initial values for the altitude tracking integrator and the fixed-altitude control integrator, the system should ensure that the timing of output control status meets scenario requirements, guarantee that the sequence and timing of control are coordinated with the hardware, and ensure complete and consistent control conditions."
        ]
    },
    {
        "requirement": "Process according to the value of DH, the difference between current altitude and desired altitude: if -10 m ≤ DH ≤ 10 m, switch to the constant altitude phase, set the softening time limit to 2 seconds, and initialize the high control integrator, altitude tracking integrator, and throttle control integrator with softened initial values to prepare for constant altitude control and altitude tracking control.",
        "safety_requirements": [
            "When the system is performing height control, it should ensure that the control sequence and timing are coordinated with the hardware, and that the control conditions are complete and consistent.",
            "The system should check the results of altitude control calculations to ensure correct functional handling under conditions such as 'normal values, abnormal values, boundary values, maximum and minimum values'.",
            "The system should check the rate of change of the height control parameters to ensure it is within a reasonable range (upper and lower slope limits) and clearly define the handling strategy for out-of-slope data.",
            "The system should check highly controlled inputs under different states and operational phases to ensure the correctness of functional processing in scenarios such as 'unconsidered operational phases' or 'unconsidered operating states'.",
            "The system should check the data bit value accuracy of the interface data to ensure that the data bit value accuracy meets the requirements, avoiding output errors caused by accuracy issues."
        ]
    },
    {
        "requirement": "When DH < -10m, it switches to the descent phase.",
        "safety_requirements": [
            "When the system receives DH data, it should check the receiving buffer capacity to ensure correct output results and avoid data loss or overflow when the buffer capacity is less than the interface data volume.",
            "The system should check the rate of change of DH parameters to ensure it remains within reasonable limits (upper and lower slope bounds), and have clear handling strategies when exceeding these limits, such as triggering a warning or entering safe mode.",
            "The system should check the task duration to ensure that the task completes within the specified time, allowing the function to process correctly and avoiding system anomalies caused by task timeouts.",
            "The system should check the DH values collected by the sensors to ensure they are within the acquisition range (upper and lower limits). If the values exceed the range, a sensor fault should be reported, and corresponding safety measures should be taken.",
            "The system should check the control calculation results to ensure correct functional handling under conditions such as \"normal values, abnormal values, boundary values, maximum and minimum values,\" avoiding system errors caused by abnormal calculation results."
        ]
    },
    {
        "requirement": "Enter climb phase 2, set softening time limit to 2 seconds, and use the method of setting integrator initial value softening for the elevator channel.",
        "safety_requirements": [
            "When the system enters the second climbing phase, it should ensure that the control sequence and timing are coordinated with the hardware, and that control conditions are complete and consistent.",
            "When the system enters the second climb phase, the parameter variation rate during the softening process of the elevator channel integrator initial value should be checked to ensure it is within a reasonable range, and the handling strategy for overrun data should be clearly defined.",
            "When the system enters the second climbing phase, the task duration of the softening time limit set to 2 seconds should be checked to ensure the correctness of functional processing when the task duration is less than the specified time.",
            "When the system enters the second climbing phase, the task duration of the softening time limit set to 2 seconds should be checked to ensure the correctness of the functional processing when the task duration exceeds the specified time.",
            "When the system enters the second climb phase, a timeout judgment should be set for the elevator channel softening process to handle situations where the hardware status fails to meet control requirements for an extended period."
        ]
    },
    {
        "requirement": "During the glide phase 1, when the flight altitude is below 100m, switch to glide phase 2, reset the straight lateral slip control integrator and heading control hold integrator, prepare for flight control in glide phase 2, and set the soft time limit to 2 seconds.",
        "safety_requirements": [
            "When the flight altitude is below 100m, the system should check whether the parameter variation rate is within a reasonable range, ensure the slope does not exceed the upper and lower limits, and clearly define the handling strategy for over-slope data.",
            "When the flight altitude is below 100m, the system shall check the transition conditions between each pair of states in the software state space to ensure the transition conditions are properly set and verify the correctness of state transitions under conditions such as \"not set,\" \"always satisfied,\" and \"never satisfied.\"",
            "The system should implement a timeout detection mechanism when the flight altitude is below 100m to handle situations where hardware status fails to meet control requirements for an extended period.",
            "The system shall ensure that the sequence and timing of control actions are coordinated with the hardware, and that control conditions are complete and consistent when the flight altitude is below 100m.",
            "When the system is operating at a flight altitude below 100m, if the software experiences a power loss and restarts, the status after restart shall be checked to ensure correct status recovery, avoiding erroneous status execution under conditions such as \"status not recovered\" or \"incorrect recovery\"."
        ]
    },
    {
        "requirement": "During the glide phase 2, when the flight altitude is below 17m, it transitions to the flare phase. The elevator channel adopts a method of setting initial integral values for softening, while other channels do not require softening.",
        "safety_requirements": [
            "When the system transitions to the flare segment at a flight altitude below 17m, the variation rate of the integrator initial value in the elevator channel shall be checked to ensure it is within a reasonable range, and there should be a clear handling strategy for over-slope data.",
            "The system should ensure that the control sequence and timing are coordinated with the hardware, and that control conditions are complete and consistent when transitioning to the flare phase at a flight altitude below 17m.",
            "The system shall check functional inputs under different states and operational phases to ensure that functional processing is correct, regardless of the operational phase or state being considered.",
            "When the system transitions to the flare segment at a flight altitude below 17m, the control solution results shall be checked to ensure correct functional handling under normal values, abnormal values, boundary values, maximum and minimum values, etc.",
            "During the execution of the system status, if a power failure or restart occurs in the software, the status after restart should be checked to ensure correct status recovery, avoiding situations where the status is not recovered or incorrectly recovered."
        ]
    },
    {
        "requirement": "During the flare segment, when the flight altitude is below 1.5m, transition to the roll correction segment, and no smoothing is applied to each channel.",
        "safety_requirements": [
            "During the flare phase of the system, when the flight altitude is below 1.5m, the rate of change of parameters across all channels should be checked to ensure it remains within reasonable limits, guaranteeing that the slope does not exceed upper and lower bounds, and implementing clear handling strategies in case of excessive slope.",
            "During the flare phase of the system, when the flight altitude is below 1.5m, the transition conditions between pairwise states in the software state space shall be checked to ensure the correctness of state transitions under conditions such as 'not set', 'always satisfied', 'never satisfied', etc.",
            "During the flare phase of the system, when the flight altitude is below 1.5m, if the redundancy switching conditions are met but the switching fails, there should be a clear handling strategy to ensure the system can properly manage the redundancy switching failure.",
            "During the flare phase, when the flight altitude is below 1.5m, the system shall ensure that the sequence and timing of control actions are coordinated with the hardware, with complete and consistent control conditions.",
            "The system should have a fault handling mechanism based on loop detection during the flare phase when the flight altitude is below 1.5 m, with reasonable status reporting strategies in case of faults, ensuring timely reporting and handling of faults."
        ]
    },
    {
        "requirement": "During the roll-out phase, when any of the following conditions is met, transition to the landing rollout phase and set the softening time limit to 2 seconds:\n1) The gear fully compressed signal remains true for 12 consecutive frames;\n2) The remote control touchdown signal is true;\n3) The remote control signal status has accumulated 75 frames of abnormal condition. Note that this condition only needs to be checked once.",
        "safety_requirements": [
            "When the system transitions from the roll-out phase to the landing rollout phase, it should check the landing gear full compression signal, remote ground contact signal, and remote control signal status to ensure the correctness and completeness of the state transition conditions.",
            "After a power failure and subsequent restart of the system software, the system should check its status to ensure correct state recovery and avoid situations such as \"state not restored\" or \"incorrect restoration\" that may affect functional execution.",
            "The system should check the control solution results to ensure the correctness and consistency of functional processing under conditions such as \"normal values, abnormal values, boundary values, maximum and minimum values\".",
            "The system should coordinate with the hardware in terms of control sequence and timing to ensure consistent control conditions and avoid control conflicts or omissions.",
            "The system should check the transition conditions between every two states in the state space to ensure the correctness and reliability of state transitions under conditions such as \"not set\", \"always satisfied\", and \"never satisfied\".",
            "The system should implement a timeout judgment mechanism during critical control operations or actions to handle situations where hardware status fails to meet control requirements for an extended period, ensuring safe system operation."
        ]
    },
    {
        "requirement": "During the landing rollout phase, when the flight control pre-shutdown command becomes active, it transitions to the ground waiting phase.",
        "safety_requirements": [
            "During the landing rollout phase, the system should perform a timeout check after the flight control pre-shutdown command becomes active, ensuring transition to the ground waiting phase if hardware status remains unable to meet control requirements for an extended period.",
            "After power recovery or activation of the runaway reset mechanism, the system should be able to return to normal operation, ensuring that after the flight control pre-shutdown command becomes effective during the landing rollout phase, it correctly transitions into the ground waiting phase.",
            "During the landing rollout phase, after the flight control pre-shutdown command becomes valid, the system shall ensure that the sequence and timing of control actions are coordinated with the hardware, with complete and consistent control conditions to safely transition into the ground standby phase.",
            "During the landing rollout phase, after the flight control pre-shutdown command becomes valid, the system should ensure that the timing of outputting the control state meets scenario requirements, to safely transition into the ground waiting phase.",
            "During the landing rollout phase, after the flight control pre-shutdown command becomes effective, if hazardous control commands or actions are issued, a reasonableness judgment should be made based on the equipment status to ensure safe transition into the ground waiting phase."
        ]
    },
    {
        "requirement": "If the engine stops in mid-air, the aircraft enters a descent phase.",
        "safety_requirements": [
            "系统在发动机空中停车后，应确保飞机进入飘落阶段，并在掉电恢复或跑飞复位机制启动后，恢复到正常工作状态。",
            "The system should have a timeout judgment mechanism after an in-flight engine shutdown to handle situations where the hardware status fails to meet control requirements for an extended period.",
            "After an in-flight engine shutdown, the system should check functional inputs to ensure correct functional processing under different states and operating phases, especially in cases where the operating phase or state has not been considered.",
            "After an in-flight engine shutdown, if the software experiences a power loss and restarts, the system should check the status after restart to ensure correct state recovery and avoid situations where the state is not recovered or incorrectly recovered.",
            "The system should perform a reasonableness check based on the equipment status when issuing hazardous control commands or actions, to ensure the safety of the commands or actions."
        ]
    },
    {
        "requirement": "Md2(k) = KvI · Md1(k)",
        "safety_requirements": [
            "During the data processing of Md2(k) = KvI · Md1(k), the system should check for division by zero to ensure the correctness of the data processing.",
            "The system should check the control calculation results of Md2(k) = KvI · Md1(k) to ensure the correctness of the control calculation results under conditions such as \"normal values, abnormal values, boundary values, and extreme values.\"",
            "The system should check the data bit value accuracy of the interface data Md2(k) = KvI . Md1(k) to ensure the correctness of the output results in cases where the data bit value accuracy is less than the required accuracy.",
            "The system should check the data bit value accuracy of the interface data Md2(k) = KvI . Md1(k) to ensure the correctness of the output results when the data bit value accuracy is higher than the required accuracy.",
            "When the system performs control calculations of Md2(k) = KvI · Md1(k) under different states and operational phases, the functional inputs should be checked to ensure the correctness of functional processing in cases such as 'operational phase not considered' or 'operational state not considered'."
        ]
    },
    {
        "requirement": "When DH < -10m, transition to climb phase 2, set the initial value of the airspeed control integrator for softening",
        "safety_requirements": [
            "The system switches to climb phase 2 when DH < -10m; check the control calculation results to ensure correct functional handling under normal values, abnormal values, boundary values, maximum and minimum values.",
            "When initializing the airspeed control integrator during system setup, the control sequence and timing should be coordinated with the hardware, ensuring complete and consistent control conditions.",
            "When softening the system by setting the initial value of the airspeed control integrator, the rate of parameter change should be checked to ensure it is within a reasonable range (upper and lower slope limits), and the handling strategy for data exceeding the slope limit should be clearly defined.",
            "The system should have a timeout detection mechanism when setting the initial value of the airspeed control integrator during softening, to handle situations where the hardware status fails to meet control requirements for an extended period.",
            "The system should check functional inputs under different states and operational phases to ensure the correctness of functional processing in cases where the operational phase or state is not considered."
        ]
    },
    {
        "requirement": "When -10m < DH < 10m, switch to the constant altitude phase, set the initial values of the constant altitude control integrator and the altitude tracking integrator for softening.",
        "safety_requirements": [
            "When the system enters the altitude-holding phase, it should ensure that the control sequence and timing are coordinated with the hardware, and that the control conditions are complete and consistent.",
            "When setting the initial values of the altitude control integrator and altitude tracking integrator in the system, the value accuracy of the interface data bits should be checked to ensure correct output when the accuracy is greater than required.",
            "When setting the initial values for the altitude control integrator and altitude tracking integrator in the system, the value accuracy of the interface data bits should be checked to ensure correct output when the accuracy is less than required.",
            "The system should check the control resolution results of the altitude control integrator and the altitude tracking integrator to ensure correct functional handling under normal, abnormal, boundary, maximum, and minimum value conditions.",
            "The system should clearly define the upper and lower limits of the sensor's measurement range, and when the measured value exceeds this range, a sensor fault should be reported."
        ]
    },
    {
        "requirement": "The softening time limit for the above stage transition is set to 2s.",
        "safety_requirements": [
            "The system should correctly handle and record error logs when the redundancy switching time exceeds 2 seconds, ensuring the stability and reliability of the system status.",
            "The system should trigger a fault handling mechanism when the redundancy switching condition is met but the switch fails, ensuring the system can recover to a safe state.",
            "The system should continuously monitor the duration of each task to ensure that tasks are completed within the specified time, and perform correct functional processing when the task duration is less than 2 seconds.",
            "The system shall implement timeout detection for critical controls or actions. If the hardware status does not meet the control requirements within 2 seconds, the timeout handling mechanism shall be triggered to ensure safety.",
            "The system should check the transition conditions between every pair of states in the software state space to ensure the correctness and safety of state transitions under conditions such as \"transition condition not set, always satisfied, never satisfied,\" etc."
        ]
    },
    {
        "requirement": "When executing the takeoff command, transition to the takeoff roll phase.",
        "safety_requirements": [
            "The system should perform a rationality check based on the equipment status when executing a takeoff command, ensuring the safety and feasibility of the command.",
            "When executing the takeoff command, the system should check the sequence of task execution to ensure that the task execution order is consistent with the specified sequence, and trigger a warning mechanism in case of anomalies.",
            "After power recovery or activation of the runaway reset mechanism, the system shall be able to return to normal operating conditions and ensure correct execution of the takeoff command.",
            "When executing the takeoff command, the system shall ensure that the control sequence and timing are coordinated with the hardware, the control conditions are complete and consistent, to ensure a safe takeoff.",
            "The system should perform a timeout check when executing the takeoff command to handle situations where hardware status fails to meet control requirements for an extended period, ensuring safe takeoff."
        ]
    },
    {
        "requirement": "During the takeoff roll phase, when the airspeed > 30 m/s and altitude is greater than 15 m, transition to the takeoff climb phase without softening treatment.",
        "safety_requirements": [
            "During the takeoff ground run phase, when airspeed exceeds 30 m/s and altitude is greater than 15 m, the system shall transition to the takeoff climb segment. It shall judge and handle external abnormal factors (e.g., high sea state, adverse weather conditions) to ensure safe transition to the takeoff climb segment.",
            "During the takeoff roll phase, when the airspeed is greater than 30 m/s and the altitude is above 15 m, the system transitions to the takeoff climb phase. If there is a software power failure and restart, the status after restarting shall be checked to ensure correct recovery and continued execution.",
            "The system should perform filtering and anti-jitter processing when collecting airspeed and altitude data, to shield interference data and ensure the accuracy and reliability of the data.",
            "The system should ensure that the control sequence and timing during the transition between the takeoff roll phase and the takeoff lift-off phase are coordinated with the hardware, with complete and consistent control conditions to prevent control errors."
        ]
    },
    {
        "requirement": "When the flight altitude is greater than the safety height of 80m, it transitions to climb phase 1 without softening treatment.",
        "safety_requirements": [
            "When the system is flying at an altitude greater than the safety altitude by 80m, it should determine whether any abnormal external factors (e.g., high sea states, adverse weather conditions, etc.) exist, and take appropriate actions when abnormalities are detected, ensuring the safety of transition into climb segment 1.",
            "The system should clearly define the sensor's acquisition range (upper and lower limits). When the flight altitude exceeds the acquisition range, a sensor fault should be reported and corresponding safety measures taken.",
            "The system should perform filtering and anti-jitter processing when acquiring flight altitude data, eliminate interference data, and ensure the accuracy and reliability of the data.",
            "The system should have a fault handling mechanism based on rollback detection. When a fault is detected, it should properly report the status and take corresponding safety measures."
        ]
    },
    {
        "requirement": "When the landing gear full compression signal is true or the remote ground contact signal is true, transition to the landing rollout phase without softening processing.",
        "safety_requirements": [
            "The system shall ensure that the control sequence and timing are coordinated with the hardware, and that control conditions are complete and consistent, to ensure a smooth transition to the landing roll phase when the full gear compression signal or remote ground contact signal is true.",
            "During the execution of the landing rollout phase, if a software power failure and restart occur, the system should check the status after restart to ensure correct state recovery and prevent anomalies caused by incomplete or incorrect state restoration.",
            "The system should check the control resolution results of the landing gear full compression signal and the remote ground signal to ensure the correctness and reliability of functional processing under normal, abnormal, boundary, maximum, and minimum values.",
            "The system should have a false alarm prevention mechanism for fault detection to ensure that the prevention measures meet the real-time requirements of alarm handling, preventing both false alarms and missed alarms.",
            "The system should have a timeout judgment mechanism when switching to the landing rollout phase, to handle situations where hardware status fails to meet control requirements for an extended period, ensuring the timeliness and effectiveness of critical controls or actions."
        ]
    },
    {
        "requirement": "Item d needs to be evaluated only once, while the other items must meet their respective conditions for five consecutive phase transitions before proceeding.",
        "safety_requirements": [
            "When the system is performing a state transition, it should check the switching logic between high-priority and low-priority functions to ensure the correctness of states and functions in cases where \"high priority switches to low priority, and low priority switches to high priority\".",
            "The system should check logical judgment conditions and logical branches to ensure the correctness of functional processing in cases such as \"logical always-false, logical always-true, logical judgment condition errors, and missing logical branches\".",
            "The system should check the inputs of functions under different states and working phases to ensure the correctness of function processing in cases such as 'unconsidered working phase' or 'unconsidered working state'.",
            "The system should check the control solution results of the functions to ensure the correctness of function processing when the control solution results are \"normal values, abnormal values, boundary values, maximum and minimum values\", etc.",
            "The system should check the duration of each task to ensure the correctness of functional processing in cases where the task duration exceeds the specified time.",
            "The system should ensure that, except for item d, all other items continuously meet the corresponding conditions for 5 consecutive times before performing a state transition, to guarantee the correctness and reliability of the state transition."
        ]
    },
    {
        "requirement": "If the phase flag is \"Floating\", no phase transition will occur.",
        "safety_requirements": [
            "The system should check whether the entry conditions are simultaneously met or satisfied during the execution of the state when the phase flag is \"飘落\", to ensure the correctness of state execution.",
            "The system shall check the transition conditions related to the \"floating\" phase in the software state space to ensure the correctness of state transitions when the transition conditions are not set, always satisfied, or never satisfied.",
            "When the conditions for redundancy switching are met, if the redundancy switching fails, there should be a proper handling mechanism to ensure the stability and safety of the system status.",
            "The system should check different functions with assigned priorities under conditions of state transitions, ensuring the correctness of states and functions when switching from high to low priority or from low to high priority.",
            "The system should analyze the correctness of states and functions in situations where there are different execution requirements for the same function in two or more states with a transition relationship, including cases such as 'continuing execution' or 'interrupting execution' during state transitions."
        ]
    },
    {
        "requirement": "If the 3 out of 2 result for go-around flag is true, the flight phase transitions to climb segment 2, and the airspeed control integrator is reset to zero.",
        "safety_requirements": [
            "After power recovery or activation of the runaway reset mechanism, the system shall be able to return to normal operation, ensuring that when the 3-out-of-2 result of the go-around flag is true, the aircraft phase correctly transitions to climb phase 2, and the airspeed control integrator is reset to zero.",
            "During the execution of the system status, if a power failure and subsequent restart occur, the status after restart should be checked to ensure that the aircraft phase correctly transitions to Climb Phase 2, and the airspeed control integrator is reset to zero, in cases where the status has not been restored or has been erroneously restored.",
            "The system shall check the control solution results of the go-around flag 3 out of 2, ensuring that under conditions such as normal values, abnormal values, boundary values, and maximum/minimum values, the aircraft correctly transitions to climb phase 2, and the airspeed control integrator is reset to zero.",
            "The system should have a clear fault recovery mechanism to ensure that when the 3-out-of-2 result for go-around activation is true, the aircraft correctly transitions to climb phase 2 and the airspeed control integrator is reset to zero.",
            "When the system experiences a power failure and restarts, it should check for interruptions, reconnections, and unrecoverable conditions in interface data communication. It must ensure that when the three-out-of-two result of the go-around flag is true, the flight phase correctly transitions to climb phase 2, and the airspeed control integrator is reset to zero."
        ]
    },
    {
        "requirement": "Md 2(k) clamped [- XfSita, XfSita]",
        "safety_requirements": [
            "The system should check output data with different redundancies to ensure the correctness of the Md 2(k) clamping function [- XfSita, XfSita] under conditions of \"single redundancy failure and multiple redundancies failure\".",
            "The system should analyze the correctness of Md 2(k) clamping output within [- XfSita, XfSita] when the value range represented by the interface data frame is smaller than the value range of the interface data.",
            "The system should clearly define the sensor's measurement range (upper and lower limits) and report a sensor fault when the measured value exceeds this range.",
            "The system should define reasonable ranges for the rate of parameter changes (upper and lower slope limits) and adopt clear handling strategies when data exceeds these slope limits.",
            "The system should clearly define the handling strategy for output data exceeding limits, such as truncation or outputting according to safety values."
        ]
    },
    {
        "requirement": "Md 3(k ) = Kv · [vk (k ) - vg (k )] + Md 2(k )",
        "safety_requirements": [
            "The system should check the data bit value accuracy of the interface data to ensure the output result is correct when the data bit value accuracy is less than the required precision.",
            "The system should check the data bit value accuracy of the interface data to ensure the output result is correct when the data bit value accuracy exceeds the required precision.",
            "The system should check the control calculation results to ensure that the functional processing is correct when the control calculation results are normal values, abnormal values, boundary values, maximum or minimum values.",
            "The system should check the cycle of interface data to ensure that the output results are correct when the input value cycle is greater than, less than, or at extreme maximum or minimum values relative to the specified cycle.",
            "The system should check functional inputs according to different states and working phases, ensuring correct function processing even when the working phase or state is not considered."
        ]
    },
    {
        "requirement": "Md 3(k ) limiting [- XfSita, XfSita]",
        "safety_requirements": [
            "The system should analyze the correctness of the Md 3(k) clamping output within [- XfSita, XfSita] when the value range represented by the interface data frame is smaller than the value range of the interface data.",
            "The system shall check output data of different redundancies to ensure the correctness of the Md 3(k) limit function [- XfSita, XfSita] in case of a single redundancy failure or multiple redundancies failures.",
            "The system should clearly define the sensor's measurement range (upper and lower limits) and report a sensor fault when the measured value exceeds the range.",
            "The system should check the communication of interface data frames to ensure the correctness of Md 3(k) clamping [- XfSita, XfSita] output in cases such as data frame loss.",
            "The system should analyze the correctness of the Md 3(k) output limited to [- XfSita, XfSita] when the value accuracy represented by the interface data frame does not meet the precision requirements of the interface data."
        ]
    },
    {
        "requirement": "Jg (k ) = Md 3(k )",
        "safety_requirements": [
            "The system should check the data bit value accuracy of the interface data to ensure that when the data bit value accuracy is less than the required precision, the output result of Jg(k) = Md3(k) is correct.",
            "The system should check the data bit value accuracy of the interface data to ensure that when the data bit value accuracy is greater than the required accuracy, the output result of Jg(k) = Md3(k) is correct.",
            "The system should check the control calculation results of the functions to ensure that Jg(k) = Md3(k) is correctly handled under conditions such as normal values, abnormal values, boundary values, maximum and minimum values.",
            "The system should check the cycle of interface data to ensure that the output result of Jg(k) = Md3(k) is correct when the input value cycle is greater than the specified cycle, less than the specified cycle, or at extreme maximum or minimum values.",
            "The system should check the functional inputs under different states and operational phases to ensure that the functional processing of Jg(k) = Md3(k) is correct, even when the operational phase or state is not considered."
        ]
    },
    {
        "requirement": "δp (k) = 115%",
        "safety_requirements": [
            "The system should check the data bit value accuracy of the interface data to ensure the calculation result of δp(k) is correct when the data bit value accuracy is greater than the required accuracy.",
            "The system should check the data bit value accuracy of the interface data to ensure the calculation result of δp(k) is correct when the data bit value accuracy is less than the required accuracy.",
            "The system should check the control solution results to ensure that the calculation results of δp(k) are handled correctly under normal values, abnormal values, boundary values, maximum and minimum values.",
            "The system should check the cycle of interface data to ensure that the calculation result of δp (k) is correct when the input value cycle is greater than the specified cycle, less than the specified cycle, or at extreme maximum or minimum values.",
            "The system should check data bits with continuous value ranges in the interface data to ensure that δp(k) is calculated correctly when the data bits take values from normal value equivalence classes, abnormal value equivalence classes, etc."
        ]
    },
    {
        "requirement": "Md1(k ) = Kg1 · Dz(k )",
        "safety_requirements": [
            "The system should check the functional inputs under different states and operating phases to ensure the correctness of the control solution process Md1(k) = Kg1 · Dz(k) in cases where the operating phase or state is not considered.",
            "The system should check the data bit value accuracy of the interface data to ensure the correctness of the control solution result Md1(k) = Kg1 · Dz(k) when the data bit value accuracy exceeds the required precision.",
            "The system should check the control solution result Md1(k) = Kg1 · Dz(k) to ensure the correctness of functional processing under conditions such as \"normal value, abnormal value, boundary value, maximum/minimum value\", etc.",
            "The system should check the data bit value accuracy of the interface data to ensure the correctness of the control solution result Md1(k) = Kg1 · Dz(k) when the data bit value accuracy is less than the required accuracy.",
            "The system should check the cycle of interface data to ensure the correctness of the control solution result Md1(k) = Kg1 · Dz(k) when the input value cycle is \"greater than the specified cycle, less than the specified cycle, or at extreme maximum or minimum values\"."
        ]
    },
    {
        "requirement": "When DH < -10m, transition to climb phase 2, reset the airspeed control integrator, and set the softening time limit to 2 seconds.",
        "safety_requirements": [
            "When the system detects DH < -10m, it should check the mission duration to ensure the transition into climb phase 2 is completed within the specified time, and properly handle functions when the mission duration is less than the specified time.",
            "During the process of transitioning the system into climb phase 2 and performing airspeed control integrator reset and softening time setting, if a software power loss and restart occurs, the status after restart should be checked to ensure correct state recovery, avoiding situations where the state is not recovered or incorrectly recovered.",
            "When the system transitions into the second climb phase, it should check the state transition conditions to ensure their correct configuration, avoiding situations where conditions are not set, always satisfied, or never satisfied.",
            "The system should be equipped with a timeout detection mechanism when switching to the second climb phase, to handle situations where hardware status remains unable to meet control requirements for an extended period, ensuring the reliability of critical control or actions.",
            "During the process of transitioning the system into climb phase 2 and performing airspeed control integrator reset and softening time limit setting, the control calculation results shall be checked to ensure the correctness of functional handling when the calculation results are normal values, abnormal values, boundary values, or maximum/minimum values."
        ]
    },
    {
        "requirement": "Md1(k ) limited to [- XfCs,+XfCs]",
        "safety_requirements": [
            "The system should check the output data of different redundancies to ensure that the Md1(k) limiting function [- XfCs, +XfCs] is correctly implemented in cases of \"single redundancy failure\" and \"multiple redundancies failure\".",
            "The system should analyze the correctness of the Md1(k) output clamped to [- XfCs, +XfCs] when the value range represented by the interface data frame is smaller than the value range of the interface data.",
            "The system shall check the data bit value accuracy of the interface data to ensure the correctness of the Md1(k) clamping [-XfCs, +XfCs] output when the data bit value accuracy is less than the required accuracy.",
            "The system should check the data bit value accuracy of the interface data to ensure the correctness of the Md1(k) output within the range [- XfCs, +XfCs] when the data bit value accuracy exceeds the required precision.",
            "The system should check the control solution results to ensure that the Md1(k) clamping function [- XfCs, +XfCs] is handled correctly under conditions such as \"normal value, abnormal value, boundary value, maximum/minimum value\" in the control solution results."
        ]
    },
    {
        "requirement": "Md 2(k ) = D&Z  (k ) + Md1(k ) . Kg 2",
        "safety_requirements": [
            "The system should check the control calculation results of the function to ensure the correctness of the control calculation result Md2(k) = D&Z(k) + Md1(k) * Kg2 under conditions such as \"normal values, abnormal values, boundary values, and extreme values.\"",
            "The system should check the control solution process under different states and working phases to ensure the correctness of handling the control solution results in cases such as \"working phase not considered, working state not considered\".",
            "The system should check the data bit value accuracy of the interface data to ensure that when the data bit value accuracy exceeds the required precision, the output correctness of the control solution results is maintained.",
            "The system should check the data bit value accuracy of the interface data to ensure that when the data bit value accuracy is less than the required accuracy, the correctness of the control solution output is maintained.",
            "The system should check the cycle of interface data to ensure the correctness of output results under conditions such as input value cycles being \"greater than specified cycle, less than specified cycle, maximum and minimum values\"."
        ]
    },
    {
        "requirement": "Md 2(k ) limited to [-XfGama, +XfGama]",
        "safety_requirements": [
            "The system should ensure that the rate of change of Md 2(k) remains within a reasonable range (upper and lower slope limits) and clearly define the handling strategy for out-of-slope data.",
            "The system should check the Md 2(k) output data of different redundancies to ensure the correctness of function implementation in cases of \"single redundancy failure, multiple redundancies failure.\"",
            "The system should clearly define the range (upper and lower limits) for sensor acquisition of Md 2(k), and report a sensor fault when the acquired value exceeds this range.",
            "The system should analyze the correctness of Md 2(k) output when situations such as \"the value range represented by interface data frames is smaller than the value range of interface data\" occur.",
            "The system should clearly define the handling strategy for Md 2(k) output data exceeding limits, such as truncation or outputting according to safety values."
        ]
    },
    {
        "requirement": "Md3(k) = ((2 - T)Md3(k - 1) + T.Md2(k) + T.Md2(k - 1)) / (T + 2)",
        "safety_requirements": [
            "The system should check the value accuracy of data bits in the interface data to ensure that when the value accuracy of data bits is less than the required precision, the calculation result of Md3(k) is correct.",
            "The system should check the data bit value accuracy of the interface data to ensure that when the data bit value accuracy is greater than the required precision, the calculation result of Md3(k) is correct.",
            "The system should check the cycle of interface data to ensure that the calculation result of Md3(k) is correct when the input value cycle is greater than the specified cycle, less than the specified cycle, or at extreme maximum or minimum values.",
            "The system should check the control solution results to ensure that Md3(k) functions correctly under normal values, abnormal values, boundary values, maximum and minimum values.",
            "The system should check the safety values of interface data, compare the safety values with the normal values of the interface data when no fault occurs, and ensure that Md3(k) outputs correctly when the difference between the safety value and the normal value under non-fault conditions is excessively large."
        ]
    },
    {
        "requirement": "Heading control: yg = 0°",
        "safety_requirements": [
            "When the system performs heading control, it should ensure that the control sequence and timing are coordinated with the hardware, and that control conditions are complete and consistent.",
            "The system shall ensure the correctness of timing relationships, constraint relationships, concurrency relationships, and combination relationships among control logics of all functional points.",
            "The system should check functional inputs when performing heading control under different states and operational phases, to ensure the correctness of functional processing in cases such as 'operational phase not considered, operational state not considered'.",
            "The system should check the results of heading control calculations to ensure correct functional handling under conditions such as \"normal values, abnormal values, boundary values, maximum and minimum values\".",
            "The system should check the heading control output data of different redundancies to ensure the correctness of function implementation in cases of \"single redundancy failure, multiple redundancies failure\"."
        ]
    },
    {
        "requirement": "δp = 100%",
        "safety_requirements": [
            "The system should check the data bit value accuracy of the interface data to ensure that the data bit value accuracy is greater than or equal to the required accuracy, so as to guarantee the correctness of the calculation result with δp = 100%.",
            "The system should check the data bit value accuracy of the interface data to ensure that when the data bit value accuracy is less than the required accuracy, it can be properly handled and trigger the alarm mechanism.",
            "The system should check the cycle of interface data to ensure that the input value cycle is within the specified range, in order to guarantee the correctness of the calculation result with δp = 100%.",
            "The system should check the cycle of interface data to ensure that it can properly handle and trigger the alarm mechanism when the input value cycle is greater than the specified cycle, less than the specified cycle, or at extreme maximum or minimum values.",
            "The system should check the data processing procedures of the functions to ensure that no division by zero occurs during data processing, so as to guarantee the correctness of the calculation result when δp = 100%.",
            "The system should check the control solution results of the functions to ensure that it can properly handle and trigger the alarm mechanism when the control solution results are within normal values, abnormal values, boundary values, maximum or minimum values, etc."
        ]
    },
    {
        "requirement": "This adjustment can be made by fine-tuning the throttle valve during this phase.",
        "safety_requirements": [
            "When adjusting the throttle valve trimming amount, the system should ensure that the control sequence and timing are coordinated with the hardware, and that control conditions are complete and consistent.",
            "The system should check the control resolution process for throttle valve fine adjustments under different states and operational phases, to ensure correct functional handling when operational phases or states are not considered.",
            "The system should have a timeout detection mechanism when adjusting the throttle fine-tuning amount to handle situations where the hardware status fails to meet control requirements for an extended period.",
            "The system should check the control resolution results of the throttle fine-tuning amount to ensure correct functional processing under normal values, abnormal values, boundary values, maximum and minimum values.",
            "The system should check the duration of the throttle fine-tuning adjustment task to ensure that the function is handled correctly when the task duration is less than the specified time."
        ]
    },
    {
        "requirement": "Change the limit value to [-10%, 0%]",
        "safety_requirements": [
            "The system shall ensure successful redundancy switching when the switching conditions are met. If the switching fails, the software shall have a proper handling mechanism to ensure safe operation of the system.",
            "When the system outputs data beyond the specified limits, there should be a clear handling strategy, such as truncation or outputting according to safe values, to ensure the system operates within safe boundaries.",
            "The system should check the rate of change of parameters to ensure they are within reasonable limits (upper and lower slope limits), and there should be a clear handling strategy for data exceeding these slope limits to prevent abnormal situations.",
            "The system should clearly define the sensor's measurement range (upper and lower limits). When values exceed this range, a sensor fault should be reported to ensure data accuracy and reliability.",
            "The software should have a proper handling mechanism to ensure the system remains in a safe state during the switching process when the redundancy switching time is too long."
        ]
    },
    {
        "requirement": "Md1(k) = Kg1 * Dz(k), Md1(k) is clamped within [- XfCs, XfCs]",
        "safety_requirements": [
            "The system should check whether the rate of change of Md1(k) is within a reasonable range (upper and lower slope limits) and clearly define the handling strategy for out-of-slope data.",
            "The system should check the data bit value accuracy of interface data Dz(k) to ensure that when it exceeds the required precision, the calculation result of Md1(k) is correct.",
            "The system should check the data bit value accuracy of interface data Dz(k) to ensure that when it is less than the required precision, the calculation result of Md1(k) is correct.",
            "The system should check the control solution results of Md1(k) to ensure the correctness of functional processing under normal values, abnormal values, boundary values, maximum and minimum values.",
            "The system should check functional inputs to ensure the correct control solution process of Md1(k) under different states and operational phases, avoiding functional processing errors caused by neglecting operational phases or states."
        ]
    },
    {
        "requirement": "Md2(k) clamped [- XfGama, XfGama]",
        "safety_requirements": [
            "The system should check whether the rate of change of the Md2(k) parameter is within a reasonable range (upper and lower slope limits) and clearly define the handling strategy for out-of-slope data.",
            "The system should check the Md2(k) output data of different redundancies to ensure the correctness of function implementation in cases of \"single redundancy failure, multiple redundancies failure\".",
            "The system should clearly define the range (upper and lower limits) for sensor acquisition of Md2(k), and report a sensor fault when the acquired value exceeds this range.",
            "The system should analyze the correctness of Md2(k) output in cases such as when \"the value range represented by interface data frames is smaller than the value range of interface data.\"",
            "The system should clearly define the handling strategy for Md2(k) output data exceeding limits, such as truncation or outputting a safety value."
        ]
    },
    {
        "requirement": "When -10m ≤ DH ≤ 10m, switch to the constant altitude phase, reset the constant altitude control integrator, and set the softening time limit to 2 seconds.",
        "safety_requirements": [
            "When the system transitions to the fixed altitude phase with -10m ≤ DH ≤ 10m, it shall ensure that the control sequence and timing are coordinated with the hardware, and that the control conditions are complete and consistent. \n\n(Note: The term \"\" at the end of the sentence appears to be incomplete or cut off in the original Chinese text. Based on context, it likely means \" consistent before and after\" which translates to \"consistent before and after\" or simply \"consistent.\" If you have more context or a corrected version of this part, I can refine the translation further.)",
            "When the system enters the altitude hold phase with -10m ≤ DH ≤ 10m, the sensor measurement range shall be checked to ensure it is within the upper and lower limits. A sensor fault shall be reported if the value exceeds the measurement range.",
            "When the system enters the altitude hold phase with -10m ≤ DH ≤ 10m, the control solution results of clearing the altitude hold control integrator and setting a softening time limit of 2s should be checked to ensure correct functional handling under normal values, abnormal values, boundary values, maximum and minimum extremes.",
            "When the system enters the altitude hold phase at -10m ≤ DH ≤ 10m, the value accuracy of the interface data bits shall be checked to ensure correctness of output when the data bit value accuracy is less than the required accuracy.",
            "When the system enters the altitude hold phase at -10m ≤ DH ≤ 10m, the value accuracy of the data bits in the interface data shall be checked to ensure correctness of output when the data bit value accuracy is greater than the required accuracy."
        ]
    },
    {
        "requirement": "Yg(k) = -Md3(k)",
        "safety_requirements": [
            "The system should check the cycle of interface data to ensure that the output result Yg(k) = -Md3(k) is correct when the input value cycle is \"greater than the specified cycle, less than the specified cycle, maximum and minimum values\", etc.",
            "The system should check the control solution results of the functions to ensure that Yg(k) = -Md3(k) is processed correctly under conditions such as \"normal value, abnormal value, boundary value, maximum and minimum value\".",
            "The system should check the data bit value accuracy of the interface data to ensure that when the data bit value accuracy is greater than the required precision, the output result Yg(k) = -Md3(k) is correct.",
            "The system should check the data bit value accuracy of the interface data to ensure that when the data bit value accuracy is less than the required precision, the output result Yg(k) = -Md3(k) is correct.",
            "The system should check the data processing procedure of the function to ensure that no division by zero occurs during data processing, so as to guarantee the correctness of the calculation result Yg(k) = -Md3(k)."
        ]
    },
    {
        "requirement": "yg(k) = 0°",
        "safety_requirements": [
            "The system should check for division by zero during the data processing when handling data where yg(k) = 0°, ensuring computational accuracy and safety.",
            "The system shall check the transition conditions between every pair of states in the software state space to ensure the correctness and safety of state transitions under conditions such as \"transition condition not set, always satisfied, or never satisfied\".",
            "The system should check the interface data cycle for yg(k) = 0° to ensure output correctness and safety under input value cycle conditions such as \"greater than specified cycle, less than specified cycle, maximum and minimum values\".",
            "The system should check the data bit value accuracy of the interface data for yg(k) = 0°, ensuring correctness and safety in cases such as when the data bit value accuracy is less than the required accuracy.",
            "The system should check for cases where no transition relationship exists between two or more states, ensuring the correctness and safety of state execution under conditions such as \"entry conditions being simultaneously satisfied\" or \"conditions being satisfied during state execution.\""
        ]
    },
    {
        "requirement": "δp(k) = 100%",
        "safety_requirements": [
            "The system should check the cycle of interface data to ensure that when the input value cycle is \"greater than the specified cycle, less than the specified cycle, maximum and minimum values,\" the output result of δp(k) = 100% is correct.",
            "The system should check the data processing procedure of the function to ensure that no division by zero occurs during data processing, so as to guarantee the correct calculation result of δp(k) = 100%.",
            "The system should check the control solution results of the functions to ensure that δp(k) = 100% is correctly handled under conditions such as \"normal values, abnormal values, boundary values, maximum and minimum values\".",
            "The system should check the data bit value accuracy of the interface data to ensure that when the data bit value accuracy is greater than the required precision, the output result of δp(k) = 100% is correct.",
            "The system should check the data bit value accuracy of the interface data to ensure that when the data bit value accuracy is less than the required accuracy, the output result of δp(k) = 100% is correct."
        ]
    },
    {
        "requirement": "Both the upper and lower underscored sections are clamped within [- XfSita, XfSita]",
        "safety_requirements": [
            "The system should clearly define the upper and lower limits of the sensor's measurement range, and when the measured value exceeds this range, a sensor fault should be reported.",
            "The system should define reasonable ranges for the rate of change of parameters (upper and lower slope limits) and clearly specify the handling strategy for data exceeding these slope limits.",
            "The system shall check output data with different redundancies to ensure the correctness of functional implementation in case of a single redundancy failure or multiple redundancies failure.",
            "The system should clearly define the valid value range (upper and lower limits) for parameters and specify the handling strategy for out-of-limit data.",
            "The system should check the data bit value accuracy of the interface data to ensure that the data bit value accuracy meets the requirements; otherwise, it should analyze and process the correctness of the output."
        ]
    },
    {
        "requirement": "hg is the given height, taken from the target waypoint height.",
        "safety_requirements": [
            "The system should check the data bit value accuracy of the interface data to ensure that when the data bit value accuracy is greater than the required accuracy, the value of hg is correct.",
            "The system should check the data bit value accuracy of the interface data to ensure that when the data bit value accuracy is less than the required accuracy, the value of hg is correct.",
            "The system should check the communication protocol of the interface data frame to ensure that when the data length exceeds the specified length, the value of hg is correct.",
            "The system should check the communication protocol of the interface data frame to ensure that when the data length is less than the specified length, the value of hg is correct.",
            "The system should ensure that the sensor's measurement range is clearly defined (upper and lower limits) and report a sensor fault when the measured value exceeds the range.",
            "The system should make corresponding judgments and treatments when abnormal external factors occur (such as high sea conditions, severe weather conditions, etc.), to ensure the correct value of hg."
        ]
    },
    {
        "requirement": "UG is the specified airspeed at constant altitude, calculated based on aircraft flight performance. Refer to the appendix for data, and apply amplitude limits to boundary points.",
        "safety_requirements": [
            "The system should clearly define the upper and lower limits of the sensor's measurement range. When the sensor value exceeds this range, a sensor fault should be reported.",
            "The system should check the communication protocol of the interface data frame to ensure that the data length is within the specified range. Data that exceeds or falls short of the specified length should be handled as an exception.",
            "The system should check the value accuracy of data bits in interface data to ensure that the data bit value accuracy meets the requirements. For data exceeding the required precision, exception handling should be performed.",
            "The system should check the control calculation results to ensure that the function is properly handled when the calculated constant altitude airspeed ug is within the normal range, abnormal range, boundary values, or extreme maximum and minimum values.",
            "The system should check whether the rate of change of the specified airspeed ug during altitude hold is within a reasonable range, and there should be a clear handling strategy for data exceeding the slope limit."
        ]
    },
    {
        "requirement": "δp limit processing: The default minimum throttle position limits at altitudes of 5000, 6000, 7000, and 8000 meters are 12.5%, 27.5%, 42.5%, and 57.5% respectively, with linear interpolation applied in between; the maximum throttle position limit is 100%.",
        "safety_requirements": [
            "The system should check the control solution results for δp amplitude limiting to ensure that the calculated limit values are correct under conditions such as 'normal values, abnormal values, boundary values, maximum and minimum values'.",
            "The system should check the control solution process for δp amplitude limiting based on different states and operational phases, ensuring the correctness of the calculated amplitude limiting values in cases such as 'operational phase not considered, state not considered'.",
            "The system should check the interface data for δp limit processing with different redundancies, ensuring that the calculated limit values are correct in cases of \"single redundancy failure, all redundancies failure (e.g., data anomaly, timing fault, communication fault, destination device fault, etc.)\".",
            "The system should check multiple input data subjected to δp amplitude limiting processing to ensure that the calculated limiting values are correct under conditions such as \"normal value equivalence class combination, abnormal value equivalence class combination, boundary value combination, initial value combination, safety value combination, and default value combination\".",
            "The system should check the value accuracy of the data bits for the interface data subjected to δp amplitude limiting processing, ensuring that the calculated limit value is correct when the data bit value accuracy exceeds the required precision."
        ]
    },
    {
        "requirement": "The amplitude can be adjusted by fine-tuning the throttle valve. Above 5000 meters, the adjustment range is [0%, 40%]; below 5000 meters, no adjustment is allowed.",
        "safety_requirements": [
            "The system should check the sensor's measurement range to ensure that when the altitude is above 5000 meters, the adjustment range of the throttle fine-tuning is [0%, 40%]. If the measured value exceeds the sensor's measurement range, a sensor fault should be reported.",
            "The system shall check for any minor adjustments to the throttle valve below 5000 meters, ensure that such adjustments cannot be made, and trigger an alarm mechanism if any attempt to make changes is detected.",
            "The system should check the control solution results to ensure that the handling of throttle valve adjustment changes is correct under conditions such as \"normal values, abnormal values, boundary values, maximum and minimum values.\"",
            "The system should check the data bit value accuracy of the throttle fine adjustment to ensure correct output when the accuracy is less than the required precision, and trigger a warning mechanism when the precision is insufficient.",
            "The system should check the data bit value accuracy of the throttle fine adjustment to ensure correct output when the accuracy exceeds the requirement, and trigger a warning mechanism when the accuracy is exceeded.",
            "The system should check the rate of change of the throttle valve fine adjustment to ensure it is within a reasonable range (upper and lower slope limits), and there should be a clear handling strategy for data exceeding these limits."
        ]
    },
    {
        "requirement": "Md2(k) = KhdI * Md1(k), with Md2(k) clamped within [-XfSita, XfSita]",
        "safety_requirements": [
            "The system should check the data bit value accuracy of the interface data to ensure that when the data bit value accuracy is less than the required precision, the calculation result of Md2(k) is correct and limited within the range [-XfSita, XfSita].",
            "The system should check the control solution results of the functions to ensure that Md2(k) is calculated correctly and limited within the range [-XfSita, XfSita] under conditions such as normal values, abnormal values, boundary values, maximum and minimum values.",
            "The system should check the data bit value accuracy of the interface data to ensure that when the data bit value accuracy is greater than the required precision, the calculation result of Md2(k) is correct and limited within the range [-XfSita, XfSita].",
            "The system should check the continuous output data values of different redundancies to ensure that when two or more redundant output data values are inconsistent, i.e., their difference exceeds the specified threshold, the calculation result of Md2(k) is correct and limited within the range [-XfSita, XfSita].",
            "The system shall check the functional inputs under different states and operation phases to ensure that the calculation result of Md2(k) is correct and limited within the range of [-XfSita, XfSita], even when the operation phase or state is not considered."
        ]
    },
    {
        "requirement": "Md3(k) = Khd * [h(k) - hg(k)] + Md2(k), with Md3(k) clamped to [-XfSita, XfSita]",
        "safety_requirements": [
            "The system should check the control solution results of Md3(k) to ensure the correctness of functional processing under conditions such as 'normal values, abnormal values, boundary values, and extreme maximum/minimum values'.",
            "The system should check the data bit value accuracy of the interface data for Md3(k) to ensure correctness of the output when the accuracy is 'less than the required precision'.",
            "The system should check the data bit value accuracy of the interface data for Md3(k) to ensure correctness of the output when the accuracy exceeds the required precision.",
            "The system should check the functional inputs of Md3(k) to ensure the correctness of functional processing in cases such as \"work phase not considered, operating state not considered\".",
            "The system should check the communication protocol of the interface data frame for Md3(k) to ensure correctness in cases such as \"data length greater than the specified length, less than the specified length\"."
        ]
    },
    {
        "requirement": "When the flight altitude is not greater than 150m, phase transition processing is performed based on the current phase flag and status information such as current flight altitude and airspeed.",
        "safety_requirements": [
            "When the system is flying at an altitude not exceeding 150m, it should check the current phase flag, flight altitude, airspeed, and other status information to ensure the correctness of phase transition processing when switching from high priority to low priority or from low priority to high priority.",
            "When the system transitions between operational states, the values of functional interface data should be checked to ensure the correctness of output during phase transitions in case of changes in value or value range.",
            "The system should check the transition conditions between every pair of states in the software state space to ensure the correctness of state transitions when the transition conditions are not set, always satisfied, or never satisfied.",
            "The system should check the communication protocol of the interface data frame to ensure the correctness of the phase transition processing output when the data length is greater than or less than the specified length.",
            "When the system performs functional control calculations under different states and operation phases, it should check the function inputs to ensure the correctness of function processing even when the operation phase or state is not considered."
        ]
    },
    {
        "requirement": "Jg(k) = -Md3(k)",
        "safety_requirements": [
            "The system should check the data bit value accuracy of the interface data to ensure the calculation result of Jg(k) = -Md3(k) is correct when the data bit value accuracy is less than the required precision.",
            "The system should check the data bit value accuracy of the interface data to ensure the calculation result of Jg(k) = -Md3(k) is correct when the data bit value accuracy is greater than the required accuracy.",
            "The system should check the cycle of interface data to ensure that the calculation result of Jg(k) = -Md3(k) is correct when the input value cycle is greater than the specified cycle, less than the specified cycle, or at extreme maximum or minimum values.",
            "The system should check the control solution results to ensure that the functional processing of Jg(k) = -Md3(k) is correct when the control solution results are normal values, abnormal values, boundary values, maximum or minimum values.",
            "The system should check the data processing process to ensure that no division by zero occurs during data processing, so as to guarantee the correctness of the calculation result Jg(k) = -Md3(k)."
        ]
    },
    {
        "requirement": "When |DH| > 50m, the flight phase transitions from the constant altitude segment to the climb 2 or descent segment.",
        "safety_requirements": [
            "The system should check the rate of change of |DH| parameters to ensure it is within a reasonable range (upper and lower slope limits), and have a clear handling strategy when it exceeds the range.",
            "The system should check whether the |DH| value collected by the sensor is within the specified upper and lower limits, and report a sensor fault if it exceeds the range.",
            "When the system transitions from the altitude-holding phase to the climbing phase 2 or descending phase during flight, the values of functional interface data should be checked to ensure correct output of state transition in cases where 'the value changes or the value range changes'.",
            "When the system transitions between states of different priorities, the correctness of states and functions should be checked in cases such as switching from high priority to low priority and from low priority to high priority.",
            "The system should check the communication protocol of the interface data frame to ensure that the data length is within the specified range, and there should be a clear handling strategy when the length exceeds the range."
        ]
    },
    {
        "requirement": "Md2(k) = Kp1I * Md1(k), with Md2(k) clamped between [Xf, Xfx]",
        "safety_requirements": [
            "The system should check the data bit value accuracy of the interface data to ensure that when the data bit value accuracy is greater than the required accuracy, the calculation result of Md2(k) is correct.",
            "The system should check the data bit value accuracy of the interface data to ensure that when the data bit value accuracy is less than the required precision, the calculation result of Md2(k) is correct.",
            "The system should check the control solution results to ensure that Md2(k) is calculated correctly under normal values, abnormal values, boundary values, maximum and minimum values, etc.",
            "The system should check the functional inputs under different states and working phases to ensure that the calculation result of Md2(k) is correct even in cases where the working phase or working state is not considered.",
            "The system should check the communication of interface data frames to ensure the correct calculation of Md2(k) in cases such as data frame loss."
        ]
    },
    {
        "requirement": "Flight situation on the five-side approach, longitudinal: The underscored sections are both limited within [-XfSita, XfSita]",
        "safety_requirements": [
            "During the flight on the five-mile final approach leg, the system should check the operating status of different redundancies to ensure that the longitudinal rudder deflection limit function [-XfSita, XfSita] is correctly implemented when \"two or more redundancies are in different states\".",
            "The system should clearly define the sensor acquisition range (upper and lower limits) and report a sensor failure when the sensor value exceeds this range.",
            "The system should check the continuous output data values of different redundancies to ensure that the longitudinal rudder deflection angle limiting function [-XfSita, XfSita] is correctly implemented in cases where 'two or more redundant output data values are inconsistent, i.e., the difference between values exceeds the specified threshold'.",
            "The system should check the values of the same input data received by different redundancies to ensure that the limiting function of the elevator deflection angle [-XfSita, XfSita] is correctly implemented in case the values of the same input data received by two or more redundancies are inconsistent."
        ]
    },
    {
        "requirement": "The system should be capable of calculating and providing the velocity solution relationship for a 200m flight altitude on the five-side approach path.",
        "safety_requirements": [
            "The system should check the velocity solution results for flight altitude of 200m on the downwind leg, ensuring the correctness and reasonableness of the solution results under conditions such as \"normal values, abnormal values, boundary values, maximum and minimum values\".",
            "The system should check the velocity resolution process during the approach flight at an altitude of 200m to ensure correct functional handling in cases such as timeout (no result returned within the specified time) during the control resolution process.",
            "The system should check the rate of change of velocity solution parameters at an altitude of 200m during the final approach, ensuring it remains within reasonable limits (upper and lower slope bounds), and clearly define the handling strategy for data exceeding these slope limits.",
            "The system should verify the input for the velocity resolution function during the 200m altitude flight on the five-side approach path, ensuring correct functional processing under different states and operational phases, and avoiding erroneous handling due to \"not considering the operational phase\" or \"not considering the operational state.\"",
            "The system should make corresponding judgments and processing on the velocity solution at 200m flight altitude during abnormal external conditions (such as high sea states, severe weather conditions, etc.) to ensure the reliability and safety of the function."
        ]
    },
    {
        "requirement": "The system should be capable of achieving lateral control, the same as in climb phase 2.",
        "safety_requirements": [
            "When the system implements lateral control, it should ensure that the control sequence and timing are coordinated with the hardware, and that the control conditions are complete and consistent.",
            "The system shall ensure the correctness of timing relationships, constraint relationships, concurrency relationships, and combination relationships among control logics of all functional points.",
            "The system should have a timeout detection mechanism during critical control operations or actions to handle situations where the hardware status fails to meet control requirements for an extended period.",
            "After the system performs hardware control, it should monitor and determine the consistency between the hardware status and the control requirements to ensure that the control effect meets expectations.",
            "The system should ensure that the timing of output control status meets the scenario requirements, avoiding control failure caused by improper timing."
        ]
    },
    {
        "requirement": "The system should be capable of achieving throttle airspeed closed-loop control, where the reference airspeed ug is calculated based on the aircraft's flight performance, with data referring to the approach speed in Appendix.",
        "safety_requirements": [
            "When the system is performing throttle airspeed closed-loop control, it should ensure that the control sequence and timing are coordinated with the hardware, and that the control conditions are complete and consistent.",
            "The system should check the results of the closed-loop control solution for the throttle airspeed to ensure correct control processing under conditions such as \"normal values, abnormal values, boundary values, maximum and minimum values\".",
            "When the system performs throttle airspeed closed-loop control under different states and operating phases, the functional inputs should be checked to ensure the correctness of control processing in cases such as \"operating phase not considered, operating state not considered\".",
            "The system should ensure the correct timing, constraint, concurrency, and combination relationships among the control logic of each functional point to avoid logical errors.",
            "When the system performs multiple functions in sequence, it should check the output data of the preceding function to ensure the correctness of multi-function processing under conditions such as \"boundary value combinations, initial value combinations, safety value combinations, and default value combinations\"."
        ]
    },
    {
        "requirement": "The system should be capable of performing discrete calculations, including the computation of Md2(k), Md3(k), and Jg(k), and should also implement amplitude limiting for Md2(k) and Md3(k).",
        "safety_requirements": [
            "The system should check the discretized calculation results Md2(k), Md3(k), and Jg(k) to ensure correct handling under normal values, abnormal values, boundary values, maximum and minimum values, etc.",
            "The system should check discrete output data Md2(k) and Md3(k) with different redundancy to ensure the correctness of function implementation in cases such as inconsistent values.",
            "The system should check the discretized calculation inputs under different states and working phases to ensure the correctness of functional processing in cases where working phases or states are not considered.",
            "The system should check data bits in interface data that have discrete value ranges to ensure the correctness of outputs when each data bit takes any of the enumerated valid values.",
            "The system should check data bits in interface data that have discrete value ranges to ensure the correctness of output when the data bits take abnormal values outside the valid value range."
        ]
    },
    {
        "requirement": "The system should be capable of achieving longitudinal control during the descent phase, the same as in climb phase 1, where the given airspeed ug is calculated based on aircraft flight performance and boundary points are limited.",
        "safety_requirements": [
            "The system should check functional inputs under different states and operational phases to ensure the longitudinal control solution process during descent phase is correct, the calculated airspeed ug is accurate, and boundary points are properly limited, even when the operational phase or state is not considered.",
            "When the system performs longitudinal control during the descent phase, it should ensure that the control sequence and timing are coordinated with the hardware, and that control conditions are complete and consistent to guarantee the correctness and reliability of the control.",
            "The system should check the results of longitudinal control calculations during the descent phase to ensure the correctness and validity of the control calculation results under conditions such as \"normal values, abnormal values, boundary values, maximum and minimum values,\" and trigger a warning mechanism in case of anomalies.",
            "The system shall ensure the correctness of timing relationships, constraint relationships, concurrent relationships, and combination relationships among control logics of various functional points, in order to guarantee coordination and consistency of longitudinal control during descent phase.",
            "The system should ensure the timing of output control status meets the scenario requirements of the longitudinal control during the descent phase, to guarantee the timeliness and effectiveness of the control."
        ]
    },
    {
        "requirement": "The system should be capable of achieving lateral control during the descent phase, similar to climb segment 2.",
        "safety_requirements": [
            "When the system implements lateral control during the descent phase, it should ensure that the control sequence and timing are coordinated with the hardware, and that control conditions are complete and consistent.",
            "The system should check functional inputs under different states and operational phases to ensure that lateral control is handled correctly in cases such as 'operational phase not considered' or 'state not considered'.",
            "The system should ensure the correct timing relationships, constraint relationships, concurrent relationships, and combination relationships among the control logic of each functional point to achieve lateral control during the descent phase.",
            "The system should check the lateral control calculation results to ensure the correctness of control processing under conditions such as \"normal values, abnormal values, boundary values, and extreme maximum/minimum values\".",
            "The system should check the operating status of different redundancies to ensure the correctness of lateral control functions in cases such as \"two or more redundancies are in different states.\""
        ]
    },
    {
        "requirement": "During the transition processing in non-remote control mode, a series of phase transitions may occur until switching to the flight phase corresponding to the current state.",
        "safety_requirements": [
            "During the transition processing of non-remote control mode phases, the system should check functional inputs under different states and operational phases to ensure the correctness of functional processing in cases where the operational phase or state has not been considered.",
            "During the transition process of non-remote control mode, the system should perform timeout detection on critical controls or actions to handle situations where hardware status fails to meet control requirements for an extended period.",
            "When the system transitions between operational states, the values of functional interface data should be checked to ensure correct output in cases where the value or range of values changes.",
            "The system should check the control solution results during the non-remote control mode phase transition to ensure correct functional processing under conditions such as \"normal values, abnormal values, boundary values, maximum and minimum values\".",
            "The system shall perform priority checks on functions under two or more states with transfer relationships, ensuring correctness of states and functions in scenarios such as \"high priority switching to low priority\" and \"low priority switching to high priority\"."
        ]
    },
    {
        "requirement": "The system should be capable of achieving fixed throttle control, retracting the throttle according to the minimum throttle limit value. This minimum throttle limit value can be adjusted through throttle fine-tuning, and its default values should be provided at altitudes of 5000, 6000, 7000, and 8000 meters, with linear interpolation applied between these points. Above 5000 meters, the adjustment range during descent is [-10%.",
        "safety_requirements": [
            "When the system performs throttle valve control, it should ensure that the control sequence and timing are coordinated with the hardware, and that control conditions are complete and consistent.",
            "The system should check the calculation results of the fixed throttle control to ensure correct control processing under conditions such as \"normal values, abnormal values, boundary values, maximum and minimum values\".",
            "The system shall clearly define the measurement range (upper and lower limits) of the sensor and report a sensor fault when the sensor value exceeds the measurement range.",
            "When performing fixed throttle control under different system states and operating phases, the function inputs should be checked to ensure correct control processing in cases such as 'operating phase not considered, operating state not considered'.",
            "The system should be designed with reasonable fault detection logic to ensure that the detection method does not affect the normal operation of the equipment."
        ]
    },
    {
        "requirement": "Flight Phase Determination Functional Requirement: Automatically determine the current flight phase based on the aircraft's position information and motion parameter information.",
        "safety_requirements": [
            "The system shall check functional inputs under different states and operational phases to ensure that the processing results of the flight phase determination function are correct even when 'operational phases and states are not considered'.",
            "The system should check the input data values in the task execution conditions to ensure that when the input data values cause the task execution conditions to be met prematurely, the processing result of the flight phase determination function is correct.",
            "The system shall check the system status, operational phase, or software status corresponding to the system task, to ensure that the status execution of the flight phase determination function is correct in the case of 'no corresponding software status, or inconsistency between software and the system'.",
            "The system shall check the input data values in the task execution conditions to ensure that when the input data values cause a delayed satisfaction of the task execution conditions, the processing results of the flight phase determination function are correct.",
            "The system should check external devices (such as sensors, NVM, databases, other systems, etc.) to ensure that the output of the flight phase determination function is correct when the source device is in a 'degraded, maintenance' state or similar conditions."
        ]
    },
    {
        "requirement": "Ground waiting phase: The aircraft is in a shutdown state before takeoff and after complete landing.",
        "safety_requirements": [
            "During the ground waiting phase, the system should check the state entry conditions to ensure the correctness of state execution under conditions such as 'satisfied', 'not satisfied', 'satisfied again', etc.",
            "During the ground waiting phase of the system, conditions for entering two or more states should be checked to ensure the correctness of state execution when entry conditions are \"simultaneously satisfied\" or \"satisfied during state execution\".",
            "During the ground waiting phase of the system, the status after software power-off restart should be checked to ensure the correctness of state execution in cases such as 'status not recovered' and 'error recovery' after restart.",
            "During the ground waiting phase of the system, the status of external devices (such as sensors, NVM, databases, other systems, etc.) should be checked to ensure correctness of outputs when the devices are in operational states such as \"power-off\" or \"initialization\".",
            "During the ground waiting phase of the system, functional inputs should be checked to ensure the correctness of functional processing in cases such as \"work phase not considered\" and \"working status not considered\"."
        ]
    },
    {
        "requirement": "Takeoff ground segment (takeoff roll segment): Control the aircraft's lateral deviation and yaw angle relative to the runway centerline through differential braking of left and right wheels and rudder deflection; control the aircraft's longitudinal attitude according to a given pitch angle.",
        "safety_requirements": [
            "The system should check functional inputs under different states and operating phases to ensure the correctness of the control solution process in cases where the operating phase or state has not been considered.",
            "The system should check the control calculation results to ensure their correctness under conditions such as \"normal values, abnormal values, boundary values, maximum and minimum values\".",
            "When the system is under control, it should ensure that the control sequence and timing are coordinated with the hardware, and that control conditions are complete and consistent.",
            "The system shall check the operating status of different redundancies to ensure the correctness of function implementation in cases where 'two or more redundancies are in different states'.",
            "During the ground takeoff phase (takeoff roll phase), the system should control the aircraft's lateral deviation from the runway centerline and yaw angle through differential braking on left and right sides as well as rudder deflection, ensuring accuracy in longitudinal control of the aircraft according to the specified pitch angle."
        ]
    },
    {
        "requirement": "Takeoff climb segment: From the point where altitude and airspeed reach certain values to the safety altitude, primarily controlling the aircraft to climb at a specific pitch angle.",
        "safety_requirements": [
            "The system shall check functional inputs during the takeoff departure phase according to the current operating stage and status, ensuring correct handling of the function controlling the aircraft to climb at a certain pitch angle, regardless of whether the operating stage or status is considered.",
            "The system shall check the control solution results for the takeoff departure segment to ensure that the function for controlling the aircraft to climb at a certain pitch angle is correctly processed under normal values, abnormal values, boundary values, and extreme maximum/minimum values.",
            "The system shall check the entry conditions for the takeoff departure segment status to ensure the correctness of status execution when the entry conditions are met, not met, or met again during the execution process.",
            "The system should check the control solution process for the takeoff departure segment to ensure that the function is handled correctly in case of a timeout (failure to return results within the specified time) during the control solution process.",
            "The system should check the operational status of different redundancies during the takeoff phase to ensure the correctness of function implementation when two or more redundancies are in different states."
        ]
    },
    {
        "requirement": "Climb Segment 1: From the safety altitude (80m) to the phase where flaps are retracted, mainly controlling the aircraft to continue climbing, transitioning longitudinal control to airspeed control, and retracting landing gear and flaps in sequence.",
        "safety_requirements": [
            "During the system's first climbing phase, functional inputs should be checked to ensure the correctness of the control solution process under different operating stages and conditions, especially in cases where 'operating stage is not considered and operating condition is not considered'.",
            "During the system's climb phase 1, the status entry conditions should be checked to ensure the correctness of status execution under conditions such as 'satisfied', 'not satisfied', and 'satisfied again' during the status execution process.",
            "During the system's first climbing phase, the control calculation results should be checked to ensure the correctness of functional processing under conditions such as \"normal value, abnormal value, boundary value, maximum and minimum values\".",
            "During the system's first climbing phase, two or more states with transition relationships and different prioritized functions should be checked to ensure correctness of states and functions under conditions such as \"high priority switching to low priority\" and \"low priority switching to high priority.\"",
            "During the system's first climbing phase, when the operating status transfers, the values of the functional interface data should be checked to ensure correctness of output under circumstances such as changes in value or changes in value range."
        ]
    },
    {
        "requirement": "Climb Segment 2: From flap retraction until reaching the required cruising altitude, or climbing from one altitude to a higher altitude, controlling the aircraft's longitudinal movement according to the specified airspeed and laterally steering the aircraft to follow the pre-programmed route.",
        "safety_requirements": [
            "The system should verify the correctness of functional inputs under different states and operational phases, ensuring the accuracy of the climb phase two control solution process, especially when the operational phase or state is not considered.",
            "The system should check the continuous output data values of different redundancies to ensure that two or more redundant output data values are consistent, i.e., the difference between the values does not exceed the specified threshold, so as to ensure the correctness of segment 2 climb control.",
            "The system should check the output data of the preceding function to ensure that its values belong to the normal value equivalence class combination, so as to guarantee the correctness of subsequent functional processing, especially during the climb phase 2 control process.",
            "The system should check the operating status of different redundancies to ensure that two or more redundancies are in the same state, so as to guarantee the correctness and consistency of the climb phase 2 control function.",
            "When the system performs multiple functions in sequence, it should check the output data of the preceding function to ensure that its value belongs to the normal value equivalence class combination, thereby ensuring the correctness of subsequent function processing, especially during the climb phase 2 control process."
        ]
    },
    {
        "requirement": "Altitude Hold Phase: Longitudinal control of the aircraft's altitude and airspeed, lateral control of the offset distance to enable the aircraft to fly at the required altitude and airspeed.",
        "safety_requirements": [
            "The system should verify the correctness of functional inputs under different states and operational phases, ensuring that the longitudinal and lateral control solutions are correctly calculated even in cases where the operational phase or state has not been considered.",
            "The system should check the calculation results of longitudinal and lateral control to ensure their correctness and safety under conditions such as \"normal values, abnormal values, boundary values, maximum and minimum values.\"",
            "When the system performs longitudinal and lateral control, it should ensure that the control sequence and timing are coordinated with the hardware, and that control conditions are complete and consistent.",
            "The system shall check the computation process of longitudinal and lateral control to ensure the correctness and safety of functional processing in case of timeout (no result returned within the specified time).",
            "The system should check the operating status of different redundancies to ensure the correctness and safety of longitudinal and lateral control functions when two or more redundancies are in different states."
        ]
    },
    {
        "requirement": "During descent below 5000 meters, the throttle limiter is set to no less than 6%, with a modification range of [-6.5%, 10%].",
        "safety_requirements": [
            "The system should clearly define the sensor's measurement range (upper and lower limits), and when the measured value exceeds this range, a sensor fault should be reported.",
            "The system should clearly define the reasonable range of variation rate (upper and lower slope limits) for the throttle amplitude parameter, and establish a handling strategy for data exceeding the slope limits.",
            "The system should clearly define the valid value range (upper and lower limits) for the throttle amplitude parameter and establish a strategy for handling out-of-range data.",
            "The system should have a clear handling strategy when output data exceeds limits, such as truncation or outputting according to safety values.",
            "The system should check the control resolution results of the throttle limit to ensure the correctness of functional processing under conditions such as \"normal value, abnormal value, boundary value, maximum and minimum values.\""
        ]
    },
    {
        "requirement": "When the aircraft passes through an altitude of 5000 meters, linearly reduce the throttle trim adjustment to zero at a rate of 5% per second.",
        "safety_requirements": [
            "The system should check the data processing procedure for throttle fine-tuning amounts when the aircraft crosses an altitude of 5000 meters to ensure that division by zero does not occur.",
            "The system should clearly define the sensor's acquisition range (upper and lower limits), and when the sensor value exceeds this range, a sensor fault should be reported.",
            "After power recovery or activation of the runaway reset mechanism, the system shall be able to return to normal operation, ensuring that the linear reduction process of the throttle fine-tuning amount remains unaffected.",
            "The system should have a clear handling strategy when output data exceeds limits, such as truncation or outputting according to safe values, to ensure the adjustment process of the throttle valve fine-tuning amount is safe and reliable.",
            "The system should evaluate the real-time performance after filter processing to ensure that the filtering does not have an unacceptable impact on the real-time adjustment of the throttle valve."
        ]
    },
    {
        "requirement": "When the aircraft has already entered the descent phase, perform phase transition processing according to the current flight status.",
        "safety_requirements": [
            "The system shall check the functional interface data values when the aircraft enters the glide phase, to ensure correct output of phase transition processing under conditions where \"the value changes or the value range changes\".",
            "The system shall check the transition between high-priority and low-priority functions when the aircraft enters the glide phase, ensuring the correctness of states and functions under conditions such as 'high priority switching to low priority' and 'low priority switching to high priority'.",
            "When the aircraft enters the glide phase, the system shall check the values of functional interface data to ensure correct output during phase transition processing under the condition that 'the values have not changed'.",
            "When the aircraft enters the glide phase, the system shall check the state entry conditions to ensure the correctness of state execution during the process under conditions such as \"entry condition satisfied, not satisfied, satisfied again,\" etc.",
            "The system shall check functional inputs when the aircraft enters the glide phase to ensure the correctness of functional processing under conditions such as 'ignoring operational phases' and 'ignoring operating status'."
        ]
    },
    {
        "requirement": "The longitudinal control for segment 1 is the same as the fixed altitude on the final approach, and the given altitude refers to the glide path treatment section in Volume VI.",
        "safety_requirements": [
            "The system should check the rate of change of the longitudinal control height parameters in Glide Slope Segment 1 to ensure it remains within reasonable limits (upper and lower slope bounds), and clearly define the handling strategy for data exceeding these slope limits.",
            "The system should ensure that the longitudinal control altitude parameters for glide slope segment 1 are within the valid value range (upper and lower limits), and clearly define the handling strategy for out-of-limit data.",
            "When the system performs longitudinal control during the first segment of the glide, it should ensure that the control sequence and timing are coordinated with the hardware, and that control conditions are complete and consistent.",
            "The system should ensure the correct timing, constraint, concurrency, and combination relationships between the control logic of each functional point.",
            "When the system performs longitudinal control during glide slope segment 1 under different states and operational phases, the functional inputs shall be checked to ensure correct functional processing in cases such as 'operational phase not considered, operational state not considered'."
        ]
    },
    {
        "requirement": "The lateral control during the glide phase 1 is the same as that during the climb phase 2.",
        "safety_requirements": [
            "When the system performs lateral control during the first segment of descent, it should ensure that the control sequence and timing are coordinated with the hardware, and that control conditions are complete and consistent.",
            "When the system enters and exits the lateral control mode of glide slope segment 1, it should ensure that the entry conditions and exit conditions are consistent.",
            "When the system performs lateral control during different states and operational phases, the functional inputs should be checked to ensure correct handling of functions in cases such as 'operational phase not considered, operational state not considered'.",
            "When the system performs lateral control during segment 1 of the glide slope, it shall ensure the correctness of timing relationships, constraint relationships, concurrency relationships, and combination relationships between functional points.",
            "When the system performs lateral control during the glide slope segment 1, it should ensure that the parameter variation rate remains within a reasonable range (upper and lower slope limits) and clearly define the handling strategy for data exceeding these limits."
        ]
    },
    {
        "requirement": "The closed-loop control formula for the airspeed of the first segment of the sliding door is δp = Kp (vg - vk), with δp clamped between [12.5%, 100%]. The reference airspeed is specified in the appendix under glide speed.",
        "safety_requirements": [
            "The system should verify the correctness of functional inputs under different states and operational phases to ensure that the calculation result of the glide slope segment 1 throttle airspeed closed-loop control formula δp = Kp (vg - vk) is correct, even in cases where the operational phase or state has not been considered.",
            "The system should check the calculation results of the glide section 1 throttle airspeed closed-loop control formula δp = Kp (vg - vk) to ensure that the control solution results are correct and limited within the range of [12.5%, 100%] under conditions such as \"normal value, abnormal value, boundary value, maximum and minimum values\".",
            "During the system's glide segment 1 throttle airspeed closed-loop control, it should ensure that the control sequence and timing are coordinated with the hardware, with complete and consistent control conditions.",
            "The system should ensure the correct timing, constraint, concurrency, and combination relationships between each functional point control logic to guarantee the reliability of the glide slope 1 segment throttle airspeed closed-loop control.",
            "The system should check the state entry conditions to ensure the correctness of state execution when the entry conditions are \"satisfied, not satisfied, satisfied again\", etc., during state execution."
        ]
    },
    {
        "requirement": "The longitudinal control of segment 2 during the sliding is the same as that of segment 1.",
        "safety_requirements": [
            "During the system's longitudinal control in the glide path segment 2, it should ensure that the control sequence and timing are coordinated with the hardware, and that the control conditions are complete and consistent.",
            "The system shall ensure the correctness of timing relationships, constraint relationships, concurrency relationships, and combination relationships between the functional points of longitudinal control in Glide Slope Segment 2 and those in Glide Slope Segment 1.",
            "When the system performs longitudinal control during the second glide phase under different states and operational stages, the functional inputs should be checked to ensure correct processing in cases of 'unconsidered operational stages' or 'unconsidered states'.",
            "The system shall check the execution timing of different redundancies to ensure that the longitudinal control function of glide slope segment 2 is correctly implemented in the case where \"two or more redundancy execution timings are not synchronized\".",
            "The system shall ensure consistency in the entry and exit conditions for each mode of longitudinal control during the glide slope 2 segment."
        ]
    },
    {
        "requirement": "The two-segment longitudinal-lateral roll control structure is shown in Figure 3-6. The heading control formula is yg = - (Kyz·Δy + KyzI∫ Kys·Δydt + Kyzd·wy), with the underlined part limited within [- XfFxd , XfFxd].",
        "safety_requirements": [
            "The system should check the inputs of the heading control formula under different states and operation phases to ensure the correctness of the processing results of the heading control formula in the case of \"ignoring operation phase and ignoring operation state\".",
            "The system should check the solution results of the heading control formula to ensure that the processing results of the heading control formula are correct under conditions such as \"normal value, abnormal value, boundary value, maximum and minimum values\".",
            "The system shall ensure the correct temporal relationships, constraint relationships, concurrency relationships, and combination relationships among functional control logics to guarantee the correct execution of the heading control formula.",
            "The system should check the parameter change rate of the heading control formula to ensure it is within a reasonable range (upper and lower slope limits), and clearly define the handling strategy for out-of-slope data.",
            "The system's sequence and timing for heading control should be coordinated with the hardware to ensure complete and consistent control conditions."
        ]
    },
    {
        "requirement": "The glide 2 segment throttle airspeed closed-loop control is the same as that of glide segment 1.",
        "safety_requirements": [
            "When the system performs the airspeed closed-loop control of the glide slope segment 2 throttle valve, it should ensure that the control sequence and timing are coordinated with the hardware, and that the control conditions are complete and consistent consistent before and after.",
            "The system shall ensure the correctness of timing relationships, constraint relationships, concurrency relationships, and combination relationships among the control logic of each functional point for the airspeed closed-loop control of the glide slope segment door.",
            "When the system performs glide segment 2 throttle airspeed closed-loop control under different states and operational phases, the functional inputs shall be checked to ensure correct functional handling in cases such as \"operational phase not considered\" or \"state not considered\".",
            "The system should ensure consistency in the entry and exit conditions for each mode of the glide slope segment door airspeed closed-loop control.",
            "The system should check the operating status of different redundancies to ensure the correctness of the glide slope segment airspeed closed-loop control function in cases such as \"two or more redundancies are in different states\"."
        ]
    },
    {
        "requirement": "The discretization formula is Md2(k) = KxzI * Md1(k), with Md2(k) clamped between [- XfGama / 0.6, + XfGama].",
        "safety_requirements": [
            "The system should check the parameter variation rate of the discretization formula Md2(k) = KxzI · Md1(k) to ensure it is within a reasonable range and clearly define the handling strategy for overspeed data.",
            "The system should check discrete output data Md2(k) with different redundancy to ensure the correctness of function implementation in case of inconsistent values.",
            "The system should check the control solution results of the discretization formula Md2(k) to ensure the correctness of functional processing under normal values, abnormal values, boundary values, maximum and minimum values.",
            "The system should check the data bits Md2(k) of discrete value domains to ensure correct output when the data values jump between consecutive cycles.",
            "The system should check the data bits Md2(k) with discrete value ranges to ensure correctness of the output when the data bits take on undefined abnormal values outside the valid value range."
        ]
    },
    {
        "requirement": "Calculate Md3(k) = Kxz * Dz(k)",
        "safety_requirements": [
            "The system should check the control solution results of Md3(k) to ensure the correctness of the calculation results under conditions such as \"normal values, abnormal values, boundary values, maximum and minimum values\".",
            "The system should check the control solution process of Md3(k) to ensure the correctness of input data and processing under different states and operating phases.",
            "The system should check the data bit value accuracy of the interface data for Md3(k) to ensure the correctness of the output results when the data bit value accuracy exceeds the required precision.",
            "The system should check the data bit value accuracy of the interface data for Md3(k) to ensure the correctness of the output results when the data bit value accuracy is less than the required precision.",
            "The system should check the cycle of interface data for Md3(k) to ensure the correctness of output results when the input value cycle is \"greater than the specified cycle, less than the specified cycle, maximum and minimum values,\" etc."
        ]
    },
    {
        "requirement": "Calculate Md4(k) = Md2(k) + Md3(k) + Kxzd * Dz(k)",
        "safety_requirements": [
            "The system should check the control calculation results of the equation Md4(k) = Md2(k) + Md3(k) + Kxzd * Dz(k) to ensure correctness in handling normal values, abnormal values, boundary values, maximum and minimum values.",
            "The system should check the data bit value accuracy of the interface data for computing Md4(k) to ensure correctness of the output when the accuracy exceeds the required level.",
            "The system should check the data bit value accuracy of the interface data for computing Md4(k) to ensure correctness of the output when the accuracy is less than the required level.",
            "The system should check the functional inputs for computing Md4(k) to ensure the correctness of functional processing under different states and operational phases, avoiding situations where operational phases and states are not taken into account.",
            "The system should check the control resolution process for calculating Md4(k) to ensure correct functional handling in cases such as timeout during the control resolution process (failure to return results within the specified time)."
        ]
    },
    {
        "requirement": "The Md5(k) is subjected to amplitude limiting within the range [-XfGama, XfGama].",
        "safety_requirements": [
            "The system should check the change rate of Md5(k) to ensure it is within a reasonable range (upper and lower slope limits), and handle it according to predefined strategies when out of range.",
            "The system should clearly define the sensor acquisition range (upper and lower limits) for Md5(k). A sensor fault should be reported when the value exceeds the acquisition range.",
            "The system should check the results of the amplitude limiting process for Md5(k) to ensure correct handling under conditions such as \"normal values, abnormal values, boundary values, maximum and minimum values\".",
            "The system should clearly define the handling strategy when the result of the Md5(k) clamping process exceeds the limit, such as truncation or outputting a safety value.",
            "The system should check the results of Md5(k) amplitude limitation processing under different redundancy levels to ensure the correctness of function implementation in cases of \"single redundancy failure, multiple redundancies failure.\""
        ]
    },
    {
        "requirement": "If the flight altitude is greater than the decision height (40m), then control the aircraft to enter the go-around procedure.",
        "safety_requirements": [
            "After power recovery or activation of the runaway reset mechanism, the system should be able to return to normal operation, ensuring that the aircraft can correctly initiate the go-around procedure when the flight altitude is greater than the decision height.",
            "The system should have a timeout determination mechanism when controlling the aircraft to enter the go-around procedure, to handle situations where hardware status fails to meet control requirements for an extended period, ensuring safe go-around.",
            "When issuing a go-around control command, the system should make a rationality judgment based on the current equipment status to prevent issuing hazardous control commands.",
            "The system should have a clear fault recovery mechanism to ensure proper recovery in case of abnormal situations, and guarantee the correct execution of the go-around procedure when the flight altitude is above the decision height.",
            "The system should make corresponding judgments and take appropriate actions when abnormal external factors occur (e.g., high sea conditions, severe weather conditions, etc.), ensuring that the aircraft can safely initiate a go-around procedure when the flight altitude is above the decision height."
        ]
    },
    {
        "requirement": "Calculate yg(k) = -Md5(k)",
        "safety_requirements": [
            "The system should check the data bit value accuracy of the interface data to ensure the correctness of the calculated result yg(k) = -Md5(k) when the data bit value accuracy is greater than the required precision.",
            "The system should check the data bit value accuracy of the interface data to ensure the correctness of the calculation result yg(k) = -Md5(k) when the data bit value accuracy is less than the required precision.",
            "The system should check the calculated result yg(k) = -Md5(k) to ensure the correctness of functional processing under normal values, abnormal values, boundary values, maximum and minimum values.",
            "The system should check the functional inputs under different states and operational phases to ensure the correctness of the calculation result yg(k) = -Md5(k), even in cases where the operational phase or state has not been considered.",
            "The system should check the data processing process to ensure that no division by zero occurs when calculating yg(k) = -Md5(k)."
        ]
    },
    {
        "requirement": "Calculate Md2(k) = KyzI * Md1(k)",
        "safety_requirements": [
            "The system should check the value accuracy of data bits in the interface data to ensure the correct calculation of Md2(k) when the data bit value accuracy is less than the required accuracy.",
            "The system should check the data bit value accuracy of the interface data to ensure the correct calculation of Md2(k) when the data bit value accuracy is greater than the required precision.",
            "The system should check the control solution results of computing Md2(k) to ensure correct functional handling under normal values, abnormal values, boundary values, maximum and minimum values.",
            "The system should check the functional inputs under different states and working phases to ensure that the functional processing for calculating Md2(k) is correct, even in cases where the working phase or working state has not been considered.",
            "The system should check the cycle of interface data to ensure that the calculation result of Md2(k) is correct when the input value cycle is greater than the specified cycle, less than the specified cycle, or at extreme maximum or minimum values."
        ]
    },
    {
        "requirement": "The Md2(k) is subjected to amplitude limiting within the range [-XfFxd, XfFxd].",
        "safety_requirements": [
            "The system shall check the rate of change of Md2(k) to ensure it is within a reasonable range (upper and lower slope limits), and data exceeding this range shall be handled according to a predefined strategy.",
            "The system should clearly define the acquisition range (upper and lower limits) of the sensor. When sensor data exceeds the acquisition range, a sensor fault should be reported.",
            "The system should check the clamping processing result of Md2(k) to ensure correct handling under normal values, abnormal values, boundary values, maximum and minimum values.",
            "The system should check the Md2(k) output data of different redundancies to ensure that the function is correctly implemented in case of a single redundancy failure or multiple redundancies failure.",
            "The system should clearly define the handling strategy for Md2(k) output data exceeding limits, such as truncation or outputting a safety value."
        ]
    },
    {
        "requirement": "Calculate Md3(k) = Kyz * Δy(k) + Md2(k) + Kyzd * wy(k)",
        "safety_requirements": [
            "The system should check the calculated Md3(k) to ensure the correctness of functional processing under normal values, abnormal values, boundary values, maximum and minimum values.",
            "The system should check the data bit value accuracy of Kyz * Δy(k), Md2(k), and Kyzd * wy(k) to ensure the correctness of the output results when their precision is greater than the required accuracy.",
            "The system should check the value accuracy of the data bits for Kyz * Δy(k), Md2(k), and Kyzd * wy(k), ensuring the correctness of the output results when their accuracy is less than the required precision.",
            "The system shall check the input data for the computation of Md3(k) to ensure the correctness of functional processing under different states and operational phases, preventing scenarios where operational phases or states are not taken into account.",
            "The system should check the cycle of input data for calculating Md3(k) to ensure the correctness of output results under conditions such as input value cycle being greater than, less than, or at extreme maximum and minimum values of the specified cycle."
        ]
    },
    {
        "requirement": "The Md3(k) is subjected to amplitude limiting, with the limiting range being [-XfFxd, XfFxd].",
        "safety_requirements": [
            "The system should check the rate of change of Md3(k) to ensure it is within a reasonable range (upper and lower slope limits), and handle it according to predefined strategies if it exceeds the range.",
            "The system should clearly define the sensor acquisition range (upper and lower limits) for Md3(k), and a sensor fault should be reported when the value exceeds the acquisition range.",
            "The system should check the control solution results of Md3(k) to ensure correct handling under conditions such as \"normal values, abnormal values, boundary values, and extreme maximum/minimum values\".",
            "The system shall check the Md3(k) output data of different redundancies to ensure correct function implementation in cases of \"single redundancy failure, multiple redundancies failure\".",
            "The system should clearly define the handling strategy for Md3(k) output data exceeding limits, such as truncation or outputting according to safety values."
        ]
    },
    {
        "requirement": "Calculate yg(k) = -Md3(k)",
        "safety_requirements": [
            "The system should check the control solution result yg(k) = -Md3(k) to ensure correct handling under normal values, abnormal values, boundary values, maximum and minimum values.",
            "The system should check the control solution process under different states and operational phases to ensure correct handling when the operational phase or state is not considered.",
            "The system should check the data bit value accuracy of the interface data to ensure that when the data bit value accuracy is greater than the required precision, the control solution result yg(k) = -Md3(k) is output correctly.",
            "The system should check the data bit value accuracy of the interface data to ensure that when the data bit value accuracy is less than the required accuracy, the control solution result yg(k) = -Md3(k) is output correctly.",
            "The system should check the cycle of interface data to ensure that when the input value cycle is greater than, less than, or at extreme values relative to the specified cycle, the control calculation result yg(k) = -Md3(k) is correctly output."
        ]
    },
    {
        "requirement": "In the longitudinal control during the flare phase, calculate h& as the vertical speed from the radio altimeter after compensation with inertial navigation vertical acceleration.",
        "safety_requirements": [
            "The system should check functional inputs during the longitudinal control in the flare phase to ensure correct functional processing under different states and operational phases, especially in cases where operational phases or states are not considered.",
            "In the longitudinal control during the flare phase, the system should ensure that the control sequence and timing are coordinated with the hardware, and that the control conditions are complete and consistent.",
            "In the longitudinal control during the flare phase, the system should check the calculated h& to ensure the correctness of functional processing under normal values, abnormal values, boundary values, maximum and minimum values.",
            "The system should check the control solution process in the longitudinal control during the flare phase to ensure the correctness of functional processing in cases such as timeout (no result returned within the specified time).",
            "In the longitudinal control during the flare phase, the system should check the operational status of different redundancies to ensure the correctness of function implementation when two or more redundancies are in different states."
        ]
    },
    {
        "requirement": "In the longitudinal control of the flare segment, calculate vyg as the given vertical speed, vyg = vyt + (h - ht)(vyf - vyt)",
        "safety_requirements": [
            "In the longitudinal control of the system during the flare phase, functional inputs should be checked to ensure the correctness of vyg calculation under different states and operating phases, avoiding situations where the operating phase or state is not considered.",
            "The system should ensure that the control sequence and timing during the longitudinal control phase are coordinated with the hardware, and that control conditions are complete and consistent.",
            "In the longitudinal control during the flare phase, the system should check the calculated vyg to ensure the correctness of functional processing under normal values, abnormal values, boundary values, maximum and minimum values.",
            "The system should ensure the correctness of timing relationships, constraint relationships, concurrency relationships, and combination relationships between functional points during longitudinal control in the flare phase.",
            "After the system performs hardware control, it should monitor and determine the consistency between the hardware status and the control requirements to ensure that the control outcome meets expectations."
        ]
    },
    {
        "requirement": "In the longitudinal control during the flare phase, calculate vygSemi as the automatic correction value for the given vertical speed",
        "safety_requirements": [
            "In the longitudinal control during the flare phase, the system should check whether the calculated vygSemi is a normal value, abnormal value, boundary value, or extreme value, and ensure the correctness of functional handling in these situations.",
            "The system shall check input data under different states and operational phases to ensure the correct processing of the vygSemi calculation function, regardless of the operational phase or state being considered.",
            "When the system performs longitudinal control during the flare phase, it should ensure that the control sequence and timing are coordinated with the hardware, and that the control conditions are complete and consistent.",
            "The system should check the control solution process in longitudinal control during the flare phase to ensure the correctness of functional processing in case of a timeout (failure to return results within the specified time).",
            "In the longitudinal control during the flare phase, the system should check the output data of different redundancies to ensure the correctness of function implementation in case of a single redundancy failure or multiple redundancies failure."
        ]
    },
    {
        "requirement": "In the longitudinal control of the flare segment, duy is calculated as the given vertical acceleration.",
        "safety_requirements": [
            "In the longitudinal control during the flare phase, the system should ensure that the control sequence and timing are coordinated with the hardware, and that control conditions are complete and consistent.",
            "The system should check functional inputs under different states and operational phases to ensure the correctness of duy's calculation results in cases such as 'unconsidered operational phase' or 'unconsidered operating state'.",
            "The system should check the calculated duy to ensure correct functional handling under conditions such as \"normal value, abnormal value, boundary value, maximum and minimum values\".",
            "The system shall incorporate a timeout detection mechanism in critical control or operation processes to handle situations where hardware status fails to meet control requirements for an extended period.",
            "The system should ensure the correctness of timing relationships, constraint relationships, concurrent relationships, and combination relationships among control logics of various functional points."
        ]
    }
]